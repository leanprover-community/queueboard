{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 37339,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "Bergschaf"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "\r\n\r\n---\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nFor details on the \"pull request lifecycle\" in mathlib, please see:\r\nhttps://leanprover-community.github.io/contribute/index.html\r\n\r\nIn particular, note that most reviewers will only notice your PR\r\nif it passes the continuous integration checks.\r\nPlease ask for help on https://leanprover.zulipchat.com if needed.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nIf you are moving or deleting declarations, please include these lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nMoves:\r\n- Vector.* -> Mathlib.Vector.*\r\n- ...\r\n\r\nDeletions:\r\n- Nat.bit1_add_bit1\r\n- ...\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n\r\n-->\r\nI want to define a nucleus [nlab](https://ncatlab.org/nlab/show/nucleus). This is only a draft and I would be happy to get some feedback if this is a sensible definition. Is it correct to put it into a new file or is there a more suitable place for it?\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 93,
        "closed": false,
        "closedAt": null,
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c6UyCKD",
              "body": "messageFile.md",
              "createdAt": "2024-11-24T18:10:27Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6YXp-0",
              "body": "Do you plan to prove some nontrivial theorem that involves nuclei, or just add a definition?",
              "createdAt": "2024-12-20T05:52:52Z",
              "author": {
                "login": "urkud"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6YeR4q",
              "body": "A first step would be to prove, that the Nuclei form a Frame. We are currently trying to understand and formalize this paper [arxiv](https://arxiv.org/abs/1303.5631) about topos theoretic measure theory.",
              "createdAt": "2024-12-21T10:16:27Z",
              "author": {
                "login": "Bergschaf"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6bJH5B",
              "body": "messageFile.md",
              "createdAt": "2025-01-20T16:37:16Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6bKBP0",
              "body": "messageFile.md",
              "createdAt": "2025-01-20T19:09:29Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6bKByv",
              "body": "> messageFile.md\r\n\r\nWhat does this mean mister Action bot?",
              "createdAt": "2025-01-20T19:11:09Z",
              "author": {
                "login": "Bergschaf"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6bKcXV",
              "body": "See https://leanprover.zulipchat.com/#narrow/channel/287929-mathlib4/topic/messageFile.2Emd",
              "createdAt": "2025-01-20T20:45:07Z",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6bP1xL",
              "body": "messageFile.md",
              "createdAt": "2025-01-21T12:37:09Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6bTU0n",
              "body": "messageFile.md",
              "createdAt": "2025-01-21T19:10:11Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6bTVrx",
              "body": "> Can you define the obvious map `Nucleus.toClosureOperator` and derive your results using it?\r\n\r\nI defined the map, but I have no idea how I can make my results cleaner by using this map. Are there any examples that I could look at to understand this?",
              "createdAt": "2025-01-21T19:12:16Z",
              "author": {
                "login": "Bergschaf"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6bTmBL",
              "body": "messageFile.md",
              "createdAt": "2025-01-21T19:49:36Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6bTyU5",
              "body": "> I defined the map, but I have no idea how I can make my results cleaner by using this map. Are there any examples that I could look at to understand this?\r\n\r\nEg to deduce that a nucleus `f` is monotone you can do `example (f : Nucleus X) : Monotone f := f.toClosureOperator.monotone`",
              "createdAt": "2025-01-21T20:17:57Z",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6bT7gV",
              "body": "messageFile.md",
              "createdAt": "2025-01-21T20:39:47Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6bT8bP",
              "body": "messageFile.md",
              "createdAt": "2025-01-21T20:42:03Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6bUDpQ",
              "body": "> See https://leanprover.zulipchat.com/#narrow/channel/287929-mathlib4/topic/messageFile.2Emd\r\n\r\nPer the above, can you please merge master?",
              "createdAt": "2025-01-21T20:58:45Z",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6bUEPY",
              "body": "Ohh, of course, I read that the wrong way",
              "createdAt": "2025-01-21T21:00:09Z",
              "author": {
                "login": "Bergschaf"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6bUHWz",
              "body": "### PR summary [3e67068e2a](https://github.com/leanprover-community/mathlib4/pull/19440/commits/3e67068e2ab3b4756322d4bd917a6d8964534be6)\n\n<details><summary>\n\n#### Import changes for modified files\n\n</summary>\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n| `Mathlib.Util.IncludeStr` (new file)|18|\n| `Mathlib.Util.TermBeta` (new file)|19|\n| `Mathlib.Tactic.DeriveToExpr` (new file)|21|\n| `Mathlib.Order.Defs` (new file)|44|\n| `Mathlib.Algebra.Group.ZeroOne` (new file)|49|\n| `Mathlib.Algebra.Group.Nat.Basic` (new file)|73|\n| `Mathlib.Tactic.FunProp.RefinedDiscrTree` (new file)|114|\n| `Mathlib.Algebra.Ring.Idempotents` (new file)|160|\n| `Mathlib.Order.BoundedOrder` (new file)|162|\n| `Mathlib.Order.GaloisConnection` (new file)|262|\n| `Mathlib.Order.Nucleus` (new file)|275|\n| `Mathlib.Algebra.Group.Int` (new file)|326|\n| `Mathlib.Algebra.Associated.Basic` (new file)|357|\n| `Mathlib.Algebra.Associated.OrderedCommMonoid` (new file)|366|\n| `Mathlib.Algebra.BigOperators.Group.List` (new file)|390|\n| `Mathlib.Algebra.BigOperators.Group.Multiset` (new file)|408|\n| `Mathlib.Algebra.Order.Field.Canonical.Defs` (new file)|429|\n| `Mathlib.Algebra.Order.Field.Canonical.Basic` (new file)|430|\n| `Mathlib.Algebra.Order.Ring.Unbundled.Nonneg` (new file)|433|\n| `Mathlib.Data.Set.Pointwise.ListOfFn` (new file)|437|\n| `Mathlib.Data.Set.Pointwise.Finite` (new file)|509|\n| `Mathlib.Algebra.BigOperators.Group.Finset` (new file)|513|\n| `Mathlib.Data.Set.Pointwise.BigOperators` (new file)|518|\n| `Mathlib.Data.Set.Pointwise.Interval` (new file)|527|\n| `Mathlib.Algebra.Order.AbsoluteValue` (new file)|528|\n| `Mathlib.Algebra.Order.EuclideanAbsoluteValue` (new file)|531|\n| `Mathlib.MeasureTheory.Constructions.EventuallyMeasurable` (new file)|574|\n| `Mathlib.Dynamics.PeriodicPts` (new file)|580|\n| `Mathlib.RepresentationTheory.Action.Basic` (new file)|592|\n| `Mathlib.CategoryTheory.Abelian.GrothendieckAxioms` (new file)|630|\n| `Mathlib.Topology.CountableSeparatingOn` (new file)|643|\n| `Mathlib.CategoryTheory.Generator` (new file)|653|\n| `Mathlib.Logic.Equiv.TransferInstance` (new file)|694|\n| `Mathlib.Logic.Small.Group` (new file) `Mathlib.Logic.Small.Ring` (new file)|695|\n| `Mathlib.Logic.Small.Module` (new file)|697|\n| `Mathlib.Topology.Support` (new file)|705|\n| `Mathlib.SetTheory.Cardinal.PartENat` (new file)|761|\n| `Mathlib.RepresentationTheory.Action.Concrete` (new file)|824|\n| `Mathlib.AlgebraicTopology.SimplicialObject` (new file)|830|\n| `Mathlib.AlgebraicTopology.SplitSimplicialObject` (new file)|835|\n| `Mathlib.AlgebraicTopology.SimplicialSet.Quasicategory` (new file)|839|\n| `Mathlib.RepresentationTheory.Action.Continuous` (new file)|840|\n| `Mathlib.CategoryTheory.Preadditive.Generator` (new file)|841|\n| `Mathlib.CategoryTheory.Abelian.Generator` (new file)|871|\n| `Mathlib.RepresentationTheory.Action.Limits` (new file)|907|\n| `Mathlib.CategoryTheory.Sites.DenseSubsite` (new file)|936|\n| `Mathlib.CategoryTheory.Sites.InducedTopology` (new file)|937|\n| `Mathlib.LinearAlgebra.TensorPower` (new file)|946|\n| `Mathlib.RepresentationTheory.Action.Monoidal` (new file)|1013|\n| `Mathlib.Algebra.Order.Hom.Normed` (new file)|1020|\n| `Mathlib.Algebra.Order.Hom.Ultra` (new file)|1022|\n| `Mathlib.RingTheory.PrimeSpectrum` (new file)|1120|\n| `Mathlib.Algebra.DirectLimit` (new file)|1128|\n| `Mathlib.RingTheory.MaximalSpectrum` (new file)|1142|\n| `Mathlib.CategoryTheory.Triangulated.Opposite` (new file)|1162|\n| `Mathlib.RingTheory.JacobsonIdeal` (new file)|1183|\n| `Mathlib.Topology.Instances.Real` (new file)|1194|\n| `Mathlib.Algebra.Category.Grp.AB5` (new file)|1198|\n| `Mathlib.Topology.Instances.NNReal` (new file)|1218|\n| `Mathlib.Topology.Instances.ENNReal` (new file)|1229|\n| `Mathlib.Topology.Instances.EReal` (new file)|1235|\n| `Mathlib.RingTheory.Artinian` (new file)|1248|\n| `Mathlib.LinearAlgebra.PerfectPairing` (new file)|1254|\n| `Mathlib.LinearAlgebra.Dimension.Torsion` (new file)|1278|\n| `Mathlib.Analysis.Asymptotics.Asymptotics` (new file)|1309|\n| `Mathlib.Analysis.NormedSpace.ENorm` (new file)|1350|\n| `Mathlib.RingTheory.Algebraic` (new file)|1364|\n| `Mathlib.Topology.CompletelyRegular` (new file)|1391|\n| `Mathlib.FieldTheory.Adjoin` (new file)|1414|\n| `Mathlib.NumberTheory.DiophantineApproximation` (new file) `Mathlib.RingTheory.AlgebraicIndependent` (new file)|1417|\n| `Mathlib.RingTheory.Jacobson` (new file)|1419|\n| `Mathlib.AlgebraicGeometry.PrimeSpectrum.Basic` (new file)|1478|\n| `Mathlib.AlgebraicGeometry.PrimeSpectrum.IsOpenComapC` (new file)|1479|\n| `Mathlib.AlgebraicGeometry.PrimeSpectrum.Noetherian` (new file) `Mathlib.AlgebraicGeometry.PrimeSpectrum.TensorProduct` (new file)|1480|\n| `Mathlib.AlgebraicGeometry.PrimeSpectrum.Module` (new file)|1482|\n| `Mathlib.AlgebraicGeometry.PrimeSpectrum.Maximal` (new file)|1484|\n| `Mathlib.AlgebraicGeometry.EllipticCurve.J` (new file) `Mathlib.AlgebraicGeometry.PrimeSpectrum.Jacobson` (new file)|1510|\n| `Mathlib.RingTheory.Flat.Algebra` (new file)|1585|\n| `Mathlib.RingTheory.Flat.FaithfullyFlat` (new file)|1586|\n| `Mathlib.Geometry.Manifold.SmoothManifoldWithCorners` (new file)|1757|\n| `Mathlib.Probability.Moments` (new file)|1980|\n| `Mathlib.Probability.Kernel.Composition` (new file)|1987|\n| `Mathlib.Probability.Kernel.IntegralCompProd` (new file)|1988|\n| `Mathlib.Probability.Kernel.MeasureCompProd` (new file)|1989|\n\n</details>\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ AB4`\n`+ AB4.of_AB5`\n`+ AB4Star`\n`+ AB5`\n`+ AB5Star`\n`+ AbsoluteValue`\n`+ Action`\n`+ AddGroupSeminormClass.isUltrametricDist`\n`+ AdjoinSimple.algebraMap_gen`\n`+ AdjoinSimple.coe_gen`\n`+ AdjoinSimple.gen`\n`+ AdjoinSimple.isIntegral_gen`\n`+ AlgEquiv.isAlgebraic`\n`+ AlgEquiv.isAlgebraic_iff`\n`+ AlgHom.algebraicIndependent_iff`\n`+ AlgHom.bijective`\n`+ Algebra.Flat`\n`+ Algebra.IsAlgebraic`\n`+ Algebra.IsAlgebraic.exists_smul_eq_mul`\n`+ Algebra.IsAlgebraic.extendScalars`\n`+ Algebra.IsAlgebraic.isIntegral`\n`+ Algebra.IsAlgebraic.of_finite`\n`+ Algebra.IsAlgebraic.of_injective`\n`+ Algebra.IsAlgebraic.of_isIntegralClosure`\n`+ Algebra.IsAlgebraic.of_ringHom_of_comp_eq`\n`+ Algebra.IsAlgebraic.ringHom_of_comp_eq`\n`+ Algebra.IsAlgebraic.tower_bot`\n`+ Algebra.IsAlgebraic.tower_bot_of_injective`\n`+ Algebra.IsAlgebraic.tower_top`\n`+ Algebra.IsAlgebraic.tower_top_of_injective`\n`+ Algebra.IsAlgebraic.trans`\n`+ Algebra.IsIntegral.isAlgebraic`\n`+ Algebra.Transcendental`\n`+ Algebra.Transcendental.of_ringHom_of_comp_eq`\n`+ Algebra.Transcendental.ringHom_of_comp_eq`\n`+ Algebra.isAlgebraic_def`\n`+ Algebra.isAlgebraic_iff`\n`+ Algebra.isAlgebraic_iff_isIntegral`\n`+ Algebra.isAlgebraic_ringHom_iff_of_comp_eq`\n`+ Algebra.transcendental_def`\n`+ Algebra.transcendental_iff_not_isAlgebraic`\n`+ Algebra.transcendental_ringHom_iff_of_comp_eq`\n`+ AlgebraicIndependent`\n`+ AlgebraicIndependent.aeval_comp_mvPolynomialOptionEquivPolynomialAdjoin`\n`+ AlgebraicIndependent.eq_zero_of_aeval_eq_zero`\n`+ AlgebraicIndependent.image`\n`+ AlgebraicIndependent.image_of_comp`\n`+ AlgebraicIndependent.isTranscendenceBasis_iff`\n`+ AlgebraicIndependent.mono`\n`+ AlgebraicIndependent.mvPolynomialOptionEquivPolynomialAdjoin`\n`+ AlgebraicIndependent.mvPolynomialOptionEquivPolynomialAdjoin_C`\n`+ AlgebraicIndependent.mvPolynomialOptionEquivPolynomialAdjoin_C'`\n`+ AlgebraicIndependent.mvPolynomialOptionEquivPolynomialAdjoin_X_none`\n`+ AlgebraicIndependent.mvPolynomialOptionEquivPolynomialAdjoin_X_some`\n`+ AlgebraicIndependent.mvPolynomialOptionEquivPolynomialAdjoin_apply`\n`+ AlgebraicIndependent.of_ringHom_of_comp_eq`\n`+ AlgebraicIndependent.of_subtype_range`\n`+ AlgebraicIndependent.option_iff`\n`+ AlgebraicIndependent.polynomial_aeval_of_transcendental`\n`+ AlgebraicIndependent.restrictScalars`\n`+ AlgebraicIndependent.restrict_of_comp_subtype`\n`+ AlgebraicIndependent.ringHom_of_comp_eq`\n`+ AlgebraicIndependent.to_subtype_range`\n`+ AlgebraicIndependent.to_subtype_range'`\n`+ AntiSymmetric`\n`+ Antitone.ball`\n`+ Antitone.exists`\n`+ Antitone.forall`\n`+ Associated`\n`+ Associated.dvd`\n`+ Associated.dvd'`\n`+ Associated.dvd_dvd`\n`+ Associated.dvd_iff_dvd_left`\n`+ Associated.dvd_iff_dvd_right`\n`+ Associated.eq_zero_iff`\n`+ Associated.irreducible`\n`+ Associated.irreducible_iff`\n`+ Associated.isUnit`\n`+ Associated.isUnit_iff`\n`+ Associated.mul_left`\n`+ Associated.mul_mul`\n`+ Associated.mul_right`\n`+ Associated.ne_zero_iff`\n`+ Associated.neg_left`\n`+ Associated.neg_neg`\n`+ Associated.neg_right`\n`+ Associated.of_mul_left`\n`+ Associated.of_mul_right`\n`+ Associated.of_pow_associated_of_prime`\n`+ Associated.of_pow_associated_of_prime'`\n`+ Associated.pow_pow`\n`+ Associated.prime`\n`+ Associated.prime_iff`\n`+ Associates`\n`+ Asymptotics.IsBigO.comp_summable_norm`\n`+ Bool.instBoundedOrder`\n`+ BoundedOrder`\n`+ BoundedOrder.instSubsingleton`\n`+ BoundedOrder.lift`\n`+ CanonicallyLinearOrderedSemifield`\n`+ Commute.minimalPeriod_of_comp_dvd_lcm`\n`+ Commute.minimalPeriod_of_comp_dvd_mul`\n`+ Commute.minimalPeriod_of_comp_eq_mul_of_coprime`\n`+ CompletelyRegularSpace`\n`+ CompletelyRegularSpace.instRegularSpace`\n`+ ContAction`\n`+ ContfracLegendre.Ass`\n`+ Continuous.edist`\n`+ ContinuousMap.canLift`\n`+ ContinuousWithinAt.extChartAt_symm_preimage_inter_range_eventuallyEq`\n`+ ContinuousWithinAt.nhdsWithin_extChartAt_symm_preimage_inter_range`\n`+ CosimplicialObject`\n`+ CosimplicialObject.Augmented.leftOp`\n`+ CosimplicialObject.Augmented.leftOpRightOpIso`\n`+ DTExpr`\n`+ DTExpr.flatten`\n`+ DTExpr.hasLooseBVars`\n`+ DTExpr.isSpecific`\n`+ DirectedSystem.map_map`\n`+ DirectedSystem.map_self`\n`+ DiscreteContAction`\n`+ DivisionRing.instIsArtinianRing`\n`+ DvdNotUnit.not_associated`\n`+ EMetric.cauchySeq_iff_le_tendsto_0`\n`+ EMetric.diam_closure`\n`+ EMetric.isClosed_ball`\n`+ ENNReal.ofReal_tsum_of_nonneg`\n`+ ENorm`\n`+ EmptyRelation`\n`+ EqId`\n`+ Equivalence.reflexive`\n`+ Equivalence.symmetric`\n`+ Equivalence.transitive`\n`+ EventuallyMeasurable`\n`+ EventuallyMeasurable.congr`\n`+ EventuallyMeasurableSet`\n`+ EventuallyMeasurableSet.congr`\n`+ EventuallyMeasurableSpace`\n`+ EventuallyMeasurableSpace.measurable_le`\n`+ FG`\n`+ FaithfullyFlat`\n`+ Filter.Tendsto.edist`\n`+ Finite.div`\n`+ Finite.mul`\n`+ Finite.smul`\n`+ Finite.smul_set`\n`+ Finite.vsub`\n`+ Function.Surjective.isArtinianRing`\n`+ Functor.IsCoverDense`\n`+ Functor.isCoverDense_of_generate_singleton_functor_π_mem`\n`+ Functor.is_cover_of_isCoverDense`\n`+ FunctorCategoryEquivalence.functor_δ`\n`+ FunctorCategoryEquivalence.functor_ε`\n`+ FunctorCategoryEquivalence.functor_η`\n`+ FunctorCategoryEquivalence.functor_μ`\n`+ GaloisCoinsertion`\n`+ GaloisCoinsertion.dual`\n`+ GaloisCoinsertion.monotoneIntro`\n`+ GaloisCoinsertion.ofDual`\n`+ GaloisConnection`\n`+ GaloisConnection.liftOrderBot`\n`+ GaloisConnection.liftOrderTop`\n`+ GaloisConnection.toGaloisCoinsertion`\n`+ GaloisConnection.toGaloisInsertion`\n`+ GaloisInsertion`\n`+ GaloisInsertion.dual`\n`+ GaloisInsertion.monotoneIntro`\n`+ GaloisInsertion.ofDual`\n`+ GroupNormClass.toNormedCommGroup`\n`+ GroupNormClass.toNormedCommGroup_norm_eq`\n`+ GroupNormClass.toNormedGroup`\n`+ GroupNormClass.toNormedGroup_norm_eq`\n`+ GroupSeminormClass.toSeminormedCommGroup`\n`+ GroupSeminormClass.toSeminormedCommGroup_norm_eq`\n`+ GroupSeminormClass.toSeminormedGroup`\n`+ GroupSeminormClass.toSeminormedGroup_norm_eq`\n`+ HasCodetector`\n`+ HasCodetector.hasCoseparator`\n`+ HasCodetector.hasDetector_of_hasCodetector_op`\n`+ HasCodetector.hasDetector_op`\n`+ HasCompactMulSupport`\n`+ HasCompactMulSupport.inv'`\n`+ HasCompactMulSupport.mul`\n`+ HasCompactMulSupport.of_compactSpace`\n`+ HasCompactMulSupport.one`\n`+ HasCompactSupport.abs`\n`+ HasCompactSupport.mul_left`\n`+ HasCompactSupport.mul_right`\n`+ HasCompactSupport.smul_left`\n`+ HasCompactSupport.smul_left'`\n`+ HasCompactSupport.smul_right`\n`+ HasCoseparator`\n`+ HasCoseparator.hasCodetector`\n`+ HasCoseparator.hasSeparator_of_hasCoseparator_op`\n`+ HasCoseparator.hasSeparator_op`\n`+ HasDetector`\n`+ HasDetector.hasCodetector_of_hasDetector_op`\n`+ HasDetector.hasCodetector_op`\n`+ HasDetector.hasSeparator`\n`+ HasDetector.wellPowered`\n`+ HasSeparator`\n`+ HasSeparator.hasCoseparator_of_hasSeparator_op`\n`+ HasSeparator.hasCoseparator_op`\n`+ HasSeparator.hasDetector`\n`+ HasSeparator.wellPowered`\n`+ Hom.ext`\n`+ Icc_mem_nhds`\n`+ Icc_mul_Icc_subset'`\n`+ Icc_mul_Ico_subset'`\n`+ Ici_mul_Ici_subset'`\n`+ Ici_mul_Ioi_subset'`\n`+ Ico_mul_Icc_subset'`\n`+ Ico_mul_Ioc_subset'`\n`+ Ideal.radical_eq_jacobson`\n`+ Iic_add_bij`\n`+ Iic_mul_Iic_subset'`\n`+ Iic_mul_Iio_subset'`\n`+ Iio_add_bij`\n`+ Iio_mul_Iic_subset'`\n`+ IndepFun.cgf_add`\n`+ IndepFun.exp_mul`\n`+ IndepFun.integrable_exp_mul_add`\n`+ IndepFun.mgf_add`\n`+ IndepFun.mgf_add'`\n`+ IndexSet`\n`+ Infinite.of_smul_set`\n`+ Inv`\n`+ InvImage.irreflexive`\n`+ InvImage.trans`\n`+ Ioc_mul_Ico_subset'`\n`+ Ioi_mul_Ici_subset'`\n`+ Irreducible.associated_of_dvd`\n`+ Irreducible.dvd_iff`\n`+ Irreducible.dvd_irreducible_iff_associated`\n`+ Irreducible.dvd_or_isRelPrime`\n`+ Irreducible.isRelPrime_iff_not_dvd`\n`+ Irreducible.isUnit_iff_not_associated_of_dvd`\n`+ Irreflexive`\n`+ IsAbsoluteValue`\n`+ IsAlgebraic`\n`+ IsAlgebraic.algHom`\n`+ IsAlgebraic.algebraMap`\n`+ IsAlgebraic.exists_nonzero_coeff_and_aeval_eq_zero`\n`+ IsAlgebraic.exists_nonzero_dvd`\n`+ IsAlgebraic.exists_smul_eq_mul`\n`+ IsAlgebraic.extendScalars`\n`+ IsAlgebraic.inv`\n`+ IsAlgebraic.invOf`\n`+ IsAlgebraic.invOf_iff`\n`+ IsAlgebraic.inv_iff`\n`+ IsAlgebraic.isIntegral`\n`+ IsAlgebraic.of_aeval`\n`+ IsAlgebraic.of_aeval_of_transcendental`\n`+ IsAlgebraic.of_finite`\n`+ IsAlgebraic.of_pow`\n`+ IsAlgebraic.of_ringHom_of_comp_eq`\n`+ IsAlgebraic.ringHom_of_comp_eq`\n`+ IsAlgebraic.tower_top`\n`+ IsAlgebraic.tower_top_of_injective`\n`+ IsAlgebraic.tower_top_of_subalgebra_le`\n`+ IsAntisymm`\n`+ IsAntisymm.decide`\n`+ IsArtinian`\n`+ IsArtinian.finite_of_linearIndependent`\n`+ IsArtinian.set_has_minimal`\n`+ IsArtinianRing`\n`+ IsArtinianRing.of_finite`\n`+ IsAsymm`\n`+ IsAsymm.decide`\n`+ IsBigO.abs_abs`\n`+ IsBigO.abs_left`\n`+ IsBigO.abs_right`\n`+ IsBigO.add`\n`+ IsBigO.add_isLittleO`\n`+ IsBigO.bound`\n`+ IsBigO.comp_fst`\n`+ IsBigO.comp_snd`\n`+ IsBigO.comp_tendsto`\n`+ IsBigO.congr`\n`+ IsBigO.congr'`\n`+ IsBigO.congr_left`\n`+ IsBigO.congr_of_sub`\n`+ IsBigO.congr_right`\n`+ IsBigO.const_mul_left`\n`+ IsBigO.const_mul_right`\n`+ IsBigO.const_mul_right'`\n`+ IsBigO.const_smul_left`\n`+ IsBigO.const_smul_self`\n`+ IsBigO.eq_zero_imp`\n`+ IsBigO.eq_zero_of_norm_pow`\n`+ IsBigO.eq_zero_of_norm_pow_within`\n`+ IsBigO.eventually_mul_div_cancel`\n`+ IsBigO.exists_eq_mul`\n`+ IsBigO.exists_mem_basis`\n`+ IsBigO.exists_nonneg`\n`+ IsBigO.exists_pos`\n`+ IsBigO.fiberwise_left`\n`+ IsBigO.fiberwise_right`\n`+ IsBigO.inv_rev`\n`+ IsBigO.isBigOWith`\n`+ IsBigO.isBoundedUnder_le`\n`+ IsBigO.mono`\n`+ IsBigO.mul`\n`+ IsBigO.mul_isLittleO`\n`+ IsBigO.natCast_atTop`\n`+ IsBigO.nat_cast_atTop`\n`+ IsBigO.neg_left`\n`+ IsBigO.neg_right`\n`+ IsBigO.norm_left`\n`+ IsBigO.norm_norm`\n`+ IsBigO.norm_right`\n`+ IsBigO.not_isLittleO`\n`+ IsBigO.of_abs_abs`\n`+ IsBigO.of_abs_left`\n`+ IsBigO.of_abs_right`\n`+ IsBigO.of_bound`\n`+ IsBigO.of_bound'`\n`+ IsBigO.of_const_mul_right`\n`+ IsBigO.of_neg_left`\n`+ IsBigO.of_neg_right`\n`+ IsBigO.of_norm_left`\n`+ IsBigO.of_norm_norm`\n`+ IsBigO.of_norm_right`\n`+ IsBigO.of_pow`\n`+ IsBigO.pow`\n`+ IsBigO.prod_left`\n`+ IsBigO.prod_left_fst`\n`+ IsBigO.prod_left_snd`\n`+ IsBigO.prod_rightl`\n`+ IsBigO.prod_rightr`\n`+ IsBigO.smul`\n`+ IsBigO.smul_isLittleO`\n`+ IsBigO.sub`\n`+ IsBigO.sum`\n`+ IsBigO.sup`\n`+ IsBigO.symm`\n`+ IsBigO.trans`\n`+ IsBigO.trans_eventuallyEq`\n`+ IsBigO.trans_isLittleO`\n`+ IsBigO.trans_le`\n`+ IsBigO.trans_tendsto`\n`+ IsBigO.trans_tendsto_nhds`\n`+ IsBigO.triangle`\n`+ IsBigOWith.abs_abs`\n`+ IsBigOWith.abs_left`\n`+ IsBigOWith.abs_right`\n`+ IsBigOWith.add`\n`+ IsBigOWith.add_isLittleO`\n`+ IsBigOWith.bound`\n`+ IsBigOWith.comp_tendsto`\n`+ IsBigOWith.congr`\n`+ IsBigOWith.congr'`\n`+ IsBigOWith.congr_const`\n`+ IsBigOWith.congr_left`\n`+ IsBigOWith.congr_right`\n`+ IsBigOWith.const_mul_left`\n`+ IsBigOWith.const_mul_right`\n`+ IsBigOWith.const_mul_right'`\n`+ IsBigOWith.const_smul_left`\n`+ IsBigOWith.const_smul_self`\n`+ IsBigOWith.eq_zero_imp`\n`+ IsBigOWith.eventually_mul_div_cancel`\n`+ IsBigOWith.exists_eq_mul`\n`+ IsBigOWith.exists_nonneg`\n`+ IsBigOWith.exists_pos`\n`+ IsBigOWith.insert`\n`+ IsBigOWith.inv_rev`\n`+ IsBigOWith.isBigO`\n`+ IsBigOWith.mono`\n`+ IsBigOWith.mul`\n`+ IsBigOWith.neg_left`\n`+ IsBigOWith.neg_right`\n`+ IsBigOWith.norm_left`\n`+ IsBigOWith.norm_norm`\n`+ IsBigOWith.norm_right`\n`+ IsBigOWith.of_abs_abs`\n`+ IsBigOWith.of_abs_left`\n`+ IsBigOWith.of_abs_right`\n`+ IsBigOWith.of_bound`\n`+ IsBigOWith.of_const_mul_right`\n`+ IsBigOWith.of_neg_left`\n`+ IsBigOWith.of_neg_right`\n`+ IsBigOWith.of_norm_left`\n`+ IsBigOWith.of_norm_norm`\n`+ IsBigOWith.of_norm_right`\n`+ IsBigOWith.of_pow`\n`+ IsBigOWith.pow`\n`+ IsBigOWith.pow'`\n`+ IsBigOWith.prod_left`\n`+ IsBigOWith.prod_left_fst`\n`+ IsBigOWith.prod_left_same`\n`+ IsBigOWith.prod_left_snd`\n`+ IsBigOWith.prod_rightl`\n`+ IsBigOWith.prod_rightr`\n`+ IsBigOWith.right_le_add_of_lt_one`\n`+ IsBigOWith.right_le_sub_of_lt_one`\n`+ IsBigOWith.smul`\n`+ IsBigOWith.sub`\n`+ IsBigOWith.sub_isLittleO`\n`+ IsBigOWith.sum`\n`+ IsBigOWith.sup`\n`+ IsBigOWith.sup'`\n`+ IsBigOWith.symm`\n`+ IsBigOWith.trans`\n`+ IsBigOWith.trans_isLittleO`\n`+ IsBigOWith.trans_le`\n`+ IsBigOWith.triangle`\n`+ IsBigOWith.weaken`\n`+ IsBot.eq_bot`\n`+ IsCodetecting`\n`+ IsCodetecting.isCoseparating`\n`+ IsCodetecting.mono`\n`+ IsCodetector`\n`+ IsCodetector.def`\n`+ IsCodetector.isCoseparator`\n`+ IsCompl.prod_mul_prod`\n`+ IsContinuous`\n`+ IsCoseparating`\n`+ IsCoseparating.isCodetecting`\n`+ IsCoseparating.mono`\n`+ IsCoseparator`\n`+ IsCoseparator.def`\n`+ IsCoseparator.isCodetector`\n`+ IsCoverDense.sheafEquivOfCoverPreservingCoverLifting`\n`+ IsCoverDense.sheafEquivOfCoverPreservingCoverLiftingSheafificationCompatibility`\n`+ IsDenseSubsite`\n`+ IsDetecting`\n`+ IsDetecting.isSeparating`\n`+ IsDetecting.mono`\n`+ IsDetector`\n`+ IsDetector.def`\n`+ IsDetector.isSeparator`\n`+ IsDiscrete`\n`+ IsEquiv`\n`+ IsEuclidean`\n`+ IsFiniteKernel.comap`\n`+ IsFiniteKernel.comp`\n`+ IsFiniteKernel.compProd`\n`+ IsFiniteKernel.fst`\n`+ IsFiniteKernel.map`\n`+ IsFiniteKernel.prod`\n`+ IsFiniteKernel.prodMkLeft`\n`+ IsFiniteKernel.prodMkRight`\n`+ IsFiniteKernel.snd`\n`+ IsFiniteKernel.swapLeft`\n`+ IsFiniteKernel.swapRight`\n`+ IsFixedPt.isPeriodicPt`\n`+ IsIdempotentElem`\n`+ IsIntegral.isAlgebraic`\n`+ IsIrrefl`\n`+ IsIrrefl.decide`\n`+ IsJacobson`\n`+ IsJacobson.out`\n`+ IsJacobsonRing`\n`+ IsJacobsonRing.out`\n`+ IsLinearOrder`\n`+ IsLittleO.abs_abs`\n`+ IsLittleO.abs_left`\n`+ IsLittleO.abs_right`\n`+ IsLittleO.add`\n`+ IsLittleO.add_add`\n`+ IsLittleO.add_isBigO`\n`+ IsLittleO.add_isBigOWith`\n`+ IsLittleO.bound`\n`+ IsLittleO.comp_fst`\n`+ IsLittleO.comp_snd`\n`+ IsLittleO.comp_tendsto`\n`+ IsLittleO.congr`\n`+ IsLittleO.congr'`\n`+ IsLittleO.congr_left`\n`+ IsLittleO.congr_of_sub`\n`+ IsLittleO.congr_right`\n`+ IsLittleO.const_mul_left`\n`+ IsLittleO.const_mul_right`\n`+ IsLittleO.const_mul_right'`\n`+ IsLittleO.const_smul_left`\n`+ IsLittleO.def`\n`+ IsLittleO.def'`\n`+ IsLittleO.eventuallyLE`\n`+ IsLittleO.eventually_mul_div_cancel`\n`+ IsLittleO.exists_eq_mul`\n`+ IsLittleO.forall_isBigOWith`\n`+ IsLittleO.insert`\n`+ IsLittleO.inv_rev`\n`+ IsLittleO.isBigO`\n`+ IsLittleO.isBigOWith`\n`+ IsLittleO.mono`\n`+ IsLittleO.mul`\n`+ IsLittleO.mul_isBigO`\n`+ IsLittleO.natCast_atTop`\n`+ IsLittleO.nat_cast_atTop`\n`+ IsLittleO.neg_left`\n`+ IsLittleO.neg_right`\n`+ IsLittleO.norm_left`\n`+ IsLittleO.norm_norm`\n`+ IsLittleO.norm_right`\n`+ IsLittleO.not_isBigO`\n`+ IsLittleO.of_abs_abs`\n`+ IsLittleO.of_abs_left`\n`+ IsLittleO.of_abs_right`\n`+ IsLittleO.of_bound`\n`+ IsLittleO.of_const_mul_right`\n`+ IsLittleO.of_isBigOWith`\n`+ IsLittleO.of_neg_left`\n`+ IsLittleO.of_neg_right`\n`+ IsLittleO.of_norm_left`\n`+ IsLittleO.of_norm_norm`\n`+ IsLittleO.of_norm_right`\n`+ IsLittleO.of_pow`\n`+ IsLittleO.pow`\n`+ IsLittleO.prod_left`\n`+ IsLittleO.prod_left_fst`\n`+ IsLittleO.prod_left_snd`\n`+ IsLittleO.prod_rightl`\n`+ IsLittleO.prod_rightr`\n`+ IsLittleO.right_isBigO_add`\n`+ IsLittleO.right_isBigO_add'`\n`+ IsLittleO.right_isBigO_sub`\n`+ IsLittleO.smul`\n`+ IsLittleO.smul_isBigO`\n`+ IsLittleO.sub`\n`+ IsLittleO.sum`\n`+ IsLittleO.sup`\n`+ IsLittleO.symm`\n`+ IsLittleO.tendsto_div_nhds_zero`\n`+ IsLittleO.tendsto_inv_smul_nhds_zero`\n`+ IsLittleO.tendsto_zero_of_tendsto`\n`+ IsLittleO.trans`\n`+ IsLittleO.trans_eventuallyEq`\n`+ IsLittleO.trans_isBigO`\n`+ IsLittleO.trans_isBigOWith`\n`+ IsLittleO.trans_le`\n`+ IsLittleO.trans_tendsto`\n`+ IsLittleO.triangle`\n`+ IsLocal`\n`+ IsLocal.le_jacobson`\n`+ IsLocal.mem_jacobson_or_exists_inv`\n`+ IsLocalization.isMaximal_iff_isMaximal_disjoint`\n`+ IsLocalization.isMaximal_of_isMaximal_disjoint`\n`+ IsLocalization.orderIsoOfMaximal`\n`+ IsLowerSet`\n`+ IsMarkovKernel.comap`\n`+ IsMarkovKernel.comp`\n`+ IsMarkovKernel.compProd`\n`+ IsMarkovKernel.fst`\n`+ IsMarkovKernel.map`\n`+ IsMarkovKernel.prod`\n`+ IsMarkovKernel.prodMkLeft`\n`+ IsMarkovKernel.prodMkRight`\n`+ IsMarkovKernel.snd`\n`+ IsMarkovKernel.swapLeft`\n`+ IsMarkovKernel.swapRight`\n`+ IsMax.eq_top`\n`+ IsMin.eq_bot`\n`+ IsPartialOrder`\n`+ IsPeriodicPt`\n`+ IsPeriodicPt.eq_zero_of_lt_minimalPeriod`\n`+ IsPeriodicPt.minimalPeriod_dvd`\n`+ IsPeriodicPt.minimalPeriod_le`\n`+ IsPeriodicPt.minimalPeriod_pos`\n`+ IsPreorder`\n`+ IsRefl`\n`+ IsRefl.decide`\n`+ IsReflexive.toPerfectPairingDual`\n`+ IsReflexive.toPerfectPairingDual_apply`\n`+ IsSFiniteKernel.comap`\n`+ IsSFiniteKernel.comp`\n`+ IsSFiniteKernel.compProd`\n`+ IsSFiniteKernel.fst`\n`+ IsSFiniteKernel.map`\n`+ IsSFiniteKernel.prod`\n`+ IsSFiniteKernel.prodMkLeft`\n`+ IsSFiniteKernel.prodMkRight`\n`+ IsSFiniteKernel.snd`\n`+ IsSFiniteKernel.swapLeft`\n`+ IsSFiniteKernel.swapRight`\n`+ IsSeparating`\n`+ IsSeparating.isDetecting`\n`+ IsSeparating.mono`\n`+ IsSeparator`\n`+ IsSeparator.def`\n`+ IsSeparator.isDetector`\n`+ IsStrictOrder`\n`+ IsStrictTotalOrder`\n`+ IsStrictWeakOrder`\n`+ IsSymm`\n`+ IsSymm.decide`\n`+ IsTop.eq_top`\n`+ IsTotal`\n`+ IsTotal.decide`\n`+ IsTrans`\n`+ IsTrans.decide`\n`+ IsTranscendenceBasis`\n`+ IsTranscendenceBasis.isAlgebraic`\n`+ IsTranscendenceBasis.isAlgebraic_field`\n`+ IsTranscendenceBasis.isEmpty_iff_isAlgebraic`\n`+ IsTranscendenceBasis.nonempty_iff_transcendental`\n`+ IsTrichotomous`\n`+ IsTrichotomous.decide`\n`+ IsUnit.natAbs_eq`\n`+ IsUpperSet`\n`+ IsZeroOrMarkovKernel.fst`\n`+ IsZeroOrMarkovKernel.map`\n`+ IsZeroOrMarkovKernel.prod`\n`+ IsZeroOrMarkovKernel.snd`\n`+ IsZeroOrMarkovKernel.swapRight`\n`+ Iso.conj_ρ`\n`+ Kernel.continuous_integral_integral`\n`+ Kernel.integral_fn_integral_add`\n`+ Kernel.integral_fn_integral_sub`\n`+ Kernel.integral_integral_add`\n`+ Kernel.integral_integral_add'`\n`+ Kernel.integral_integral_sub`\n`+ Kernel.integral_integral_sub'`\n`+ Kernel.lintegral_fn_integral_sub`\n`+ Key`\n`+ Key.arity`\n`+ Key.ctorIdx`\n`+ LE.le.not_lt`\n`+ LT.lt.bot_lt`\n`+ LT.lt.lt_top`\n`+ LT.lt.ne_bot`\n`+ LT.lt.ne_top`\n`+ LT.lt.not_le`\n`+ LinearEquiv.isArtinian_iff`\n`+ LinearOrder`\n`+ LocalRing.PrimeSpectrum.comap_residue`\n`+ LocalRing.closedPoint`\n`+ LocalRing.closedPoint_mem_iff`\n`+ LocalRing.closed_point_mem_iff`\n`+ LocalRing.comap_closedPoint`\n`+ LocalRing.isLocalHom_iff_comap_closedPoint`\n`+ LocalRing.specializes_closedPoint`\n`+ LocalizedModule.subsingleton_iff_disjoint`\n`+ LocallyCoverDense`\n`+ LocallyFinite.exists_finset_nhd_mulSupport_subset`\n`+ LocallyFinite.smul_left`\n`+ LocallyFinite.smul_right`\n`+ LowerSet`\n`+ Manifold.locallyCompact_of_finiteDimensional`\n`+ Mathlib.Meta.Positivity.evalAbv`\n`+ Maximal`\n`+ Maximal.le_of_ge`\n`+ Maximal.prop`\n`+ MaximalSpectrum`\n`+ Measurable.comp_eventuallyMeasurable`\n`+ Measurable.eventuallyMeasurable`\n`+ Measurable.eventuallyMeasurable_of_eventuallyEq`\n`+ MeasurableSet.eventuallyMeasurableSet`\n`+ Metric.diam_closure`\n`+ Minimal`\n`+ Minimal.le_of_le`\n`+ Minimal.prop`\n`+ ModelWithCorners`\n`+ ModelWithCorners.Boundaryless`\n`+ ModelWithCorners.pi`\n`+ ModelWithCorners.prod`\n`+ ModelWithCorners.range_eq_univ`\n`+ ModelWithCorners.range_eq_univ_prod`\n`+ ModelWithCorners.range_prod`\n`+ ModelWithCorners.tangent`\n`+ ModelWithCorners.toHomeomorph`\n`+ Module.isClosed_support`\n`+ Module.stableUnderSpecialization_support`\n`+ Module.support_subset_preimage_comap`\n`+ MonoidHom.coe_finset_prod`\n`+ MonoidHom.finset_prod_apply`\n`+ Monotone.ball`\n`+ Monotone.exists`\n`+ Monotone.forall`\n`+ MvPolynomial.algebraicIndependent_X`\n`+ MvPolynomial.comp_C_integral_of_surjective_of_jacobson`\n`+ MvPolynomial.isJacobson_MvPolynomial_fin`\n`+ MvPolynomial.quotient_mk_comp_C_isIntegral_of_jacobson`\n`+ Nat.sum_eq_listSum`\n`+ Ne.bot_lt`\n`+ Ne.bot_lt'`\n`+ Ne.lt_top`\n`+ Ne.lt_top'`\n`+ NormalSpace.instCompletelyRegularSpace`\n`+ NormedField.tendsto_zero_smul_of_tendsto_zero_of_bounded`\n`+ Nucleus`\n`+ NucleusClass`\n`+ One`\n`+ OpenEmbedding.singleton_smoothManifoldWithCorners`\n`+ OrderBot`\n`+ OrderBot.ext_bot`\n`+ OrderBot.instSubsingleton`\n`+ OrderBot.lift`\n`+ OrderDual.instBoundedOrder`\n`+ OrderIso.toGaloisCoinsertion`\n`+ OrderIso.toGaloisInsertion`\n`+ OrderIso.to_galoisConnection`\n`+ OrderTop`\n`+ OrderTop.ext_top`\n`+ OrderTop.instSubsingleton`\n`+ OrderTop.lift`\n`+ PartialHomeomorph.singleton_smoothManifoldWithCorners`\n`+ PartialOrder`\n`+ PerfectPairing`\n`+ Periodic.compact_of_continuous`\n`+ Periodic.isBounded_of_continuous`\n`+ Perm.prod_eq`\n`+ Perm.prod_eq'`\n`+ Polynomial.algebraMap_pi_eq_aeval`\n`+ Polynomial.algebraMap_pi_self_eq_eval`\n`+ Polynomial.algebraPi`\n`+ Polynomial.exists_of`\n`+ Polynomial.hasSMulPi`\n`+ Polynomial.hasSMulPi'`\n`+ Polynomial.transcendental`\n`+ Polynomial.transcendental_X`\n`+ Preadditive.isCoseparating_iff`\n`+ Preadditive.isCoseparator_iff`\n`+ Preadditive.isSeparating_iff`\n`+ Preadditive.isSeparator_iff`\n`+ Preorder`\n`+ Presieve.CoverByImageStructure`\n`+ Presieve.coverByImage`\n`+ Presieve.in_coverByImage`\n`+ Prime.associated_of_dvd`\n`+ Prime.dvd_prime_iff_associated`\n`+ Prime.le_or_le`\n`+ PrimeSpectrum`\n`+ PrimeSpectrum.IsPrime`\n`+ PrimeSpectrum.basicOpen_eq_zeroLocus_of_isIdempotentElem`\n`+ PrimeSpectrum.comap_residue`\n`+ PrimeSpectrum.continuous_tensorProductTo`\n`+ PrimeSpectrum.embedding_tensorProductTo_of_surjectiveOnStalks`\n`+ PrimeSpectrum.isClopen_iff`\n`+ PrimeSpectrum.isClopen_iff_zeroLocus`\n`+ PrimeSpectrum.isEmbedding_tensorProductTo_of_surjectiveOnStalks`\n`+ PrimeSpectrum.isEmbedding_tensorProductTo_of_surjectiveOnStalks_aux`\n`+ PrimeSpectrum.tensorProductTo`\n`+ PrimeSpectrum.topologicalKrullDim_eq_ringKrullDim`\n`+ PrimeSpectrum.zeroLocus_eq_basicOpen_of_isIdempotentElem`\n`+ Quasicategory`\n`+ Quasicategory.hornFilling`\n`+ Real.atBot_le_cocompact`\n`+ Real.atTop_le_cocompact`\n`+ Real.cobounded_eq`\n`+ Real.cocompact_eq`\n`+ Real.continuous_inv`\n`+ Real.infinite_rat_abs_sub_lt_one_div_den_sq_iff_irrational`\n`+ Real.instCompleteSpace`\n`+ Real.isTopologicalBasis_Ioo_rat`\n`+ Real.mem_closure_iff`\n`+ Real.subfield_eq_of_closed`\n`+ Real.totallyBounded_ball`\n`+ Real.uniformContinuous_abs`\n`+ Real.uniformContinuous_add`\n`+ Real.uniformContinuous_const_mul`\n`+ Real.uniformContinuous_inv`\n`+ Real.uniformContinuous_mul`\n`+ Real.uniformContinuous_neg`\n`+ Reflexive`\n`+ Ring.isArtinian_of_zero_eq_one`\n`+ RingHom.FiniteType.isJacobsonRing`\n`+ RingHom.Flat`\n`+ RingHom.finite_iff_finiteType_of_isJacobsonRing`\n`+ RingHom.specComap`\n`+ Semiconj.mapsTo_periodicPts`\n`+ Semiconj.mapsTo_ptsOfPeriod`\n`+ Sieve.coverByImage`\n`+ SimplicialObject`\n`+ SimplicialObject.Augmented.rightOp`\n`+ SimplicialObject.Augmented.rightOpLeftOpIso`\n`+ Simps.symm_apply`\n`+ SmoothManifoldWithCorners`\n`+ SmoothManifoldWithCorners.mk'`\n`+ Split`\n`+ Splitting`\n`+ StrictAnti.apply_eq_bot_iff`\n`+ StrictAnti.apply_eq_top_iff`\n`+ StrictMono.apply_eq_bot_iff`\n`+ StrictMono.apply_eq_top_iff`\n`+ StrictMono.maximal_preimage_top`\n`+ StrictMono.minimal_preimage_bot`\n`+ Subalgebra.IsAlgebraic`\n`+ Subalgebra.inv_mem_of_algebraic`\n`+ Subalgebra.inv_mem_of_root_of_coeff_zero_ne_zero`\n`+ Subalgebra.isAlgebraic_iff`\n`+ Subalgebra.isField_of_algebraic`\n`+ Sublist.prod_dvd_prod`\n`+ Subring.mem_closure_image_of`\n`+ Summable.of_nonneg_of_le`\n`+ Summable.toNNReal`\n`+ Symmetric`\n`+ T35Space`\n`+ T35Space.instT3space`\n`+ T4Space.instT35Space`\n`+ TangentBundle`\n`+ TangentSpace`\n`+ Tendsto.const_div`\n`+ Tendsto.const_mul`\n`+ Tendsto.div`\n`+ Tendsto.div_const`\n`+ Tendsto.mul`\n`+ Tendsto.mul_const`\n`+ Tendsto.pow`\n`+ Tendsto.sub`\n`+ TensorPower`\n`+ Topology.IsOpenEmbedding.singleton_smoothManifoldWithCorners`\n`+ Total`\n`+ Transcendental`\n`+ Transcendental.aeval`\n`+ Transcendental.aeval_of_transcendental`\n`+ Transcendental.linearIndependent_sub_inv`\n`+ Transcendental.of_aeval`\n`+ Transcendental.of_ringHom_of_comp_eq`\n`+ Transcendental.of_tower_top`\n`+ Transcendental.of_tower_top_of_injective`\n`+ Transcendental.of_tower_top_of_subalgebra_le`\n`+ Transcendental.pow`\n`+ Transcendental.restrictScalars`\n`+ Transcendental.ringHom_of_comp_eq`\n`+ Transitive`\n`+ Trie`\n`+ Trie.children!`\n`+ Trie.mkNode2`\n`+ Trie.mkPath`\n`+ Trie.singleton`\n`+ Trie.values!`\n`+ Truncated.cosk`\n`+ Truncated.sk`\n`+ Units.coe_prod`\n`+ UpperSet`\n`+ WithBot.giUnbot'Bot`\n`+ _root_.AlgEquiv.fieldRange_eq_top`\n`+ _root_.AlgHom.fieldRange_eq_map`\n`+ _root_.AlgHom.fieldRange_eq_top`\n`+ _root_.AlgHom.map_fieldRange`\n`+ _root_.Commute.list_prod_left`\n`+ _root_.Commute.list_prod_right`\n`+ _root_.Continuous.ennreal_mul`\n`+ _root_.ContinuousMap.coeNNRealReal`\n`+ _root_.ContinuousMap.realToNNReal`\n`+ _root_.ContinuousOn.ennreal_mul`\n`+ _root_.ContinuousOn.ofReal_map_toNNReal`\n`+ _root_.Equiv.Perm.prod_comp`\n`+ _root_.Equiv.Perm.prod_comp'`\n`+ _root_.Equiv.prod_comp`\n`+ _root_.Filter.Eventually.isBigO`\n`+ _root_.Filter.Eventually.trans_isBigO`\n`+ _root_.Filter.EventuallyEq.isBigO`\n`+ _root_.Filter.EventuallyEq.trans_isBigO`\n`+ _root_.Filter.EventuallyEq.trans_isLittleO`\n`+ _root_.Filter.IsBoundedUnder.isBigO_const`\n`+ _root_.Filter.IsBoundedUnder.isBigO_one`\n`+ _root_.Filter.Tendsto.isBigO_one`\n`+ _root_.Fintype.prod_eq_mul_prod_compl`\n`+ _root_.Fintype.prod_eq_prod_compl_mul`\n`+ _root_.Function.Bijective.finset_prod`\n`+ _root_.Function.Bijective.prod_comp`\n`+ _root_.GCongr.ennreal_tsum_le_tsum`\n`+ _root_.HasSum.toNNReal`\n`+ _root_.Mathlib.Meta.FunProp.RefinedDiscrTree`\n`+ _root_.MeasureTheory.AEStronglyMeasurable.compProd_mk_left`\n`+ _root_.MeasureTheory.AEStronglyMeasurable.integral_kernel_compProd`\n`+ _root_.MeasureTheory.Integrable.compProd_mk_left_ae`\n`+ _root_.MeasureTheory.Integrable.integral_compProd`\n`+ _root_.MeasureTheory.Integrable.integral_norm_compProd`\n`+ _root_.MonoidHom.map_multiset_prod`\n`+ _root_.MulHom.map_multiset_ne_zero_prod`\n`+ _root_.Polynomial.irreducible_comp`\n`+ _root_.Real.comap_toNNReal_atTop`\n`+ _root_.Real.map_toNNReal_atTop`\n`+ _root_.Real.tendsto_of_bddAbove_monotone`\n`+ _root_.Real.tendsto_of_bddBelow_antitone`\n`+ _root_.Real.tendsto_toNNReal_atTop`\n`+ _root_.Real.tendsto_toNNReal_atTop_iff`\n`+ _root_.Shrink.algEquiv`\n`+ _root_.Shrink.linearEquiv`\n`+ _root_.Shrink.mulEquiv`\n`+ _root_.Shrink.ringEquiv`\n`+ _root_.Summable.countable_support_ennreal`\n`+ _root_.Summable.countable_support_nnreal`\n`+ _root_.associates_irreducible_iff_prime`\n`+ _root_.continuous_coe_ennreal_ereal`\n`+ _root_.continuous_coe_real_ereal`\n`+ _root_.continuous_real_toNNReal`\n`+ _root_.hasCompactMulSupport_comp_left`\n`+ _root_.hasCompactMulSupport_iff_eventuallyEq`\n`+ _root_.isCompact_range_of_mulSupport_subset_isCompact`\n`+ _root_.isSplittingField_iff_intermediateField`\n`+ _root_.map_multiset_ne_zero_prod`\n`+ _root_.map_multiset_prod`\n`+ _root_.minimalPrimes.finite_of_isNoetherianRing`\n`+ _root_.minpoly.degree_dvd`\n`+ _root_.minpoly.degree_le`\n`+ _root_.minpoly.natDegree_le`\n`+ _root_.tendsto_real_toNNReal`\n`+ _root_.tendsto_real_toNNReal_atTop`\n`+ abelianAux`\n`+ abs`\n`+ abs_isAbsoluteValue`\n`+ abs_isEuclidean`\n`+ abs_sub_le_of_uIcc_subset_uIcc`\n`+ abs_sub_left_of_mem_uIcc`\n`+ abs_sub_right_of_mem_uIcc`\n`+ absolutelyContinuous_compProd`\n`+ absolutelyContinuous_compProd_left`\n`+ absolutelyContinuous_compProd_right`\n`+ absolutelyContinuous_of_compProd`\n`+ abvHom`\n`+ abvHom'`\n`+ abv_add`\n`+ abv_div`\n`+ abv_eq_zero`\n`+ abv_inv`\n`+ abv_mul`\n`+ abv_neg`\n`+ abv_nonneg`\n`+ abv_one`\n`+ abv_one'`\n`+ abv_pos`\n`+ abv_pow`\n`+ abv_sub`\n`+ abv_sub_le`\n`+ abv_zero`\n`+ actionPunitEquivalence`\n`+ addCommGroup`\n`+ addCommMonoid`\n`+ addGroupWithOne`\n`+ addMonoid`\n`+ add_hom`\n`+ add_iInf_le_iInf_add`\n`+ add_le`\n`+ add_liminf_le_liminf_add`\n`+ adjoin`\n`+ adjoin.algebraMap_mem`\n`+ adjoin.fieldCoe`\n`+ adjoin.finiteDimensional`\n`+ adjoin.finrank`\n`+ adjoin.mono`\n`+ adjoin.powerBasis`\n`+ adjoin.range_algebraMap_subset`\n`+ adjoin.setCoe`\n`+ adjoinRootEquivAdjoin`\n`+ adjoinRootEquivAdjoin_apply_root`\n`+ adjoinRootEquivAdjoin_symm_apply_gen`\n`+ adjoin_adjoin_comm`\n`+ adjoin_adjoin_left`\n`+ adjoin_algHom_ext`\n`+ adjoin_algebraic_toSubalgebra`\n`+ adjoin_contains_field_as_subfield`\n`+ adjoin_empty`\n`+ adjoin_eq_algebra_adjoin`\n`+ adjoin_eq_bot_iff`\n`+ adjoin_eq_range_algebraMap_adjoin`\n`+ adjoin_eq_top_of_adjoin_eq_top`\n`+ adjoin_eq_top_of_algebra`\n`+ adjoin_finite_isCompactElement`\n`+ adjoin_finset_isCompactElement`\n`+ adjoin_iUnion`\n`+ adjoin_induction`\n`+ adjoin_insert_adjoin`\n`+ adjoin_int`\n`+ adjoin_intCast`\n`+ adjoin_le_iff`\n`+ adjoin_le_subfield`\n`+ adjoin_map`\n`+ adjoin_minpoly_coeff_of_exists_primitive_element`\n`+ adjoin_nat`\n`+ adjoin_natCast`\n`+ adjoin_one`\n`+ adjoin_rank_le_of_isAlgebraic`\n`+ adjoin_rank_le_of_isAlgebraic_left`\n`+ adjoin_rank_le_of_isAlgebraic_right`\n`+ adjoin_rootSet_isSplittingField`\n`+ adjoin_root_eq_top`\n`+ adjoin_self`\n`+ adjoin_simple_adjoin_simple`\n`+ adjoin_simple_comm`\n`+ adjoin_simple_eq_bot_iff`\n`+ adjoin_simple_isCompactElement`\n`+ adjoin_simple_le_iff`\n`+ adjoin_simple_toSubalgebra_of_integral`\n`+ adjoin_subset_adjoin_iff`\n`+ adjoin_toSubalgebra_of_isAlgebraic`\n`+ adjoin_toSubalgebra_of_isAlgebraic_left`\n`+ adjoin_toSubalgebra_of_isAlgebraic_right`\n`+ adjoin_toSubfield`\n`+ adjoin_union`\n`+ adjoin_univ`\n`+ adjoin_zero`\n`+ ae_kernel_lt_top`\n`+ ae_null_of_compProd_null`\n`+ aestronglyMeasurable_exp_mul_add`\n`+ aestronglyMeasurable_exp_mul_sum`\n`+ aevalEquiv`\n`+ aevalEquivField`\n`+ aevalEquivField_algebraMap_apply_coe`\n`+ aevalEquivField_apply_coe`\n`+ aeval_comp_repr`\n`+ aeval_gen_minpoly`\n`+ aeval_of_algebraicIndependent`\n`+ aeval_repr`\n`+ aleph0_toPartENat`\n`+ algEquivOfAssociated`\n`+ algEquivOfAssociated_apply_root`\n`+ algEquivOfAssociated_toAlgHom`\n`+ algEquivOfEq`\n`+ algEquivOfEq_apply_root`\n`+ algEquivOfEq_toAlgHom`\n`+ algEquivShrink`\n`+ algEquiv_symm_apply`\n`+ algHomAdjoinIntegralEquiv`\n`+ algHomAdjoinIntegralEquiv_symm_apply_gen`\n`+ algHomOfDvd`\n`+ algHomOfDvd_apply_root`\n`+ algHom_bijective`\n`+ algHom_bijective₂`\n`+ algHom_ext_of_eq_adjoin`\n`+ algHom_fieldRange_eq_of_comp_eq`\n`+ algHom_fieldRange_eq_of_comp_eq_of_range_eq`\n`+ algebra`\n`+ algebraMap_aevalEquiv`\n`+ algebraMap_def`\n`+ algebraMap_injective`\n`+ algebraMap₀`\n`+ algebraMap₀_eq_smul_one`\n`+ algebraMap₀_mul`\n`+ algebraMap₀_mul_algebraMap₀`\n`+ algebraMap₀_one`\n`+ algebraOverBot`\n`+ algebra_adjoin_le_adjoin`\n`+ algebra_isAlgebraic_bot_left_iff`\n`+ algebra_isAlgebraic_bot_right`\n`+ algebra_isAlgebraic_of_algebra_isAlgebraic_bot_left`\n`+ algebraicIndependent_adjoin`\n`+ algebraicIndependent_bounded_of_finset_algebraicIndependent_bounded`\n`+ algebraicIndependent_comp_subtype`\n`+ algebraicIndependent_empty`\n`+ algebraicIndependent_empty_iff`\n`+ algebraicIndependent_empty_type`\n`+ algebraicIndependent_empty_type_iff`\n`+ algebraicIndependent_equiv`\n`+ algebraicIndependent_equiv'`\n`+ algebraicIndependent_finset_map_embedding_subtype`\n`+ algebraicIndependent_iUnion_of_directed`\n`+ algebraicIndependent_iff`\n`+ algebraicIndependent_iff_injective_aeval`\n`+ algebraicIndependent_iff_ker_eq_bot`\n`+ algebraicIndependent_iff_transcendental`\n`+ algebraicIndependent_image`\n`+ algebraicIndependent_of_finite`\n`+ algebraicIndependent_of_finite'`\n`+ algebraicIndependent_of_finite_type'`\n`+ algebraicIndependent_of_subsingleton`\n`+ algebraicIndependent_polynomial_aeval_X`\n`+ algebraicIndependent_ringHom_iff_of_comp_eq`\n`+ algebraicIndependent_sUnion_of_directed`\n`+ algebraicIndependent_subtype`\n`+ algebraicIndependent_subtype_range`\n`+ algebraicIndependent_unique_type_iff`\n`+ alternatingProd`\n`+ alternatingProd_append`\n`+ alternatingProd_cons`\n`+ alternatingProd_cons'`\n`+ alternatingProd_cons_cons`\n`+ alternatingProd_cons_cons'`\n`+ alternatingProd_nil`\n`+ alternatingProd_reverse`\n`+ alternatingProd_singleton`\n`+ alternatingSum`\n`+ antisymm`\n`+ antitone_le`\n`+ antitone_lt`\n`+ appHom`\n`+ appHom_restrict`\n`+ appHom_valid_glue`\n`+ appIso`\n`+ apply`\n`+ apply_apply_toDualRight_symm`\n`+ apply_iterate`\n`+ apply_toDualLeft_symm_apply`\n`+ asIdeal_jacobson`\n`+ asIdeal_le_asIdeal`\n`+ asIdeal_lt_asIdeal`\n`+ associated_eq_eq`\n`+ associated_iff_eq`\n`+ associated_isUnit_mul_left_iff`\n`+ associated_isUnit_mul_right_iff`\n`+ associated_map_mk`\n`+ associated_mul_isUnit_left_iff`\n`+ associated_mul_isUnit_right_iff`\n`+ associated_mul_unit_left`\n`+ associated_mul_unit_left_iff`\n`+ associated_mul_unit_right`\n`+ associated_mul_unit_right_iff`\n`+ associated_of_dvd_dvd`\n`+ associated_one_iff_isUnit`\n`+ associated_one_of_associated_mul_one`\n`+ associated_one_of_mul_eq_one`\n`+ associated_unit_mul_left`\n`+ associated_unit_mul_left_iff`\n`+ associated_unit_mul_right`\n`+ associated_unit_mul_right_iff`\n`+ associated_zero_iff_eq_zero`\n`+ asymm`\n`+ asymm_of`\n`+ bUnion_ptsOfPeriod`\n`+ baseChange`\n`+ basicOpen`\n`+ basicOpen_eq_bot_iff`\n`+ basicOpen_eq_zeroLocus_compl`\n`+ basicOpen_le_basicOpen_iff`\n`+ basicOpen_mul`\n`+ basicOpen_mul_le_left`\n`+ basicOpen_mul_le_right`\n`+ basicOpen_one`\n`+ basicOpen_pow`\n`+ basicOpen_zero`\n`+ bddAbove_image`\n`+ bddAbove_l_image`\n`+ bddAbove_preimage`\n`+ bddBelow_image`\n`+ bddBelow_preimage`\n`+ bddBelow_u_image`\n`+ biInf_le_nhds`\n`+ biSup_adjoin_simple`\n`+ bigOpBindersPattern`\n`+ bigOpBindersProd`\n`+ bijOn_periodicPts`\n`+ bijOn_ptsOfPeriod`\n`+ bijective_of_injective_endomorphism`\n`+ bijective_of_isScalarTower`\n`+ bijective_of_isScalarTower'`\n`+ bijective_toDualRight_symm_toDualLeft`\n`+ bot`\n`+ botEquiv`\n`+ botEquiv_def`\n`+ botEquiv_symm`\n`+ botOrderOrNoBotOrder`\n`+ bot_apply`\n`+ bot_def`\n`+ bot_eq`\n`+ bot_eq_false`\n`+ bot_eq_one`\n`+ bot_eq_top_of_finrank_adjoin_eq_one`\n`+ bot_eq_top_of_finrank_adjoin_le_one`\n`+ bot_eq_top_of_rank_adjoin_eq_one`\n`+ bot_inf_eq`\n`+ bot_le`\n`+ bot_lt_iff_ne_bot`\n`+ bot_lt_of_lt`\n`+ bot_lt_top`\n`+ bot_ne_top`\n`+ bot_not_mem_iff`\n`+ bot_sup_eq`\n`+ bot_toSubalgebra`\n`+ bot_toSubfield`\n`+ bot_unique`\n`+ bound_of_isBigO_cofinite`\n`+ bound_of_isBigO_nat_atTop`\n`+ boundedOrder`\n`+ cacheEtaPossibilities`\n`+ card_algHom_adjoin_integral`\n`+ card_biUnion`\n`+ card_biUnion_le`\n`+ card_disjiUnion`\n`+ card_eq_sum_card_fiberwise`\n`+ card_eq_sum_card_image`\n`+ card_eq_sum_ones`\n`+ card_filter`\n`+ card_pow_eq_card_pow_card_univ`\n`+ card_sigma`\n`+ cardinalMk_adjoin_le`\n`+ cast`\n`+ cast_cast`\n`+ cast_eq_cast`\n`+ cast_refl`\n`+ cast_symm`\n`+ cast_tprod`\n`+ cast_trans`\n`+ cauchySeq_of_edist_le_of_summable`\n`+ cauchySeq_of_edist_le_of_tsum_ne_top`\n`+ centralMoment`\n`+ centralMoment_one`\n`+ centralMoment_one'`\n`+ centralMoment_two_eq_variance`\n`+ centralMoment_zero`\n`+ cgf`\n`+ cgf_const`\n`+ cgf_const'`\n`+ cgf_neg`\n`+ cgf_undef`\n`+ cgf_zero`\n`+ cgf_zero'`\n`+ cgf_zero_fun`\n`+ cgf_zero_measure`\n`+ chart_mem_maximalAtlas`\n`+ closedEmbedding`\n`+ closedEmbedding_coe_ennreal`\n`+ closedEmbedding_comap_of_surjective`\n`+ closedPoint`\n`+ closedPoint_mem_iff`\n`+ closed_point_mem_iff`\n`+ closed_range`\n`+ closedsEmbedding`\n`+ closure_image_comap_zeroLocus`\n`+ closure_of_rat_image_le_eq`\n`+ closure_of_rat_image_le_le_eq`\n`+ closure_of_rat_image_lt`\n`+ closure_range_comap`\n`+ closure_singleton`\n`+ cmp_eq_compare`\n`+ cmp_eq_compareOfLessAndEq`\n`+ codetector`\n`+ coeAddMonoidHom`\n`+ coeFn_injective`\n`+ coeRingHom`\n`+ coe_add`\n`+ coe_algEquivOfAssociated`\n`+ coe_algEquivOfEq`\n`+ coe_algHomOfDvd`\n`+ coe_algebraMap_over_bot`\n`+ coe_comap`\n`+ coe_compl`\n`+ coe_eq_bot_iff`\n`+ coe_eq_toFun`\n`+ coe_eq_top_iff`\n`+ coe_equivMap_apply`\n`+ coe_iInf`\n`+ coe_iSup_of_directed`\n`+ coe_inf`\n`+ coe_inj`\n`+ coe_max`\n`+ coe_mk`\n`+ coe_mul`\n`+ coe_natCast`\n`+ coe_nat_cast`\n`+ coe_nsmul`\n`+ coe_pow`\n`+ coe_range`\n`+ coe_range_mem_nhds`\n`+ coe_sInf`\n`+ coe_sumAddMonoidHom`\n`+ coe_toLinearMap_flip`\n`+ coe_toMonoidHom`\n`+ coe_toMonoidWithZeroHom`\n`+ coe_toMulHom`\n`+ coe_toNonneg`\n`+ coe_tsum_of_nonneg`\n`+ coe_unit_eq_one`\n`+ coe_vanishingIdeal`\n`+ cofan`\n`+ cofan'`\n`+ cofan_inj_comp_app`\n`+ cofan_inj_epi_naturality`\n`+ cofan_inj_eq`\n`+ cofan_inj_id`\n`+ cofan_inj_naturality_symm`\n`+ comapRight_compProd_id_prod`\n`+ comap_C_mem_imageOfDf`\n`+ comap_apply`\n`+ comap_apply'`\n`+ comap_asIdeal`\n`+ comap_basicOpen`\n`+ comap_closedPoint`\n`+ comap_coe_atTop`\n`+ comap_comp`\n`+ comap_comp_apply`\n`+ comap_id'`\n`+ comap_inducing_of_surjective`\n`+ comap_injective_of_surjective`\n`+ comap_isInducing_of_surjective`\n`+ comap_jacobson`\n`+ comap_jacobson_of_surjective`\n`+ comap_map`\n`+ comap_map_comm`\n`+ comap_prod_swap`\n`+ comap_singleton_isClosed_of_surjective`\n`+ comap_zero`\n`+ comm`\n`+ commGroup`\n`+ commMonoid`\n`+ commMonoidWithZero`\n`+ commSemigroup`\n`+ compProdFun`\n`+ compProdFun_empty`\n`+ compProdFun_eq_tsum`\n`+ compProdFun_iUnion`\n`+ compProdFun_tsum_left`\n`+ compProdFun_tsum_right`\n`+ compProd_apply_eq_compProdFun`\n`+ compProd_apply_prod`\n`+ compProd_apply_univ_le`\n`+ compProd_congr`\n`+ compProd_deterministic_apply`\n`+ compProd_eq_sum_compProd`\n`+ compProd_eq_sum_compProd_left`\n`+ compProd_eq_sum_compProd_right`\n`+ compProd_eq_tsum_compProd`\n`+ compProd_null`\n`+ compProd_of_not_isSFiniteKernel`\n`+ compProd_of_not_isSFiniteKernel_left`\n`+ compProd_of_not_isSFiniteKernel_right`\n`+ compProd_of_not_sfinite`\n`+ compProd_preimage_fst`\n`+ compProd_restrict`\n`+ compProd_restrict_left`\n`+ compProd_restrict_right`\n`+ comp_C_integral_of_surjective_of_jacobson`\n`+ comp_F`\n`+ comp_apply`\n`+ comp_apply'`\n`+ comp_assoc`\n`+ comp_closedEmbedding`\n`+ comp_deterministic_eq_comap`\n`+ comp_eq_snd_compProd`\n`+ comp_f`\n`+ comp_hom`\n`+ comp_isClosedEmbedding`\n`+ comp_lcm`\n`+ comp_left`\n`+ comp_zero`\n`+ compactSpace`\n`+ compare_eq_iff_eq`\n`+ compare_ge_iff_ge`\n`+ compare_gt_iff_gt`\n`+ compare_iff`\n`+ compare_le_iff_le`\n`+ compare_lt_iff_lt`\n`+ compatiblePreserving`\n`+ compatible_of_mem_maximalAtlas`\n`+ compl`\n`+ compl_compl`\n`+ complete_distinguished_triangle_morphism`\n`+ compose`\n`+ comp₂_left`\n`+ conditionallyCompleteLinearOrder`\n`+ conditionallyCompleteLinearOrderBot`\n`+ congr_F`\n`+ congr_f`\n`+ const_comp`\n`+ const_comp'`\n`+ const_mul`\n`+ contDiffGroupoid`\n`+ contDiffGroupoid_le`\n`+ contDiffGroupoid_prod`\n`+ contDiffGroupoid_zero_eq`\n`+ contDiffOn_ext_coord_change`\n`+ contDiffOn_extend_coord_change`\n`+ contDiffPregroupoid`\n`+ contDiffWithinAt_ext_coord_change`\n`+ contDiffWithinAt_extend_coord_change`\n`+ contDiffWithinAt_extend_coord_change'`\n`+ continuous`\n`+ continuousAt`\n`+ continuousAt_add`\n`+ continuousAt_add_bot_bot`\n`+ continuousAt_add_bot_coe`\n`+ continuousAt_add_coe_bot`\n`+ continuousAt_add_coe_coe`\n`+ continuousAt_add_coe_top`\n`+ continuousAt_add_top_coe`\n`+ continuousAt_add_top_top`\n`+ continuousAt_coe_iff`\n`+ continuousAt_const_mul`\n`+ continuousAt_extChartAt`\n`+ continuousAt_extChartAt'`\n`+ continuousAt_extChartAt_symm`\n`+ continuousAt_extChartAt_symm'`\n`+ continuousAt_extChartAt_symm''`\n`+ continuousAt_extend`\n`+ continuousAt_extend_symm`\n`+ continuousAt_extend_symm'`\n`+ continuousAt_iff_isLittleO`\n`+ continuousAt_mul`\n`+ continuousAt_mul_const`\n`+ continuousAt_symm`\n`+ continuousAt_toReal`\n`+ continuousOn_extChartAt`\n`+ continuousOn_extChartAt_symm`\n`+ continuousOn_extend`\n`+ continuousOn_extend_symm`\n`+ continuousOn_sub`\n`+ continuousOn_sub_left`\n`+ continuousOn_symm`\n`+ continuousOn_toNNReal`\n`+ continuousOn_writtenInExtend_iff`\n`+ continuousWithinAt`\n`+ continuousWithinAt_symm`\n`+ continuousWithinAt_writtenInExtend_iff`\n`+ continuous_coe_ennreal_iff`\n`+ continuous_const_mul`\n`+ continuous_div_const`\n`+ continuous_edist`\n`+ continuous_extend_one`\n`+ continuous_mul_const`\n`+ continuous_nnreal_sub`\n`+ continuous_ofReal`\n`+ continuous_of_le_add_edist`\n`+ continuous_of_mulTSupport`\n`+ continuous_pow`\n`+ continuous_sub_left`\n`+ continuous_sub_right`\n`+ continuous_symm`\n`+ continuous_truncateToReal`\n`+ continuous_zpow`\n`+ contractibleTriangleIso`\n`+ contractible_distinguished`\n`+ convergent`\n`+ convergent_of_int`\n`+ convergent_of_zero`\n`+ convergent_succ`\n`+ convergent_zero`\n`+ convs_eq_convergent`\n`+ coseparator`\n`+ cosimplicialSimplicialEquiv`\n`+ cosimplicialToSimplicialAugmented`\n`+ cosk`\n`+ cosk.faithful`\n`+ cosk.full`\n`+ cosk.fullyFaithful`\n`+ coskAdj`\n`+ coskAdj.reflective`\n`+ cosk_reflective`\n`+ countP_bind`\n`+ countP_flatMap`\n`+ count_bind`\n`+ count_flatMap`\n`+ count_sum'`\n`+ coverPreserving`\n`+ decidableEqOfDecidableLE`\n`+ decidableLTOfDecidableLE`\n`+ decidableMemMul`\n`+ decidableMemPow`\n`+ decompositionMonoid_iff`\n`+ delabFinsetProd`\n`+ delabFinsetSum`\n`+ den_le_and_le_num_le_of_sub_lt_one_div_den_sq`\n`+ denseRange_comap_iff_ker_le_nilRadical`\n`+ denseRange_comap_iff_minimalPrimes`\n`+ denseRange_ratCast`\n`+ desc`\n`+ detector`\n`+ deterministic_comp_deterministic`\n`+ deterministic_comp_eq_map`\n`+ deterministic_prod_deterministic`\n`+ dfun`\n`+ diagonalOneIsoLeftRegular`\n`+ diagonalSucc`\n`+ diam_Icc`\n`+ diam_Ico`\n`+ diam_Ioc`\n`+ diam_Ioo`\n`+ diam_eq`\n`+ dirac_compProd_apply`\n`+ dirac_unit_compProd`\n`+ dirac_unit_compProd_const`\n`+ directSum`\n`+ directedSystem`\n`+ directed_ptsOfPeriod_pNat`\n`+ disjoint_finset_sum_left`\n`+ disjoint_finset_sum_right`\n`+ disjoint_list_sum_left`\n`+ disjoint_list_sum_right`\n`+ disjoint_partial_infs_eventually_top`\n`+ disjoint_sum_left`\n`+ disjoint_sum_right`\n`+ distinguishedTriangles`\n`+ distinguished_cocone_triangle`\n`+ distribLattice`\n`+ distribMulAction`\n`+ div`\n`+ div_def`\n`+ div_isBoundedUnder_of_isBigO`\n`+ divisionRing`\n`+ down_bot`\n`+ down_top`\n`+ drop_sum_flatten`\n`+ drop_sum_join`\n`+ drop_take_succ_flatten_eq_getElem`\n`+ drop_take_succ_join_eq_get`\n`+ drop_take_succ_join_eq_getElem`\n`+ dual`\n`+ dualAnnihilator_map_linearEquiv_flip_symm`\n`+ dualCoannihilator_map_linearEquiv_flip`\n`+ dvdNotUnit_iff_lt`\n`+ dvdNotUnit_of_dvdNotUnit_associated`\n`+ dvdNotUnit_of_lt`\n`+ dvd_dvd_iff_associated`\n`+ dvd_eq_le`\n`+ dvd_of_mk_le_mk`\n`+ dvd_prime_pow`\n`+ dvd_prod_of_mem`\n`+ e`\n`+ ediam_Icc`\n`+ ediam_Ico`\n`+ ediam_Ioc`\n`+ ediam_Ioo`\n`+ ediam_eq`\n`+ edist_le_tsum_of_edist_le_of_tendsto`\n`+ edist_le_tsum_of_edist_le_of_tendsto₀`\n`+ edist_ne_top_of_mem_ball`\n`+ ediv_two_mul_two_of_even`\n`+ elabBeta`\n`+ embedding_coe_ennreal`\n`+ emetricSpace`\n`+ emod_two_ne_one`\n`+ emod_two_ne_zero`\n`+ empty`\n`+ epiComp`\n`+ eq`\n`+ eqId_iff_eq`\n`+ eqId_iff_len_eq`\n`+ eqId_iff_len_le`\n`+ eqId_iff_mono`\n`+ eq_adjoin_of_eq_algebra_adjoin`\n`+ eq_bot_iff`\n`+ eq_bot_mono`\n`+ eq_bot_of_bot_eq_top`\n`+ eq_bot_of_minimal`\n`+ eq_bot_or_bot_lt`\n`+ eq_isEquiv`\n`+ eq_jacobson_iff_not_mem`\n`+ eq_jacobson_iff_sInf_maximal`\n`+ eq_jacobson_iff_sInf_maximal'`\n`+ eq_max`\n`+ eq_min`\n`+ eq_of_apply_eq`\n`+ eq_of_apply_eq_same`\n`+ eq_of_card_le_one_of_prod_eq`\n`+ eq_of_isDetecting`\n`+ eq_of_le_of_isDetecting`\n`+ eq_of_le_of_le`\n`+ eq_of_mul_eq_one`\n`+ eq_of_prime_pow_eq`\n`+ eq_of_prime_pow_eq'`\n`+ eq_of_prod_take_eq`\n`+ eq_of_root`\n`+ eq_one_of_prod_eq_one`\n`+ eq_one_or_neg_one_of_mul_eq_neg_one`\n`+ eq_one_or_neg_one_of_mul_eq_neg_one'`\n`+ eq_one_or_neg_one_of_mul_eq_one`\n`+ eq_one_or_neg_one_of_mul_eq_one'`\n`+ eq_or_lt_of_le`\n`+ eq_or_lt_of_not_lt`\n`+ eq_prod_range_div`\n`+ eq_prod_range_div'`\n`+ eq_top_iff`\n`+ eq_top_mono`\n`+ eq_top_of_bot_eq_top`\n`+ eq_top_or_lt_top`\n`+ eq_zero`\n`+ eq_zero_iff`\n`+ equalizer_mem`\n`+ equivAdjoinSimple`\n`+ equivAdjoinSimple_aeval`\n`+ equivAdjoinSimple_gen`\n`+ equivAdjoinSimple_symm_aeval`\n`+ equivAdjoinSimple_symm_gen`\n`+ equivMap`\n`+ equivOfEq`\n`+ equivOfEq_rfl`\n`+ equivOfEq_symm`\n`+ equivOfEq_trans`\n`+ equivPi`\n`+ equivShrink_div`\n`+ equivShrink_inv`\n`+ equivShrink_mul`\n`+ equivShrink_smul`\n`+ equivShrink_symm_div`\n`+ equivShrink_symm_inv`\n`+ equivShrink_symm_mul`\n`+ equivShrink_symm_one`\n`+ equivShrink_symm_smul`\n`+ etaExpand`\n`+ etaPossibilities`\n`+ evalN`\n`+ even_add`\n`+ even_add_one`\n`+ even_coe_nat`\n`+ even_iff`\n`+ even_mul`\n`+ even_pow`\n`+ even_pow'`\n`+ even_sub`\n`+ even_sub_one`\n`+ eventuallyConst_of_isArtinian`\n`+ eventuallyEq_of_toReal_eventuallyEq`\n`+ eventuallyMeasurableSet_of_mem_filter`\n`+ eventually_codisjoint_ker_pow_range_pow`\n`+ eventually_constant_prod`\n`+ eventually_iInf_range_pow_eq`\n`+ eventually_isCompl_ker_pow_range_pow`\n`+ exact_iff_rTensor_exact`\n`+ exists_and_iff_of_antitone`\n`+ exists_and_iff_of_monotone`\n`+ exists_compact_iff_hasCompactMulSupport`\n`+ exists_convs_eq_rat`\n`+ exists_countable_dense_no_zero_top`\n`+ exists_eq_l`\n`+ exists_eq_u`\n`+ exists_finset_of_mem_adjoin`\n`+ exists_finset_of_mem_iSup`\n`+ exists_finset_of_mem_supr'`\n`+ exists_finset_of_mem_supr''`\n`+ exists_frequently_lt_of_liminf_ne_top`\n`+ exists_frequently_lt_of_liminf_ne_top'`\n`+ exists_ge_and_iff_exists`\n`+ exists_idempotent_basicOpen_eq_of_is_clopen`\n`+ exists_int_int_abs_mul_sub_le`\n`+ exists_integral_multiple`\n`+ exists_inv`\n`+ exists_isClosed_singleton_of_isJacobsonRing`\n`+ exists_isTranscendenceBasis`\n`+ exists_isTranscendenceBasis'`\n`+ exists_le_and_iff_exists`\n`+ exists_le_hasSum_of_le`\n`+ exists_lt_finrank_of_infinite_dimensional`\n`+ exists_maximal_algebraicIndependent`\n`+ exists_mem_ne_one_of_prod_ne_one`\n`+ exists_mul_add_sub_mem_of_mem_jacobson`\n`+ exists_mul_sub_mem_of_sub_one_mem_jacobson`\n`+ exists_nat_abs_mul_sub_round_le`\n`+ exists_ne_one_of_prod_ne_one`\n`+ exists_non_zero_rep`\n`+ exists_pow_succ_smul_dvd`\n`+ exists_primeSpectrum_prod_le`\n`+ exists_primeSpectrum_prod_le_and_ne_bot_of_domain`\n`+ exists_rat_abs_sub_le_and_den_le`\n`+ exists_rat_abs_sub_lt_and_lt_of_irrational`\n`+ exists_rat_eq_convergent`\n`+ exists_rat_eq_convergent'`\n`+ exists_rep`\n`+ exists_smul_of_dvd_count`\n`+ exists_type_univ_nonempty_mulEquiv`\n`+ exists_upcrossings_of_not_bounded_under`\n`+ exists_variableChange_of_j_eq`\n`+ ext'`\n`+ extChartAt`\n`+ extChartAt_coe`\n`+ extChartAt_coe_symm`\n`+ extChartAt_comp`\n`+ extChartAt_image_nhd_mem_nhds_of_boundaryless`\n`+ extChartAt_mem_closure_interior`\n`+ extChartAt_model_space_eq_id`\n`+ extChartAt_preimage_inter_eq`\n`+ extChartAt_preimage_mem_nhds`\n`+ extChartAt_preimage_mem_nhds'`\n`+ extChartAt_preimage_mem_nhdsWithin`\n`+ extChartAt_preimage_mem_nhdsWithin'`\n`+ extChartAt_prod`\n`+ extChartAt_self_apply`\n`+ extChartAt_self_eq`\n`+ extChartAt_source`\n`+ extChartAt_source_mem_nhds`\n`+ extChartAt_source_mem_nhds'`\n`+ extChartAt_source_mem_nhdsWithin`\n`+ extChartAt_source_mem_nhdsWithin'`\n`+ extChartAt_target`\n`+ extChartAt_target_eventuallyEq`\n`+ extChartAt_target_eventuallyEq'`\n`+ extChartAt_target_eventuallyEq_of_mem`\n`+ extChartAt_target_mem_nhds`\n`+ extChartAt_target_mem_nhds'`\n`+ extChartAt_target_mem_nhdsWithin`\n`+ extChartAt_target_mem_nhdsWithin'`\n`+ extChartAt_target_mem_nhdsWithin_of_mem`\n`+ extChartAt_target_subset_closure_interior`\n`+ extChartAt_target_subset_range`\n`+ extChartAt_target_union_comp_range_mem_nhds_of_mem`\n`+ extChartAt_to_inv`\n`+ ext_chart_model_space_apply`\n`+ ext_coord_change_source`\n`+ extend`\n`+ extendScalars_adjoin`\n`+ extend_coe`\n`+ extend_coe_symm`\n`+ extend_coord_change_source`\n`+ extend_coord_change_source_mem_nhdsWithin`\n`+ extend_coord_change_source_mem_nhdsWithin'`\n`+ extend_image_nhd_mem_nhds_of_boundaryless`\n`+ extend_image_source_inter`\n`+ extend_left_inv`\n`+ extend_left_inv'`\n`+ extend_one`\n`+ extend_preimage_inter_eq`\n`+ extend_preimage_mem_nhds`\n`+ extend_preimage_mem_nhdsWithin`\n`+ extend_source`\n`+ extend_source_mem_nhds`\n`+ extend_source_mem_nhdsWithin`\n`+ extend_symm_continuousWithinAt_comp_right_iff`\n`+ extend_symm_preimage_inter_range_eventuallyEq`\n`+ extend_symm_preimage_inter_range_eventuallyEq_aux`\n`+ extend_target`\n`+ extend_target'`\n`+ extend_target_eventuallyEq`\n`+ extend_target_mem_nhdsWithin`\n`+ extend_target_subset_range`\n`+ fG_of_fG_toSubalgebra`\n`+ fac_pull`\n`+ fg_adjoin_finset`\n`+ fg_adjoin_of_finite`\n`+ fg_bot`\n`+ fg_def`\n`+ fg_iSup`\n`+ fg_of_fg_toSubalgebra`\n`+ fg_of_noetherian`\n`+ fg_sup`\n`+ fieldOfSubtypeIsMaximal`\n`+ fieldRange_comp_val`\n`+ findKey`\n`+ finiteDimensional_adjoin`\n`+ finiteDimensional_iSup_of_finite`\n`+ finiteDimensional_iSup_of_finset`\n`+ finiteDimensional_iSup_of_finset'`\n`+ finiteDimensional_sup`\n`+ finiteSubspace`\n`+ finite_const_le_of_tsum_ne_top`\n`+ finite_dist_eq`\n`+ finite_div`\n`+ finite_edist_eq`\n`+ finite_inv`\n`+ finite_mul`\n`+ finite_norm_eq`\n`+ finite_of_finite_type_of_isJacobsonRing`\n`+ finite_one`\n`+ finite_rat_abs_sub_lt_one_div_den_sq`\n`+ finite_setOf_isMin`\n`+ finite_smul_set`\n`+ finrank_adjoin_eq_one_iff`\n`+ finrank_adjoin_simple_eq_one_iff`\n`+ finrank_bot`\n`+ finrank_bot'`\n`+ finrank_eq_one_iff`\n`+ finrank_sup_le`\n`+ finrank_top`\n`+ finrank_top'`\n`+ finset_card_const_le_le_of_tsum_le`\n`+ finset_prod_mem_finset_prod`\n`+ finset_prod_singleton`\n`+ finset_prod_subset_finset_prod`\n`+ finsupp`\n`+ fintypeDiv`\n`+ fintypeMul`\n`+ fintypeOfAlgHomAdjoinIntegral`\n`+ fixIndType`\n`+ flip_apply`\n`+ flip_apply_apply`\n`+ forall_associated`\n`+ forall_ge_iff`\n`+ forall_le_iff`\n`+ forget_additive`\n`+ forget_linear`\n`+ forget_preservesZeroMorphisms`\n`+ forget_δ`\n`+ forget_ε`\n`+ forget_η`\n`+ forget_μ`\n`+ forget₂_additive`\n`+ forget₂_linear`\n`+ forget₂_preservesZeroMorphisms`\n`+ fst`\n`+ fst_apply`\n`+ fst_apply'`\n`+ fst_bot`\n`+ fst_comp`\n`+ fst_compProd`\n`+ fst_eq`\n`+ fst_map_id_prod`\n`+ fst_map_prod`\n`+ fst_prodMkLeft`\n`+ fst_prodMkRight`\n`+ fst_swapRight`\n`+ fst_top`\n`+ fst_zero`\n`+ funLike`\n`+ functorCategoryEquivalence`\n`+ functorCategoryEquivalence.functor_def`\n`+ functorCategoryEquivalence.inverse_def`\n`+ functorCategoryEquivalenceCompEvaluation`\n`+ functorCategoryEquivalence_additive`\n`+ functorCategoryEquivalence_linear`\n`+ functorCategoryEquivalence_preservesZeroMorphisms`\n`+ functorPullback_pushforward_covering`\n`+ functorPushforward_mem_iff`\n`+ gMul`\n`+ gMul_def`\n`+ gMul_eq_coe_linearMap`\n`+ gOne`\n`+ gOne_def`\n`+ galgebra`\n`+ galgebra_toFun_def`\n`+ galoisConnection_mul_div`\n`+ gc_Ici_sInf`\n`+ gc_sSup_Iic`\n`+ gc_set`\n`+ gcd`\n`+ gci_Ici_sInf`\n`+ ge_trans`\n`+ get?_zero_mul_tail_prod`\n`+ getIgnores`\n`+ getMatchWithScore`\n`+ gi`\n`+ gi_sSup_Iic`\n`+ gmonoid`\n`+ gradedMonoid_eq_of_cast`\n`+ gradedMonoid_eq_of_reindex_cast`\n`+ group`\n`+ groupoid_of_isCodetecting_empty`\n`+ groupoid_of_isDetecting_empty`\n`+ gsemiring`\n`+ gt_irrefl`\n`+ gt_of_ge_of_gt`\n`+ gt_of_gt_of_ge`\n`+ gt_trans`\n`+ hasBasis_nhds_of_ne_top`\n`+ hasBasis_nhds_of_ne_top'`\n`+ hasCodetector_op_iff`\n`+ hasColimitsOfShape`\n`+ hasCompactMulSupport_def`\n`+ hasCoseparator_op_iff`\n`+ hasDetector_op_iff`\n`+ hasFiniteIntegral_compProd_iff`\n`+ hasFiniteIntegral_compProd_iff'`\n`+ hasFiniteIntegral_prod_mk_left`\n`+ hasForgetToV`\n`+ hasInitial_of_isCoseparating`\n`+ hasLimitsOfShape`\n`+ hasSeparator_op_iff`\n`+ hasSum`\n`+ hasSum_iff_tendsto_nat_of_nonneg`\n`+ hasSum_nat_add_iff`\n`+ hasSum_real_toNNReal_of_nonneg`\n`+ hasSum_strict_mono`\n`+ hasSum_toReal`\n`+ hasTerminal_of_isSeparating`\n`+ has_injective_coseparator`\n`+ has_projective_separator`\n`+ headI_add_tail_sum`\n`+ headI_le_sum`\n`+ headI_mul_tail_prod_of_ne_nil`\n`+ homOver`\n`+ hom_ext'`\n`+ hom_inv_hom`\n`+ iIndepFun.cgf_sum`\n`+ iIndepFun.integrable_exp_mul_sum`\n`+ iIndepFun.mgf_sum`\n`+ iInf_mul_left`\n`+ iInf_mul_left'`\n`+ iInf_mul_right`\n`+ iInf_mul_right'`\n`+ iInf_real_pos_eq_iInf_nnreal_pos`\n`+ iInf_toSubalgebra`\n`+ iInf_toSubfield`\n`+ iSup_add_le_add_iSup`\n`+ iSup_basicOpen_eq_top_iff`\n`+ iSup_basicOpen_eq_top_iff'`\n`+ iSup_eq_adjoin`\n`+ iSup_toSubfield`\n`+ iUnion_pNat_ptsOfPeriod`\n`+ id_F`\n`+ id_f`\n`+ id_hom`\n`+ idempotent`\n`+ identity`\n`+ iff_eq_one`\n`+ iff_eq_zero_or_one`\n`+ iff_exact_iff_lTensor_exact`\n`+ iff_exact_iff_rTensor_exact`\n`+ iff_flat_and_ideal_smul_eq_top`\n`+ iff_flat_and_lTensor_faithful`\n`+ iff_flat_and_lTensor_reflects_triviality`\n`+ iff_flat_and_proper_ideal`\n`+ iff_flat_and_rTensor_faithful`\n`+ iff_flat_and_rTensor_reflects_triviality`\n`+ iff_zero_iff_lTensor_zero`\n`+ iff_zero_iff_rTensor_zero`\n`+ imageOfDf`\n`+ imageOfDf_eq_comap_C_compl_zeroLocus`\n`+ imageSieve_mem`\n`+ image_add_const_Iic`\n`+ image_add_const_Iio`\n`+ image_add_const_uIcc`\n`+ image_affine_Icc'`\n`+ image_affine_Ico`\n`+ image_affine_Ioc`\n`+ image_affine_Ioo`\n`+ image_comap_zeroLocus_eq_zeroLocus_comap`\n`+ image_const_add_Iic`\n`+ image_const_add_Iio`\n`+ image_const_add_uIcc`\n`+ image_const_mul_Ioi_zero`\n`+ image_const_mul_uIcc`\n`+ image_const_sub_Icc`\n`+ image_const_sub_Ici`\n`+ image_const_sub_Ico`\n`+ image_const_sub_Iic`\n`+ image_const_sub_Iio`\n`+ image_const_sub_Ioc`\n`+ image_const_sub_Ioi`\n`+ image_const_sub_Ioo`\n`+ image_const_sub_uIcc`\n`+ image_div_const_uIcc`\n`+ image_eq`\n`+ image_eq_one_of_nmem_mulTSupport`\n`+ image_finset_prod`\n`+ image_finset_prod_pi`\n`+ image_fintype_prod_pi`\n`+ image_list_prod`\n`+ image_mem_nhdsWithin`\n`+ image_mul_const_uIcc`\n`+ image_mul_left_Icc`\n`+ image_mul_left_Icc'`\n`+ image_mul_left_Ico`\n`+ image_mul_left_Ioc`\n`+ image_mul_left_Ioo`\n`+ image_mul_right_Icc`\n`+ image_mul_right_Icc'`\n`+ image_mul_right_Ico`\n`+ image_mul_right_Ioc`\n`+ image_mul_right_Ioo`\n`+ image_multiset_prod`\n`+ image_neg_Icc`\n`+ image_neg_Ici`\n`+ image_neg_Ico`\n`+ image_neg_Iic`\n`+ image_neg_Iio`\n`+ image_neg_Ioc`\n`+ image_neg_Ioi`\n`+ image_neg_Ioo`\n`+ image_neg_uIcc`\n`+ image_specComap_zeroLocus_eq_zeroLocus_comap`\n`+ image_sub_const_Icc`\n`+ image_sub_const_Ici`\n`+ image_sub_const_Ico`\n`+ image_sub_const_Iic`\n`+ image_sub_const_Iio`\n`+ image_sub_const_Ioc`\n`+ image_sub_const_Ioi`\n`+ image_sub_const_Ioo`\n`+ image_sub_const_uIcc`\n`+ increasing`\n`+ indicator_summable`\n`+ inducedTopology`\n`+ inducedTopologyOfIsCoverDense`\n`+ inducedTopology_coverPreserving`\n`+ inducedTopology_isCocontinuous`\n`+ induction`\n`+ induction_on_adjoin`\n`+ induction_on_adjoin_fg`\n`+ induction_on_adjoin_finset`\n`+ inf_bot_eq`\n`+ inf_eq_of_isDetecting`\n`+ inf_eq_top_iff`\n`+ inf_toSubalgebra`\n`+ inf_toSubfield`\n`+ inf_top_eq`\n`+ infinite_div`\n`+ infinite_inv`\n`+ infinite_mul`\n`+ infinite_rat_abs_sub_lt_one_div_den_sq_of_irrational`\n`+ infinite_smul_set`\n`+ inhabited'`\n`+ injective_stoneCechUnit_of_t35Space`\n`+ insert`\n`+ insertDTExpr`\n`+ insertEqn`\n`+ insertInRefinedDiscrTree`\n`+ instAddCancelCommMonoid`\n`+ instAddCommGroup`\n`+ instAddGroup`\n`+ instCancelCommMonoidWithZero`\n`+ instCommMonoidWithZero`\n`+ instDecompositionMonoid`\n`+ instDenselyOrdered`\n`+ instFunLike`\n`+ instIsOrderBornology`\n`+ instMonoidalCategory`\n`+ instMul`\n`+ instMulAction`\n`+ instOrderedCommMonoid`\n`+ instPartialOrder`\n`+ instPreorder`\n`+ instProperSpace`\n`+ instance (G : Type*) (X : Type*) [Monoid G] [MulAction G X] [Fintype X] :`\n`+ instance (M : Action V G) : Inhabited (Action.Hom M M)`\n`+ instance (R) [CommRing R] [IsArtinianRing R] (I : Ideal R) : IsArtinianRing (R ⧸ I)`\n`+ instance (S : SSet) [KanComplex S] : Quasicategory S`\n`+ instance (X : Action V G) : MulAction G ((CategoryTheory.forget₂ _ TopCat).obj X)`\n`+ instance (X : DiscreteContAction V G) :`\n`+ instance (Y : Sheaf J A) : IsIso ((G.sheafAdjunctionCocontinuous A J K).counit.app Y) := by`\n`+ instance (a b : Key) : Decidable (a < b) := inferInstanceAs (Decidable (Key.lt a b))`\n`+ instance (priority := 100) CanonicallyLinearOrderedSemifield.toCanonicallyLinearOrderedAddCommMonoid`\n`+ instance (priority := 100) CanonicallyLinearOrderedSemifield.toLinearOrderedCommGroupWithZero`\n`+ instance (priority := 100) IsAsymm.toIsAntisymm {α : Sort*} (r : α → α → Prop) [IsAsymm α r] :`\n`+ instance (priority := 100) [IsArtinianRing R] : IsJacobsonRing R`\n`+ instance (priority := 100) isArtinian_of_finite [Finite M] : IsArtinian R M`\n`+ instance (priority := 100) isFiniteKernel_of_isFiniteKernel_fst {κ : Kernel α (β × γ)}`\n`+ instance (priority := 100) isFiniteKernel_of_isFiniteKernel_snd {κ : Kernel α (β × γ)}`\n`+ instance (priority := 100) isIso_of_hom_isIso {M N : Action V G} (f : M ⟶ N) [IsIso f.hom] :`\n`+ instance (priority := 100) isJacobsonRing_quotient [IsJacobsonRing R] : IsJacobsonRing (R ⧸ I)`\n`+ instance (priority := 100) jacobson.isMaximal [H : IsMaximal I] : IsMaximal (jacobson I)`\n`+ instance (priority := 100) {α : Sort*} {r : α → α → Prop} [Trans r r r] : IsTrans α r`\n`+ instance (priority := 200) One.ofOfNat1 {α} [OfNat α (nat_lit 1)] : One α`\n`+ instance (priority := 300) One.toOfNat1 {α} [One α] : OfNat α (nat_lit 1)`\n`+ instance (priority := 90) isAsymm_of_isTrans_of_isIrrefl [IsTrans α r] [IsIrrefl α r] :`\n`+ instance (priority := 900) (a b : α) : Decidable (a < b) := LinearOrder.decidableLT a b`\n`+ instance (priority := 900) (a b : α) : Decidable (a = b) := LinearOrder.decidableEq a b`\n`+ instance (priority := 900) (a b : α) : Decidable (a ≤ b) := LinearOrder.decidableLE a b`\n`+ instance (priority := 900) : @Trans α α α GE.ge GE.ge GE.ge := ⟨ge_trans⟩`\n`+ instance (priority := 900) : @Trans α α α GE.ge GT.gt GT.gt := ⟨gt_of_ge_of_gt⟩`\n`+ instance (priority := 900) : @Trans α α α GT.gt GE.ge GT.gt := ⟨gt_of_gt_of_ge⟩`\n`+ instance (priority := 900) : @Trans α α α GT.gt GT.gt GT.gt := ⟨gt_trans⟩`\n`+ instance (priority := 900) : @Trans α α α LE.le LE.le LE.le := ⟨le_trans⟩`\n`+ instance (priority := 900) : @Trans α α α LE.le LT.lt LT.lt := ⟨lt_of_le_of_lt⟩`\n`+ instance (priority := 900) : @Trans α α α LT.lt LE.le LT.lt := ⟨lt_of_lt_of_le⟩`\n`+ instance (priority := 900) : @Trans α α α LT.lt LT.lt LT.lt := ⟨lt_trans⟩`\n`+ instance (priority := 900) : G.IsCocontinuous J K`\n`+ instance (priority := 900) : G.IsContinuous J K`\n`+ instance (priority := 900) [G.IsCoverDense K] : G.IsDenseSubsite (G.inducedTopology K) K`\n`+ instance (priority := 900) locallyCoverDense_of_isCoverDense [G.IsCoverDense K] :`\n`+ instance : (Action.forget V G).Braided`\n`+ instance : (Action.forget V G).Monoidal`\n`+ instance : (FunctorCategoryEquivalence.functor (V := V) (G := G)).IsEquivalence`\n`+ instance : (FunctorCategoryEquivalence.functor (V := V) (G := G)).Monoidal`\n`+ instance : (FunctorCategoryEquivalence.inverse (V := V) (G := G)).IsEquivalence`\n`+ instance : (FunctorCategoryEquivalence.inverse (V := V) (G := G)).Monoidal`\n`+ instance : (G.sheafPushforwardContinuous A J K).IsEquivalence`\n`+ instance : (forget V G).Faithful where map_injective w := Hom.ext w`\n`+ instance : (functorCategoryEquivalence V G).functor.Monoidal := by`\n`+ instance : (functorCategoryEquivalence V G).inverse.Monoidal := by`\n`+ instance : AB5 (AddCommGrp.{u})`\n`+ instance : AddCommGroup (DirectLimit G f)`\n`+ instance : AddCommGroup (TangentSpace I x) := inferInstanceAs (AddCommGroup E)`\n`+ instance : Batteries.LawfulCmp (compare (α := α))`\n`+ instance : BraidedCategory (Action V G)`\n`+ instance : CanonicallyOrderedCommMonoid (Associates M)`\n`+ instance : Category (Action V G)`\n`+ instance : Category (ContAction V G)`\n`+ instance : Category (CosimplicialObject C) := by`\n`+ instance : Category (DiscreteContAction V G)`\n`+ instance : Category (SimplicialObject C) := by`\n`+ instance : Category (Split C)`\n`+ instance : ClosedUnderRestriction (contDiffGroupoid n I)`\n`+ instance : Coe (ContAction V G) (Action V G)`\n`+ instance : CoeFun (ENorm 𝕜 V) fun _ => V → ℝ≥0∞`\n`+ instance : CoeFun (ModelWithCorners 𝕜 E H) fun _ => H → E := ⟨toFun'⟩`\n`+ instance : CompleteLattice (IntermediateField F E)`\n`+ instance : CompleteSpace ℝ≥0`\n`+ instance : ConcreteCategory (ContAction V G)`\n`+ instance : ConcreteCategory (DiscreteContAction V G)`\n`+ instance : ContinuousAdd ℝ≥0∞ := by`\n`+ instance : ContinuousInv ℝ≥0∞ := ⟨OrderIso.invENNReal.continuous⟩`\n`+ instance : ContinuousNeg EReal := ⟨negOrderIso.continuous⟩`\n`+ instance : ContinuousStar ℝ := ⟨continuous_id⟩`\n`+ instance : ContinuousStar ℝ≥0`\n`+ instance : ContinuousSub ℝ≥0`\n`+ instance : DecidablePred (Even : ℤ → Prop) := fun _ ↦ decidable_of_iff _ even_iff.symm`\n`+ instance : DecidablePred (IsSquare : ℤ → Prop)`\n`+ instance : Epi A.e`\n`+ instance : Fintype (IndexSet Δ)`\n`+ instance : FunLike (Nucleus X) X X`\n`+ instance : HasCompl { p : R // IsIdempotentElem p }`\n`+ instance : HasContinuousInv₀ ℝ≥0 := inferInstance`\n`+ instance : HasFilteredColimits (AddCommGrp.{u})`\n`+ instance : HasForget₂ (Action V G) TopCat`\n`+ instance : HasForget₂ (ContAction V G) (Action V G)`\n`+ instance : HasForget₂ (ContAction V G) TopCat`\n`+ instance : HasForget₂ (ContAction V G) V`\n`+ instance : HasForget₂ (DiscreteContAction V G) (ContAction V G)`\n`+ instance : HasForget₂ (DiscreteContAction V G) TopCat`\n`+ instance : HasZeroMorphisms (Action V G)`\n`+ instance : Hashable Key := ⟨Key.hash⟩`\n`+ instance : Inhabited (AbsoluteValue S S)`\n`+ instance : Inhabited (Action AddCommGrp G)`\n`+ instance : Inhabited (ENorm 𝕜 V)`\n`+ instance : Inhabited (IndexSet Δ)`\n`+ instance : Inhabited (IntermediateField F E)`\n`+ instance : Inhabited (RefinedDiscrTree α) := ⟨{}⟩`\n`+ instance : Inhabited (TangentSpace I x) := ⟨0⟩`\n`+ instance : Inhabited (Trie α) := ⟨.node #[]⟩`\n`+ instance : IsArtinianRing (Localization S)`\n`+ instance : IsCompactlyGenerated (IntermediateField F E)`\n`+ instance : LE (Nucleus X)`\n`+ instance : LT Key := ⟨fun a b => Key.lt a b⟩`\n`+ instance : Linear R (Action V G)`\n`+ instance : MetrizableSpace ENNReal`\n`+ instance : Module 𝕜 (TangentSpace I x) := inferInstanceAs (Module 𝕜 E)`\n`+ instance : Module.Finite F (⊥ : IntermediateField F E) := Subalgebra.finite_bot`\n`+ instance : MonadCache Expr DTExpr M`\n`+ instance : MonoidalLinear R (Action V G)`\n`+ instance : MonoidalPreadditive (Action V G)`\n`+ instance : NoZeroDivisors (Associates M) := by infer_instance`\n`+ instance : NoetherianSpace (PrimeSpectrum R)`\n`+ instance : NoncompactSpace ℝ := Int.isClosedEmbedding_coe_real.noncompactSpace`\n`+ instance : NucleusClass (Nucleus X) X`\n`+ instance : One { p : M₁ // IsIdempotentElem p } where one := ⟨1, one⟩`\n`+ instance : OrderBot (Nucleus X)`\n`+ instance : OrderTop (ENorm 𝕜 V)`\n`+ instance : OrderTop (Nucleus X)`\n`+ instance : OrderTopology EReal := ⟨rfl⟩`\n`+ instance : OrderTopology ℝ≥0`\n`+ instance : OrderTopology ℝ≥0∞ := ⟨rfl⟩`\n`+ instance : PartialOrder (PrimeSpectrum R)`\n`+ instance : PathConnectedSpace (TangentSpace I x) := inferInstanceAs (PathConnectedSpace E)`\n`+ instance : Preadditive (Action V G)`\n`+ instance : Preorder (Nucleus X)`\n`+ instance : ProperSpace ℝ`\n`+ instance : ReflectsColimits (Action.forget V G)`\n`+ instance : ReflectsLimits (Action.forget V G)`\n`+ instance : SFinite (μ ⊗ₘ κ) := by rw [compProd]; infer_instance`\n`+ instance : SecondCountableTopology EReal`\n`+ instance : SecondCountableTopology ℝ := secondCountable_of_proper`\n`+ instance : SecondCountableTopology ℝ≥0`\n`+ instance : SecondCountableTopology ℝ≥0∞`\n`+ instance : SemilatticeSup (ENorm 𝕜 V)`\n`+ instance : SmoothManifoldWithCorners I s`\n`+ instance : T0Space (PrimeSpectrum R)`\n`+ instance : T1Space <| MaximalSpectrum R`\n`+ instance : T2Space EReal := inferInstance`\n`+ instance : T2Space ℝ≥0∞ := inferInstance`\n`+ instance : T4Space ℝ≥0∞ := inferInstance`\n`+ instance : T5Space EReal := inferInstance`\n`+ instance : T5Space ℝ≥0∞ := inferInstance`\n`+ instance : ToFormat DTExpr := ⟨DTExpr.format⟩`\n`+ instance : ToFormat Key := ⟨Key.format⟩`\n`+ instance : Top (ENorm 𝕜 V)`\n`+ instance : TopologicalAddGroup (TangentSpace I x) := inferInstanceAs (TopologicalAddGroup E)`\n`+ instance : TopologicalAddGroup ℝ := by infer_instance`\n`+ instance : TopologicalDivisionRing ℝ := inferInstance`\n`+ instance : TopologicalRing ℝ := inferInstance`\n`+ instance : TopologicalSemiring ℝ≥0`\n`+ instance : TopologicalSpace (TangentSpace I x) := inferInstanceAs (TopologicalSpace E)`\n`+ instance : TopologicalSpace EReal := Preorder.topology EReal`\n`+ instance : TopologicalSpace ℝ≥0 := inferInstance`\n`+ instance : TopologicalSpace ℝ≥0∞ := Preorder.topology ℝ≥0∞`\n`+ instance : UniformAddGroup ℝ`\n`+ instance : Unique (IntermediateField F F)`\n`+ instance : Zero { p : M₀ // IsIdempotentElem p } where zero := ⟨0, zero⟩`\n`+ instance [Abelian V] : Abelian (Action V G)`\n`+ instance [AddGroupWithOne α] [Small α] : AddGroupWithOne (Shrink α)`\n`+ instance [AddMonoidWithOne α] [Small α] : AddMonoidWithOne (Shrink α)`\n`+ instance [Bot α] : Bot (ULift.{v} α) where bot := up ⊥`\n`+ instance [CancelMonoidWithZero M] [DecidableRel ((· ∣ ·) : M → M → Prop)] :`\n`+ instance [CommGroup α] [Small α] : CommGroup (Shrink α)`\n`+ instance [CommMonoid α] [Small α] : CommMonoid (Shrink α)`\n`+ instance [CommRing α] [Small α] : CommRing (Shrink α)`\n`+ instance [CommSemigroup α] [Small α] : CommSemigroup (Shrink α)`\n`+ instance [CommSemiring α] [Semiring β] [Algebra α β] [Small β] : Algebra α (Shrink β)`\n`+ instance [CommSemiring α] [Small α] : CommSemiring (Shrink α)`\n`+ instance [ConcreteCategory V] : ConcreteCategory (Action V G)`\n`+ instance [DecidableEq α] {f : α → α} {n : ℕ} {x : α} : Decidable (IsPeriodicPt f n x)`\n`+ instance [DecidableRel ((· ∣ ·) : M → M → Prop)] :`\n`+ instance [Div α] [Small α] : Div (Shrink α) := (equivShrink _).symm.div`\n`+ instance [DivisionRing α] [Small α] : DivisionRing (Shrink α)`\n`+ instance [F.LaxMonoidal] : (F.mapAction G).LaxMonoidal`\n`+ instance [F.Monoidal] : (F.mapAction G).Monoidal`\n`+ instance [F.OplaxMonoidal] : (F.mapAction G).OplaxMonoidal`\n`+ instance [Field α] [Small α] : Field (Shrink α)`\n`+ instance [Group α] [Small α] : Group (Shrink α)`\n`+ instance [HasColimits C] : HasColimits (CosimplicialObject C)`\n`+ instance [HasColimits C] : HasColimits (SimplicialObject C)`\n`+ instance [HasColimits V] : HasColimits (Action V G)`\n`+ instance [HasFiniteColimits V] : HasFiniteColimits (Action V G)`\n`+ instance [HasFiniteColimits V] : PreservesFiniteColimits (Action.forget V G) := by`\n`+ instance [HasFiniteCoproducts V] : HasFiniteCoproducts (Action V G)`\n`+ instance [HasFiniteLimits V] : HasFiniteLimits (Action V G)`\n`+ instance [HasFiniteLimits V] : PreservesFiniteLimits (Action.forget V G) := by`\n`+ instance [HasFiniteProducts V] : HasFiniteProducts (Action V G)`\n`+ instance [HasLimits C] : HasLimits (CosimplicialObject C)`\n`+ instance [HasLimits C] : HasLimits (SimplicialObject C)`\n`+ instance [HasLimits V] : HasLimits (Action V G)`\n`+ instance [Inv α] [Small α] : Inv (Shrink α) := (equivShrink _).symm.Inv`\n`+ instance [IsDomain R] : OrderBot (PrimeSpectrum R)`\n`+ instance [IsEmpty ι] : Unique (DirectLimit G f) := Module.DirectLimit.unique _ _`\n`+ instance [IsFiniteMeasure μ] [IsFiniteKernel κ] : IsFiniteMeasure (μ ⊗ₘ κ) := by`\n`+ instance [IsJacobsonRing R] : IsJacobsonRing R[X]`\n`+ instance [IsJacobsonRing R] : JacobsonSpace (PrimeSpectrum R) := by`\n`+ instance [IsProbabilityMeasure μ] [IsMarkovKernel κ] : IsProbabilityMeasure (μ ⊗ₘ κ) := by`\n`+ instance [IsReduced R] : DecompositionMonoid (Polynomial R)`\n`+ instance [IsReduced R] : DecompositionMonoid R := MulEquiv.decompositionMonoid (equivPi R)`\n`+ instance [LE α] [BoundedOrder α] : BoundedOrder (ULift.{v} α)`\n`+ instance [LE α] [OrderBot α] : OrderBot (ULift.{v} α)`\n`+ instance [LE α] [OrderTop α] : OrderTop (ULift.{v} α)`\n`+ instance [LeftRigidCategory V] : LeftRigidCategory (Action V H)`\n`+ instance [LeftRigidCategory V] : LeftRigidCategory (SingleObj (H : MonCat.{u}) ⥤ V) := by`\n`+ instance [Monoid M] : Bot (Associates M)`\n`+ instance [Monoid M] : Inhabited (Associates M)`\n`+ instance [Monoid M] : IsRefl M Associated`\n`+ instance [Monoid M] : IsSymm M Associated`\n`+ instance [Monoid M] : IsTrans M Associated`\n`+ instance [Monoid M] : One (Associates M)`\n`+ instance [Monoid M] [Subsingleton M] :`\n`+ instance [Monoid α] [Small α] : Monoid (Shrink α)`\n`+ instance [Mul α] [Small α] : Mul (Shrink α) := (equivShrink _).symm.mul`\n`+ instance [MulOneClass α] [Small α] : MulOneClass (Shrink α)`\n`+ instance [MulZeroClass α] [Small α] : MulZeroClass (Shrink α)`\n`+ instance [MulZeroOneClass α] [Small α] : MulZeroOneClass (Shrink α)`\n`+ instance [NonAssocSemiring α] [Small α] : NonAssocSemiring (Shrink α)`\n`+ instance [NonUnitalCommRing α] [Small α] : NonUnitalCommRing (Shrink α)`\n`+ instance [NonUnitalCommSemiring α] [Small α] : NonUnitalCommSemiring (Shrink α)`\n`+ instance [NonUnitalNonAssocRing α] [Small α] : NonUnitalNonAssocRing (Shrink α)`\n`+ instance [NonUnitalNonAssocSemiring α] [Small α] : NonUnitalNonAssocSemiring (Shrink α)`\n`+ instance [NonUnitalRing α] [Small α] : NonUnitalRing (Shrink α)`\n`+ instance [NonUnitalSemiring α] [Small α] : NonUnitalSemiring (Shrink α)`\n`+ instance [Nontrivial M] : Nontrivial (Associates M)`\n`+ instance [Nontrivial M] [Module.Free R M] : FaithfullyFlat R M`\n`+ instance [Nontrivial R] : Nonempty <| MaximalSpectrum R`\n`+ instance [Nontrivial R] : Nonempty <| PrimeSpectrum R`\n`+ instance [Nontrivial R] [IsDomain S] : MulRingNormClass (AbsoluteValue R S) R S`\n`+ instance [Nontrivial α] [Small α] : Nontrivial (Shrink α)`\n`+ instance [One α] [Small α] : One (Shrink α) := (equivShrink _).symm.one`\n`+ instance [Preadditive C] [∀ (n : ℤ), (shiftFunctor C n).Additive] (n : ℤ) :`\n`+ instance [RightRigidCategory V] : RightRigidCategory (Action V H)`\n`+ instance [RightRigidCategory V] : RightRigidCategory (SingleObj (H : MonCat.{u}) ⥤ V) := by`\n`+ instance [RigidCategory V] : RigidCategory (Action V H)`\n`+ instance [RigidCategory V] : RigidCategory (SingleObj (H : MonCat.{u}) ⥤ V) := by`\n`+ instance [Ring α] [Small α] : Ring (Shrink α)`\n`+ instance [Semigroup α] [Small α] : Semigroup (Shrink α)`\n`+ instance [SemigroupWithZero α] [Small α] : SemigroupWithZero (Shrink α)`\n`+ instance [Semiring α] [AddCommMonoid β] [Module α β] [Small β] : Module α (Shrink β)`\n`+ instance [Semiring α] [Small α] : Semiring (Shrink α)`\n`+ instance [Small.{v} α] (N : Type*) [Pow α N] : Pow (Shrink.{v} α) N`\n`+ instance [Small.{v} α] (R : Type*) [SMul R α] : SMul R (Shrink.{v} α)`\n`+ instance [Small.{v} α] [AddCommMonoid α] [DistribMulAction R α] :`\n`+ instance [Small.{v} α] [AddCommMonoid α] [Module R α] : Module R (Shrink.{v} α)`\n`+ instance [Small.{v} α] [AddGroupWithOne α] : AddGroupWithOne (Shrink.{v} α)`\n`+ instance [Small.{v} α] [AddMonoidWithOne α] : AddMonoidWithOne (Shrink.{v} α)`\n`+ instance [Small.{v} α] [CommGroup α] : CommGroup (Shrink.{v} α)`\n`+ instance [Small.{v} α] [CommMonoid α] : CommMonoid (Shrink.{v} α)`\n`+ instance [Small.{v} α] [CommRing α] : CommRing (Shrink.{v} α)`\n`+ instance [Small.{v} α] [CommSemigroup α] : CommSemigroup (Shrink.{v} α)`\n`+ instance [Small.{v} α] [CommSemiring α] : CommSemiring (Shrink.{v} α)`\n`+ instance [Small.{v} α] [Div α] : Div (Shrink.{v} α)`\n`+ instance [Small.{v} α] [DivisionRing α] : DivisionRing (Shrink.{v} α)`\n`+ instance [Small.{v} α] [Field α] : Field (Shrink.{v} α)`\n`+ instance [Small.{v} α] [Group α] : Group (Shrink.{v} α)`\n`+ instance [Small.{v} α] [Inv α] : Inv (Shrink.{v} α)`\n`+ instance [Small.{v} α] [Monoid α] : Monoid (Shrink.{v} α)`\n`+ instance [Small.{v} α] [Mul α] : Mul (Shrink.{v} α)`\n`+ instance [Small.{v} α] [MulAction R α] : MulAction R (Shrink.{v} α)`\n`+ instance [Small.{v} α] [MulOneClass α] : MulOneClass (Shrink.{v} α)`\n`+ instance [Small.{v} α] [MulZeroClass α] : MulZeroClass (Shrink.{v} α)`\n`+ instance [Small.{v} α] [MulZeroOneClass α] : MulZeroOneClass (Shrink.{v} α)`\n`+ instance [Small.{v} α] [NonAssocRing α] : NonAssocRing (Shrink.{v} α)`\n`+ instance [Small.{v} α] [NonAssocSemiring α] : NonAssocSemiring (Shrink.{v} α)`\n`+ instance [Small.{v} α] [NonUnitalCommRing α] : NonUnitalCommRing (Shrink.{v} α)`\n`+ instance [Small.{v} α] [NonUnitalCommSemiring α] :`\n`+ instance [Small.{v} α] [NonUnitalNonAssocRing α] :`\n`+ instance [Small.{v} α] [NonUnitalNonAssocSemiring α] :`\n`+ instance [Small.{v} α] [NonUnitalRing α] : NonUnitalRing (Shrink.{v} α)`\n`+ instance [Small.{v} α] [NonUnitalSemiring α] : NonUnitalSemiring (Shrink.{v} α)`\n`+ instance [Small.{v} α] [Nontrivial α] : Nontrivial (Shrink.{v} α)`\n`+ instance [Small.{v} α] [One α] : One (Shrink.{v} α)`\n`+ instance [Small.{v} α] [Ring α] : Ring (Shrink.{v} α)`\n`+ instance [Small.{v} α] [Ring α] [IsDomain α] : IsDomain (Shrink.{v} α)`\n`+ instance [Small.{v} α] [Semigroup α] : Semigroup (Shrink.{v} α)`\n`+ instance [Small.{v} α] [SemigroupWithZero α] : SemigroupWithZero (Shrink.{v} α)`\n`+ instance [Small.{v} α] [Semiring α] : Semiring (Shrink.{v} α)`\n`+ instance [Small.{v} α] [Semiring α] [Algebra R α] :`\n`+ instance [Subsingleton R] : IsEmpty (PrimeSpectrum R)`\n`+ instance [SymmetricCategory V] : SymmetricCategory (Action V G)`\n`+ instance [ToFormat α] : ToFormat (RefinedDiscrTree α) := ⟨format⟩`\n`+ instance [ToFormat α] : ToFormat (Trie α) := ⟨Trie.format⟩`\n`+ instance [Top α] : Top (ULift.{v} α) where top := up ⊤`\n`+ instance [TopologicalSpace X] {s : Set X} [T0Space s] [SecondCountableTopology s] :`\n`+ instance [TopologicalSpace X] {s : Set X} [h : HasCountableSeparatingOn X IsOpen s] :`\n`+ instance [TopologicalSpace α] [MulAction ℝ α] [ContinuousSMul ℝ α] :`\n`+ instance [Zero M] [Monoid M] : Top (Associates M)`\n`+ instance [Zero M] [Monoid M] : Zero (Associates M)`\n`+ instance [∀ i, Bot (α' i)] : Bot (∀ i, α' i)`\n`+ instance [∀ i, Top (α' i)] : Top (∀ i, α' i)`\n`+ instance _root_.AbsoluteValue.isAbsoluteValue (abv : AbsoluteValue R S) : IsAbsoluteValue abv`\n`+ instance _root_.Shrink.instNNRatCast [Small.{v} α] [NNRatCast α] :`\n`+ instance _root_.Shrink.instRatCast [Small.{v} α] [RatCast α] :`\n`+ instance {G : MonCat.{u}} (X : Action FintypeCat G) : MulAction G X.V := Action.instMulAction X`\n`+ instance {G : Type u} [Group G] (X : Action FintypeCat (MonCat.of G)) : MulAction G X.V`\n`+ instance {J : Type w₁} [Category.{w₂} J] [HasColimitsOfShape J V] :`\n`+ instance {J : Type w₁} [Category.{w₂} J] [HasLimitsOfShape J V] :`\n`+ instance {J C : Type*} [Category J] [Category C] [HasColimitsOfShape J C] [Preadditive C] :`\n`+ instance {M N : Action V G} (f : M ≅ N) : IsIso f.hom.hom`\n`+ instance {M N : Action V G} (f : M ≅ N) : IsIso f.inv.hom`\n`+ instance {R : Type*} [Field R] : Unique (PrimeSpectrum R)`\n`+ instance {X Y : Action V G} : Add (X ⟶ Y)`\n`+ instance {X Y : Action V G} : Neg (X ⟶ Y)`\n`+ instance {X Y : Action V G} : Zero (X ⟶ Y) := ⟨0, by aesop_cat⟩`\n`+ instance {n} [HasColimits C] : HasColimits (CosimplicialObject.Truncated C n)`\n`+ instance {n} [HasColimits C] : HasColimits (SimplicialObject.Truncated C n)`\n`+ instance {n} [HasLimits C] : HasLimits (CosimplicialObject.Truncated C n)`\n`+ instance {n} [HasLimits C] : HasLimits (SimplicialObject.Truncated C n)`\n`+ instance {α : Sort*} {r : α → α → Prop} [IsTrans α r] : Trans r r r`\n`+ integrable_kernel_prod_mk_left`\n`+ interior_extend_target_subset_interior_range`\n`+ intro`\n`+ intro'`\n`+ inv`\n`+ inv_Ioi`\n`+ inv_Ioo_0_left`\n`+ inv_def`\n`+ inv_eq_of_aeval_divX_ne_zero`\n`+ inv_eq_of_root_of_coeff_zero_ne_zero`\n`+ inv_hom_hom`\n`+ inv_liminf`\n`+ inv_limsup`\n`+ inv_map_iInf`\n`+ inv_map_iSup`\n`+ inv_mul_cancel`\n`+ irreducibleSpace`\n`+ irreducible_iff_prime_iff`\n`+ irreducible_mk`\n`+ irrefl`\n`+ irrefl_of`\n`+ isAlgebraic_adjoin`\n`+ isAlgebraic_adjoin_simple`\n`+ isAlgebraic_algHom_iff`\n`+ isAlgebraic_algebraMap`\n`+ isAlgebraic_algebraMap_iff`\n`+ isAlgebraic_bot_iff`\n`+ isAlgebraic_iSup`\n`+ isAlgebraic_iff_isAlgebraic_val`\n`+ isAlgebraic_iff_isIntegral`\n`+ isAlgebraic_iff_not_injective`\n`+ isAlgebraic_int`\n`+ isAlgebraic_nat`\n`+ isAlgebraic_of_isAlgebraic_bot`\n`+ isAlgebraic_of_mem_rootSet`\n`+ isAlgebraic_one`\n`+ isAlgebraic_rat`\n`+ isAlgebraic_ringHom_iff_of_comp_eq`\n`+ isAlgebraic_zero`\n`+ isArtinianRing_iff`\n`+ isArtinianRing_range`\n`+ isArtinian_finsupp`\n`+ isArtinian_iSup`\n`+ isArtinian_iff`\n`+ isArtinian_iff_submodule_quotient`\n`+ isArtinian_of_fg_of_artinian`\n`+ isArtinian_of_fg_of_artinian'`\n`+ isArtinian_of_injective`\n`+ isArtinian_of_le`\n`+ isArtinian_of_linearEquiv`\n`+ isArtinian_of_quotient_of_artinian`\n`+ isArtinian_of_range_eq_ker`\n`+ isArtinian_of_submodule_of_artinian`\n`+ isArtinian_of_surjective`\n`+ isArtinian_of_tower`\n`+ isArtinian_pi`\n`+ isArtinian_pi'`\n`+ isArtinian_prod`\n`+ isArtinian_range`\n`+ isArtinian_span_of_finite`\n`+ isArtinian_submodule'`\n`+ isArtinian_sup`\n`+ isBaseChange`\n`+ isBasis_basic_opens`\n`+ isBigOWith_abs_abs`\n`+ isBigOWith_abs_left`\n`+ isBigOWith_abs_right`\n`+ isBigOWith_bot`\n`+ isBigOWith_comm`\n`+ isBigOWith_const_const`\n`+ isBigOWith_const_mul_self`\n`+ isBigOWith_const_one`\n`+ isBigOWith_fst_prod`\n`+ isBigOWith_iff`\n`+ isBigOWith_iff_exists_eq_mul`\n`+ isBigOWith_insert`\n`+ isBigOWith_inv`\n`+ isBigOWith_map`\n`+ isBigOWith_neg_left`\n`+ isBigOWith_neg_right`\n`+ isBigOWith_norm_left`\n`+ isBigOWith_norm_norm`\n`+ isBigOWith_norm_right`\n`+ isBigOWith_of_eq_mul`\n`+ isBigOWith_of_le`\n`+ isBigOWith_of_le'`\n`+ isBigOWith_pi`\n`+ isBigOWith_prod_left`\n`+ isBigOWith_pure`\n`+ isBigOWith_refl`\n`+ isBigOWith_rev_principal`\n`+ isBigOWith_self_const_mul`\n`+ isBigOWith_self_const_mul'`\n`+ isBigOWith_snd_prod`\n`+ isBigOWith_top`\n`+ isBigOWith_zero`\n`+ isBigOWith_zero'`\n`+ isBigOWith_zero_right_iff`\n`+ isBigO_abs_abs`\n`+ isBigO_abs_left`\n`+ isBigO_abs_right`\n`+ isBigO_atTop_iff_eventually_exists`\n`+ isBigO_atTop_iff_eventually_exists_pos`\n`+ isBigO_bot`\n`+ isBigO_cofinite_iff`\n`+ isBigO_comm`\n`+ isBigO_const_const`\n`+ isBigO_const_const_iff`\n`+ isBigO_const_iff`\n`+ isBigO_const_left_iff_pos_le_norm`\n`+ isBigO_const_mul_left_iff`\n`+ isBigO_const_mul_left_iff'`\n`+ isBigO_const_mul_right_iff`\n`+ isBigO_const_mul_right_iff'`\n`+ isBigO_const_mul_self`\n`+ isBigO_const_of_ne`\n`+ isBigO_const_of_tendsto`\n`+ isBigO_const_one`\n`+ isBigO_const_smul_left`\n`+ isBigO_const_smul_right`\n`+ isBigO_fst_prod`\n`+ isBigO_fst_prod'`\n`+ isBigO_iff`\n`+ isBigO_iff'`\n`+ isBigO_iff''`\n`+ isBigO_iff_div_isBoundedUnder`\n`+ isBigO_iff_eventually`\n`+ isBigO_iff_eventually_isBigOWith`\n`+ isBigO_iff_exists_eq_mul`\n`+ isBigO_iff_isBigOWith`\n`+ isBigO_iff_isBoundedUnder_le_div`\n`+ isBigO_map`\n`+ isBigO_mul_iff_isBigO_div`\n`+ isBigO_nat_atTop_iff`\n`+ isBigO_neg_left`\n`+ isBigO_neg_right`\n`+ isBigO_norm_left`\n`+ isBigO_norm_norm`\n`+ isBigO_norm_right`\n`+ isBigO_of_div_tendsto_nhds`\n`+ isBigO_of_le`\n`+ isBigO_of_le'`\n`+ isBigO_of_subsingleton`\n`+ isBigO_one_iff`\n`+ isBigO_one_nat_atTop_iff`\n`+ isBigO_one_nhds_ne_iff`\n`+ isBigO_pi`\n`+ isBigO_prod_left`\n`+ isBigO_pure`\n`+ isBigO_refl`\n`+ isBigO_refl_left`\n`+ isBigO_rev_principal`\n`+ isBigO_self_const_mul`\n`+ isBigO_self_const_mul'`\n`+ isBigO_snd_prod`\n`+ isBigO_snd_prod'`\n`+ isBigO_sup`\n`+ isBigO_top`\n`+ isBigO_zero`\n`+ isBigO_zero_right_iff`\n`+ isBot_bot`\n`+ isBot_iff_eq_bot`\n`+ isClosedEmbedding`\n`+ isClosedEmbedding_coe_ennreal`\n`+ isClosedEmbedding_comap_of_surjective`\n`+ isClosedMap_comap_of_isIntegral`\n`+ isClosed_comap_singleton_of_isIntegral`\n`+ isClosed_iff_zeroLocus`\n`+ isClosed_iff_zeroLocus_ideal`\n`+ isClosed_iff_zeroLocus_radical_ideal`\n`+ isClosed_image_of_stableUnderSpecialization`\n`+ isClosed_mulTSupport`\n`+ isClosed_range`\n`+ isClosed_range_comap_of_surjective`\n`+ isClosed_range_of_stableUnderSpecialization`\n`+ isClosed_setOf_lipschitzOnWith`\n`+ isClosed_setOf_lipschitzWith`\n`+ isClosed_singleton_iff_isMaximal`\n`+ isClosed_zeroLocus`\n`+ isCodetecting_empty_of_groupoid`\n`+ isCodetecting_iff_isCoseparating`\n`+ isCodetecting_op_iff`\n`+ isCodetecting_unop_iff`\n`+ isCodetector_codetector`\n`+ isCodetector_coseparator`\n`+ isCodetector_def`\n`+ isCodetector_iff_reflectsIsomorphisms_yoneda_obj`\n`+ isCodetector_op_iff`\n`+ isCodetector_unop_iff`\n`+ isColimit`\n`+ isCompact`\n`+ isCompact_basicOpen`\n`+ isCompact_isOpen_iff`\n`+ isCompact_isOpen_iff_ideal`\n`+ isCompact_preimage`\n`+ isCompact_range`\n`+ isCompl_iSup_ker_pow_iInf_range_pow`\n`+ isContinuous`\n`+ isCoseparating_empty_of_thin`\n`+ isCoseparating_iff_mono`\n`+ isCoseparating_op_iff`\n`+ isCoseparating_proj_preimage`\n`+ isCoseparating_unop_iff`\n`+ isCoseparator_codetector`\n`+ isCoseparator_coseparator`\n`+ isCoseparator_def`\n`+ isCoseparator_iff_faithful_preadditiveYoneda`\n`+ isCoseparator_iff_faithful_preadditiveYonedaObj`\n`+ isCoseparator_iff_faithful_yoneda_obj`\n`+ isCoseparator_iff_mono`\n`+ isCoseparator_op_iff`\n`+ isCoseparator_pi`\n`+ isCoseparator_pi_of_isCoseparator`\n`+ isCoseparator_prod`\n`+ isCoseparator_prod_of_isCoseparator_left`\n`+ isCoseparator_prod_of_isCoseparator_right`\n`+ isCoseparator_unop_iff`\n`+ isCoverDense`\n`+ isDetecting_empty_of_groupoid`\n`+ isDetecting_iff_isSeparating`\n`+ isDetecting_op_iff`\n`+ isDetecting_unop_iff`\n`+ isDetector_def`\n`+ isDetector_detector`\n`+ isDetector_iff_reflectsIsomorphisms_coyoneda_obj`\n`+ isDetector_op_iff`\n`+ isDetector_separator`\n`+ isDetector_unop_iff`\n`+ isDomain`\n`+ isEmbedding_coe_ennreal`\n`+ isEmpty_of_isAlgebraic`\n`+ isFixedPt`\n`+ isFixedPt_prod_map`\n`+ isGLB_l`\n`+ isGLB_of_l_image`\n`+ isGLB_of_u_image`\n`+ isGLB_u_image`\n`+ isGreatest_u`\n`+ isIntegral_of_isClosedMap_comap_mapRingHom`\n`+ isIrreducible_iff_vanishingIdeal_isPrime`\n`+ isIrreducible_zeroLocus_iff`\n`+ isIrreducible_zeroLocus_iff_of_radical`\n`+ isIso_hom_mk`\n`+ isIso_ranCounit_app_of_isDenseSubsite`\n`+ isJacobsonRing`\n`+ isJacobsonRing_MvPolynomial_fin`\n`+ isJacobsonRing_iff`\n`+ isJacobsonRing_iff_jacobsonSpace`\n`+ isJacobsonRing_iff_prime_eq`\n`+ isJacobsonRing_iff_sInf_maximal`\n`+ isJacobsonRing_iff_sInf_maximal'`\n`+ isJacobsonRing_iso`\n`+ isJacobsonRing_localization`\n`+ isJacobsonRing_of_finiteType`\n`+ isJacobsonRing_of_isIntegral`\n`+ isJacobsonRing_of_isIntegral'`\n`+ isJacobsonRing_of_surjective`\n`+ isJacobsonRing_polynomial_iff_isJacobsonRing`\n`+ isJacobsonRing_polynomial_of_isJacobsonRing`\n`+ isJacobson_iff`\n`+ isJacobson_iff_prime_eq`\n`+ isJacobson_iff_sInf_maximal`\n`+ isJacobson_iff_sInf_maximal'`\n`+ isJacobson_iso`\n`+ isJacobson_localization`\n`+ isJacobson_of_isIntegral`\n`+ isJacobson_of_isIntegral'`\n`+ isJacobson_of_surjective`\n`+ isJacobson_polynomial_iff_isJacobson`\n`+ isJacobson_polynomial_of_isJacobson`\n`+ isLUB_l_image`\n`+ isLUB_of_l_image`\n`+ isLUB_of_u_image`\n`+ isLUB_u`\n`+ isLeast_l`\n`+ isLittleO_abs_abs`\n`+ isLittleO_abs_left`\n`+ isLittleO_abs_right`\n`+ isLittleO_bot`\n`+ isLittleO_comm`\n`+ isLittleO_const_const_iff`\n`+ isLittleO_const_id_atBot`\n`+ isLittleO_const_id_atTop`\n`+ isLittleO_const_id_cobounded`\n`+ isLittleO_const_iff`\n`+ isLittleO_const_iff_isLittleO_one`\n`+ isLittleO_const_left`\n`+ isLittleO_const_left_of_ne`\n`+ isLittleO_const_mul_left_iff`\n`+ isLittleO_const_mul_left_iff'`\n`+ isLittleO_const_mul_right_iff`\n`+ isLittleO_const_mul_right_iff'`\n`+ isLittleO_const_smul_left`\n`+ isLittleO_const_smul_right`\n`+ isLittleO_id_const`\n`+ isLittleO_id_one`\n`+ isLittleO_iff`\n`+ isLittleO_iff_exists_eq_mul`\n`+ isLittleO_iff_forall_isBigOWith`\n`+ isLittleO_iff_nat_mul_le`\n`+ isLittleO_iff_nat_mul_le'`\n`+ isLittleO_iff_nat_mul_le_aux`\n`+ isLittleO_iff_tendsto`\n`+ isLittleO_iff_tendsto'`\n`+ isLittleO_insert`\n`+ isLittleO_irrefl`\n`+ isLittleO_irrefl'`\n`+ isLittleO_map`\n`+ isLittleO_neg_left`\n`+ isLittleO_neg_right`\n`+ isLittleO_norm_left`\n`+ isLittleO_norm_norm`\n`+ isLittleO_norm_pow_id`\n`+ isLittleO_norm_pow_norm_pow`\n`+ isLittleO_norm_right`\n`+ isLittleO_of_subsingleton`\n`+ isLittleO_of_tendsto`\n`+ isLittleO_of_tendsto'`\n`+ isLittleO_one_iff`\n`+ isLittleO_one_left_iff`\n`+ isLittleO_pi`\n`+ isLittleO_pow_id`\n`+ isLittleO_pow_pow`\n`+ isLittleO_pow_sub_pow_sub`\n`+ isLittleO_pow_sub_sub`\n`+ isLittleO_principal`\n`+ isLittleO_prod_left`\n`+ isLittleO_pure`\n`+ isLittleO_refl_left`\n`+ isLittleO_sup`\n`+ isLittleO_top`\n`+ isLittleO_zero`\n`+ isLittleO_zero_right_iff`\n`+ isLocalHom_iff_comap_closedPoint`\n`+ isLocalRingHom_iff_comap_closedPoint`\n`+ isLocal_iff`\n`+ isLocal_of_isMaximal_radical`\n`+ isLocallyFaithful`\n`+ isLocallyFull`\n`+ isMax_iff`\n`+ isMax_iff_eq_top`\n`+ isMax_top`\n`+ isMaximal_comap_C_of_isJacobson`\n`+ isMaximal_comap_C_of_isJacobsonRing`\n`+ isMaximal_iff_isMaximal_disjoint`\n`+ isMaximal_of_isMaximal_disjoint`\n`+ isMaximal_of_isPrime`\n`+ isMin_bot`\n`+ isMin_iff`\n`+ isMin_iff_eq_bot`\n`+ isNilpotent_jacobson_bot`\n`+ isOpenMap_comap_C`\n`+ isOpen_basicOpen`\n`+ isOpen_extChartAt_preimage`\n`+ isOpen_extChartAt_preimage'`\n`+ isOpen_extChartAt_source`\n`+ isOpen_extChartAt_target`\n`+ isOpen_extend_preimage`\n`+ isOpen_extend_preimage'`\n`+ isOpen_extend_source`\n`+ isOpen_extend_target`\n`+ isOpen_iff`\n`+ isOpen_imageOfDf`\n`+ isOpen_ne_top`\n`+ isOpen_singleton_tfae_of_isNoetherian_of_isJacobsonRing`\n`+ isPeriodicPt_iff_minimalPeriod_dvd`\n`+ isPeriodicPt_minimalPeriod`\n`+ isPeriodicPt_of_mem_periodicPts_of_isPeriodicPt_iterate`\n`+ isPeriodicPt_prod_map`\n`+ isPeriodicPt_smul_iff`\n`+ isPeriodicPt_zero`\n`+ isPrimal_iff`\n`+ isPrimal_mk`\n`+ isPrimary_of_isMaximal_radical`\n`+ isPrime_iff_isMaximal`\n`+ isRadical_jacobson`\n`+ isRadical_of_eq_jacobson`\n`+ isRadical_vanishingIdeal`\n`+ isReflexive_of_equiv_dual_of_isReflexive`\n`+ isSFiniteKernel_prodMkLeft_unit`\n`+ isSFiniteKernel_prodMkRight_unit`\n`+ isScalarTower_over_bot`\n`+ isSemisimpleRing_of_isReduced`\n`+ isSeparating_empty_of_thin`\n`+ isSeparating_iff_epi`\n`+ isSeparating_op_iff`\n`+ isSeparating_proj_preimage`\n`+ isSeparating_unop_iff`\n`+ isSeparator_coprod`\n`+ isSeparator_coprod_of_isSeparator_left`\n`+ isSeparator_coprod_of_isSeparator_right`\n`+ isSeparator_def`\n`+ isSeparator_detector`\n`+ isSeparator_iff_epi`\n`+ isSeparator_iff_faithful_coyoneda_obj`\n`+ isSeparator_iff_faithful_preadditiveCoyoneda`\n`+ isSeparator_iff_faithful_preadditiveCoyonedaObj`\n`+ isSeparator_op_iff`\n`+ isSeparator_separator`\n`+ isSeparator_sigma`\n`+ isSeparator_sigma_of_isSeparator`\n`+ isSeparator_unop_iff`\n`+ isSplittingField_iSup`\n`+ isSplittingField_iff`\n`+ isSquare_prod`\n`+ isStar`\n`+ isStarWithArg`\n`+ isStrictTotalOrder_of_linearOrder`\n`+ isTop_iff_eq_top`\n`+ isTop_top`\n`+ isTopologicalBasis_basic_opens`\n`+ isUnit_add_isUnit_eq_isUnit_add_isUnit`\n`+ isUnit_eq_one_or`\n`+ isUnit_eq_or_eq_neg`\n`+ isUnit_iff`\n`+ isUnit_iff_eq_bot`\n`+ isUnit_iff_eq_one`\n`+ isUnit_iff_natAbs_eq`\n`+ isUnit_mk`\n`+ isUnit_mul_self`\n`+ isUnit_ne_iff_eq_neg`\n`+ isUnit_of_associated_mul`\n`+ isUnit_of_sub_one_mem_jacobson_bot`\n`+ is_one_at_infty`\n`+ is_periodic_id`\n`+ is_transcendental_of_subsingleton`\n`+ isoOver`\n`+ iso_of_restrict_iso`\n`+ isomorphic_distinguished`\n`+ iterate`\n`+ iterate_add_minimalPeriod_eq`\n`+ iterate_eq_iterate_iff_of_lt_minimalPeriod`\n`+ iterate_injOn_Iio_minimalPeriod`\n`+ iterate_mem_periodicOrbit`\n`+ iterate_minimalPeriod`\n`+ iterate_mod_apply`\n`+ iterate_mod_minimalPeriod_eq`\n`+ jacobson_bot_polynomial_le_sInf_map_maximal`\n`+ jacobson_bot_polynomial_of_jacobson_bot`\n`+ jacobson_eq_bot`\n`+ jacobson_eq_iff_jacobson_quotient_eq_bot`\n`+ jacobson_eq_self_of_isMaximal`\n`+ jacobson_eq_top_iff`\n`+ jacobson_idem`\n`+ jacobson_mono`\n`+ jacobson_mul_mem_right`\n`+ jacobson_radical_eq_jacobson`\n`+ jacobson_top`\n`+ lTensor_nontrivial`\n`+ lTensor_reflects_exact`\n`+ lTensor_reflects_triviality`\n`+ l_biInf_of_ul_eq_self`\n`+ l_biInf_u`\n`+ l_biSup_u`\n`+ l_bot`\n`+ l_comm_iff_u_comm`\n`+ l_comm_of_u_comm`\n`+ l_eq`\n`+ l_eq_bot`\n`+ l_iInf_of_ul_eq_self`\n`+ l_iInf_u`\n`+ l_iSup`\n`+ l_iSup_u`\n`+ l_iSup₂`\n`+ l_inf_u`\n`+ l_injective`\n`+ l_le`\n`+ l_le_l_iff`\n`+ l_sInf_u_image`\n`+ l_sSup`\n`+ l_sSup_u_image`\n`+ l_sup`\n`+ l_sup_u`\n`+ l_surjective`\n`+ l_top`\n`+ l_u_eq`\n`+ l_u_l_eq_l`\n`+ l_u_l_eq_l'`\n`+ l_u_le`\n`+ l_u_le_trans`\n`+ l_unique`\n`+ le_add`\n`+ le_antisymm`\n`+ le_antisymm_iff`\n`+ le_bot_iff`\n`+ le_compProd_apply`\n`+ le_iff`\n`+ le_iff_le`\n`+ le_iff_mem_closure`\n`+ le_iff_specializes`\n`+ le_imp_le_of_lt_imp_lt`\n`+ le_jacobson`\n`+ le_liminf_add`\n`+ le_liminf_mul`\n`+ le_limsup_add`\n`+ le_limsup_mul`\n`+ le_max_left`\n`+ le_max_right`\n`+ le_min`\n`+ le_mul_left`\n`+ le_mul_right`\n`+ le_not_le_of_lt`\n`+ le_of_eq`\n`+ le_of_eq_or_lt`\n`+ le_of_forall_lt_one_mul_le`\n`+ le_of_lt`\n`+ le_of_lt_minimalPeriod_of_iterate_eq`\n`+ le_of_lt_or_eq`\n`+ le_of_mul_le_mul_left`\n`+ le_of_not_ge`\n`+ le_of_not_gt`\n`+ le_of_not_le`\n`+ le_of_not_lt`\n`+ le_one_iff`\n`+ le_or_gt`\n`+ le_or_lt`\n`+ le_refl`\n`+ le_rfl`\n`+ le_sub`\n`+ le_sup_toSubalgebra`\n`+ le_top`\n`+ le_total`\n`+ le_trans`\n`+ le_tsum`\n`+ le_u`\n`+ le_u_l`\n`+ le_u_l_trans`\n`+ le_vanishingIdeal_zeroLocus`\n`+ le_zero`\n`+ leftDual_v`\n`+ leftDual_ρ`\n`+ leftInverse`\n`+ leftInverse_l_u`\n`+ leftRegular`\n`+ leftRegularTensorIso`\n`+ left_inv`\n`+ left_of_add`\n`+ left_of_comp`\n`+ length_bind`\n`+ length_flatMap`\n`+ length_le_sum_of_one_le`\n`+ length_pos_of_one_lt_prod`\n`+ length_pos_of_prod_lt_one`\n`+ length_pos_of_prod_ne_one`\n`+ length_sigma`\n`+ liftAlgHom_comp_reprField`\n`+ liftAlgHom_fieldRange`\n`+ liftAlgHom_fieldRange_eq_of_range_eq`\n`+ liftOrderBot`\n`+ liftOrderTop`\n`+ lift_adjoin`\n`+ lift_adjoin_simple`\n`+ lift_bot`\n`+ lift_cardinalMk_adjoin_le`\n`+ lift_reprField`\n`+ lift_top`\n`+ liminf_add_gt_of_gt`\n`+ liminf_add_le`\n`+ liminf_add_le_limsup_add_liminf`\n`+ liminf_add_top_of_ne_bot`\n`+ liminf_const_sub`\n`+ liminf_mul_le`\n`+ liminf_neg`\n`+ liminf_sub_const`\n`+ liminf_toReal_eq`\n`+ limsup_add_bot_of_ne_top`\n`+ limsup_add_le`\n`+ limsup_add_le_add_limsup`\n`+ limsup_add_le_of_le`\n`+ limsup_add_liminf_le_limsup_add`\n`+ limsup_const_sub`\n`+ limsup_mul_le'`\n`+ limsup_neg`\n`+ limsup_sub_const`\n`+ limsup_toReal_eq`\n`+ linearEquiv`\n`+ linearEquivShrink`\n`+ linearIndependent`\n`+ lintegral_comap`\n`+ lintegral_comp`\n`+ lintegral_compProd'`\n`+ lintegral_compProd₀`\n`+ lintegral_fst`\n`+ lintegral_map`\n`+ lintegral_prod`\n`+ lintegral_prodMkLeft`\n`+ lintegral_prodMkRight`\n`+ lintegral_snd`\n`+ lintegral_swapLeft`\n`+ lintegral_swapRight`\n`+ list_prod_mem_list_prod`\n`+ list_prod_singleton`\n`+ list_prod_subset_list_prod`\n`+ localizationMapOfSpecializes`\n`+ localization_artinian`\n`+ localization_away_comap_range`\n`+ localization_away_isOpenEmbedding`\n`+ localization_away_openEmbedding`\n`+ localization_comap_embedding`\n`+ localization_comap_inducing`\n`+ localization_comap_injective`\n`+ localization_comap_isEmbedding`\n`+ localization_comap_isInducing`\n`+ localization_comap_range`\n`+ localization_specComap_injective`\n`+ localization_specComap_range`\n`+ localization_surjective`\n`+ locallyCompactSpace`\n`+ locallyFinite_mulSupport_iff`\n`+ lowerBounds_u_image`\n`+ ltGeByCases`\n`+ ltTopHomeomorphNNReal`\n`+ lt_asymm`\n`+ lt_iff_le_not_le`\n`+ lt_iff_lt`\n`+ lt_iff_not_ge`\n`+ lt_irrefl`\n`+ lt_min`\n`+ lt_of_le_not_le`\n`+ lt_of_le_of_lt`\n`+ lt_of_le_of_ne`\n`+ lt_of_lt_of_le`\n`+ lt_of_not_ge`\n`+ lt_or_ge`\n`+ lt_or_gt_of_ne`\n`+ lt_or_le`\n`+ lt_top_iff_ne_top`\n`+ lt_top_of_lt`\n`+ lt_top_of_tsum_ne_top`\n`+ lt_trans`\n`+ lt_trichotomy`\n`+ map'`\n`+ mapAction`\n`+ mapAction_linear`\n`+ mapAction_preadditive`\n`+ mapAction_δ_hom`\n`+ mapAction_ε_hom`\n`+ mapAction_η_hom`\n`+ mapAction_μ_hom`\n`+ mapArrays`\n`+ mapArraysM`\n`+ mapOfMeasurable`\n`+ mapOfMeasurable_eq_map`\n`+ map_add_le`\n`+ map_apply`\n`+ map_apply'`\n`+ map_bot`\n`+ map_coe_atTop`\n`+ map_comap_eq`\n`+ map_comap_eq_self`\n`+ map_comap_eq_self_of_surjective`\n`+ map_const`\n`+ map_distinguished_op_exact`\n`+ map_dualAnnihilator_linearEquiv_flip_symm`\n`+ map_dualCoannihilator_linearEquiv_flip`\n`+ map_extChartAt_nhds`\n`+ map_extChartAt_nhds'`\n`+ map_extChartAt_nhdsWithin`\n`+ map_extChartAt_nhdsWithin'`\n`+ map_extChartAt_nhdsWithin_eq_image`\n`+ map_extChartAt_nhdsWithin_eq_image'`\n`+ map_extChartAt_nhds_of_boundaryless`\n`+ map_extChartAt_symm_nhdsWithin`\n`+ map_extChartAt_symm_nhdsWithin'`\n`+ map_extChartAt_symm_nhdsWithin_range`\n`+ map_extChartAt_symm_nhdsWithin_range'`\n`+ map_extend_nhds`\n`+ map_extend_nhdsWithin`\n`+ map_extend_nhdsWithin_eq_image`\n`+ map_extend_nhdsWithin_eq_image_of_subset`\n`+ map_extend_nhds_of_boundaryless`\n`+ map_extend_symm_nhdsWithin`\n`+ map_extend_symm_nhdsWithin_range`\n`+ map_iInf`\n`+ map_iSup`\n`+ map_id'`\n`+ map_jacobson_of_bijective`\n`+ map_jacobson_of_surjective`\n`+ map_lt_map_iff`\n`+ map_mul`\n`+ map_nhdsWithin_eq`\n`+ map_nhds_eq`\n`+ map_of_not_measurable`\n`+ map_one`\n`+ map_one_of_isLeftRegular`\n`+ map_pow`\n`+ map_prod`\n`+ map_prodMkLeft`\n`+ map_prodMkRight`\n`+ map_prod_swap`\n`+ map_smul`\n`+ map_sub`\n`+ map_sub_eq_zero_iff`\n`+ map_sub_le`\n`+ map_sub_rev`\n`+ map_sup`\n`+ map_top`\n`+ mapsTo_extChartAt`\n`+ mapsTo_extend`\n`+ matchTargetStar`\n`+ matchTreeStars`\n`+ maxDefault`\n`+ max_assoc`\n`+ max_bot_left`\n`+ max_bot_right`\n`+ max_comm`\n`+ max_def`\n`+ max_eq_bot`\n`+ max_eq_left`\n`+ max_eq_left_of_lt`\n`+ max_eq_right`\n`+ max_eq_right_of_lt`\n`+ max_eq_top`\n`+ max_le`\n`+ max_left_comm`\n`+ max_lt`\n`+ max_map`\n`+ max_self`\n`+ max_top_left`\n`+ max_top_right`\n`+ maximalAtlas`\n`+ maximal_ideals_finite`\n`+ measurableSingleton`\n`+ measurable_compProdFun`\n`+ measurable_compProdFun_of_finite`\n`+ measure_ge_le_exp_cgf`\n`+ measure_ge_le_exp_mul_mgf`\n`+ measure_le_le_exp_cgf`\n`+ measure_le_le_exp_mul_mgf`\n`+ mem_adjoin_iff`\n`+ mem_adjoin_range_iff`\n`+ mem_adjoin_simple_iff`\n`+ mem_adjoin_simple_self`\n`+ mem_basicOpen`\n`+ mem_bot`\n`+ mem_closure_X_union_C`\n`+ mem_compl_zeroLocus_iff_not_mem`\n`+ mem_distTriang_op_iff`\n`+ mem_distTriang_op_iff'`\n`+ mem_distinguishedTriangles_iff`\n`+ mem_distinguishedTriangles_iff'`\n`+ mem_extChartAt_source`\n`+ mem_extChartAt_target`\n`+ mem_finset_prod`\n`+ mem_fintype_prod`\n`+ mem_inducedTopology_sieves_iff`\n`+ mem_inf`\n`+ mem_interior_extend_target`\n`+ mem_jacobson_bot`\n`+ mem_list_prod`\n`+ mem_mem_ranges_iff_lt_sum`\n`+ mem_nhds_bot_iff`\n`+ mem_nhds_top_iff`\n`+ mem_periodicOrbit_iff`\n`+ mem_periodicPts`\n`+ mem_pow`\n`+ mem_prod_list_ofFn`\n`+ mem_ptsOfPeriod`\n`+ mem_top`\n`+ mem_vanishingIdeal`\n`+ mem_zeroLocus`\n`+ metricSpace`\n`+ metricSpaceEMetricBall`\n`+ mgf`\n`+ mgf_const`\n`+ mgf_const'`\n`+ mgf_neg`\n`+ mgf_nonneg`\n`+ mgf_pos`\n`+ mgf_pos'`\n`+ mgf_undef`\n`+ mgf_zero`\n`+ mgf_zero'`\n`+ mgf_zero_fun`\n`+ mgf_zero_measure`\n`+ minDefault`\n`+ min_assoc`\n`+ min_bot_left`\n`+ min_bot_right`\n`+ min_comm`\n`+ min_def`\n`+ min_eq_bot`\n`+ min_eq_left`\n`+ min_eq_left_of_lt`\n`+ min_eq_right`\n`+ min_eq_right_of_lt`\n`+ min_eq_top`\n`+ min_le_left`\n`+ min_le_right`\n`+ min_left_comm`\n`+ min_self`\n`+ min_top_left`\n`+ min_top_right`\n`+ minimalPeriod`\n`+ minimalPeriod_apply`\n`+ minimalPeriod_apply_iterate`\n`+ minimalPeriod_eq_minimalPeriod_iff`\n`+ minimalPeriod_eq_one_iff_isFixedPt`\n`+ minimalPeriod_eq_prime`\n`+ minimalPeriod_eq_prime_pow`\n`+ minimalPeriod_eq_zero_iff_nmem_periodicPts`\n`+ minimalPeriod_eq_zero_of_nmem_periodicPts`\n`+ minimalPeriod_fst_dvd`\n`+ minimalPeriod_id`\n`+ minimalPeriod_iterate_eq_div_gcd`\n`+ minimalPeriod_iterate_eq_div_gcd'`\n`+ minimalPeriod_pos_iff_mem_periodicPts`\n`+ minimalPeriod_pos_of_mem_periodicPts`\n`+ minimalPeriod_prod_map`\n`+ minimalPeriod_snd_dvd`\n`+ minimalPrimes.equivIrreducibleComponents`\n`+ minpoly_gen`\n`+ mk'`\n`+ mkAppNTerm`\n`+ mkAuxFunction`\n`+ mkDTExpr`\n`+ mkDTExprs`\n`+ mkInstanceCmds`\n`+ mkIso`\n`+ mkLocalInstanceLetDecls`\n`+ mkMonoidHom`\n`+ mkMonoidHom_apply`\n`+ mkMutualBlock`\n`+ mkOfInjective`\n`+ mkOfInjective'`\n`+ mkToExprBody`\n`+ mkToExprHeader`\n`+ mkToExprInstanceCmds`\n`+ mkToExprInstanceHandler`\n`+ mkToLevelBinders`\n`+ mkToTypeExpr`\n`+ mk_add_mk`\n`+ mk_bot`\n`+ mk_coe`\n`+ mk_dvdNotUnit_mk_iff`\n`+ mk_dvd_mk`\n`+ mk_eq_bot_iff`\n`+ mk_eq_mk_iff_associated`\n`+ mk_eq_top_iff`\n`+ mk_injective`\n`+ mk_isRelPrime_iff`\n`+ mk_le_mk_iff_dvd`\n`+ mk_le_mk_iff_dvd_iff`\n`+ mk_le_mk_of_dvd`\n`+ mk_mem_periodicPts`\n`+ mk_natCast`\n`+ mk_nat_cast`\n`+ mk_ne_zero`\n`+ mk_one`\n`+ mk_quot_out`\n`+ mk_sub_mk`\n`+ mk_surjective`\n`+ mk_symm`\n`+ mk_toPartENat_eq_coe_card`\n`+ mk_toPartENat_of_infinite`\n`+ mk_top`\n`+ mk_zero`\n`+ mod`\n`+ modelWithCornersSelf`\n`+ modelWithCornersSelf_boundaryless`\n`+ modelWithCornersSelf_coe`\n`+ modelWithCornersSelf_coe_symm`\n`+ modelWithCornersSelf_partialEquiv`\n`+ modelWithCornersSelf_prod`\n`+ modelWithCorners_prod_coe`\n`+ modelWithCorners_prod_coe_symm`\n`+ modelWithCorners_prod_toPartialEquiv`\n`+ model_space_smooth`\n`+ moment`\n`+ moment_zero`\n`+ mono`\n`+ mono'`\n`+ monoid`\n`+ monoidWithZero`\n`+ monoidWithZeroHomClass`\n`+ monotone_and`\n`+ monotone_intro`\n`+ monotone_l`\n`+ monotone_le`\n`+ monotone_lt`\n`+ monotone_or`\n`+ monotone_stabilizes`\n`+ monotone_stabilizes_iff_artinian`\n`+ monotone_truncateToReal`\n`+ monotone_u`\n`+ mulAction`\n`+ mulEquiv_apply`\n`+ mulEquiv_symm_apply`\n`+ mulHomClass`\n`+ mulIndicator_biUnion`\n`+ mulIndicator_biUnion_apply`\n`+ mulIndicator_prod`\n`+ mulOneClass`\n`+ mulSupport_prod`\n`+ mulTSupport`\n`+ mulTSupport_eq_empty_iff`\n`+ mulTSupport_extend_one`\n`+ mulTSupport_extend_one_subset`\n`+ mulTSupport_mul`\n`+ mulZeroClass`\n`+ mulZeroOneClass`\n`+ mul_algebraMap₀`\n`+ mul_assoc`\n`+ mul_const`\n`+ mul_def`\n`+ mul_eq_neg_one_iff_eq_one_or_neg_one`\n`+ mul_eq_one_iff`\n`+ mul_eq_one_iff_eq_one_or_neg_one`\n`+ mul_inv_cancel`\n`+ mul_mono`\n`+ mul_of_commute`\n`+ mul_one`\n`+ mul_prod_erase`\n`+ multiset_prod_mem_multiset_prod`\n`+ multiset_prod_singleton`\n`+ multiset_prod_subset_multiset_prod`\n`+ natAbs_of_isUnit`\n`+ natCast`\n`+ natTransCofanInj`\n`+ nat_abs_sum_le`\n`+ naturality`\n`+ naturality_apply`\n`+ neBotTopHomeomorphReal`\n`+ neTopHomeomorphNNReal`\n`+ ne_bot_of_gt`\n`+ ne_bot_of_le_ne_bot`\n`+ ne_iff_lt_or_gt`\n`+ ne_of_gt`\n`+ ne_of_lt`\n`+ ne_top_of_le_ne_top`\n`+ ne_top_of_lt`\n`+ ne_top_of_tsum_ne_top`\n`+ ne_zero_iff`\n`+ neg_hom`\n`+ neg_one_mem_of_prod_eq_neg_one`\n`+ nhdsOrderEmbedding`\n`+ nhdsWithin_Iio_neBot`\n`+ nhdsWithin_Ioi_coe_neBot`\n`+ nhdsWithin_Ioi_nat_neBot`\n`+ nhdsWithin_Ioi_ofNat_nebot`\n`+ nhdsWithin_Ioi_one_neBot`\n`+ nhdsWithin_Ioi_zero_neBot`\n`+ nhdsWithin_bot`\n`+ nhdsWithin_extChartAt_target_eq`\n`+ nhdsWithin_extChartAt_target_eq'`\n`+ nhdsWithin_extChartAt_target_eq_of_mem`\n`+ nhdsWithin_extend_target_eq`\n`+ nhdsWithin_top`\n`+ nhds_bot`\n`+ nhds_bot'`\n`+ nhds_bot_basis`\n`+ nhds_eq_nhds_emetric_ball`\n`+ nhds_of_ne_top`\n`+ nhds_zero_basis_Iic`\n`+ nnratCast`\n`+ noMaxOrder`\n`+ nodup_periodicOrbit`\n`+ nonAssocRing`\n`+ nonAssocSemiring`\n`+ nonUnitalCommRing`\n`+ nonUnitalCommSemiring`\n`+ nonUnitalNonAssocRing`\n`+ nonUnitalNonAssocSemiring`\n`+ nonUnitalRing`\n`+ nonUnitalSemiring`\n`+ nonempty_of_prod_ne_one`\n`+ nonneg`\n`+ nonnegHomClass`\n`+ normedAddCommGroup`\n`+ normedSpace`\n`+ not_bot_lt_iff`\n`+ not_even_iff`\n`+ not_even_one`\n`+ not_isBot_iff_ne_bot`\n`+ not_isMax_bot`\n`+ not_isMax_iff_ne_top`\n`+ not_isMin_iff_ne_bot`\n`+ not_isMin_top`\n`+ not_isPeriodicPt_of_pos_of_lt_minimalPeriod`\n`+ not_isTop_iff_ne_top`\n`+ not_le`\n`+ not_le_of_gt`\n`+ not_le_of_lt`\n`+ not_lt`\n`+ not_lt_bot`\n`+ not_lt_of_ge`\n`+ not_lt_of_gt`\n`+ not_lt_of_le`\n`+ not_lt_of_lt`\n`+ not_lt_top_iff`\n`+ not_mem_mulTSupport_iff_eventuallyEq`\n`+ not_summable_iff_tendsto_nat_atTop`\n`+ not_top_lt`\n`+ nsmul`\n`+ nsmul_coe`\n`+ nsmul_eq_mul`\n`+ nsmul_mk`\n`+ of.zero_exact_aux2`\n`+ ofAdd_list_prod`\n`+ ofAdd_mul`\n`+ ofAdd_multiset_prod`\n`+ ofAdd_sum`\n`+ ofDual_bot`\n`+ ofDual_top`\n`+ ofIso`\n`+ ofMulActionLimitCone`\n`+ ofMul_list_prod`\n`+ ofMul_multiset_prod`\n`+ ofMul_prod`\n`+ ofNat_isUnit`\n`+ ofReal_cinfi`\n`+ ofSet_mem_contDiffGroupoid`\n`+ of_aeval`\n`+ of_comp`\n`+ of_injective`\n`+ of_isIdempotent`\n`+ of_linearEquiv`\n`+ of_mulSupport_subset_isCompact`\n`+ on`\n`+ one_compl`\n`+ one_def`\n`+ one_emod_two`\n`+ one_eq_mk_one`\n`+ one_le`\n`+ one_mul`\n`+ one_or_eq_of_le_of_prime`\n`+ one_sub`\n`+ one_sub_iff`\n`+ opShiftFunctorEquivalence`\n`+ opShiftFunctorEquivalence_counitIso_hom_app_shift`\n`+ opShiftFunctorEquivalence_counitIso_hom_naturality`\n`+ opShiftFunctorEquivalence_counitIso_inv_app_shift`\n`+ opShiftFunctorEquivalence_counitIso_inv_naturality`\n`+ opShiftFunctorEquivalence_unitIso_hom_app_eq`\n`+ opShiftFunctorEquivalence_unitIso_hom_naturality`\n`+ opShiftFunctorEquivalence_unitIso_inv_app_eq`\n`+ opShiftFunctorEquivalence_unitIso_inv_naturality`\n`+ opShiftFunctorEquivalence_zero_unitIso_hom_app`\n`+ opShiftFunctorEquivalence_zero_unitIso_inv_app`\n`+ op_distinguished`\n`+ op_list_prod`\n`+ op_sum`\n`+ orderTop`\n`+ over_forget_locallyCoverDense`\n`+ partENatOfENat_toENat`\n`+ partialOrder`\n`+ period`\n`+ period_eq_minimalPeriod`\n`+ periodicOrbit`\n`+ periodicOrbit_apply_eq`\n`+ periodicOrbit_apply_iterate_eq`\n`+ periodicOrbit_chain`\n`+ periodicOrbit_chain'`\n`+ periodicOrbit_def`\n`+ periodicOrbit_eq_cycle_map`\n`+ periodicOrbit_eq_nil_iff_not_periodic_pt`\n`+ periodicOrbit_eq_nil_of_not_periodic_pt`\n`+ periodicOrbit_length`\n`+ periodicPts`\n`+ pointsEquivIrreducibleCloseds`\n`+ polynomial_smul_apply`\n`+ polynomial_smul_apply'`\n`+ pos`\n`+ pos_iff`\n`+ powOrderIso`\n`+ pow_add_period_smul`\n`+ pow_card_mul_prod`\n`+ pow_count`\n`+ pow_def`\n`+ pow_eq_prod_const`\n`+ pow_mod_period_smul`\n`+ pow_nonneg`\n`+ pow_period_add_smul`\n`+ pow_period_smul`\n`+ pow_smul_eq_iff_minimalPeriod_dvd`\n`+ pow_smul_eq_iff_period_dvd`\n`+ pow_smul_mod_minimalPeriod`\n`+ pow_succ_eq`\n`+ powerBasisAux`\n`+ preimage_add_const_Icc`\n`+ preimage_add_const_Ici`\n`+ preimage_add_const_Ico`\n`+ preimage_add_const_Iic`\n`+ preimage_add_const_Iio`\n`+ preimage_add_const_Ioc`\n`+ preimage_add_const_Ioi`\n`+ preimage_add_const_Ioo`\n`+ preimage_add_const_uIcc`\n`+ preimage_comap_zeroLocus`\n`+ preimage_const_add_Icc`\n`+ preimage_const_add_Ici`\n`+ preimage_const_add_Ico`\n`+ preimage_const_add_Iic`\n`+ preimage_const_add_Iio`\n`+ preimage_const_add_Ioc`\n`+ preimage_const_add_Ioi`\n`+ preimage_const_add_Ioo`\n`+ preimage_const_add_uIcc`\n`+ preimage_const_mul_Icc`\n`+ preimage_const_mul_Icc_of_neg`\n`+ preimage_const_mul_Ici`\n`+ preimage_const_mul_Ici_of_neg`\n`+ preimage_const_mul_Ico`\n`+ preimage_const_mul_Ico_of_neg`\n`+ preimage_const_mul_Iic`\n`+ preimage_const_mul_Iic_of_neg`\n`+ preimage_const_mul_Iio`\n`+ preimage_const_mul_Iio_of_neg`\n`+ preimage_const_mul_Ioc`\n`+ preimage_const_mul_Ioc_of_neg`\n`+ preimage_const_mul_Ioi`\n`+ preimage_const_mul_Ioi_of_neg`\n`+ preimage_const_mul_Ioi_or_Iio`\n`+ preimage_const_mul_Ioo`\n`+ preimage_const_mul_Ioo_of_neg`\n`+ preimage_const_mul_uIcc`\n`+ preimage_const_sub_Icc`\n`+ preimage_const_sub_Ici`\n`+ preimage_const_sub_Ico`\n`+ preimage_const_sub_Iic`\n`+ preimage_const_sub_Iio`\n`+ preimage_const_sub_Ioc`\n`+ preimage_const_sub_Ioi`\n`+ preimage_const_sub_Ioo`\n`+ preimage_const_sub_uIcc`\n`+ preimage_div_const_uIcc`\n`+ preimage_image`\n`+ preimage_mul_const_Icc`\n`+ preimage_mul_const_Icc_of_neg`\n`+ preimage_mul_const_Ici`\n`+ preimage_mul_const_Ici_of_neg`\n`+ preimage_mul_const_Ico`\n`+ preimage_mul_const_Ico_of_neg`\n`+ preimage_mul_const_Iic`\n`+ preimage_mul_const_Iic_of_neg`\n`+ preimage_mul_const_Iio`\n`+ preimage_mul_const_Iio_of_neg`\n`+ preimage_mul_const_Ioc`\n`+ preimage_mul_const_Ioc_of_neg`\n`+ preimage_mul_const_Ioi`\n`+ preimage_mul_const_Ioi_of_neg`\n`+ preimage_mul_const_Ioo`\n`+ preimage_mul_const_Ioo_of_neg`\n`+ preimage_mul_const_uIcc`\n`+ preimage_neg_Icc`\n`+ preimage_neg_Ici`\n`+ preimage_neg_Ico`\n`+ preimage_neg_Iic`\n`+ preimage_neg_Iio`\n`+ preimage_neg_Ioc`\n`+ preimage_neg_Ioi`\n`+ preimage_neg_Ioo`\n`+ preimage_neg_uIcc`\n`+ preimage_specComap_zeroLocus`\n`+ preimage_specComap_zeroLocus_aux`\n`+ preimage_sub_const_Icc`\n`+ preimage_sub_const_Ici`\n`+ preimage_sub_const_Ico`\n`+ preimage_sub_const_Iic`\n`+ preimage_sub_const_Iio`\n`+ preimage_sub_const_Ioc`\n`+ preimage_sub_const_Ioi`\n`+ preimage_sub_const_Ioo`\n`+ preimage_sub_const_uIcc`\n`+ preservesColimit_of_preserves`\n`+ preservesColimitsOfShape_of_preserves`\n`+ preservesColimitsOfSize_of_preserves`\n`+ preservesColimits_forget`\n`+ preservesFiniteLimits_liftToFinset`\n`+ preservesLimit_of_preserves`\n`+ preservesLimitsOfShape_of_preserves`\n`+ preservesLimitsOfSize_of_preserves`\n`+ preservesLimits_forget`\n`+ presheafHom`\n`+ primeSpectrumProd`\n`+ primeSpectrumProdHomeo`\n`+ primeSpectrumProdOfSum`\n`+ primeSpectrumProd_symm_inl`\n`+ primeSpectrumProd_symm_inl_asIdeal`\n`+ primeSpectrumProd_symm_inr`\n`+ primeSpectrumProd_symm_inr_asIdeal`\n`+ primeSpectrum_finite`\n`+ primeSpectrum_unique_of_localization_at_minimal`\n`+ prime_dvd_prime_iff_eq`\n`+ prime_mk`\n`+ prime_mul_iff`\n`+ prime_pow_iff`\n`+ processBigOpBinder`\n`+ processBigOpBinders`\n`+ prodMkLeft`\n`+ prodMkLeft_add`\n`+ prodMkLeft_apply`\n`+ prodMkLeft_apply'`\n`+ prodMkLeft_zero`\n`+ prodMkRight`\n`+ prodMkRight_add`\n`+ prodMkRight_apply`\n`+ prodMkRight_apply'`\n`+ prodMkRight_zero`\n`+ prod_add`\n`+ prod_append`\n`+ prod_apply`\n`+ prod_apply'`\n`+ prod_apply_dite`\n`+ prod_apply_ite`\n`+ prod_apply_ite_of_false`\n`+ prod_apply_ite_of_true`\n`+ prod_attach`\n`+ prod_attach_univ`\n`+ prod_biUnion`\n`+ prod_bij`\n`+ prod_bij'`\n`+ prod_bij_ne_one`\n`+ prod_cancels_of_partition_cancels`\n`+ prod_coe`\n`+ prod_coe_sort`\n`+ prod_coe_sort_eq_attach`\n`+ prod_comm`\n`+ prod_comm'`\n`+ prod_comp`\n`+ prod_compl_mul_prod`\n`+ prod_concat`\n`+ prod_congr`\n`+ prod_congr_set`\n`+ prod_const_one`\n`+ prod_diag`\n`+ prod_disjUnion`\n`+ prod_disj_sum`\n`+ prod_disjiUnion`\n`+ prod_dite`\n`+ prod_dite_irrel`\n`+ prod_dite_of_false`\n`+ prod_dite_of_true`\n`+ prod_div_distrib`\n`+ prod_drop_succ`\n`+ prod_dvd_prod_of_le`\n`+ prod_dvd_prod_of_subset`\n`+ prod_eq_fold`\n`+ prod_eq_mul`\n`+ prod_eq_mul_of_mem`\n`+ prod_eq_mul_prod_diff_singleton`\n`+ prod_eq_multiset_prod`\n`+ prod_eq_prod_diff_singleton_mul`\n`+ prod_eq_single`\n`+ prod_eq_single_of_mem`\n`+ prod_erase_attach`\n`+ prod_erase_eq_div`\n`+ prod_erase_lt_of_one_lt`\n`+ prod_erase_mul`\n`+ prod_erase_of_comm`\n`+ prod_extend_by_one`\n`+ prod_fiberwise_eq_prod_filter`\n`+ prod_fiberwise_eq_prod_filter'`\n`+ prod_fiberwise_of_maps_to`\n`+ prod_fiberwise_of_maps_to'`\n`+ prod_filter`\n`+ prod_filter_ne_one`\n`+ prod_filter_not_mul_prod_filter`\n`+ prod_filter_of_ne`\n`+ prod_finset_coe`\n`+ prod_finset_product`\n`+ prod_finset_product'`\n`+ prod_finset_product_right`\n`+ prod_finset_product_right'`\n`+ prod_flatten`\n`+ prod_flip`\n`+ prod_hom'`\n`+ prod_hom_ne_zero`\n`+ prod_hom_nonempty`\n`+ prod_hom₂_ne_zero`\n`+ prod_hom₂_nonempty`\n`+ prod_image`\n`+ prod_image'`\n`+ prod_insert`\n`+ prod_insert_div`\n`+ prod_insert_of_eq_one_if_not_mem`\n`+ prod_insert_one`\n`+ prod_inter_mul_prod_diff`\n`+ prod_inv`\n`+ prod_inv_distrib`\n`+ prod_inv_reverse`\n`+ prod_involution`\n`+ prod_isUnit`\n`+ prod_isUnit_iff`\n`+ prod_ite`\n`+ prod_ite_eq_ite_exists`\n`+ prod_ite_index`\n`+ prod_ite_irrel`\n`+ prod_ite_of_false`\n`+ prod_ite_of_true`\n`+ prod_ite_one`\n`+ prod_join`\n`+ prod_list_count`\n`+ prod_list_count_of_subset`\n`+ prod_list_map_count`\n`+ prod_map`\n`+ prod_map_div`\n`+ prod_map_filter_mul_prod_map_filter_not`\n`+ prod_map_hom`\n`+ prod_map_inv`\n`+ prod_map_inv'`\n`+ prod_map_ite`\n`+ prod_map_ite_eq`\n`+ prod_map_pow`\n`+ prod_map_prod_map`\n`+ prod_map_val`\n`+ prod_map_zpow`\n`+ prod_mem_multiset`\n`+ prod_mk`\n`+ prod_mulIndicator_eq_prod_filter`\n`+ prod_mulIndicator_eq_prod_inter`\n`+ prod_mulIndicator_subset`\n`+ prod_mulIndicator_subset_of_eq_one`\n`+ prod_mul_distrib`\n`+ prod_mul_eq_prod_mul_of_exists`\n`+ prod_mul_pow_card`\n`+ prod_mul_prod_comm`\n`+ prod_mul_prod_compl`\n`+ prod_mul_prod_eq_prod_zipWith_mul_prod_drop`\n`+ prod_mul_prod_eq_prod_zipWith_of_length_eq`\n`+ prod_multiset_count`\n`+ prod_multiset_count_of_subset`\n`+ prod_multiset_map_count`\n`+ prod_nbij`\n`+ prod_nbij'`\n`+ prod_nil`\n`+ prod_ninvolution`\n`+ prod_nsmul`\n`+ prod_of_empty`\n`+ prod_of_injOn`\n`+ prod_of_injective`\n`+ prod_of_isEmpty`\n`+ prod_one_cons`\n`+ prod_partition`\n`+ prod_piecewise`\n`+ prod_pow`\n`+ prod_pow_boole`\n`+ prod_pow_eq_pow_sum`\n`+ prod_powerset`\n`+ prod_powersetCard`\n`+ prod_powerset_cons`\n`+ prod_powerset_insert`\n`+ prod_preimage`\n`+ prod_preimage'`\n`+ prod_preimage_of_bij`\n`+ prod_product`\n`+ prod_product'`\n`+ prod_product_right`\n`+ prod_product_right'`\n`+ prod_range_add`\n`+ prod_range_add_div_prod_range`\n`+ prod_range_induction`\n`+ prod_range_one`\n`+ prod_range_succ_comm`\n`+ prod_range_zero`\n`+ prod_reverse`\n`+ prod_reverse_noncomm`\n`+ prod_rotate_eq_one_of_prod_eq_one`\n`+ prod_sdiff`\n`+ prod_sdiff_div_prod_sdiff`\n`+ prod_sdiff_eq_div`\n`+ prod_sdiff_eq_prod_sdiff_iff`\n`+ prod_sdiff_ne_prod_sdiff_iff`\n`+ prod_set`\n`+ prod_set'`\n`+ prod_set_coe`\n`+ prod_sigma`\n`+ prod_sigma'`\n`+ prod_subset_one_on_sdiff`\n`+ prod_subsingleton`\n`+ prod_subtype`\n`+ prod_subtype_eq_prod_filter`\n`+ prod_subtype_map_embedding`\n`+ prod_subtype_mul_prod_subtype`\n`+ prod_subtype_of_mem`\n`+ prod_sum`\n`+ prod_sum_elim`\n`+ prod_take_mul_prod_drop`\n`+ prod_take_succ`\n`+ prod_toFinset`\n`+ prod_toList`\n`+ prod_to_list`\n`+ prod_union`\n`+ prod_union_eq_left`\n`+ prod_union_eq_right`\n`+ prod_union_inter`\n`+ prod_unique`\n`+ prod_unique_nonempty`\n`+ prod_univ_pi`\n`+ prod_update_of_mem`\n`+ prod_update_of_not_mem`\n`+ prod_val`\n`+ prod_zero`\n`+ prod_zpow`\n`+ ptsOfPeriod`\n`+ pull`\n`+ pushforwardFamily`\n`+ pushforwardFamily_apply`\n`+ pushforwardFamily_compatible`\n`+ pushforwardFamily_def`\n`+ pushforward_cover_iff_cover_pullback`\n`+ quasiSober`\n`+ quasicategory_of_filler`\n`+ quotNilradicalEquivPi`\n`+ quot_mk_eq_mk`\n`+ quot_out`\n`+ quot_out_zero`\n`+ quotientToEndHom`\n`+ quotientToEndHom_mk`\n`+ quotientToQuotientOfLE`\n`+ quotientToQuotientOfLE_hom_mk`\n`+ quotient_mk_comp_C_isIntegral_of_jacobson`\n`+ quotient_mk_eq_mk`\n`+ rTensor_nontrivial`\n`+ rTensor_reflects_exact`\n`+ rTensor_reflects_triviality`\n`+ radical_eq_jacobson_iff_radical_quotient_eq_jacobson_bot`\n`+ radical_le_jacobson`\n`+ range_comap_of_surjective`\n`+ range_eq_closure_interior`\n`+ range_eq_image_mulTSupport_or`\n`+ range_le_ker_of_exact_rTensor`\n`+ range_smul_pow_stabilizes`\n`+ range_specComap_of_surjective`\n`+ range_subset_closure_interior`\n`+ range_subset_insert_image_mulTSupport`\n`+ ranges_flatten`\n`+ ranges_join`\n`+ ranges_nodup`\n`+ rank_adjoin_eq_one_iff`\n`+ rank_adjoin_simple_eq_one_iff`\n`+ rank_bot`\n`+ rank_bot'`\n`+ rank_eq_one_iff`\n`+ rank_quotient_eq_of_le_torsion`\n`+ rank_sup_le_of_isAlgebraic`\n`+ rank_top`\n`+ rank_top'`\n`+ ratCast`\n`+ reduceHBinOp`\n`+ reduceHBinOpAux`\n`+ reduceUnOp`\n`+ reduceUnOpAux`\n`+ reducibleId`\n`+ refl_of`\n`+ reflexive_left`\n`+ reflexive_right`\n`+ rel_prod`\n`+ repr`\n`+ reprField`\n`+ repr_ker`\n`+ res`\n`+ resComp`\n`+ resId`\n`+ res_additive`\n`+ res_linear`\n`+ restrict`\n`+ restrictHomEquivHom`\n`+ restrictScalars`\n`+ restrictScalarsField`\n`+ restrictScalars_adjoin`\n`+ restrictScalars_adjoin_eq_sup`\n`+ restrictScalars_adjoin_of_algEquiv`\n`+ restrictScalars_bot_eq_self`\n`+ restrictScalars_inf`\n`+ restrictScalars_sup`\n`+ restrictScalars_top`\n`+ rfl`\n`+ rightDual_v`\n`+ rightDual_ρ`\n`+ rightInvOn`\n`+ right_inv`\n`+ right_of_add`\n`+ ringEquiv`\n`+ ringEquiv_apply`\n`+ ringEquiv_symm_apply`\n`+ rotateTriangleOpEquivalenceInverseObjRotateUnopIso`\n`+ rotate_distinguished_triangle`\n`+ sInf_image2_eq_sInf_sInf`\n`+ sInf_image2_eq_sInf_sSup`\n`+ sInf_image2_eq_sSup_sInf`\n`+ sInf_image2_eq_sSup_sSup`\n`+ sInf_toSubalgebra`\n`+ sInf_toSubfield`\n`+ sSup_def`\n`+ sSup_image2_eq_sInf_sInf`\n`+ sSup_image2_eq_sInf_sSup`\n`+ sSup_image2_eq_sSup_sInf`\n`+ sSup_image2_eq_sSup_sSup`\n`+ sSup_toSubfield`\n`+ secondCountableTopology`\n`+ self_mem_periodicOrbit`\n`+ semigroup`\n`+ semigroupWithZero`\n`+ semilatticeInf`\n`+ semilatticeSup`\n`+ separatesPoints_continuous_of_t35Space`\n`+ separatesPoints_continuous_of_t35Space_Icc`\n`+ separator`\n`+ setIntegral_compProd_univ_left`\n`+ setIntegral_compProd_univ_right`\n`+ setLIntegral_compProd_univ_left`\n`+ setLIntegral_compProd_univ_right`\n`+ set_has_minimal_iff_artinian`\n`+ set_integral_compProd_univ_left`\n`+ set_integral_compProd_univ_right`\n`+ set_lintegral_compProd_univ_left`\n`+ set_lintegral_compProd_univ_right`\n`+ setoid`\n`+ sheafCoyonedaHom`\n`+ sheafEquiv`\n`+ sheafEquivSheafificationCompatibility`\n`+ sheafHom`\n`+ sheafHom_eq`\n`+ sheafHom_restrict_eq`\n`+ sheafInducedTopologyEquivOfIsCoverDense`\n`+ sheafYonedaHom`\n`+ sheaf_eq_amalgamation`\n`+ shiftFunctorAdd'_op_hom_app`\n`+ shiftFunctorAdd'_op_inv_app`\n`+ shiftFunctorOpIso`\n`+ shiftFunctorZero_op_hom_app`\n`+ shiftFunctorZero_op_inv_app`\n`+ shiftFunctor_op_map`\n`+ shift_unop_opShiftFunctorEquivalence_counitIso_hom_app`\n`+ shift_unop_opShiftFunctorEquivalence_counitIso_inv_app`\n`+ simplicialCosimplicialAugmentedEquiv`\n`+ simplicialCosimplicialEquiv`\n`+ simplicialToCosimplicialAugmented`\n`+ sk`\n`+ sk.faithful`\n`+ sk.full`\n`+ sk.fullyFaithful`\n`+ skAdj`\n`+ skAdj.coreflective`\n`+ sk_coreflective`\n`+ smoothManifoldWithCorners_of_contDiffOn`\n`+ smul`\n`+ smul_def`\n`+ smul_hom`\n`+ snd`\n`+ snd_apply`\n`+ snd_apply'`\n`+ snd_bot`\n`+ snd_comp`\n`+ snd_compProd_prodMkLeft`\n`+ snd_dirac_unit_compProd_const`\n`+ snd_eq`\n`+ snd_map_prod`\n`+ snd_map_prod_id`\n`+ snd_prodMkLeft`\n`+ snd_prodMkRight`\n`+ snd_swapRight`\n`+ snd_top`\n`+ snd_zero`\n`+ specComap_asIdeal`\n`+ specComap_comp`\n`+ specComap_comp_apply`\n`+ specComap_id`\n`+ specComap_injective_of_surjective`\n`+ specializes_closedPoint`\n`+ stableUnderGeneralization_singleton`\n`+ stableUnderSpecialization_image_iff`\n`+ stableUnderSpecialization_range_iff`\n`+ stableUnderSpecialization_singleton`\n`+ strictMono_l`\n`+ strictMono_u`\n`+ sub_abv_le_abv_sub`\n`+ sub_le`\n`+ sub_le_add`\n`+ sub_mod_lt`\n`+ subadditiveHomClass`\n`+ subset_adjoin`\n`+ subset_adjoin_of_subset_left`\n`+ subset_adjoin_of_subset_right`\n`+ subset_maximalAtlas`\n`+ subset_mulTSupport`\n`+ subset_vanishingIdeal_zeroLocus`\n`+ subset_zeroLocus_iff_le_vanishingIdeal`\n`+ subset_zeroLocus_iff_subset_vanishingIdeal`\n`+ subset_zeroLocus_vanishingIdeal`\n`+ subsingleton_iff_bot_eq_top`\n`+ subsingleton_of_bot_eq_top`\n`+ subsingleton_of_finrank_adjoin_eq_one`\n`+ subsingleton_of_finrank_adjoin_le_one`\n`+ subsingleton_of_rank_adjoin_eq_one`\n`+ subsingleton_of_top_le_bot`\n`+ subtype_isMaximal_finite`\n`+ sumAddMonoidHom`\n`+ sum_add_tsum_nat_add`\n`+ sum_card_fiberwise_eq_card_filter`\n`+ sum_comap_seq`\n`+ sum_count_eq`\n`+ sum_count_eq_card`\n`+ sum_filter_count_eq_countP`\n`+ sum_hom`\n`+ sum_join`\n`+ sum_le_tsum`\n`+ sum_map_count_dedup_eq_length`\n`+ sum_map_count_dedup_filter_eq_countP`\n`+ sum_map_seq`\n`+ sum_map_singleton`\n`+ sum_map_tsub`\n`+ sum_multiset_singleton`\n`+ sum_of_empty`\n`+ sum_range_tsub`\n`+ sum_toFinset_count_eq_length`\n`+ sum_tsub_distrib`\n`+ summable`\n`+ summable_coe`\n`+ summable_comp_injective`\n`+ summable_iff_not_tendsto_nat_atTop`\n`+ summable_mk`\n`+ summable_nat_add`\n`+ summable_nat_add_iff`\n`+ summable_of_isBigO`\n`+ summable_of_isBigO_nat`\n`+ summable_of_le`\n`+ summable_of_sum_range_le`\n`+ summable_sigma`\n`+ summable_toNNReal_of_tsum_ne_top`\n`+ summable_toReal`\n`+ summand`\n`+ sup_bot_eq`\n`+ sup_def`\n`+ sup_eq_bot_iff`\n`+ sup_toSubalgebra_of_isAlgebraic`\n`+ sup_toSubalgebra_of_isAlgebraic_left`\n`+ sup_toSubalgebra_of_isAlgebraic_right`\n`+ sup_toSubalgebra_of_left`\n`+ sup_toSubalgebra_of_right`\n`+ sup_toSubfield`\n`+ sup_top_eq`\n`+ sup_vanishingIdeal_le`\n`+ surjective_of_injective_endomorphism`\n`+ swapLeft`\n`+ swapLeft_apply`\n`+ swapLeft_apply'`\n`+ swapLeft_prodMkLeft`\n`+ swapLeft_prodMkRight`\n`+ swapRight`\n`+ swapRight_apply`\n`+ swapRight_apply'`\n`+ swapRight_eq`\n`+ symm_comp_self`\n`+ symm_continuousWithinAt_comp_right_iff`\n`+ symm_flip`\n`+ symm_map_nhdsWithin_image`\n`+ symm_map_nhdsWithin_range`\n`+ symm_of`\n`+ symm_trans_mem_contDiffGroupoid`\n`+ t1Space`\n`+ t1Space_iff_isField`\n`+ tail_sum`\n`+ take_sum_flatten`\n`+ take_sum_join`\n`+ target_eq`\n`+ tendsto_atTop`\n`+ tendsto_atTop_zero`\n`+ tendsto_atTop_zero_of_summable`\n`+ tendsto_atTop_zero_of_tsum_ne_top`\n`+ tendsto_coe'`\n`+ tendsto_coe_atTop`\n`+ tendsto_coe_ennreal`\n`+ tendsto_coe_nhds_top`\n`+ tendsto_coe_sub`\n`+ tendsto_cofinite_zero_of_summable`\n`+ tendsto_cofinite_zero_of_tsum_ne_top`\n`+ tendsto_extend_comp_iff`\n`+ tendsto_finset_prod_of_ne_top`\n`+ tendsto_iff_edist_tendsto_0`\n`+ tendsto_inv_iff`\n`+ tendsto_inv_nat_nhds_zero`\n`+ tendsto_mul`\n`+ tendsto_nat_nhds_top`\n`+ tendsto_nat_tsum`\n`+ tendsto_nhds`\n`+ tendsto_nhds_bot_iff_real`\n`+ tendsto_nhds_coe_iff`\n`+ tendsto_nhds_of_Icc`\n`+ tendsto_nhds_top`\n`+ tendsto_nhds_top_iff_nat`\n`+ tendsto_nhds_top_iff_nnreal`\n`+ tendsto_nhds_top_iff_real`\n`+ tendsto_nhds_zero`\n`+ tendsto_ofReal`\n`+ tendsto_ofReal_atTop`\n`+ tendsto_ofReal_nhds_top`\n`+ tendsto_of_antitone`\n`+ tendsto_sub`\n`+ tendsto_toNNReal`\n`+ tendsto_toReal_atBot`\n`+ tendsto_toReal_atTop`\n`+ tendsto_toReal_iff`\n`+ tensorUnitIso`\n`+ tensorUnit_ρ`\n`+ tensorUnit_ρ'`\n`+ tensor_ρ`\n`+ tensor_ρ'`\n`+ the`\n`+ thin_of_isCoseparating_empty`\n`+ thin_of_isSeparating_empty`\n`+ toAbsoluteValue`\n`+ toAdd_list_sum`\n`+ toAdd_multiset_sum`\n`+ toAdd_pow`\n`+ toAdd_prod`\n`+ toAdd_zpow`\n`+ toClosureOperator`\n`+ toDualLeft`\n`+ toDualLeft_apply`\n`+ toDualLeft_of_toDualRight_symm`\n`+ toDualRight`\n`+ toDualRight_apply`\n`+ toDualRight_symm_comp_toDualLeft`\n`+ toDualRight_symm_toDualLeft`\n`+ toDual_bot`\n`+ toDual_top`\n`+ toEndHom`\n`+ toEndHom_apply`\n`+ toEndHom_trivial_of_mem`\n`+ toFinset_prod_dvd_prod`\n`+ toFinset_sum_count_eq`\n`+ toFinset_sum_count_nsmul_eq`\n`+ toFun'`\n`+ toLin_apply`\n`+ toModule_totalize_of_le`\n`+ toMonoidHom`\n`+ toMonoidWithZeroHom`\n`+ toMul_list_sum`\n`+ toMul_multiset_sum`\n`+ toMul_sum`\n`+ toNNReal_apply_of_tsum_ne_top`\n`+ toNonneg`\n`+ toNonneg_coe`\n`+ toNonneg_le`\n`+ toNonneg_lt`\n`+ toNonneg_of_nonneg`\n`+ toPartENat`\n`+ toPartENat_apply_of_aleph0_le`\n`+ toPartENat_apply_of_lt_aleph0`\n`+ toPartENat_cast`\n`+ toPartENat_congr`\n`+ toPartENat_eq_iff_of_le_aleph0`\n`+ toPartENat_eq_top`\n`+ toPartENat_eq_top_iff_le_aleph0`\n`+ toPartENat_le_iff_of_le_aleph0`\n`+ toPartENat_le_iff_of_lt_aleph0`\n`+ toPartENat_lift`\n`+ toPartENat_mono`\n`+ toPartENat_natCast`\n`+ toPartENat_strictMonoOn`\n`+ toPartENat_surjective`\n`+ toPartialEquiv_coe`\n`+ toPartialEquiv_coe_symm`\n`+ toPerfectPairing`\n`+ toPrimeSpectrum`\n`+ toPrimeSpectrum_continuous`\n`+ toPrimeSpectrum_injective`\n`+ toPrimeSpectrum_range`\n`+ toSubalgebra_iSup_of_directed`\n`+ top`\n`+ topEquiv`\n`+ topOrderOrNoTopOrder`\n`+ top_apply`\n`+ top_def`\n`+ top_eq_true`\n`+ top_inf_eq`\n`+ top_le_iff`\n`+ top_map`\n`+ top_ne_bot`\n`+ top_not_mem_iff`\n`+ top_sup_eq`\n`+ top_toSubalgebra`\n`+ top_toSubfield`\n`+ top_unique`\n`+ total_of`\n`+ totalize`\n`+ totalize_of_le`\n`+ totalize_of_not_le`\n`+ tprod_mul_tprod`\n`+ transEventuallyEqIsBigO`\n`+ transEventuallyEqIsLittleO`\n`+ transIsBigOEventuallyEq`\n`+ transIsBigOIsBigO`\n`+ transIsBigOIsLittleO`\n`+ transIsLittleOEventuallyEq`\n`+ transIsLittleOIsBigO`\n`+ transIsLittleOIsLittleO`\n`+ trans_dualMap_symm_flip`\n`+ trans_dvd`\n`+ trans_of`\n`+ transcendental`\n`+ transcendental_X`\n`+ transcendental_aeval_iff`\n`+ transcendental_algebraMap_iff`\n`+ transcendental_iff`\n`+ transcendental_iff_injective`\n`+ transcendental_iff_ker_eq_bot`\n`+ transcendental_polynomial_aeval_X`\n`+ transcendental_polynomial_aeval_X_iff`\n`+ transcendental_ringHom_iff_of_comp_eq`\n`+ transcendental_supported_X`\n`+ transcendental_supported_X_iff`\n`+ transcendental_supported_polynomial_aeval_X`\n`+ transcendental_supported_polynomial_aeval_X_iff`\n`+ triangleOpEquivalence`\n`+ trichotomous`\n`+ trichotomous_of`\n`+ trivial`\n`+ truncateToReal`\n`+ truncateToReal_eq_toReal`\n`+ truncateToReal_le`\n`+ truncateToReal_nonneg`\n`+ tsub_div`\n`+ tsum_add`\n`+ tsum_add_one_eq_top`\n`+ tsum_apply`\n`+ tsum_biUnion_le`\n`+ tsum_biUnion_le_tsum`\n`+ tsum_coe_eq`\n`+ tsum_coe_eq_top_iff_not_summable_coe`\n`+ tsum_coe_ne_top_iff_summable`\n`+ tsum_coe_ne_top_iff_summable_coe`\n`+ tsum_comm`\n`+ tsum_comp_le_tsum_of_injective`\n`+ tsum_const_eq_top_of_ne_zero`\n`+ tsum_const_smul`\n`+ tsum_eq_iSup_nat`\n`+ tsum_eq_iSup_nat'`\n`+ tsum_eq_iSup_sum`\n`+ tsum_eq_iSup_sum'`\n`+ tsum_eq_liminf_sum_nat`\n`+ tsum_eq_limsup_sum_nat`\n`+ tsum_eq_toNNReal_tsum`\n`+ tsum_eq_top_of_eq_top`\n`+ tsum_eq_zero`\n`+ tsum_fiberwise`\n`+ tsum_iSup_eq`\n`+ tsum_iUnion_le`\n`+ tsum_iUnion_le_tsum`\n`+ tsum_indicator_ne_zero`\n`+ tsum_le_tsum`\n`+ tsum_le_tsum_comp_of_surjective`\n`+ tsum_mono_subtype`\n`+ tsum_pos`\n`+ tsum_prod`\n`+ tsum_prod'`\n`+ tsum_sigma`\n`+ tsum_sigma'`\n`+ tsum_strict_mono`\n`+ tsum_sub`\n`+ tsum_toNNReal_eq`\n`+ tsum_toReal_eq`\n`+ tsum_top`\n`+ tsum_union_le`\n`+ tsupport_mul_subset_left`\n`+ tsupport_mul_subset_right`\n`+ tsupport_smul_subset_left`\n`+ tsupport_smul_subset_right`\n`+ two_dvd_ne_zero`\n`+ two_mul_ediv_two_of_even`\n`+ two_not_dvd_two_mul_add_one`\n`+ u_biSup_l`\n`+ u_biSup_of_lu_eq_self`\n`+ u_bot`\n`+ u_comm_of_l_comm`\n`+ u_eq`\n`+ u_eq_top`\n`+ u_iInf`\n`+ u_iInf_l`\n`+ u_iInf₂`\n`+ u_iSup_l`\n`+ u_iSup_of_lu_eq_self`\n`+ u_inf`\n`+ u_inf_l`\n`+ u_injective`\n`+ u_l_eq`\n`+ u_l_leftInverse`\n`+ u_l_u_eq_u`\n`+ u_l_u_eq_u'`\n`+ u_le_u_iff`\n`+ u_sInf`\n`+ u_sInf_l_image`\n`+ u_sSup_l_image`\n`+ u_sup_l`\n`+ u_surjective`\n`+ u_top`\n`+ u_unique`\n`+ uniform_embedding_add_rat`\n`+ uniform_embedding_mul_rat`\n`+ union_zeroLocus`\n`+ unique`\n`+ uniqueDiffOn`\n`+ uniqueDiffOn_extChartAt_target`\n`+ uniqueDiffOn_preimage`\n`+ uniqueDiffOn_preimage_source`\n`+ uniqueDiffWithinAt_extChartAt_target`\n`+ uniqueDiffWithinAt_image`\n`+ uniqueUnits`\n`+ unique_diff`\n`+ unique_diff_at_image`\n`+ unique_diff_preimage`\n`+ unique_diff_preimage_source`\n`+ unit_associated_one`\n`+ units_eq_one`\n`+ units_natAbs`\n`+ unop_distinguished`\n`+ unop_list_prod`\n`+ unop_map_list_prod`\n`+ unop_sum`\n`+ up_bot`\n`+ up_top`\n`+ upperBounds_l_image`\n`+ vanishingIdeal`\n`+ vanishingIdeal_anti_mono`\n`+ vanishingIdeal_anti_mono_iff`\n`+ vanishingIdeal_closure`\n`+ vanishingIdeal_empty`\n`+ vanishingIdeal_eq_top_iff`\n`+ vanishingIdeal_iUnion`\n`+ vanishingIdeal_irreducibleComponents`\n`+ vanishingIdeal_isClosed_isIrreducible`\n`+ vanishingIdeal_isIrreducible`\n`+ vanishingIdeal_mem_minimalPrimes`\n`+ vanishingIdeal_range_comap`\n`+ vanishingIdeal_singleton`\n`+ vanishingIdeal_strict_anti_mono_iff`\n`+ vanishingIdeal_union`\n`+ vanishingIdeal_zeroLocus_eq_radical`\n`+ wellPowered_of_isDetecting`\n`+ wellPowered_of_isDetector`\n`+ wellPowered_of_isSeparator`\n`+ whiskerLeft_obj_map_bijective_of_isCoverDense`\n`+ writtenInExtChartAt`\n`+ writtenInExtChartAt_chartAt`\n`+ writtenInExtChartAt_chartAt_comp`\n`+ writtenInExtChartAt_chartAt_symm`\n`+ writtenInExtChartAt_chartAt_symm_comp`\n`+ writtenInExtChartAt_extChartAt`\n`+ writtenInExtChartAt_extChartAt_symm`\n`+ w₀`\n`+ zeroHomClass`\n`+ zeroLocus`\n`+ zeroLocus_anti_mono`\n`+ zeroLocus_anti_mono_ideal`\n`+ zeroLocus_bUnion`\n`+ zeroLocus_bot`\n`+ zeroLocus_empty`\n`+ zeroLocus_empty_iff_eq_top`\n`+ zeroLocus_empty_of_one_mem`\n`+ zeroLocus_eq_iff`\n`+ zeroLocus_eq_top_iff`\n`+ zeroLocus_iSup`\n`+ zeroLocus_iUnion`\n`+ zeroLocus_iUnion₂`\n`+ zeroLocus_ideal_mem_irreducibleComponents`\n`+ zeroLocus_inf`\n`+ zeroLocus_minimalPrimes`\n`+ zeroLocus_mul`\n`+ zeroLocus_pow`\n`+ zeroLocus_radical`\n`+ zeroLocus_singleton_mul`\n`+ zeroLocus_singleton_one`\n`+ zeroLocus_singleton_pow`\n`+ zeroLocus_singleton_zero`\n`+ zeroLocus_span`\n`+ zeroLocus_subset_zeroLocus_iff`\n`+ zeroLocus_subset_zeroLocus_singleton_iff`\n`+ zeroLocus_sup`\n`+ zeroLocus_union`\n`+ zeroLocus_univ`\n`+ zeroLocus_vanishingIdeal_eq_closure`\n`+ zero_comp`\n`+ zero_compl`\n`+ zero_hom`\n`+ zero_iff_lTensor_zero`\n`+ zero_iff_rTensor_zero`\n`+ zpow_add_period_smul`\n`+ zpow_mod_period_smul`\n`+ zpow_period_add_smul`\n`+ zpow_smul_eq_iff_minimalPeriod_dvd`\n`+ zpow_smul_eq_iff_period_dvd`\n`+ zpow_smul_mod_minimalPeriod`\n`+ zsmul_int_int`\n`+ zsmul_int_one`\n`+ ι_desc`\n`+ ρAut`\n`+ ρ_one`\n`+ φ`\n`+ ⟨Finite.of_inv,`\n`+ ⟨Finite.of_smul_set,`\n`+ ⟨_,`\n`++ Augmented`\n`++ Hom`\n`++ Simps.apply`\n`++ Truncated`\n`++ abs_abv_sub_le_abv_sub`\n`++ add`\n`++ addMonoidWithOne`\n`++ ae_ae_of_ae_compProd`\n`++ ae_compProd_iff`\n`++ ae_compProd_of_ae_ae`\n`++ algEquiv`\n`++ algEquivEquivAlgHom`\n`++ algEquiv_apply`\n`++ augment`\n`++ augment_hom_zero`\n`++ coe_bot`\n`++ coe_one`\n`++ coe_top`\n`++ coe_tsum`\n`++ coe_zero`\n`++ comap`\n`++ comap_id`\n`++ commRing`\n`++ commSemiring`\n`++ compProd`\n`++ compProd_add_left`\n`++ compProd_add_right`\n`++ compProd_apply`\n`++ compProd_zero_left`\n`++ compProd_zero_right`\n`++ comp_C_integral_of_surjective_of_isJacobsonRing`\n`++ const`\n`++ continuousOn_toReal`\n`++ continuous_coe`\n`++ continuous_coe_iff`\n`++ counitIso`\n`++ diagonal`\n`++ drop`\n`++ dvd_prod`\n`++ embedding_coe`\n`++ eqToIso`\n`++ eqToIso_refl`\n`++ exists_of`\n`++ extendScalars_inf`\n`++ extendScalars_self`\n`++ extendScalars_sup`\n`++ extendScalars_top`\n`++ faithful_sheafPushforwardContinuous`\n`++ field`\n`++ flip`\n`++ flip_flip`\n`++ forget`\n`++ fst_prod`\n`++ full_sheafPushforwardContinuous`\n`++ functor`\n`++ gc`\n`++ hasSum_coe`\n`++ hasSum_iff_tendsto_nat`\n`++ hasSum_lt`\n`++ iInf_localization_eq_bot`\n`++ inhabited`\n`++ injective`\n`++ instAddCommMonoid`\n`++ instAddCommSemigroup`\n`++ instAddMonoid`\n`++ instAddSemigroup`\n`++ instBot`\n`++ instCommSemigroup`\n`++ instMonoid`\n`++ instSemigroup`\n`++ instTop`\n`++ instance :`\n`++ instance : Category (Augmented C) := by`\n`++ instance : Inhabited (DirectLimit G f)`\n`++ instance {J : Type v} [SmallCategory J] [HasColimitsOfShape J C] :`\n`++ instance {J : Type v} [SmallCategory J] [HasLimitsOfShape J C] :`\n`++ instance {J : Type w₁} [Category.{w₂} J] (F : J ⥤ Action V G) :`\n`++ instance {J : Type w₁} [Category.{w₂} J] :`\n`++ instance {n : ℕ} : Category (Truncated C n) := by`\n`++ instance {n} {J : Type v} [SmallCategory J] [HasColimitsOfShape J C] :`\n`++ instance {n} {J : Type v} [SmallCategory J] [HasLimitsOfShape J C] :`\n`++ integrable_compProd_iff`\n`++ integral_compProd`\n`++ inverse`\n`++ isBigOWith_principal`\n`++ isBigO_principal`\n`++ isEmbedding_coe`\n`++ isIntegral_isLocalization_polynomial_quotient`\n`++ isMaximal_comap_C_of_isMaximal`\n`++ isOpenEmbedding_coe`\n`++ isOpen_Ico_zero`\n`++ jacobson`\n`++ jacobson_bot_of_integral_localization`\n`++ le_iff_lt_or_eq`\n`++ liftBoundedOrder`\n`++ liftCompleteLattice`\n`++ liftLattice`\n`++ liftSemilatticeInf`\n`++ liftSemilatticeSup`\n`++ lintegral_compProd`\n`++ ltByCases`\n`++ lt_or_eq_of_le`\n`++ map_inf`\n`++ map_list_prod`\n`++ map_neg`\n`++ mem_jacobson_iff`\n`++ mem_sum`\n`++ mk`\n`++ mk_eq_one`\n`++ mk_eq_zero`\n`++ mk_mul_mk`\n`++ mk_pow`\n`++ module`\n`++ mulEquiv`\n`++ ne_zero`\n`++ nhds_coe`\n`++ nhds_coe_coe`\n`++ nhds_top`\n`++ nhds_top'`\n`++ nhds_top_basis`\n`++ nhds_zero`\n`++ nhds_zero_basis`\n`++ nontrivial`\n`++ of.zero_exact_aux`\n`++ ofMulAction`\n`++ ofMulAction_apply`\n`++ openEmbedding_coe`\n`++ orderBot`\n`++ point`\n`++ presheafIso`\n`++ prod_bijective`\n`++ prod_const`\n`++ prod_dite_eq`\n`++ prod_dite_eq'`\n`++ prod_dvd_prod_of_dvd`\n`++ prod_empty`\n`++ prod_eq_foldl`\n`++ prod_eq_foldr`\n`++ prod_eq_pow_card`\n`++ prod_eq_pow_single`\n`++ prod_equiv`\n`++ prod_fiberwise`\n`++ prod_fiberwise'`\n`++ prod_filter_mul_prod_filter_not`\n`++ prod_hom`\n`++ prod_hom₂`\n`++ prod_induction_nonempty`\n`++ prod_ite_eq`\n`++ prod_ite_eq'`\n`++ prod_ite_mem`\n`++ prod_map_eq_pow_single`\n`++ prod_map_erase`\n`++ prod_map_mul`\n`++ prod_map_one`\n`++ prod_pair`\n`++ prod_pi_mulSingle`\n`++ prod_pi_mulSingle'`\n`++ prod_range_div`\n`++ prod_range_div'`\n`++ prod_range_succ`\n`++ prod_range_succ'`\n`++ prod_replicate`\n`++ prod_subset`\n`++ quotient_mk_comp_C_isIntegral_of_isJacobsonRing`\n`++ refl`\n`++ ring`\n`++ self`\n`++ semiring`\n`++ setIntegral_compProd`\n`++ setLIntegral_compProd`\n`++ set_integral_compProd`\n`++ set_lintegral_compProd`\n`++ sheafIso`\n`++ snd_prod`\n`++ sub`\n`++ sum_const_nat`\n`++ tendsto_sum_nat_add`\n`++ tendsto_toReal`\n`++ tendsto_tsum_compl_atTop_zero`\n`++ toArrow`\n`++ truncation`\n`++ tsum_comp_le_tsum_of_inj`\n`++ tsum_eq_add_tsum_ite`\n`++ tsum_le_of_sum_range_le`\n`++ tsum_lt_tsum`\n`++ tsum_mul_left`\n`++ tsum_mul_right`\n`++ unitIso`\n`++ whiskeringObj`\n`++ zariskiTopology`\n`++ δ`\n`++ δ_comp_δ`\n`++ δ_comp_δ'`\n`++ δ_comp_δ''`\n`++ δ_comp_δ_self`\n`++ δ_comp_δ_self'`\n`++ δ_comp_σ_of_gt`\n`++ δ_comp_σ_of_gt'`\n`++ δ_comp_σ_of_le`\n`++ δ_comp_σ_self`\n`++ δ_comp_σ_self'`\n`++ δ_comp_σ_succ`\n`++ δ_comp_σ_succ'`\n`++ δ_naturality`\n`++ σ`\n`++ σ_comp_σ`\n`++ σ_naturality`\n`+++ DirectLimit`\n`+++ congr`\n`+++ congr_apply_of`\n`+++ congr_symm_apply_of`\n`+++ id`\n`+++ induction_on`\n`+++ instBoundedOrder`\n`+++ instCommMonoid`\n`+++ isBigOWith_congr`\n`+++ isBigO_congr`\n`+++ isLittleO_congr`\n`+++ lift`\n`+++ lift_injective`\n`+++ lift_of`\n`+++ lift_unique`\n`+++ map_apply_of`\n`+++ map_zero`\n`+++ mul`\n`+++ of.zero_exact`\n`+++ of_f`\n`+++ one`\n`+++ pow`\n`+++ prod_cons`\n`+++ prod_eq_one`\n`+++ prod_erase`\n`+++ prod_hom_rel`\n`+++ prod_induction`\n`+++ prod_int_mod`\n`+++ prod_nat_mod`\n`+++ prod_singleton`\n`+++ sum_int_mod`\n`+++ sum_nat_mod`\n`+++ symm`\n`+++ tendsto_coe`\n`+++ zero`\n`++++ instOrderBot`\n`++++ instOrderTop`\n`++++ map_comp`\n`++++ map_id`\n`++++ of`\n`++++ trans`\n`+++++ ext`\n`+++++ prod`\n`++++++ whiskering`\n`+++++++ comp`\n`+++++++ hom_ext`\n`++++++++ map`\n`+++++++++++++ _`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>\n\n---\n\n<details><summary>Increase in tech debt: (relative, absolute) = (2.46, 0.28)</summary>\n\n|Current number|Change|Type|\n|-:|:-:|:-|\n|4680|112|porting notes|\n|204|3|disabled simpNF lints|\n|1449|36|erw|\n|12|1|maxHeartBeats modifications|\n|62|4|large files|\n|115|8|bare open (scoped) Classical|\n\nCurrent commit [3e67068e2a](https://github.com/leanprover-community/mathlib4/commit/3e67068e2ab3b4756322d4bd917a6d8964534be6)\nReference commit [f033341c29](https://github.com/leanprover-community/mathlib4/commit/f033341c29027b524efda42ef0e579be9fbb786f)\n\nYou can run this locally as\n```\n./scripts/technical-debt-metrics.sh pr_summary\n```\n* The `relative` value is the weighted *sum* of the differences with weight given by the *inverse* of the current value of the statistic.\n* The `absolute` value is the `relative` value divided by the total sum of the inverses of the current values (i.e. the weighted *average* of the differences).\n</details>\n",
              "createdAt": "2025-01-21T21:07:39Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6bUISH",
              "body": "oops, git was telling me something about unrelated histories and now there are 93 files changed... I'll just reopen the pull request if I don't manage to fix this here",
              "createdAt": "2025-01-21T21:10:00Z",
              "author": {
                "login": "Bergschaf"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "ef65270ea1dfc0dd06b866bd8798405311c4c134",
                "additions": 12,
                "deletions": 0,
                "committedDate": "2024-11-24T17:48:27Z",
                "author": {
                  "name": "Bergschaf",
                  "email": "christian.k@netcom-mail.de"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHyXh6tQ",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11998299476/job/33444887221"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHyXh7vg",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11998299478/job/33444887486"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHyXh7fA",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11998299476/job/33444887420"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHyXh67Q",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11998299478/job/33444887277"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHyXh7Xg",
                        "name": "Build",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11998299478/job/33444887390"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHyXh7FQ",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11998299476/job/33444887317"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHyXh74w",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11998299476/job/33444887523"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHyXm0kg",
                        "name": "Post-CI job",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11998299478/job/33444967570"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "f027f6ce364b53d285e8a1a5ea8e44d26921a9d8",
                "additions": 8,
                "deletions": 0,
                "committedDate": "2024-11-24T18:05:21Z",
                "author": {
                  "name": "Bergschaf",
                  "email": "christian.k@netcom-mail.de"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHyX0FkQ",
                        "name": "Add topic label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11998429567/job/33445184913"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHyX0FoA",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11998429557/job/33445184928"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHyX0FmA",
                        "name": "post-or-update-summary-comment",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11998429554/job/33445184920"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHyXvtog",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11998397226/job/33445113250"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHyXvtgQ",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11998397228/job/33445113217"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHyX0GIQ",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11998429559/job/33445185057"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHyXvt-g",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11998397226/job/33445113338"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHyXvt0A",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11998397228/job/33445113296"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHyX0Fmw",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11998429559/job/33445184923"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHyXvtJQ",
                        "name": "Build",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11998397228/job/33445113125"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHyXvtMg",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11998397226/job/33445113138"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHyXvuTA",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11998397226/job/33445113420"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHyX2dIg",
                        "name": "Post-CI job",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11998397228/job/33445223714"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHyX0UMQ",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/33445188657"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHyX0jGQ",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=19440&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "0794d8199cc5a9f7847298f303c27d8a8225fa12",
                "additions": 1,
                "deletions": 0,
                "committedDate": "2024-11-24T18:16:28Z",
                "author": {
                  "name": "Bergschaf",
                  "email": "christian.k@netcom-mail.de"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHyX6ZbA",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11998479982/job/33445288300"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHyX6ZUw",
                        "name": "post-or-update-summary-comment",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11998479977/job/33445288275"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHyX6XkQ",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11998479726/job/33445287825"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHyX6YFQ",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11998479737/job/33445287957"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHyX6Zow",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11998479983/job/33445288355"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHyX6YLQ",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11998479726/job/33445287981"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHyX6YdQ",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11998479737/job/33445288053"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHyX6ZTA",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11998479983/job/33445288268"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHyX6XqA",
                        "name": "Build",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11998479737/job/33445287848"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHyX6X3w",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11998479726/job/33445287903"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHyX6YdA",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11998479726/job/33445288052"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHyYALQw",
                        "name": "Post-CI job",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11998479737/job/33445382979"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHyX6h2Q",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/33445290457"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHyX6z3Q",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=19440&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "0d1e8cf9ab34f4a88845dfebf28eec8e41af376d",
                "additions": 23,
                "deletions": 0,
                "committedDate": "2024-11-26T21:44:03Z",
                "author": {
                  "name": "Bergschaf",
                  "email": "christian.k@netcom-mail.de"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH0Mh2VA",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12039545451/job/33567569492"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH0Mh24Q",
                        "name": "post-or-update-summary-comment",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12039545465/job/33567569633"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH0Mh0uQ",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12039545041/job/33567569081"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH0Mhz4w",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12039545042/job/33567568867"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH0Mh3vA",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12039545445/job/33567569852"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH0Mhztg",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12039545041/job/33567568822"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH0Mh09g",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12039545042/job/33567569142"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH0Mh2tQ",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12039545445/job/33567569589"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH0Mhyjg",
                        "name": "Build",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12039545042/job/33567568526"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH0MhyoQ",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12039545041/job/33567568545"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH0Mh1qQ",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12039545041/job/33567569321"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH0M1f3Q",
                        "name": "Post-CI job",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12039545042/job/33567891421"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH0MiGTA",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/33567573580"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH0Mi9Sg",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=19440&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "6171c76d7ef6d889929fe2a334fa677eeaee1578",
                "additions": 5,
                "deletions": 4,
                "committedDate": "2024-11-26T21:57:02Z",
                "author": {
                  "name": "Bergschaf",
                  "email": "christian.k@netcom-mail.de"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIE_C6Yg",
                        "name": "Fix style issues from lint",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12426265663/job/34694281826"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIE_Dztw",
                        "name": "Fix style issues from lint",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12426276964/job/34694296503"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIE_I93g",
                        "name": "Fix style issues from lint",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12426311355/job/34694381022"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIE_J1Ig",
                        "name": "Fix style issues from lint",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12426317105/job/34694395170"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIE_EJig",
                        "name": "set_pr_emoji",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12426279053/job/34694302090"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIE_C5Yw",
                        "name": "Add ready-to-merge or delegated label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12426265660/job/34694281571"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIE_D0uw",
                        "name": "Add ready-to-merge or delegated label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12426277039/job/34694296763"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIE_I9pA",
                        "name": "Add ready-to-merge or delegated label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12426311348/job/34694380964"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIE_J0bw",
                        "name": "Add ready-to-merge or delegated label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12426317102/job/34694394991"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH0M8-Rw",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12039684369/job/33568013895"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIE_C5xg",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12426265672/job/34694281670"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIE_Dzvg",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12426276972/job/34694296510"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIE_I-WA",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12426311350/job/34694381144"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIE_J0mg",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12426317098/job/34694395034"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH0M89ag",
                        "name": "post-or-update-summary-comment",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12039684361/job/33568013674"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH0M87GA",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12039684056/job/33568013080"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH0M88bA",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12039684053/job/33568013420"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH0M89tQ",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12039684364/job/33568013749"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH0M88BA",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12039684056/job/33568013316"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH0M89Ug",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12039684053/job/33568013650"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH0M8_Hg",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12039684364/job/33568014110"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH0M888w",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12039684056/job/33568013555"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH0M87Vg",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12039684053/job/33568013142"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH0M8-SA",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12039684056/job/33568013896"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH0NUuFA",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12039684053/job/33568402964"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH0M9Qwg",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/33568018626"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH0M-P5Q",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=19440&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "b1060a54c87129e20951cd7ae176fdca54466cf7",
                "additions": 75,
                "deletions": 12,
                "committedDate": "2024-12-21T10:11:35Z",
                "author": {
                  "name": "Bergschaf",
                  "email": "christian.k@netcom-mail.de"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIFu6SYw",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12444314326/job/34744472163"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIFu6Sag",
                        "name": "post-or-update-summary-comment",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12444314322/job/34744472170"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIFu6ReQ",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12444314182/job/34744471929"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIFu6RdA",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12444314179/job/34744471924"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIFu6SvA",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12444314317/job/34744472252"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIFu6RyQ",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12444314182/job/34744472009"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIFu6SGw",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12444314179/job/34744472091"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIFu6SXg",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12444314317/job/34744472158"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIFu6RzA",
                        "name": "Build",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12444314179/job/34744472012"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIFu6SKA",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12444314182/job/34744472104"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIFu6StA",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12444314182/job/34744472244"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIFvCvKA",
                        "name": "Post-CI job",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12444314179/job/34744610600"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIFu6Ydw",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/34744473719"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIFu6yhA",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=19440&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "db78f0c5982a3f61653e2e41beabd504b84ead61",
                "additions": 1,
                "deletions": 1,
                "committedDate": "2024-12-21T10:29:18Z",
                "author": {
                  "name": "Bergschaf",
                  "email": "christian.k@netcom-mail.de"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIFxt7SQ",
                        "name": "Fix style issues from lint",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12445748528/job/34747415369"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIFxs6bg",
                        "name": "set_pr_emoji",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12445741957/job/34747398766"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIFxt7HQ",
                        "name": "Add ready-to-merge or delegated label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12445748529/job/34747415325"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIFvIBdQ",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12444434825/job/34744697205"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIFxt61g",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12445748531/job/34747415254"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIFvIBUw",
                        "name": "post-or-update-summary-comment",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12444434824/job/34744697171"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIFvH9_g",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12444434398/job/34744696318"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIFvH-cg",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12444434399/job/34744696434"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIFvIBpA",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12444434826/job/34744697252"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIFvH-tQ",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12444434398/job/34744696501"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIFvH-GA",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12444434399/job/34744696344"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIFvIBWg",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12444434826/job/34744697178"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIFvH-Sg",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12444434398/job/34744696394"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIFvH-uQ",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12444434399/job/34744696505"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIFvH_EA",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12444434398/job/34744696592"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIFvO9lQ",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12444434399/job/34744810901"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIFvIIAQ",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/34744698881"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIFvIgsw",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=19440&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "3755ffb07fc131f7357a683ce9b1aa2ee62e9131",
                "additions": 8,
                "deletions": 0,
                "committedDate": "2024-12-23T12:44:05Z",
                "author": {
                  "name": "Bergschaf",
                  "email": "christian.k@netcom-mail.de"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIGfnj4g",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12467011532/job/34795545570"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIGfnjVA",
                        "name": "post-or-update-summary-comment",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12467011524/job/34795545428"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIGfnguQ",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12467011192/job/34795544761"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIGfniEA",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12467011204/job/34795545104"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIGfnjPQ",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12467011534/job/34795545405"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIGfninw",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12467011192/job/34795545247"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIGfnjIQ",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12467011204/job/34795545377"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIGfnkRQ",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12467011534/job/34795545669"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIGfnhlQ",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12467011192/job/34795544981"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIGfng5Q",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12467011204/job/34795544805"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIGfnkEg",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12467011192/job/34795545618"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIGf76Og",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12467011204/job/34795878970"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIGfn2qg",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/34795550378"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIGforog",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=19440&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "abb0faa5c61e47918481ad3776b12795be5c4c39",
                "additions": 11,
                "deletions": 12,
                "committedDate": "2024-12-25T16:51:13Z",
                "author": {
                  "name": "Bergschaf",
                  "email": "christian.k@netcom-mail.de"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIHiCYjg",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12494962291/job/34865191054"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIHiCY3A",
                        "name": "post-or-update-summary-comment",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12494962297/job/34865191132"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIHiCXFg",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12494962086/job/34865190678"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIHiCXFA",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12494962078/job/34865190676"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIHiCY2w",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12494962289/job/34865191131"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIHiCXgw",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12494962086/job/34865190787"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIHiCXxQ",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12494962078/job/34865190853"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIHiCYkw",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12494962289/job/34865191059"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIHiCX4A",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12494962086/job/34865190880"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIHiCXfQ",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12494962078/job/34865190781"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIHiCYNw",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12494962086/job/34865190967"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIHiIZBg",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12494962078/job/34865289478"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIHiCfLQ",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/34865192749"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIHiC1Ag",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=19440&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "1e03d6c2c99cc491e6ff8adfd5d4e8b42abbe02d",
                "additions": 2,
                "deletions": 2,
                "committedDate": "2024-12-25T17:01:08Z",
                "author": {
                  "name": "Bergschaf",
                  "email": "christian.k@netcom-mail.de"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIKOIezQ",
                        "name": "set_pr_emoji",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12573043814/job/35045646029"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIWejQEg",
                        "name": "set_pr_emoji",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12866165992/job/35868168210"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIWeifag",
                        "name": "Add ready-to-merge or delegated label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12866161972/job/35868155754"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIWwp2Vg",
                        "name": "Add ready-to-merge or delegated label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12872199280/job/35887150678"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIHiJmmw",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12495016760/job/34865309339"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIWeihGg",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12866161965/job/35868156186"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIWwp2EA",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12872199275/job/35887150608"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIHiJmbg",
                        "name": "post-or-update-summary-comment",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12495016767/job/34865309294"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIWeifbg",
                        "name": "Fix style issues from lint",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12866161964/job/35868155758"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIWwp2Jw",
                        "name": "Fix style issues from lint",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12872199277/job/35887150631"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIHiJisA",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12495016203/job/34865308336"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIHiJjsQ",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12495016194/job/34865308593"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIHiJmfQ",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12495016765/job/34865309309"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIHiJj0g",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12495016203/job/34865308626"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIHiJipQ",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12495016194/job/34865308325"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIHiJnBQ",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12495016765/job/34865309445"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIHiJjRA",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12495016203/job/34865308484"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIHiJjMQ",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12495016194/job/34865308465"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIHiJkYw",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12495016203/job/34865308771"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIHiSOSA",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12495016194/job/34865450568"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIHiJwkQ",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/34865311889"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIHiKF1w",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=19440&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "7e4f9a10196621fe20d56f77eeeb202fb831ae50",
                "additions": 29,
                "deletions": 31,
                "committedDate": "2025-01-20T16:30:26Z",
                "author": {
                  "name": "Bergschaf",
                  "email": "christian.k@netcom-mail.de"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIWw_o7w",
                        "name": "Add ready-to-merge or delegated label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12872307852/job/35887507695"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIWw2xfg",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12872264270/job/35887362430"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIWw_qJg",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12872307868/job/35887508006"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIWw2xoA",
                        "name": "post-or-update-summary-comment",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12872264267/job/35887362464"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIWw_qDA",
                        "name": "Fix style issues from lint",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12872307861/job/35887507980"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIWw2plw",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12872263664/job/35887360407"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIWw2q9Q",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12872263649/job/35887360757"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIWw2z5A",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12872264280/job/35887363044"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIWw2slA",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12872263664/job/35887361172"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIWw2sZQ",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12872263649/job/35887361125"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIWw2yzg",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12872264280/job/35887362766"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIWw2pmQ",
                        "name": "Build",
                        "conclusion": "CANCELLED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12872263649/job/35887360409"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIWw2rEw",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12872263664/job/35887360787"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIWxQrBw",
                        "name": "Post-CI job",
                        "conclusion": "CANCELLED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12872263649/job/35887786759"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIWw2tzg",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12872263664/job/35887361486"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIWw3LJw",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/35887368999"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIWw4NXw",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=19440&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "1fc72dba237c4a6e2cb7d4716aa5667658d9c377",
                "additions": 3,
                "deletions": 11,
                "committedDate": "2025-01-20T16:36:15Z",
                "author": {
                  "name": "Bergschaf",
                  "email": "christian.k@netcom-mail.de"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIWxQNSg",
                        "name": "set_pr_emoji",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12872396066/job/35887779146"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIWxQWew",
                        "name": "Add ready-to-merge or delegated label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12872380702/job/35887781499"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIW1kitA",
                        "name": "Add ready-to-merge or delegated label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12873899768/job/35892306612"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIWxII8w",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12872353088/job/35887646963"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIWxQWWg",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12872380675/job/35887781466"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIW1kibQ",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12873899758/job/35892306541"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIWxIJSQ",
                        "name": "post-or-update-summary-comment",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12872353100/job/35887647049"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIWxQWfw",
                        "name": "Fix style issues from lint",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12872380685/job/35887781503"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIW1kiXA",
                        "name": "Fix style issues from lint",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12873899766/job/35892306524"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIWxIDWQ",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12872352527/job/35887645529"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIWxIFBw",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12872352524/job/35887645959"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIWxIKqg",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12872353079/job/35887647402"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIWxIE4Q",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12872352527/job/35887645921"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIWxIGSw",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12872352524/job/35887646283"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIWxIJQQ",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12872353079/job/35887647041"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIWxIGKw",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12872352527/job/35887646251"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIWxIDhg",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12872352524/job/35887645574"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIWxIHnw",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12872352527/job/35887646623"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIWxjYSA",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12872352524/job/35888093256"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIWxIfkg",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/35887652754"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIWxJpGg",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=19440&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "51e1747280d619b027c5bd4040cb0a31641ced57",
                "additions": 2,
                "deletions": 2,
                "committedDate": "2025-01-20T19:08:24Z",
                "author": {
                  "name": "Bergschaf",
                  "email": "christian.k@netcom-mail.de"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIW6CVOg",
                        "name": "set_pr_emoji",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12875529002/job/35896988986"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIW509gA",
                        "name": "Add ready-to-merge or delegated label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12875452137/job/35896769920"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIW6B9tg",
                        "name": "Add ready-to-merge or delegated label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12875526362/job/35896982966"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIXI2_zQ",
                        "name": "Add ready-to-merge or delegated label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12881644469/job/35912531917"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIXI7Azg",
                        "name": "Add ready-to-merge or delegated label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12881668434/job/35912597710"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIXYCYkA",
                        "name": "Add ready-to-merge or delegated label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12886893540/job/35928447120"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIW222Cg",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12874364915/job/35893655050"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIW509qw",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12875452135/job/35896769963"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIW6B6jA",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12875526367/job/35896982156"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIXI3Amg",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12881644473/job/35912532122"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIXI7BhA",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12881668429/job/35912597892"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIXYCYnw",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12886893539/job/35928447135"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIW2217Q",
                        "name": "post-or-update-summary-comment",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12874364905/job/35893655021"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIW509eg",
                        "name": "Fix style issues from lint",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12875452134/job/35896769914"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIW6B58A",
                        "name": "Fix style issues from lint",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12875526375/job/35896982000"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIXI2_7w",
                        "name": "Fix style issues from lint",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12881644471/job/35912531951"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIXI7BDA",
                        "name": "Fix style issues from lint",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12881668430/job/35912597772"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIXYCZDQ",
                        "name": "Fix style issues from lint",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12886893532/job/35928447245"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIW22wrA",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12874364314/job/35893653676"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIW22xzA",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12874364322/job/35893653964"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIW222sg",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12874364914/job/35893655218"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIW22xlQ",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12874364314/job/35893653909"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIW22yvQ",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12874364322/job/35893654205"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIW221_Q",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12874364914/job/35893655037"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIW22yiQ",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12874364314/job/35893654153"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIW22w1w",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12874364322/job/35893653719"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIW22zpg",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12874364314/job/35893654438"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIW3JEFQ",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12874364322/job/35893953557"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIW23D5A",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/35893658596"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIW233HA",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=19440&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "927b794b0c0208fe08d4a806dbbfaa57537a7cff",
                "additions": 39,
                "deletions": 23,
                "committedDate": "2025-01-21T12:26:35Z",
                "author": {
                  "name": "Bergschaf",
                  "email": "christian.k@netcom-mail.de"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "cccde9f2d8443cf338d0f1ee725389a6bd296965",
                "additions": 1,
                "deletions": 2,
                "committedDate": "2025-01-21T12:26:55Z",
                "author": {
                  "name": "Bergschaf",
                  "email": "christian.k@netcom-mail.de"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "c1ca0a15703e534ff342a907e8e879154b26c2a6",
                "additions": 12,
                "deletions": 14,
                "committedDate": "2025-01-21T12:34:15Z",
                "author": {
                  "name": "Bergschaf",
                  "email": "christian.k@netcom-mail.de"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "440f959ccb597eecf666fb8402297cc165082a45",
                "additions": 2,
                "deletions": 2,
                "committedDate": "2025-01-21T12:35:55Z",
                "author": {
                  "name": "Bergschaf",
                  "email": "christian.k@netcom-mail.de"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "477738b1a329c38e990a54eb57cf9db3549f7d55",
                "additions": 1,
                "deletions": 3,
                "committedDate": "2025-01-21T12:36:04Z",
                "author": {
                  "name": "Bergschaf",
                  "email": "christian.k@netcom-mail.de"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIXYlofw",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12887080592/job/35929024639"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIXYlohA",
                        "name": "post-or-update-summary-comment",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12887080595/job/35929024644"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIXYlh7g",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12887079792/job/35929022958"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIXYlgAA",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12887079782/job/35929022464"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIXYlqZQ",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12887080610/job/35929025125"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIXYlj3g",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12887079792/job/35929023454"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIXYlhYg",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12887079782/job/35929022818"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIXYlo-w",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12887080610/job/35929024763"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIXYlgUQ",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12887079792/job/35929022545"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIXYlirg",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12887079782/job/35929023150"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIXYllHw",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12887079792/job/35929023775"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIXZCKfA",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12887079782/job/35929492092"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIXYmBZw",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/35929031015"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIXYnd4Q",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=19440&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "ada6eefcecd56d4fd5f5506dc47c1a29377b23ef",
                "additions": 18,
                "deletions": 4,
                "committedDate": "2025-01-21T12:46:16Z",
                "author": {
                  "name": "Bergschaf",
                  "email": "christian.k@netcom-mail.de"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "69a98c085340ef8982b311c1e2bd8ea4e2fd75d9",
                "additions": 6,
                "deletions": 8,
                "committedDate": "2025-01-21T14:17:34Z",
                "author": {
                  "name": "Bergschaf",
                  "email": "christian.k@netcom-mail.de"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "e4a8a15795b90fec9f59d7df7ee50b22c1336080",
                "additions": 9,
                "deletions": 24,
                "committedDate": "2025-01-21T19:09:05Z",
                "author": {
                  "name": "Bergschaf",
                  "email": "christian.k@netcom-mail.de"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIXutFQQ",
                        "name": "set_pr_emoji",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12894171831/job/35952215361"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIXueP2Q",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12894096779/job/35951972313"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIXueP4Q",
                        "name": "post-or-update-summary-comment",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12894096782/job/35951972321"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIXueHwQ",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12894096152/job/35951970241"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIXueIzw",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12894096144/job/35951970511"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIXueRFA",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12894096778/job/35951972628"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIXueKhQ",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12894096152/job/35951970949"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIXueKBQ",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12894096144/job/35951970821"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIXueP-Q",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12894096778/job/35951972345"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIXueHjQ",
                        "name": "Build",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12894096144/job/35951970189"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIXueI_Q",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12894096152/job/35951970557"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIXueMBQ",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12894096152/job/35951971333"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIXvzK0Q",
                        "name": "Post-CI job",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12894096144/job/35953363665"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIXuepDw",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/35951978767"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIXufz0A",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=19440&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "2163abb91748d7ac2032096c2ba0db9907638c34",
                "additions": 1,
                "deletions": 0,
                "committedDate": "2025-01-21T19:48:30Z",
                "author": {
                  "name": "Bergschaf",
                  "email": "christian.k@netcom-mail.de"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIXwTzkg",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12894685939/job/35953898386"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIXwTzpQ",
                        "name": "post-or-update-summary-comment",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12894685959/job/35953898405"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIXwTuFg",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12894685373/job/35953896982"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIXwTwYg",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12894685371/job/35953897570"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIXwTzhg",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12894685947/job/35953898374"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIXwTvUw",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12894685373/job/35953897299"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIXwTtyA",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12894685371/job/35953896904"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIXwT0-w",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12894685947/job/35953898747"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIXwTwqA",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12894685373/job/35953897640"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIXwTvRw",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12894685371/job/35953897287"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIXwTyEA",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12894685373/job/35953898000"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIXwwTgQ",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12894685371/job/35954365313"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIXwUHVQ",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/35953903445"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIXwVVGQ",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=19440&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "c20a8f9afcc41d1a95dbbd54b1c2a05aee2c97af",
                "additions": 13,
                "deletions": 15,
                "committedDate": "2025-01-21T20:38:12Z",
                "author": {
                  "name": "Bergschaf",
                  "email": "christian.k@netcom-mail.de"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIXyo1JQ",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12895448578/job/35956340005"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIXyo1Zw",
                        "name": "post-or-update-summary-comment",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12895448575/job/35956340071"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIXyoqFQ",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12895447726/job/35956337173"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIXyoqKA",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12895447731/job/35956337192"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIXyo05A",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12895448576/job/35956339940"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIXyorVQ",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12895447726/job/35956337493"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIXyoulg",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12895447731/job/35956338326"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIXyo2PQ",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12895448576/job/35956340285"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIXyotDg",
                        "name": "Build",
                        "conclusion": "CANCELLED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12895447731/job/35956337934"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIXyoseA",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12895447726/job/35956337784"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIXy98sA",
                        "name": "Post-CI job",
                        "conclusion": "CANCELLED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12895447731/job/35956686000"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIXyotyA",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12895447726/job/35956338120"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIXypKaA",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/35956345448"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIXyqDoA",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=19440&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "7a5e5a2ed667d9394f75ae15e551b9fb324d0688",
                "additions": 3,
                "deletions": 9,
                "committedDate": "2025-01-21T20:40:59Z",
                "author": {
                  "name": "Bergschaf",
                  "email": "christian.k@netcom-mail.de"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIXyvgDg",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12895484052/job/35956449294"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIXyvgPg",
                        "name": "post-or-update-summary-comment",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12895484063/job/35956449342"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIXyvXYQ",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12895483027/job/35956447073"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIXyvXWw",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12895483029/job/35956447067"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIXyvh1Q",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12895484051/job/35956449749"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIXyvYuw",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12895483027/job/35956447419"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIXyvWDw",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12895483029/job/35956446735"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIXyvgZA",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12895484051/job/35956449380"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIXyvVzA",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12895483027/job/35956446668"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIXyvYlA",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12895483029/job/35956447380"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIXyvaHA",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12895483027/job/35956447772"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIXzRF4g",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12895483029/job/35956999650"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIXyvzow",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/35956454307"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIXyw95w",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=19440&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "3e67068e2ab3b4756322d4bd917a6d8964534be6",
                "additions": 145046,
                "deletions": 44737,
                "committedDate": "2025-01-21T21:06:32Z",
                "author": {
                  "name": "Bergschaf",
                  "email": "christian.k@netcom-mail.de"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIXz699w",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12895866510/job/35957685751"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIXz688Q",
                        "name": "Add topic label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12895866496/job/35957685489"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIXz6FIA",
                        "name": "actionlint",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12895860187/job/35957671200"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIXz6Ftg",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12895860182/job/35957671350"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIXz6FNA",
                        "name": "post-or-update-summary-comment",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12895860188/job/35957671220"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIXz6_UA",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12895866539/job/35957686096"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIXz6G0Q",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12895860171/job/35957671633"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIXz6-Ew",
                        "name": "Build",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12895866539/job/35957685779"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIXz6_VQ",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12895866510/job/35957686101"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIXz6G2A",
                        "name": "check workflows generated by build.in.yml",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12895860187/job/35957671640"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIXz6E1Q",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12895860171/job/35957671125"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIXz7Ajw",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12895866510/job/35957686415"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIX0X-PQ",
                        "name": "Post-CI job",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12895866539/job/35958160957"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIXz6h5g",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/35957678566"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIXz573g",
                        "name": ".github/dependabot.yml",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dependabot-api.githubapp.com"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIXz7u6w",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=19440&login=leanprover-community&repository=mathlib4"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIXz7Gvg",
                        "name": "actionlint",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/35957687998"
                      }
                    ]
                  }
                }
              }
            }
          ]
        },
        "createdAt": "2024-11-24T18:09:33Z",
        "deletions": 0,
        "files": {
          "nodes": [
            {
              "path": ".github/workflows/bot_fix_style_comment.yaml",
              "additions": 93,
              "deletions": 0
            },
            {
              "path": ".github/workflows/bot_fix_style_review.yaml",
              "additions": 99,
              "deletions": 0
            },
            {
              "path": ".github/workflows/bot_fix_style_review_comment.yaml",
              "additions": 97,
              "deletions": 0
            },
            {
              "path": ".github/workflows/lean4checker.yml",
              "additions": 131,
              "deletions": 0
            },
            {
              "path": "Mathlib/Algebra/Associated/Basic.lean",
              "additions": 792,
              "deletions": 0
            },
            {
              "path": "Mathlib/Algebra/Associated/OrderedCommMonoid.lean",
              "additions": 38,
              "deletions": 0
            },
            {
              "path": "Mathlib/Algebra/BigOperators/Group/Finset.lean",
              "additions": 2265,
              "deletions": 0
            },
            {
              "path": "Mathlib/Algebra/BigOperators/Group/List.lean",
              "additions": 806,
              "deletions": 0
            },
            {
              "path": "Mathlib/Algebra/BigOperators/Group/Multiset.lean",
              "additions": 309,
              "deletions": 0
            },
            {
              "path": "Mathlib/Algebra/Category/Grp/AB5.lean",
              "additions": 54,
              "deletions": 0
            },
            {
              "path": "Mathlib/Algebra/DirectLimit.lean",
              "additions": 959,
              "deletions": 0
            },
            {
              "path": "Mathlib/Algebra/Group/Int.lean",
              "additions": 232,
              "deletions": 0
            },
            {
              "path": "Mathlib/Algebra/Group/Nat/Basic.lean",
              "additions": 65,
              "deletions": 0
            },
            {
              "path": "Mathlib/Algebra/Group/ZeroOne.lean",
              "additions": 27,
              "deletions": 0
            },
            {
              "path": "Mathlib/Algebra/Order/AbsoluteValue.lean",
              "additions": 422,
              "deletions": 0
            },
            {
              "path": "Mathlib/Algebra/Order/EuclideanAbsoluteValue.lean",
              "additions": 70,
              "deletions": 0
            },
            {
              "path": "Mathlib/Algebra/Order/Field/Canonical/Basic.lean",
              "additions": 22,
              "deletions": 0
            },
            {
              "path": "Mathlib/Algebra/Order/Field/Canonical/Defs.lean",
              "additions": 31,
              "deletions": 0
            },
            {
              "path": "Mathlib/Algebra/Order/Hom/Normed.lean",
              "additions": 75,
              "deletions": 0
            },
            {
              "path": "Mathlib/Algebra/Order/Hom/Ultra.lean",
              "additions": 32,
              "deletions": 0
            },
            {
              "path": "Mathlib/Algebra/Order/Ring/Unbundled/Nonneg.lean",
              "additions": 326,
              "deletions": 0
            },
            {
              "path": "Mathlib/Algebra/Ring/Idempotents.lean",
              "additions": 133,
              "deletions": 0
            },
            {
              "path": "Mathlib/AlgebraicGeometry/EllipticCurve/J.lean",
              "additions": 350,
              "deletions": 0
            },
            {
              "path": "Mathlib/AlgebraicGeometry/PrimeSpectrum/Basic.lean",
              "additions": 974,
              "deletions": 0
            },
            {
              "path": "Mathlib/AlgebraicGeometry/PrimeSpectrum/IsOpenComapC.lean",
              "additions": 76,
              "deletions": 0
            },
            {
              "path": "Mathlib/AlgebraicGeometry/PrimeSpectrum/Jacobson.lean",
              "additions": 107,
              "deletions": 0
            },
            {
              "path": "Mathlib/AlgebraicGeometry/PrimeSpectrum/Maximal.lean",
              "additions": 58,
              "deletions": 0
            },
            {
              "path": "Mathlib/AlgebraicGeometry/PrimeSpectrum/Module.lean",
              "additions": 57,
              "deletions": 0
            },
            {
              "path": "Mathlib/AlgebraicGeometry/PrimeSpectrum/Noetherian.lean",
              "additions": 37,
              "deletions": 0
            },
            {
              "path": "Mathlib/AlgebraicGeometry/PrimeSpectrum/TensorProduct.lean",
              "additions": 83,
              "deletions": 0
            },
            {
              "path": "Mathlib/AlgebraicTopology/SimplicialObject.lean",
              "additions": 885,
              "deletions": 0
            },
            {
              "path": "Mathlib/AlgebraicTopology/SimplicialSet/Quasicategory.lean",
              "additions": 71,
              "deletions": 0
            },
            {
              "path": "Mathlib/AlgebraicTopology/SplitSimplicialObject.lean",
              "additions": 415,
              "deletions": 0
            },
            {
              "path": "Mathlib/Analysis/Asymptotics/Asymptotics.lean",
              "additions": 2058,
              "deletions": 0
            },
            {
              "path": "Mathlib/Analysis/NormedSpace/ENorm.lean",
              "additions": 215,
              "deletions": 0
            },
            {
              "path": "Mathlib/CategoryTheory/Abelian/Generator.lean",
              "additions": 57,
              "deletions": 0
            },
            {
              "path": "Mathlib/CategoryTheory/Abelian/GrothendieckAxioms.lean",
              "additions": 131,
              "deletions": 0
            },
            {
              "path": "Mathlib/CategoryTheory/Generator.lean",
              "additions": 749,
              "deletions": 0
            },
            {
              "path": "Mathlib/CategoryTheory/Preadditive/Generator.lean",
              "additions": 74,
              "deletions": 0
            },
            {
              "path": "Mathlib/CategoryTheory/Sites/DenseSubsite.lean",
              "additions": 673,
              "deletions": 0
            },
            {
              "path": "Mathlib/CategoryTheory/Sites/InducedTopology.lean",
              "additions": 150,
              "deletions": 0
            },
            {
              "path": "Mathlib/CategoryTheory/Triangulated/Opposite.lean",
              "additions": 486,
              "deletions": 0
            },
            {
              "path": "Mathlib/Data/Set/Pointwise/BigOperators.lean",
              "additions": 161,
              "deletions": 0
            },
            {
              "path": "Mathlib/Data/Set/Pointwise/Finite.lean",
              "additions": 197,
              "deletions": 0
            },
            {
              "path": "Mathlib/Data/Set/Pointwise/Interval.lean",
              "additions": 796,
              "deletions": 0
            },
            {
              "path": "Mathlib/Data/Set/Pointwise/ListOfFn.lean",
              "additions": 49,
              "deletions": 0
            },
            {
              "path": "Mathlib/Dynamics/PeriodicPts.lean",
              "additions": 644,
              "deletions": 0
            },
            {
              "path": "Mathlib/FieldTheory/Adjoin.lean",
              "additions": 1707,
              "deletions": 0
            },
            {
              "path": "Mathlib/Geometry/Manifold/SmoothManifoldWithCorners.lean",
              "additions": 1559,
              "deletions": 0
            },
            {
              "path": "Mathlib/LinearAlgebra/Dimension/Torsion.lean",
              "additions": 31,
              "deletions": 0
            },
            {
              "path": "Mathlib/LinearAlgebra/PerfectPairing.lean",
              "additions": 375,
              "deletions": 0
            },
            {
              "path": "Mathlib/LinearAlgebra/TensorPower.lean",
              "additions": 267,
              "deletions": 0
            },
            {
              "path": "Mathlib/Logic/Equiv/TransferInstance.lean",
              "additions": 689,
              "deletions": 0
            },
            {
              "path": "Mathlib/Logic/Small/Group.lean",
              "additions": 127,
              "deletions": 0
            },
            {
              "path": "Mathlib/Logic/Small/Module.lean",
              "additions": 31,
              "deletions": 0
            },
            {
              "path": "Mathlib/Logic/Small/Ring.lean",
              "additions": 63,
              "deletions": 0
            },
            {
              "path": "Mathlib/MeasureTheory/Constructions/EventuallyMeasurable.lean",
              "additions": 121,
              "deletions": 0
            },
            {
              "path": "Mathlib/NumberTheory/DiophantineApproximation.lean",
              "additions": 587,
              "deletions": 0
            },
            {
              "path": "Mathlib/Order/BoundedOrder.lean",
              "additions": 818,
              "deletions": 0
            },
            {
              "path": "Mathlib/Order/Defs.lean",
              "additions": 713,
              "deletions": 0
            },
            {
              "path": "Mathlib/Order/GaloisConnection.lean",
              "additions": 830,
              "deletions": 0
            },
            {
              "path": "Mathlib/Order/Nucleus.lean",
              "additions": 105,
              "deletions": 0
            },
            {
              "path": "Mathlib/Probability/Kernel/Composition.lean",
              "additions": 1252,
              "deletions": 0
            },
            {
              "path": "Mathlib/Probability/Kernel/IntegralCompProd.lean",
              "additions": 276,
              "deletions": 0
            },
            {
              "path": "Mathlib/Probability/Kernel/MeasureCompProd.lean",
              "additions": 232,
              "deletions": 0
            },
            {
              "path": "Mathlib/Probability/Moments.lean",
              "additions": 336,
              "deletions": 0
            },
            {
              "path": "Mathlib/RepresentationTheory/Action/Basic.lean",
              "additions": 353,
              "deletions": 0
            },
            {
              "path": "Mathlib/RepresentationTheory/Action/Concrete.lean",
              "additions": 191,
              "deletions": 0
            },
            {
              "path": "Mathlib/RepresentationTheory/Action/Continuous.lean",
              "additions": 120,
              "deletions": 0
            },
            {
              "path": "Mathlib/RepresentationTheory/Action/Limits.lean",
              "additions": 333,
              "deletions": 0
            },
            {
              "path": "Mathlib/RepresentationTheory/Action/Monoidal.lean",
              "additions": 315,
              "deletions": 0
            },
            {
              "path": "Mathlib/RingTheory/Algebraic.lean",
              "additions": 953,
              "deletions": 0
            },
            {
              "path": "Mathlib/RingTheory/AlgebraicIndependent.lean",
              "additions": 743,
              "deletions": 0
            },
            {
              "path": "Mathlib/RingTheory/Artinian.lean",
              "additions": 545,
              "deletions": 0
            },
            {
              "path": "Mathlib/RingTheory/Flat/Algebra.lean",
              "additions": 85,
              "deletions": 0
            },
            {
              "path": "Mathlib/RingTheory/Flat/FaithfullyFlat.lean",
              "additions": 497,
              "deletions": 0
            },
            {
              "path": "Mathlib/RingTheory/Jacobson.lean",
              "additions": 780,
              "deletions": 0
            },
            {
              "path": "Mathlib/RingTheory/JacobsonIdeal.lean",
              "additions": 447,
              "deletions": 0
            },
            {
              "path": "Mathlib/RingTheory/MaximalSpectrum.lean",
              "additions": 113,
              "deletions": 0
            },
            {
              "path": "Mathlib/RingTheory/PrimeSpectrum.lean",
              "additions": 592,
              "deletions": 0
            },
            {
              "path": "Mathlib/SetTheory/Cardinal/PartENat.lean",
              "additions": 99,
              "deletions": 0
            },
            {
              "path": "Mathlib/Tactic/DeriveToExpr.lean",
              "additions": 230,
              "deletions": 0
            },
            {
              "path": "Mathlib/Tactic/FunProp/RefinedDiscrTree.lean",
              "additions": 1152,
              "deletions": 0
            },
            {
              "path": "Mathlib/Topology/CompletelyRegular.lean",
              "additions": 113,
              "deletions": 0
            },
            {
              "path": "Mathlib/Topology/CountableSeparatingOn.lean",
              "additions": 36,
              "deletions": 0
            },
            {
              "path": "Mathlib/Topology/Instances/ENNReal.lean",
              "additions": 1438,
              "deletions": 0
            },
            {
              "path": "Mathlib/Topology/Instances/EReal.lean",
              "additions": 444,
              "deletions": 0
            },
            {
              "path": "Mathlib/Topology/Instances/NNReal.lean",
              "additions": 294,
              "deletions": 0
            },
            {
              "path": "Mathlib/Topology/Instances/Real.lean",
              "additions": 186,
              "deletions": 0
            },
            {
              "path": "Mathlib/Topology/Support.lean",
              "additions": 431,
              "deletions": 0
            },
            {
              "path": "Mathlib/Util/IncludeStr.lean",
              "additions": 22,
              "deletions": 0
            },
            {
              "path": "Mathlib/Util/TermBeta.lean",
              "additions": 41,
              "deletions": 0
            },
            {
              "path": "MathlibTest/TermBeta.lean",
              "additions": 36,
              "deletions": 0
            }
          ]
        },
        "headRefName": "Nucleus",
        "headRefOid": "3e67068e2ab3b4756322d4bd917a6d8964534be6",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c6C8g_B",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c8AAAABVDlAdQ",
              "color": "e2af78",
              "name": "RFC"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABViJlpQ",
              "color": "33DBEC",
              "name": "t-order"
            }
          ]
        },
        "latestReviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c6Yzb1l",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2025-01-21T06:55:48Z"
            }
          ]
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "BLOCKED",
        "mergeable": "MERGEABLE",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 19440,
        "potentialMergeCommit": {
          "oid": "e13db326991f197f237eca82203c99c7c8567ae8"
        },
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": null,
        "reviewRequests": {
          "nodes": [
            {
              "requestedReviewer": {
                "id": "MDQ6VXNlcjE4ODgxMw==",
                "login": "urkud"
              }
            },
            {
              "requestedReviewer": {
                "id": "MDQ6VXNlcjI5OTU5MjI2",
                "login": "b-mehta"
              }
            }
          ]
        },
        "reviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c6WA6ZN",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "urkud"
              },
              "submittedAt": "2024-12-20T05:45:10Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6WA6q5",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "urkud"
              },
              "submittedAt": "2024-12-20T05:46:30Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6WA7eH",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "urkud"
              },
              "submittedAt": "2024-12-20T05:50:24Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6WA7wt",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "urkud"
              },
              "submittedAt": "2024-12-20T05:51:06Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6WH8VZ",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "Bergschaf"
              },
              "submittedAt": "2024-12-21T13:54:47Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6YtQgA",
              "body": "I think the location is fine You might to put `Nucleus` in the `Order` namespace to avoid ambiguity. Otherwise, it looks like a sensible definition.",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2025-01-20T10:37:06Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6YwRTF",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "Bergschaf"
              },
              "submittedAt": "2025-01-20T16:26:28Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6YwU-l",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "Bergschaf"
              },
              "submittedAt": "2025-01-20T16:33:40Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6YwXIc",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "Bergschaf"
              },
              "submittedAt": "2025-01-20T16:38:07Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6YxBlI",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2025-01-20T18:29:32Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6YxiEj",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2025-01-20T20:46:22Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6Yxi1C",
              "body": "Can you define the obvious map `Nucleus.toClosureOperator` and derive your results using it?",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2025-01-20T20:53:25Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6YzbEK",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "Bergschaf"
              },
              "submittedAt": "2025-01-21T06:53:31Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6Yzb1l",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2025-01-21T06:55:48Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6Y2sMK",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "Bergschaf"
              },
              "submittedAt": "2025-01-21T12:25:32Z"
            }
          ]
        },
        "reviewThreads": {
          "nodes": [
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5w3IPw",
                    "body": "Bundled morphisms in Mathlib should come with `FunLike` instance, and possibly with `NucleusClass`. See any other bundled morphism (e.g., `InfHom` which you may want to extend) for an example.\r\n\r\nAlso, you should define at least `Nucleus.id`. Probably, also a definition for the constant function sending everything to `\\top`.",
                    "createdAt": "2024-12-20T05:45:10Z",
                    "author": {
                      "login": "urkud"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5w3Ib8",
                    "body": "This should become an instance\r\n```\r\ninstance [NucleusClass F X] : OrderHomClass F X X\r\n```",
                    "createdAt": "2024-12-20T05:46:30Z",
                    "author": {
                      "login": "urkud"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5w3I95",
                    "body": "Please only assume `toFun (toFun x) ≤ toFun x` here.",
                    "createdAt": "2024-12-20T05:50:23Z",
                    "author": {
                      "login": "urkud"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5w3JGC",
                    "body": "Do you need `Order.Frame` here? Why not just `SemilatticeInf`?",
                    "createdAt": "2024-12-20T05:51:05Z",
                    "author": {
                      "login": "urkud"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5w7c99",
                    "body": "What about the lemmas where I need other Frame properties (like \\top and suprema)? Should I require these properties just for these lemmas?",
                    "createdAt": "2024-12-21T13:54:47Z",
                    "author": {
                      "login": "Bergschaf"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5ykhi-",
                    "body": "Can you expand this docstring to say what a nucleus is?",
                    "createdAt": "2025-01-20T10:32:38Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5ymVws",
                    "body": "Does \"The Type of Nuclei on a Frame. A Nucleus is a function between Frames which corresponds to a\r\nsublocle. It is idempotent, increasing and preserves infima.\" suffice?",
                    "createdAt": "2025-01-20T16:38:07Z",
                    "author": {
                      "login": "Bergschaf"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5ymtyV",
                    "body": "I think it's fine to drop the first sentence",
                    "createdAt": "2025-01-20T18:29:32Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5ykh5l",
                    "body": "Can you `extends InfHomClass` instead of having `preserves_inf`?",
                    "createdAt": "2025-01-20T10:33:47Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5ykh-2",
                    "body": "Then you don't need this instance",
                    "createdAt": "2025-01-20T10:34:00Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5ykiPs",
                    "body": "simp proofs are quite robust and usually fast, so I would say make them simp",
                    "createdAt": "2025-01-20T10:34:51Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5ykij6",
                    "body": "Pro-tip: you can do\r\n```suggestion\r\n  top.toFun := ⊤\r\n  top.idempotent := by simp\r\n  -- ...\r\n```",
                    "createdAt": "2025-01-20T10:35:37Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5ymUjF",
                    "body": "Thank you, I did not know about this",
                    "createdAt": "2025-01-20T16:33:40Z",
                    "author": {
                      "login": "Bergschaf"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5ykis2",
                    "body": "Can you add a \"do not use\" warning similar to the other bundled homs?",
                    "createdAt": "2025-01-20T10:36:03Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5ymSjT",
                    "body": "Sorry, I do not quite understand what you mean by this. I tried looking for an example, but I did not find such a warning (for example at FrameHom). What is the reason for not using the Nucleus structure?",
                    "createdAt": "2025-01-20T16:26:28Z",
                    "author": {
                      "login": "Bergschaf"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5ynB3G",
                    "body": "If you grep for \"do not use\" in mathlib, you'll see plenty of example for what I mean.\r\n\r\nThe reason is that we don't want people to use `Nucleus.toFun` when there is the coercion coming from `FunLike`.",
                    "createdAt": "2025-01-20T20:46:21Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5yoRFx",
                    "body": "Ok, I understand, I looked at the example at Group.AddChar. But why is there no such warning at [InfHom](https://leanprover-community.github.io/mathlib4_docs/Mathlib/Order/Hom/Lattice.html#InfHom)?",
                    "createdAt": "2025-01-21T06:53:31Z",
                    "author": {
                      "login": "Bergschaf"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5yoRmp",
                    "body": "> why is there no such warning at [InfHom](https://leanprover-community.github.io/mathlib4_docs/Mathlib/Order/Hom/Lattice.html#InfHom)?\r\n\r\nOversight. Feel free to open a PR to add such a warning",
                    "createdAt": "2025-01-21T06:55:48Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5yqGJY",
                    "body": "Ohh ok, if InfHom had this warning it might be smart to just extend InfHom with Nucleus, right?",
                    "createdAt": "2025-01-21T12:25:31Z",
                    "author": {
                      "login": "Bergschaf"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5yki1W",
                    "body": "Similarly, all those fields should be primed and warned against",
                    "createdAt": "2025-01-20T10:36:26Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5ynCYm",
                    "body": "We prefer the most concrete definition first\r\n```suggestion\r\n/-- A nucleus is an inflationary idempotent `inf`-preserving endomorphism of a semilattice.\r\n\r\nIn a frame, nuclei correspond to sublocales. -/ -- TODO: Formalise that claim\r\n```",
                    "createdAt": "2025-01-20T20:49:55Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5ynCgn",
                    "body": "I don't think that docstring brings any value since `Nucleus.idempotent'` is an implementation detail\r\n```suggestion\r\n```",
                    "createdAt": "2025-01-20T20:50:43Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5ynClc",
                    "body": "```suggestion\r\n/-- `NucleusClass F X` states that F is a type of nuclei. -/\r\n```",
                    "createdAt": "2025-01-20T20:51:21Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5ynCqQ",
                    "body": "Can you move this to just after the def of `Nucleus`?",
                    "createdAt": "2025-01-20T20:51:58Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5ynCvJ",
                    "body": "Then from here onwards you can be in `namespace Nucleus` to avoid repeating it in declaration names",
                    "createdAt": "2025-01-20T20:52:31Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5ynCy7",
                    "body": "```suggestion\r\n@[simp] lemma map_top (n : Nucleus X) : n ⊤ = ⊤ :=\r\n```",
                    "createdAt": "2025-01-20T20:52:55Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  }
                ]
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjg2NzM4MjM3",
              "login": "Bergschaf"
            },
            {
              "id": "MDQ6VXNlcjE4ODgxMw==",
              "login": "urkud"
            },
            {
              "id": "MDQ6VXNlcjE0MDkwNTkz",
              "login": "YaelDillies"
            }
          ]
        },
        "state": "OPEN",
        "statusCheckRollup": {
          "contexts": {
            "nodes": [
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIXz699w",
                "name": "Lint style (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12895866510/job/35957685751"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIXz688Q",
                "name": "Add topic label",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12895866496/job/35957685489"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIXz6FIA",
                "name": "actionlint",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12895860187/job/35957671200"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIXz6Ftg",
                "name": "label-and-report-new-contributor",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12895860182/job/35957671350"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIXz6FNA",
                "name": "post-or-update-summary-comment",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12895860188/job/35957671220"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIXz6_UA",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12895866539/job/35957686096"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIXz6G0Q",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12895860171/job/35957671633"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIXz6-Ew",
                "name": "Build",
                "conclusion": "FAILURE",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12895866539/job/35957685779"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIXz6_VQ",
                "name": "Build (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12895866510/job/35957686101"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIXz6G2A",
                "name": "check workflows generated by build.in.yml",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12895860187/job/35957671640"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIXz6E1Q",
                "name": "Check all files imported",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12895860171/job/35957671125"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIXz7Ajw",
                "name": "Post-CI job (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12895866510/job/35957686415"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIX0X-PQ",
                "name": "Post-CI job",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12895866539/job/35958160957"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIXz6h5g",
                "name": "New Contributor Check",
                "conclusion": "NEUTRAL",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/35957678566"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIXz573g",
                "name": ".github/dependabot.yml",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://dependabot-api.githubapp.com"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIXz7u6w",
                "name": "Summary",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=19440&login=leanprover-community&repository=mathlib4"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIXz7Gvg",
                "name": "actionlint",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/35957687998"
              }
            ]
          }
        },
        "title": "feat(Order/Nucleus): Nucleus",
        "updatedAt": "2025-01-21T21:10:01Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/19440",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "ef65270ea1dfc0dd06b866bd8798405311c4c134"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "f027f6ce364b53d285e8a1a5ea8e44d26921a9d8"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6UyCKD",
              "createdAt": "2024-11-24T18:10:27Z",
              "body": "messageFile.md",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6gOZnuzwAAAAOWk8ka",
              "createdAt": "2024-11-24T18:11:20Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABViJlpQ",
                "name": "t-order"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6gOZnuzwAAAAOWk9xc",
              "createdAt": "2024-11-24T18:14:12Z",
              "label": {
                "id": "MDU6TGFiZWwzMjcxMjQ0NzU5",
                "name": "WIP"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "0794d8199cc5a9f7847298f303c27d8a8225fa12"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "0d1e8cf9ab34f4a88845dfebf28eec8e41af376d"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6gOZnuzwAAAAOYcfNq",
              "createdAt": "2024-11-26T21:45:42Z",
              "label": {
                "id": "MDU6TGFiZWwzMjcxMjQ0NzU5",
                "name": "WIP"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6gOZnuzwAAAAOYcfNs",
              "createdAt": "2024-11-26T21:45:42Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKteTVQ",
                "name": "awaiting-CI"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "6171c76d7ef6d889929fe2a334fa677eeaee1578"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6gOZnuzwAAAAOYdHZP",
              "createdAt": "2024-11-26T22:06:38Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKteTVQ",
                "name": "awaiting-CI"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6WA6ZN",
              "createdAt": "2024-12-20T05:45:09Z",
              "body": "",
              "author": {
                "login": "urkud"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6WA6q5",
              "createdAt": "2024-12-20T05:46:30Z",
              "body": "",
              "author": {
                "login": "urkud"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6gOZnuzwAAAAOpfdrF",
              "createdAt": "2024-12-20T05:46:46Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6WA7eH",
              "createdAt": "2024-12-20T05:50:23Z",
              "body": "",
              "author": {
                "login": "urkud"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6WA7wt",
              "createdAt": "2024-12-20T05:51:05Z",
              "body": "",
              "author": {
                "login": "urkud"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6YXp-0",
              "createdAt": "2024-12-20T05:52:52Z",
              "body": "Do you plan to prove some nontrivial theorem that involves nuclei, or just add a definition?",
              "author": {
                "login": "urkud"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "b1060a54c87129e20951cd7ae176fdca54466cf7"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6YeR4q",
              "createdAt": "2024-12-21T10:16:27Z",
              "body": "A first step would be to prove, that the Nuclei form a Frame. We are currently trying to understand and formalize this paper [arxiv](https://arxiv.org/abs/1303.5631) about topos theoretic measure theory.",
              "author": {
                "login": "Bergschaf"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "db78f0c5982a3f61653e2e41beabd504b84ead61"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6gOZnuzwAAAAOqJ90S",
              "createdAt": "2024-12-21T13:53:09Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "ReviewRequestedEvent",
              "id": "RRE_lADOFcwZ1c6gOZnuzwAAAAOqKjT_",
              "createdAt": "2024-12-21T15:29:38Z",
              "requestedReviewer": {
                "id": "MDQ6VXNlcjE4ODgxMw==",
                "login": "urkud"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "3755ffb07fc131f7357a683ce9b1aa2ee62e9131"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "abb0faa5c61e47918481ad3776b12795be5c4c39"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "1e03d6c2c99cc491e6ff8adfd5d4e8b42abbe02d"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6gOZnuzwAAAAOtabrM",
              "createdAt": "2025-01-01T17:53:15Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABVDlAdQ",
                "name": "RFC"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6YtQgA",
              "createdAt": "2025-01-20T10:32:38Z",
              "body": "I think the location is fine You might to put `Nucleus` in the `Order` namespace to avoid ambiguity. Otherwise, it looks like a sensible definition.",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6gOZnuzwAAAAO5esyT",
              "createdAt": "2025-01-20T10:37:19Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "ReviewRequestedEvent",
              "id": "RRE_lADOFcwZ1c6gOZnuzwAAAAO5etHu",
              "createdAt": "2025-01-20T10:37:25Z",
              "requestedReviewer": {
                "id": "MDQ6VXNlcjI5OTU5MjI2",
                "login": "b-mehta"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "7e4f9a10196621fe20d56f77eeeb202fb831ae50"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "1fc72dba237c4a6e2cb7d4716aa5667658d9c377"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6bJH5B",
              "createdAt": "2025-01-20T16:37:16Z",
              "body": "messageFile.md",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6gOZnuzwAAAAO5zCcO",
              "createdAt": "2025-01-20T16:39:02Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "ReviewRequestedEvent",
              "id": "RRE_lADOFcwZ1c6gOZnuzwAAAAO5zDsE",
              "createdAt": "2025-01-20T16:39:12Z",
              "requestedReviewer": {
                "id": "MDQ6VXNlcjE0MDkwNTkz",
                "login": "YaelDillies"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "51e1747280d619b027c5bd4040cb0a31641ced57"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6bKBP0",
              "createdAt": "2025-01-20T19:09:29Z",
              "body": "messageFile.md",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6bKByv",
              "createdAt": "2025-01-20T19:11:09Z",
              "body": "> messageFile.md\r\n\r\nWhat does this mean mister Action bot?",
              "author": {
                "login": "Bergschaf"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6bKcXV",
              "createdAt": "2025-01-20T20:45:07Z",
              "body": "See https://leanprover.zulipchat.com/#narrow/channel/287929-mathlib4/topic/messageFile.2Emd",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6Yxi1C",
              "createdAt": "2025-01-20T20:49:55Z",
              "body": "Can you define the obvious map `Nucleus.toClosureOperator` and derive your results using it?",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6gOZnuzwAAAAO58M93",
              "createdAt": "2025-01-20T20:53:40Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "927b794b0c0208fe08d4a806dbbfaa57537a7cff"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "cccde9f2d8443cf338d0f1ee725389a6bd296965"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "c1ca0a15703e534ff342a907e8e879154b26c2a6"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "440f959ccb597eecf666fb8402297cc165082a45"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "477738b1a329c38e990a54eb57cf9db3549f7d55"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6bP1xL",
              "createdAt": "2025-01-21T12:37:09Z",
              "body": "messageFile.md",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "ada6eefcecd56d4fd5f5506dc47c1a29377b23ef"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "69a98c085340ef8982b311c1e2bd8ea4e2fd75d9"
              }
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c50OLws",
              "createdAt": "2025-01-21T16:17:02Z",
              "source": {
                "id": "PR_kwDOFcwZ1c6IhEe7",
                "title": "doc(Order/Hom/Lattice): warn against `toFun`",
                "url": "https://github.com/leanprover-community/mathlib4/pull/20918"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "e4a8a15795b90fec9f59d7df7ee50b22c1336080"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6bTU0n",
              "createdAt": "2025-01-21T19:10:11Z",
              "body": "messageFile.md",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6bTVrx",
              "createdAt": "2025-01-21T19:12:16Z",
              "body": "> Can you define the obvious map `Nucleus.toClosureOperator` and derive your results using it?\r\n\r\nI defined the map, but I have no idea how I can make my results cleaner by using this map. Are there any examples that I could look at to understand this?",
              "author": {
                "login": "Bergschaf"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6gOZnuzwAAAAO60A_D",
              "createdAt": "2025-01-21T19:14:09Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "2163abb91748d7ac2032096c2ba0db9907638c34"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6bTmBL",
              "createdAt": "2025-01-21T19:49:36Z",
              "body": "messageFile.md",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6bTyU5",
              "createdAt": "2025-01-21T20:17:57Z",
              "body": "> I defined the map, but I have no idea how I can make my results cleaner by using this map. Are there any examples that I could look at to understand this?\r\n\r\nEg to deduce that a nucleus `f` is monotone you can do `example (f : Nucleus X) : Monotone f := f.toClosureOperator.monotone`",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "c20a8f9afcc41d1a95dbbd54b1c2a05aee2c97af"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6bT7gV",
              "createdAt": "2025-01-21T20:39:47Z",
              "body": "messageFile.md",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "7a5e5a2ed667d9394f75ae15e551b9fb324d0688"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6bT8bP",
              "createdAt": "2025-01-21T20:42:03Z",
              "body": "messageFile.md",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6bUDpQ",
              "createdAt": "2025-01-21T20:58:45Z",
              "body": "> See https://leanprover.zulipchat.com/#narrow/channel/287929-mathlib4/topic/messageFile.2Emd\r\n\r\nPer the above, can you please merge master?",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6bUEPY",
              "createdAt": "2025-01-21T21:00:09Z",
              "body": "Ohh, of course, I read that the wrong way",
              "author": {
                "login": "Bergschaf"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "3e67068e2ab3b4756322d4bd917a6d8964534be6"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6bUHWz",
              "createdAt": "2025-01-21T21:07:39Z",
              "body": "### PR summary [3e67068e2a](https://github.com/leanprover-community/mathlib4/pull/19440/commits/3e67068e2ab3b4756322d4bd917a6d8964534be6)\n\n<details><summary>\n\n#### Import changes for modified files\n\n</summary>\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n| `Mathlib.Util.IncludeStr` (new file)|18|\n| `Mathlib.Util.TermBeta` (new file)|19|\n| `Mathlib.Tactic.DeriveToExpr` (new file)|21|\n| `Mathlib.Order.Defs` (new file)|44|\n| `Mathlib.Algebra.Group.ZeroOne` (new file)|49|\n| `Mathlib.Algebra.Group.Nat.Basic` (new file)|73|\n| `Mathlib.Tactic.FunProp.RefinedDiscrTree` (new file)|114|\n| `Mathlib.Algebra.Ring.Idempotents` (new file)|160|\n| `Mathlib.Order.BoundedOrder` (new file)|162|\n| `Mathlib.Order.GaloisConnection` (new file)|262|\n| `Mathlib.Order.Nucleus` (new file)|275|\n| `Mathlib.Algebra.Group.Int` (new file)|326|\n| `Mathlib.Algebra.Associated.Basic` (new file)|357|\n| `Mathlib.Algebra.Associated.OrderedCommMonoid` (new file)|366|\n| `Mathlib.Algebra.BigOperators.Group.List` (new file)|390|\n| `Mathlib.Algebra.BigOperators.Group.Multiset` (new file)|408|\n| `Mathlib.Algebra.Order.Field.Canonical.Defs` (new file)|429|\n| `Mathlib.Algebra.Order.Field.Canonical.Basic` (new file)|430|\n| `Mathlib.Algebra.Order.Ring.Unbundled.Nonneg` (new file)|433|\n| `Mathlib.Data.Set.Pointwise.ListOfFn` (new file)|437|\n| `Mathlib.Data.Set.Pointwise.Finite` (new file)|509|\n| `Mathlib.Algebra.BigOperators.Group.Finset` (new file)|513|\n| `Mathlib.Data.Set.Pointwise.BigOperators` (new file)|518|\n| `Mathlib.Data.Set.Pointwise.Interval` (new file)|527|\n| `Mathlib.Algebra.Order.AbsoluteValue` (new file)|528|\n| `Mathlib.Algebra.Order.EuclideanAbsoluteValue` (new file)|531|\n| `Mathlib.MeasureTheory.Constructions.EventuallyMeasurable` (new file)|574|\n| `Mathlib.Dynamics.PeriodicPts` (new file)|580|\n| `Mathlib.RepresentationTheory.Action.Basic` (new file)|592|\n| `Mathlib.CategoryTheory.Abelian.GrothendieckAxioms` (new file)|630|\n| `Mathlib.Topology.CountableSeparatingOn` (new file)|643|\n| `Mathlib.CategoryTheory.Generator` (new file)|653|\n| `Mathlib.Logic.Equiv.TransferInstance` (new file)|694|\n| `Mathlib.Logic.Small.Group` (new file) `Mathlib.Logic.Small.Ring` (new file)|695|\n| `Mathlib.Logic.Small.Module` (new file)|697|\n| `Mathlib.Topology.Support` (new file)|705|\n| `Mathlib.SetTheory.Cardinal.PartENat` (new file)|761|\n| `Mathlib.RepresentationTheory.Action.Concrete` (new file)|824|\n| `Mathlib.AlgebraicTopology.SimplicialObject` (new file)|830|\n| `Mathlib.AlgebraicTopology.SplitSimplicialObject` (new file)|835|\n| `Mathlib.AlgebraicTopology.SimplicialSet.Quasicategory` (new file)|839|\n| `Mathlib.RepresentationTheory.Action.Continuous` (new file)|840|\n| `Mathlib.CategoryTheory.Preadditive.Generator` (new file)|841|\n| `Mathlib.CategoryTheory.Abelian.Generator` (new file)|871|\n| `Mathlib.RepresentationTheory.Action.Limits` (new file)|907|\n| `Mathlib.CategoryTheory.Sites.DenseSubsite` (new file)|936|\n| `Mathlib.CategoryTheory.Sites.InducedTopology` (new file)|937|\n| `Mathlib.LinearAlgebra.TensorPower` (new file)|946|\n| `Mathlib.RepresentationTheory.Action.Monoidal` (new file)|1013|\n| `Mathlib.Algebra.Order.Hom.Normed` (new file)|1020|\n| `Mathlib.Algebra.Order.Hom.Ultra` (new file)|1022|\n| `Mathlib.RingTheory.PrimeSpectrum` (new file)|1120|\n| `Mathlib.Algebra.DirectLimit` (new file)|1128|\n| `Mathlib.RingTheory.MaximalSpectrum` (new file)|1142|\n| `Mathlib.CategoryTheory.Triangulated.Opposite` (new file)|1162|\n| `Mathlib.RingTheory.JacobsonIdeal` (new file)|1183|\n| `Mathlib.Topology.Instances.Real` (new file)|1194|\n| `Mathlib.Algebra.Category.Grp.AB5` (new file)|1198|\n| `Mathlib.Topology.Instances.NNReal` (new file)|1218|\n| `Mathlib.Topology.Instances.ENNReal` (new file)|1229|\n| `Mathlib.Topology.Instances.EReal` (new file)|1235|\n| `Mathlib.RingTheory.Artinian` (new file)|1248|\n| `Mathlib.LinearAlgebra.PerfectPairing` (new file)|1254|\n| `Mathlib.LinearAlgebra.Dimension.Torsion` (new file)|1278|\n| `Mathlib.Analysis.Asymptotics.Asymptotics` (new file)|1309|\n| `Mathlib.Analysis.NormedSpace.ENorm` (new file)|1350|\n| `Mathlib.RingTheory.Algebraic` (new file)|1364|\n| `Mathlib.Topology.CompletelyRegular` (new file)|1391|\n| `Mathlib.FieldTheory.Adjoin` (new file)|1414|\n| `Mathlib.NumberTheory.DiophantineApproximation` (new file) `Mathlib.RingTheory.AlgebraicIndependent` (new file)|1417|\n| `Mathlib.RingTheory.Jacobson` (new file)|1419|\n| `Mathlib.AlgebraicGeometry.PrimeSpectrum.Basic` (new file)|1478|\n| `Mathlib.AlgebraicGeometry.PrimeSpectrum.IsOpenComapC` (new file)|1479|\n| `Mathlib.AlgebraicGeometry.PrimeSpectrum.Noetherian` (new file) `Mathlib.AlgebraicGeometry.PrimeSpectrum.TensorProduct` (new file)|1480|\n| `Mathlib.AlgebraicGeometry.PrimeSpectrum.Module` (new file)|1482|\n| `Mathlib.AlgebraicGeometry.PrimeSpectrum.Maximal` (new file)|1484|\n| `Mathlib.AlgebraicGeometry.EllipticCurve.J` (new file) `Mathlib.AlgebraicGeometry.PrimeSpectrum.Jacobson` (new file)|1510|\n| `Mathlib.RingTheory.Flat.Algebra` (new file)|1585|\n| `Mathlib.RingTheory.Flat.FaithfullyFlat` (new file)|1586|\n| `Mathlib.Geometry.Manifold.SmoothManifoldWithCorners` (new file)|1757|\n| `Mathlib.Probability.Moments` (new file)|1980|\n| `Mathlib.Probability.Kernel.Composition` (new file)|1987|\n| `Mathlib.Probability.Kernel.IntegralCompProd` (new file)|1988|\n| `Mathlib.Probability.Kernel.MeasureCompProd` (new file)|1989|\n\n</details>\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ AB4`\n`+ AB4.of_AB5`\n`+ AB4Star`\n`+ AB5`\n`+ AB5Star`\n`+ AbsoluteValue`\n`+ Action`\n`+ AddGroupSeminormClass.isUltrametricDist`\n`+ AdjoinSimple.algebraMap_gen`\n`+ AdjoinSimple.coe_gen`\n`+ AdjoinSimple.gen`\n`+ AdjoinSimple.isIntegral_gen`\n`+ AlgEquiv.isAlgebraic`\n`+ AlgEquiv.isAlgebraic_iff`\n`+ AlgHom.algebraicIndependent_iff`\n`+ AlgHom.bijective`\n`+ Algebra.Flat`\n`+ Algebra.IsAlgebraic`\n`+ Algebra.IsAlgebraic.exists_smul_eq_mul`\n`+ Algebra.IsAlgebraic.extendScalars`\n`+ Algebra.IsAlgebraic.isIntegral`\n`+ Algebra.IsAlgebraic.of_finite`\n`+ Algebra.IsAlgebraic.of_injective`\n`+ Algebra.IsAlgebraic.of_isIntegralClosure`\n`+ Algebra.IsAlgebraic.of_ringHom_of_comp_eq`\n`+ Algebra.IsAlgebraic.ringHom_of_comp_eq`\n`+ Algebra.IsAlgebraic.tower_bot`\n`+ Algebra.IsAlgebraic.tower_bot_of_injective`\n`+ Algebra.IsAlgebraic.tower_top`\n`+ Algebra.IsAlgebraic.tower_top_of_injective`\n`+ Algebra.IsAlgebraic.trans`\n`+ Algebra.IsIntegral.isAlgebraic`\n`+ Algebra.Transcendental`\n`+ Algebra.Transcendental.of_ringHom_of_comp_eq`\n`+ Algebra.Transcendental.ringHom_of_comp_eq`\n`+ Algebra.isAlgebraic_def`\n`+ Algebra.isAlgebraic_iff`\n`+ Algebra.isAlgebraic_iff_isIntegral`\n`+ Algebra.isAlgebraic_ringHom_iff_of_comp_eq`\n`+ Algebra.transcendental_def`\n`+ Algebra.transcendental_iff_not_isAlgebraic`\n`+ Algebra.transcendental_ringHom_iff_of_comp_eq`\n`+ AlgebraicIndependent`\n`+ AlgebraicIndependent.aeval_comp_mvPolynomialOptionEquivPolynomialAdjoin`\n`+ AlgebraicIndependent.eq_zero_of_aeval_eq_zero`\n`+ AlgebraicIndependent.image`\n`+ AlgebraicIndependent.image_of_comp`\n`+ AlgebraicIndependent.isTranscendenceBasis_iff`\n`+ AlgebraicIndependent.mono`\n`+ AlgebraicIndependent.mvPolynomialOptionEquivPolynomialAdjoin`\n`+ AlgebraicIndependent.mvPolynomialOptionEquivPolynomialAdjoin_C`\n`+ AlgebraicIndependent.mvPolynomialOptionEquivPolynomialAdjoin_C'`\n`+ AlgebraicIndependent.mvPolynomialOptionEquivPolynomialAdjoin_X_none`\n`+ AlgebraicIndependent.mvPolynomialOptionEquivPolynomialAdjoin_X_some`\n`+ AlgebraicIndependent.mvPolynomialOptionEquivPolynomialAdjoin_apply`\n`+ AlgebraicIndependent.of_ringHom_of_comp_eq`\n`+ AlgebraicIndependent.of_subtype_range`\n`+ AlgebraicIndependent.option_iff`\n`+ AlgebraicIndependent.polynomial_aeval_of_transcendental`\n`+ AlgebraicIndependent.restrictScalars`\n`+ AlgebraicIndependent.restrict_of_comp_subtype`\n`+ AlgebraicIndependent.ringHom_of_comp_eq`\n`+ AlgebraicIndependent.to_subtype_range`\n`+ AlgebraicIndependent.to_subtype_range'`\n`+ AntiSymmetric`\n`+ Antitone.ball`\n`+ Antitone.exists`\n`+ Antitone.forall`\n`+ Associated`\n`+ Associated.dvd`\n`+ Associated.dvd'`\n`+ Associated.dvd_dvd`\n`+ Associated.dvd_iff_dvd_left`\n`+ Associated.dvd_iff_dvd_right`\n`+ Associated.eq_zero_iff`\n`+ Associated.irreducible`\n`+ Associated.irreducible_iff`\n`+ Associated.isUnit`\n`+ Associated.isUnit_iff`\n`+ Associated.mul_left`\n`+ Associated.mul_mul`\n`+ Associated.mul_right`\n`+ Associated.ne_zero_iff`\n`+ Associated.neg_left`\n`+ Associated.neg_neg`\n`+ Associated.neg_right`\n`+ Associated.of_mul_left`\n`+ Associated.of_mul_right`\n`+ Associated.of_pow_associated_of_prime`\n`+ Associated.of_pow_associated_of_prime'`\n`+ Associated.pow_pow`\n`+ Associated.prime`\n`+ Associated.prime_iff`\n`+ Associates`\n`+ Asymptotics.IsBigO.comp_summable_norm`\n`+ Bool.instBoundedOrder`\n`+ BoundedOrder`\n`+ BoundedOrder.instSubsingleton`\n`+ BoundedOrder.lift`\n`+ CanonicallyLinearOrderedSemifield`\n`+ Commute.minimalPeriod_of_comp_dvd_lcm`\n`+ Commute.minimalPeriod_of_comp_dvd_mul`\n`+ Commute.minimalPeriod_of_comp_eq_mul_of_coprime`\n`+ CompletelyRegularSpace`\n`+ CompletelyRegularSpace.instRegularSpace`\n`+ ContAction`\n`+ ContfracLegendre.Ass`\n`+ Continuous.edist`\n`+ ContinuousMap.canLift`\n`+ ContinuousWithinAt.extChartAt_symm_preimage_inter_range_eventuallyEq`\n`+ ContinuousWithinAt.nhdsWithin_extChartAt_symm_preimage_inter_range`\n`+ CosimplicialObject`\n`+ CosimplicialObject.Augmented.leftOp`\n`+ CosimplicialObject.Augmented.leftOpRightOpIso`\n`+ DTExpr`\n`+ DTExpr.flatten`\n`+ DTExpr.hasLooseBVars`\n`+ DTExpr.isSpecific`\n`+ DirectedSystem.map_map`\n`+ DirectedSystem.map_self`\n`+ DiscreteContAction`\n`+ DivisionRing.instIsArtinianRing`\n`+ DvdNotUnit.not_associated`\n`+ EMetric.cauchySeq_iff_le_tendsto_0`\n`+ EMetric.diam_closure`\n`+ EMetric.isClosed_ball`\n`+ ENNReal.ofReal_tsum_of_nonneg`\n`+ ENorm`\n`+ EmptyRelation`\n`+ EqId`\n`+ Equivalence.reflexive`\n`+ Equivalence.symmetric`\n`+ Equivalence.transitive`\n`+ EventuallyMeasurable`\n`+ EventuallyMeasurable.congr`\n`+ EventuallyMeasurableSet`\n`+ EventuallyMeasurableSet.congr`\n`+ EventuallyMeasurableSpace`\n`+ EventuallyMeasurableSpace.measurable_le`\n`+ FG`\n`+ FaithfullyFlat`\n`+ Filter.Tendsto.edist`\n`+ Finite.div`\n`+ Finite.mul`\n`+ Finite.smul`\n`+ Finite.smul_set`\n`+ Finite.vsub`\n`+ Function.Surjective.isArtinianRing`\n`+ Functor.IsCoverDense`\n`+ Functor.isCoverDense_of_generate_singleton_functor_π_mem`\n`+ Functor.is_cover_of_isCoverDense`\n`+ FunctorCategoryEquivalence.functor_δ`\n`+ FunctorCategoryEquivalence.functor_ε`\n`+ FunctorCategoryEquivalence.functor_η`\n`+ FunctorCategoryEquivalence.functor_μ`\n`+ GaloisCoinsertion`\n`+ GaloisCoinsertion.dual`\n`+ GaloisCoinsertion.monotoneIntro`\n`+ GaloisCoinsertion.ofDual`\n`+ GaloisConnection`\n`+ GaloisConnection.liftOrderBot`\n`+ GaloisConnection.liftOrderTop`\n`+ GaloisConnection.toGaloisCoinsertion`\n`+ GaloisConnection.toGaloisInsertion`\n`+ GaloisInsertion`\n`+ GaloisInsertion.dual`\n`+ GaloisInsertion.monotoneIntro`\n`+ GaloisInsertion.ofDual`\n`+ GroupNormClass.toNormedCommGroup`\n`+ GroupNormClass.toNormedCommGroup_norm_eq`\n`+ GroupNormClass.toNormedGroup`\n`+ GroupNormClass.toNormedGroup_norm_eq`\n`+ GroupSeminormClass.toSeminormedCommGroup`\n`+ GroupSeminormClass.toSeminormedCommGroup_norm_eq`\n`+ GroupSeminormClass.toSeminormedGroup`\n`+ GroupSeminormClass.toSeminormedGroup_norm_eq`\n`+ HasCodetector`\n`+ HasCodetector.hasCoseparator`\n`+ HasCodetector.hasDetector_of_hasCodetector_op`\n`+ HasCodetector.hasDetector_op`\n`+ HasCompactMulSupport`\n`+ HasCompactMulSupport.inv'`\n`+ HasCompactMulSupport.mul`\n`+ HasCompactMulSupport.of_compactSpace`\n`+ HasCompactMulSupport.one`\n`+ HasCompactSupport.abs`\n`+ HasCompactSupport.mul_left`\n`+ HasCompactSupport.mul_right`\n`+ HasCompactSupport.smul_left`\n`+ HasCompactSupport.smul_left'`\n`+ HasCompactSupport.smul_right`\n`+ HasCoseparator`\n`+ HasCoseparator.hasCodetector`\n`+ HasCoseparator.hasSeparator_of_hasCoseparator_op`\n`+ HasCoseparator.hasSeparator_op`\n`+ HasDetector`\n`+ HasDetector.hasCodetector_of_hasDetector_op`\n`+ HasDetector.hasCodetector_op`\n`+ HasDetector.hasSeparator`\n`+ HasDetector.wellPowered`\n`+ HasSeparator`\n`+ HasSeparator.hasCoseparator_of_hasSeparator_op`\n`+ HasSeparator.hasCoseparator_op`\n`+ HasSeparator.hasDetector`\n`+ HasSeparator.wellPowered`\n`+ Hom.ext`\n`+ Icc_mem_nhds`\n`+ Icc_mul_Icc_subset'`\n`+ Icc_mul_Ico_subset'`\n`+ Ici_mul_Ici_subset'`\n`+ Ici_mul_Ioi_subset'`\n`+ Ico_mul_Icc_subset'`\n`+ Ico_mul_Ioc_subset'`\n`+ Ideal.radical_eq_jacobson`\n`+ Iic_add_bij`\n`+ Iic_mul_Iic_subset'`\n`+ Iic_mul_Iio_subset'`\n`+ Iio_add_bij`\n`+ Iio_mul_Iic_subset'`\n`+ IndepFun.cgf_add`\n`+ IndepFun.exp_mul`\n`+ IndepFun.integrable_exp_mul_add`\n`+ IndepFun.mgf_add`\n`+ IndepFun.mgf_add'`\n`+ IndexSet`\n`+ Infinite.of_smul_set`\n`+ Inv`\n`+ InvImage.irreflexive`\n`+ InvImage.trans`\n`+ Ioc_mul_Ico_subset'`\n`+ Ioi_mul_Ici_subset'`\n`+ Irreducible.associated_of_dvd`\n`+ Irreducible.dvd_iff`\n`+ Irreducible.dvd_irreducible_iff_associated`\n`+ Irreducible.dvd_or_isRelPrime`\n`+ Irreducible.isRelPrime_iff_not_dvd`\n`+ Irreducible.isUnit_iff_not_associated_of_dvd`\n`+ Irreflexive`\n`+ IsAbsoluteValue`\n`+ IsAlgebraic`\n`+ IsAlgebraic.algHom`\n`+ IsAlgebraic.algebraMap`\n`+ IsAlgebraic.exists_nonzero_coeff_and_aeval_eq_zero`\n`+ IsAlgebraic.exists_nonzero_dvd`\n`+ IsAlgebraic.exists_smul_eq_mul`\n`+ IsAlgebraic.extendScalars`\n`+ IsAlgebraic.inv`\n`+ IsAlgebraic.invOf`\n`+ IsAlgebraic.invOf_iff`\n`+ IsAlgebraic.inv_iff`\n`+ IsAlgebraic.isIntegral`\n`+ IsAlgebraic.of_aeval`\n`+ IsAlgebraic.of_aeval_of_transcendental`\n`+ IsAlgebraic.of_finite`\n`+ IsAlgebraic.of_pow`\n`+ IsAlgebraic.of_ringHom_of_comp_eq`\n`+ IsAlgebraic.ringHom_of_comp_eq`\n`+ IsAlgebraic.tower_top`\n`+ IsAlgebraic.tower_top_of_injective`\n`+ IsAlgebraic.tower_top_of_subalgebra_le`\n`+ IsAntisymm`\n`+ IsAntisymm.decide`\n`+ IsArtinian`\n`+ IsArtinian.finite_of_linearIndependent`\n`+ IsArtinian.set_has_minimal`\n`+ IsArtinianRing`\n`+ IsArtinianRing.of_finite`\n`+ IsAsymm`\n`+ IsAsymm.decide`\n`+ IsBigO.abs_abs`\n`+ IsBigO.abs_left`\n`+ IsBigO.abs_right`\n`+ IsBigO.add`\n`+ IsBigO.add_isLittleO`\n`+ IsBigO.bound`\n`+ IsBigO.comp_fst`\n`+ IsBigO.comp_snd`\n`+ IsBigO.comp_tendsto`\n`+ IsBigO.congr`\n`+ IsBigO.congr'`\n`+ IsBigO.congr_left`\n`+ IsBigO.congr_of_sub`\n`+ IsBigO.congr_right`\n`+ IsBigO.const_mul_left`\n`+ IsBigO.const_mul_right`\n`+ IsBigO.const_mul_right'`\n`+ IsBigO.const_smul_left`\n`+ IsBigO.const_smul_self`\n`+ IsBigO.eq_zero_imp`\n`+ IsBigO.eq_zero_of_norm_pow`\n`+ IsBigO.eq_zero_of_norm_pow_within`\n`+ IsBigO.eventually_mul_div_cancel`\n`+ IsBigO.exists_eq_mul`\n`+ IsBigO.exists_mem_basis`\n`+ IsBigO.exists_nonneg`\n`+ IsBigO.exists_pos`\n`+ IsBigO.fiberwise_left`\n`+ IsBigO.fiberwise_right`\n`+ IsBigO.inv_rev`\n`+ IsBigO.isBigOWith`\n`+ IsBigO.isBoundedUnder_le`\n`+ IsBigO.mono`\n`+ IsBigO.mul`\n`+ IsBigO.mul_isLittleO`\n`+ IsBigO.natCast_atTop`\n`+ IsBigO.nat_cast_atTop`\n`+ IsBigO.neg_left`\n`+ IsBigO.neg_right`\n`+ IsBigO.norm_left`\n`+ IsBigO.norm_norm`\n`+ IsBigO.norm_right`\n`+ IsBigO.not_isLittleO`\n`+ IsBigO.of_abs_abs`\n`+ IsBigO.of_abs_left`\n`+ IsBigO.of_abs_right`\n`+ IsBigO.of_bound`\n`+ IsBigO.of_bound'`\n`+ IsBigO.of_const_mul_right`\n`+ IsBigO.of_neg_left`\n`+ IsBigO.of_neg_right`\n`+ IsBigO.of_norm_left`\n`+ IsBigO.of_norm_norm`\n`+ IsBigO.of_norm_right`\n`+ IsBigO.of_pow`\n`+ IsBigO.pow`\n`+ IsBigO.prod_left`\n`+ IsBigO.prod_left_fst`\n`+ IsBigO.prod_left_snd`\n`+ IsBigO.prod_rightl`\n`+ IsBigO.prod_rightr`\n`+ IsBigO.smul`\n`+ IsBigO.smul_isLittleO`\n`+ IsBigO.sub`\n`+ IsBigO.sum`\n`+ IsBigO.sup`\n`+ IsBigO.symm`\n`+ IsBigO.trans`\n`+ IsBigO.trans_eventuallyEq`\n`+ IsBigO.trans_isLittleO`\n`+ IsBigO.trans_le`\n`+ IsBigO.trans_tendsto`\n`+ IsBigO.trans_tendsto_nhds`\n`+ IsBigO.triangle`\n`+ IsBigOWith.abs_abs`\n`+ IsBigOWith.abs_left`\n`+ IsBigOWith.abs_right`\n`+ IsBigOWith.add`\n`+ IsBigOWith.add_isLittleO`\n`+ IsBigOWith.bound`\n`+ IsBigOWith.comp_tendsto`\n`+ IsBigOWith.congr`\n`+ IsBigOWith.congr'`\n`+ IsBigOWith.congr_const`\n`+ IsBigOWith.congr_left`\n`+ IsBigOWith.congr_right`\n`+ IsBigOWith.const_mul_left`\n`+ IsBigOWith.const_mul_right`\n`+ IsBigOWith.const_mul_right'`\n`+ IsBigOWith.const_smul_left`\n`+ IsBigOWith.const_smul_self`\n`+ IsBigOWith.eq_zero_imp`\n`+ IsBigOWith.eventually_mul_div_cancel`\n`+ IsBigOWith.exists_eq_mul`\n`+ IsBigOWith.exists_nonneg`\n`+ IsBigOWith.exists_pos`\n`+ IsBigOWith.insert`\n`+ IsBigOWith.inv_rev`\n`+ IsBigOWith.isBigO`\n`+ IsBigOWith.mono`\n`+ IsBigOWith.mul`\n`+ IsBigOWith.neg_left`\n`+ IsBigOWith.neg_right`\n`+ IsBigOWith.norm_left`\n`+ IsBigOWith.norm_norm`\n`+ IsBigOWith.norm_right`\n`+ IsBigOWith.of_abs_abs`\n`+ IsBigOWith.of_abs_left`\n`+ IsBigOWith.of_abs_right`\n`+ IsBigOWith.of_bound`\n`+ IsBigOWith.of_const_mul_right`\n`+ IsBigOWith.of_neg_left`\n`+ IsBigOWith.of_neg_right`\n`+ IsBigOWith.of_norm_left`\n`+ IsBigOWith.of_norm_norm`\n`+ IsBigOWith.of_norm_right`\n`+ IsBigOWith.of_pow`\n`+ IsBigOWith.pow`\n`+ IsBigOWith.pow'`\n`+ IsBigOWith.prod_left`\n`+ IsBigOWith.prod_left_fst`\n`+ IsBigOWith.prod_left_same`\n`+ IsBigOWith.prod_left_snd`\n`+ IsBigOWith.prod_rightl`\n`+ IsBigOWith.prod_rightr`\n`+ IsBigOWith.right_le_add_of_lt_one`\n`+ IsBigOWith.right_le_sub_of_lt_one`\n`+ IsBigOWith.smul`\n`+ IsBigOWith.sub`\n`+ IsBigOWith.sub_isLittleO`\n`+ IsBigOWith.sum`\n`+ IsBigOWith.sup`\n`+ IsBigOWith.sup'`\n`+ IsBigOWith.symm`\n`+ IsBigOWith.trans`\n`+ IsBigOWith.trans_isLittleO`\n`+ IsBigOWith.trans_le`\n`+ IsBigOWith.triangle`\n`+ IsBigOWith.weaken`\n`+ IsBot.eq_bot`\n`+ IsCodetecting`\n`+ IsCodetecting.isCoseparating`\n`+ IsCodetecting.mono`\n`+ IsCodetector`\n`+ IsCodetector.def`\n`+ IsCodetector.isCoseparator`\n`+ IsCompl.prod_mul_prod`\n`+ IsContinuous`\n`+ IsCoseparating`\n`+ IsCoseparating.isCodetecting`\n`+ IsCoseparating.mono`\n`+ IsCoseparator`\n`+ IsCoseparator.def`\n`+ IsCoseparator.isCodetector`\n`+ IsCoverDense.sheafEquivOfCoverPreservingCoverLifting`\n`+ IsCoverDense.sheafEquivOfCoverPreservingCoverLiftingSheafificationCompatibility`\n`+ IsDenseSubsite`\n`+ IsDetecting`\n`+ IsDetecting.isSeparating`\n`+ IsDetecting.mono`\n`+ IsDetector`\n`+ IsDetector.def`\n`+ IsDetector.isSeparator`\n`+ IsDiscrete`\n`+ IsEquiv`\n`+ IsEuclidean`\n`+ IsFiniteKernel.comap`\n`+ IsFiniteKernel.comp`\n`+ IsFiniteKernel.compProd`\n`+ IsFiniteKernel.fst`\n`+ IsFiniteKernel.map`\n`+ IsFiniteKernel.prod`\n`+ IsFiniteKernel.prodMkLeft`\n`+ IsFiniteKernel.prodMkRight`\n`+ IsFiniteKernel.snd`\n`+ IsFiniteKernel.swapLeft`\n`+ IsFiniteKernel.swapRight`\n`+ IsFixedPt.isPeriodicPt`\n`+ IsIdempotentElem`\n`+ IsIntegral.isAlgebraic`\n`+ IsIrrefl`\n`+ IsIrrefl.decide`\n`+ IsJacobson`\n`+ IsJacobson.out`\n`+ IsJacobsonRing`\n`+ IsJacobsonRing.out`\n`+ IsLinearOrder`\n`+ IsLittleO.abs_abs`\n`+ IsLittleO.abs_left`\n`+ IsLittleO.abs_right`\n`+ IsLittleO.add`\n`+ IsLittleO.add_add`\n`+ IsLittleO.add_isBigO`\n`+ IsLittleO.add_isBigOWith`\n`+ IsLittleO.bound`\n`+ IsLittleO.comp_fst`\n`+ IsLittleO.comp_snd`\n`+ IsLittleO.comp_tendsto`\n`+ IsLittleO.congr`\n`+ IsLittleO.congr'`\n`+ IsLittleO.congr_left`\n`+ IsLittleO.congr_of_sub`\n`+ IsLittleO.congr_right`\n`+ IsLittleO.const_mul_left`\n`+ IsLittleO.const_mul_right`\n`+ IsLittleO.const_mul_right'`\n`+ IsLittleO.const_smul_left`\n`+ IsLittleO.def`\n`+ IsLittleO.def'`\n`+ IsLittleO.eventuallyLE`\n`+ IsLittleO.eventually_mul_div_cancel`\n`+ IsLittleO.exists_eq_mul`\n`+ IsLittleO.forall_isBigOWith`\n`+ IsLittleO.insert`\n`+ IsLittleO.inv_rev`\n`+ IsLittleO.isBigO`\n`+ IsLittleO.isBigOWith`\n`+ IsLittleO.mono`\n`+ IsLittleO.mul`\n`+ IsLittleO.mul_isBigO`\n`+ IsLittleO.natCast_atTop`\n`+ IsLittleO.nat_cast_atTop`\n`+ IsLittleO.neg_left`\n`+ IsLittleO.neg_right`\n`+ IsLittleO.norm_left`\n`+ IsLittleO.norm_norm`\n`+ IsLittleO.norm_right`\n`+ IsLittleO.not_isBigO`\n`+ IsLittleO.of_abs_abs`\n`+ IsLittleO.of_abs_left`\n`+ IsLittleO.of_abs_right`\n`+ IsLittleO.of_bound`\n`+ IsLittleO.of_const_mul_right`\n`+ IsLittleO.of_isBigOWith`\n`+ IsLittleO.of_neg_left`\n`+ IsLittleO.of_neg_right`\n`+ IsLittleO.of_norm_left`\n`+ IsLittleO.of_norm_norm`\n`+ IsLittleO.of_norm_right`\n`+ IsLittleO.of_pow`\n`+ IsLittleO.pow`\n`+ IsLittleO.prod_left`\n`+ IsLittleO.prod_left_fst`\n`+ IsLittleO.prod_left_snd`\n`+ IsLittleO.prod_rightl`\n`+ IsLittleO.prod_rightr`\n`+ IsLittleO.right_isBigO_add`\n`+ IsLittleO.right_isBigO_add'`\n`+ IsLittleO.right_isBigO_sub`\n`+ IsLittleO.smul`\n`+ IsLittleO.smul_isBigO`\n`+ IsLittleO.sub`\n`+ IsLittleO.sum`\n`+ IsLittleO.sup`\n`+ IsLittleO.symm`\n`+ IsLittleO.tendsto_div_nhds_zero`\n`+ IsLittleO.tendsto_inv_smul_nhds_zero`\n`+ IsLittleO.tendsto_zero_of_tendsto`\n`+ IsLittleO.trans`\n`+ IsLittleO.trans_eventuallyEq`\n`+ IsLittleO.trans_isBigO`\n`+ IsLittleO.trans_isBigOWith`\n`+ IsLittleO.trans_le`\n`+ IsLittleO.trans_tendsto`\n`+ IsLittleO.triangle`\n`+ IsLocal`\n`+ IsLocal.le_jacobson`\n`+ IsLocal.mem_jacobson_or_exists_inv`\n`+ IsLocalization.isMaximal_iff_isMaximal_disjoint`\n`+ IsLocalization.isMaximal_of_isMaximal_disjoint`\n`+ IsLocalization.orderIsoOfMaximal`\n`+ IsLowerSet`\n`+ IsMarkovKernel.comap`\n`+ IsMarkovKernel.comp`\n`+ IsMarkovKernel.compProd`\n`+ IsMarkovKernel.fst`\n`+ IsMarkovKernel.map`\n`+ IsMarkovKernel.prod`\n`+ IsMarkovKernel.prodMkLeft`\n`+ IsMarkovKernel.prodMkRight`\n`+ IsMarkovKernel.snd`\n`+ IsMarkovKernel.swapLeft`\n`+ IsMarkovKernel.swapRight`\n`+ IsMax.eq_top`\n`+ IsMin.eq_bot`\n`+ IsPartialOrder`\n`+ IsPeriodicPt`\n`+ IsPeriodicPt.eq_zero_of_lt_minimalPeriod`\n`+ IsPeriodicPt.minimalPeriod_dvd`\n`+ IsPeriodicPt.minimalPeriod_le`\n`+ IsPeriodicPt.minimalPeriod_pos`\n`+ IsPreorder`\n`+ IsRefl`\n`+ IsRefl.decide`\n`+ IsReflexive.toPerfectPairingDual`\n`+ IsReflexive.toPerfectPairingDual_apply`\n`+ IsSFiniteKernel.comap`\n`+ IsSFiniteKernel.comp`\n`+ IsSFiniteKernel.compProd`\n`+ IsSFiniteKernel.fst`\n`+ IsSFiniteKernel.map`\n`+ IsSFiniteKernel.prod`\n`+ IsSFiniteKernel.prodMkLeft`\n`+ IsSFiniteKernel.prodMkRight`\n`+ IsSFiniteKernel.snd`\n`+ IsSFiniteKernel.swapLeft`\n`+ IsSFiniteKernel.swapRight`\n`+ IsSeparating`\n`+ IsSeparating.isDetecting`\n`+ IsSeparating.mono`\n`+ IsSeparator`\n`+ IsSeparator.def`\n`+ IsSeparator.isDetector`\n`+ IsStrictOrder`\n`+ IsStrictTotalOrder`\n`+ IsStrictWeakOrder`\n`+ IsSymm`\n`+ IsSymm.decide`\n`+ IsTop.eq_top`\n`+ IsTotal`\n`+ IsTotal.decide`\n`+ IsTrans`\n`+ IsTrans.decide`\n`+ IsTranscendenceBasis`\n`+ IsTranscendenceBasis.isAlgebraic`\n`+ IsTranscendenceBasis.isAlgebraic_field`\n`+ IsTranscendenceBasis.isEmpty_iff_isAlgebraic`\n`+ IsTranscendenceBasis.nonempty_iff_transcendental`\n`+ IsTrichotomous`\n`+ IsTrichotomous.decide`\n`+ IsUnit.natAbs_eq`\n`+ IsUpperSet`\n`+ IsZeroOrMarkovKernel.fst`\n`+ IsZeroOrMarkovKernel.map`\n`+ IsZeroOrMarkovKernel.prod`\n`+ IsZeroOrMarkovKernel.snd`\n`+ IsZeroOrMarkovKernel.swapRight`\n`+ Iso.conj_ρ`\n`+ Kernel.continuous_integral_integral`\n`+ Kernel.integral_fn_integral_add`\n`+ Kernel.integral_fn_integral_sub`\n`+ Kernel.integral_integral_add`\n`+ Kernel.integral_integral_add'`\n`+ Kernel.integral_integral_sub`\n`+ Kernel.integral_integral_sub'`\n`+ Kernel.lintegral_fn_integral_sub`\n`+ Key`\n`+ Key.arity`\n`+ Key.ctorIdx`\n`+ LE.le.not_lt`\n`+ LT.lt.bot_lt`\n`+ LT.lt.lt_top`\n`+ LT.lt.ne_bot`\n`+ LT.lt.ne_top`\n`+ LT.lt.not_le`\n`+ LinearEquiv.isArtinian_iff`\n`+ LinearOrder`\n`+ LocalRing.PrimeSpectrum.comap_residue`\n`+ LocalRing.closedPoint`\n`+ LocalRing.closedPoint_mem_iff`\n`+ LocalRing.closed_point_mem_iff`\n`+ LocalRing.comap_closedPoint`\n`+ LocalRing.isLocalHom_iff_comap_closedPoint`\n`+ LocalRing.specializes_closedPoint`\n`+ LocalizedModule.subsingleton_iff_disjoint`\n`+ LocallyCoverDense`\n`+ LocallyFinite.exists_finset_nhd_mulSupport_subset`\n`+ LocallyFinite.smul_left`\n`+ LocallyFinite.smul_right`\n`+ LowerSet`\n`+ Manifold.locallyCompact_of_finiteDimensional`\n`+ Mathlib.Meta.Positivity.evalAbv`\n`+ Maximal`\n`+ Maximal.le_of_ge`\n`+ Maximal.prop`\n`+ MaximalSpectrum`\n`+ Measurable.comp_eventuallyMeasurable`\n`+ Measurable.eventuallyMeasurable`\n`+ Measurable.eventuallyMeasurable_of_eventuallyEq`\n`+ MeasurableSet.eventuallyMeasurableSet`\n`+ Metric.diam_closure`\n`+ Minimal`\n`+ Minimal.le_of_le`\n`+ Minimal.prop`\n`+ ModelWithCorners`\n`+ ModelWithCorners.Boundaryless`\n`+ ModelWithCorners.pi`\n`+ ModelWithCorners.prod`\n`+ ModelWithCorners.range_eq_univ`\n`+ ModelWithCorners.range_eq_univ_prod`\n`+ ModelWithCorners.range_prod`\n`+ ModelWithCorners.tangent`\n`+ ModelWithCorners.toHomeomorph`\n`+ Module.isClosed_support`\n`+ Module.stableUnderSpecialization_support`\n`+ Module.support_subset_preimage_comap`\n`+ MonoidHom.coe_finset_prod`\n`+ MonoidHom.finset_prod_apply`\n`+ Monotone.ball`\n`+ Monotone.exists`\n`+ Monotone.forall`\n`+ MvPolynomial.algebraicIndependent_X`\n`+ MvPolynomial.comp_C_integral_of_surjective_of_jacobson`\n`+ MvPolynomial.isJacobson_MvPolynomial_fin`\n`+ MvPolynomial.quotient_mk_comp_C_isIntegral_of_jacobson`\n`+ Nat.sum_eq_listSum`\n`+ Ne.bot_lt`\n`+ Ne.bot_lt'`\n`+ Ne.lt_top`\n`+ Ne.lt_top'`\n`+ NormalSpace.instCompletelyRegularSpace`\n`+ NormedField.tendsto_zero_smul_of_tendsto_zero_of_bounded`\n`+ Nucleus`\n`+ NucleusClass`\n`+ One`\n`+ OpenEmbedding.singleton_smoothManifoldWithCorners`\n`+ OrderBot`\n`+ OrderBot.ext_bot`\n`+ OrderBot.instSubsingleton`\n`+ OrderBot.lift`\n`+ OrderDual.instBoundedOrder`\n`+ OrderIso.toGaloisCoinsertion`\n`+ OrderIso.toGaloisInsertion`\n`+ OrderIso.to_galoisConnection`\n`+ OrderTop`\n`+ OrderTop.ext_top`\n`+ OrderTop.instSubsingleton`\n`+ OrderTop.lift`\n`+ PartialHomeomorph.singleton_smoothManifoldWithCorners`\n`+ PartialOrder`\n`+ PerfectPairing`\n`+ Periodic.compact_of_continuous`\n`+ Periodic.isBounded_of_continuous`\n`+ Perm.prod_eq`\n`+ Perm.prod_eq'`\n`+ Polynomial.algebraMap_pi_eq_aeval`\n`+ Polynomial.algebraMap_pi_self_eq_eval`\n`+ Polynomial.algebraPi`\n`+ Polynomial.exists_of`\n`+ Polynomial.hasSMulPi`\n`+ Polynomial.hasSMulPi'`\n`+ Polynomial.transcendental`\n`+ Polynomial.transcendental_X`\n`+ Preadditive.isCoseparating_iff`\n`+ Preadditive.isCoseparator_iff`\n`+ Preadditive.isSeparating_iff`\n`+ Preadditive.isSeparator_iff`\n`+ Preorder`\n`+ Presieve.CoverByImageStructure`\n`+ Presieve.coverByImage`\n`+ Presieve.in_coverByImage`\n`+ Prime.associated_of_dvd`\n`+ Prime.dvd_prime_iff_associated`\n`+ Prime.le_or_le`\n`+ PrimeSpectrum`\n`+ PrimeSpectrum.IsPrime`\n`+ PrimeSpectrum.basicOpen_eq_zeroLocus_of_isIdempotentElem`\n`+ PrimeSpectrum.comap_residue`\n`+ PrimeSpectrum.continuous_tensorProductTo`\n`+ PrimeSpectrum.embedding_tensorProductTo_of_surjectiveOnStalks`\n`+ PrimeSpectrum.isClopen_iff`\n`+ PrimeSpectrum.isClopen_iff_zeroLocus`\n`+ PrimeSpectrum.isEmbedding_tensorProductTo_of_surjectiveOnStalks`\n`+ PrimeSpectrum.isEmbedding_tensorProductTo_of_surjectiveOnStalks_aux`\n`+ PrimeSpectrum.tensorProductTo`\n`+ PrimeSpectrum.topologicalKrullDim_eq_ringKrullDim`\n`+ PrimeSpectrum.zeroLocus_eq_basicOpen_of_isIdempotentElem`\n`+ Quasicategory`\n`+ Quasicategory.hornFilling`\n`+ Real.atBot_le_cocompact`\n`+ Real.atTop_le_cocompact`\n`+ Real.cobounded_eq`\n`+ Real.cocompact_eq`\n`+ Real.continuous_inv`\n`+ Real.infinite_rat_abs_sub_lt_one_div_den_sq_iff_irrational`\n`+ Real.instCompleteSpace`\n`+ Real.isTopologicalBasis_Ioo_rat`\n`+ Real.mem_closure_iff`\n`+ Real.subfield_eq_of_closed`\n`+ Real.totallyBounded_ball`\n`+ Real.uniformContinuous_abs`\n`+ Real.uniformContinuous_add`\n`+ Real.uniformContinuous_const_mul`\n`+ Real.uniformContinuous_inv`\n`+ Real.uniformContinuous_mul`\n`+ Real.uniformContinuous_neg`\n`+ Reflexive`\n`+ Ring.isArtinian_of_zero_eq_one`\n`+ RingHom.FiniteType.isJacobsonRing`\n`+ RingHom.Flat`\n`+ RingHom.finite_iff_finiteType_of_isJacobsonRing`\n`+ RingHom.specComap`\n`+ Semiconj.mapsTo_periodicPts`\n`+ Semiconj.mapsTo_ptsOfPeriod`\n`+ Sieve.coverByImage`\n`+ SimplicialObject`\n`+ SimplicialObject.Augmented.rightOp`\n`+ SimplicialObject.Augmented.rightOpLeftOpIso`\n`+ Simps.symm_apply`\n`+ SmoothManifoldWithCorners`\n`+ SmoothManifoldWithCorners.mk'`\n`+ Split`\n`+ Splitting`\n`+ StrictAnti.apply_eq_bot_iff`\n`+ StrictAnti.apply_eq_top_iff`\n`+ StrictMono.apply_eq_bot_iff`\n`+ StrictMono.apply_eq_top_iff`\n`+ StrictMono.maximal_preimage_top`\n`+ StrictMono.minimal_preimage_bot`\n`+ Subalgebra.IsAlgebraic`\n`+ Subalgebra.inv_mem_of_algebraic`\n`+ Subalgebra.inv_mem_of_root_of_coeff_zero_ne_zero`\n`+ Subalgebra.isAlgebraic_iff`\n`+ Subalgebra.isField_of_algebraic`\n`+ Sublist.prod_dvd_prod`\n`+ Subring.mem_closure_image_of`\n`+ Summable.of_nonneg_of_le`\n`+ Summable.toNNReal`\n`+ Symmetric`\n`+ T35Space`\n`+ T35Space.instT3space`\n`+ T4Space.instT35Space`\n`+ TangentBundle`\n`+ TangentSpace`\n`+ Tendsto.const_div`\n`+ Tendsto.const_mul`\n`+ Tendsto.div`\n`+ Tendsto.div_const`\n`+ Tendsto.mul`\n`+ Tendsto.mul_const`\n`+ Tendsto.pow`\n`+ Tendsto.sub`\n`+ TensorPower`\n`+ Topology.IsOpenEmbedding.singleton_smoothManifoldWithCorners`\n`+ Total`\n`+ Transcendental`\n`+ Transcendental.aeval`\n`+ Transcendental.aeval_of_transcendental`\n`+ Transcendental.linearIndependent_sub_inv`\n`+ Transcendental.of_aeval`\n`+ Transcendental.of_ringHom_of_comp_eq`\n`+ Transcendental.of_tower_top`\n`+ Transcendental.of_tower_top_of_injective`\n`+ Transcendental.of_tower_top_of_subalgebra_le`\n`+ Transcendental.pow`\n`+ Transcendental.restrictScalars`\n`+ Transcendental.ringHom_of_comp_eq`\n`+ Transitive`\n`+ Trie`\n`+ Trie.children!`\n`+ Trie.mkNode2`\n`+ Trie.mkPath`\n`+ Trie.singleton`\n`+ Trie.values!`\n`+ Truncated.cosk`\n`+ Truncated.sk`\n`+ Units.coe_prod`\n`+ UpperSet`\n`+ WithBot.giUnbot'Bot`\n`+ _root_.AlgEquiv.fieldRange_eq_top`\n`+ _root_.AlgHom.fieldRange_eq_map`\n`+ _root_.AlgHom.fieldRange_eq_top`\n`+ _root_.AlgHom.map_fieldRange`\n`+ _root_.Commute.list_prod_left`\n`+ _root_.Commute.list_prod_right`\n`+ _root_.Continuous.ennreal_mul`\n`+ _root_.ContinuousMap.coeNNRealReal`\n`+ _root_.ContinuousMap.realToNNReal`\n`+ _root_.ContinuousOn.ennreal_mul`\n`+ _root_.ContinuousOn.ofReal_map_toNNReal`\n`+ _root_.Equiv.Perm.prod_comp`\n`+ _root_.Equiv.Perm.prod_comp'`\n`+ _root_.Equiv.prod_comp`\n`+ _root_.Filter.Eventually.isBigO`\n`+ _root_.Filter.Eventually.trans_isBigO`\n`+ _root_.Filter.EventuallyEq.isBigO`\n`+ _root_.Filter.EventuallyEq.trans_isBigO`\n`+ _root_.Filter.EventuallyEq.trans_isLittleO`\n`+ _root_.Filter.IsBoundedUnder.isBigO_const`\n`+ _root_.Filter.IsBoundedUnder.isBigO_one`\n`+ _root_.Filter.Tendsto.isBigO_one`\n`+ _root_.Fintype.prod_eq_mul_prod_compl`\n`+ _root_.Fintype.prod_eq_prod_compl_mul`\n`+ _root_.Function.Bijective.finset_prod`\n`+ _root_.Function.Bijective.prod_comp`\n`+ _root_.GCongr.ennreal_tsum_le_tsum`\n`+ _root_.HasSum.toNNReal`\n`+ _root_.Mathlib.Meta.FunProp.RefinedDiscrTree`\n`+ _root_.MeasureTheory.AEStronglyMeasurable.compProd_mk_left`\n`+ _root_.MeasureTheory.AEStronglyMeasurable.integral_kernel_compProd`\n`+ _root_.MeasureTheory.Integrable.compProd_mk_left_ae`\n`+ _root_.MeasureTheory.Integrable.integral_compProd`\n`+ _root_.MeasureTheory.Integrable.integral_norm_compProd`\n`+ _root_.MonoidHom.map_multiset_prod`\n`+ _root_.MulHom.map_multiset_ne_zero_prod`\n`+ _root_.Polynomial.irreducible_comp`\n`+ _root_.Real.comap_toNNReal_atTop`\n`+ _root_.Real.map_toNNReal_atTop`\n`+ _root_.Real.tendsto_of_bddAbove_monotone`\n`+ _root_.Real.tendsto_of_bddBelow_antitone`\n`+ _root_.Real.tendsto_toNNReal_atTop`\n`+ _root_.Real.tendsto_toNNReal_atTop_iff`\n`+ _root_.Shrink.algEquiv`\n`+ _root_.Shrink.linearEquiv`\n`+ _root_.Shrink.mulEquiv`\n`+ _root_.Shrink.ringEquiv`\n`+ _root_.Summable.countable_support_ennreal`\n`+ _root_.Summable.countable_support_nnreal`\n`+ _root_.associates_irreducible_iff_prime`\n`+ _root_.continuous_coe_ennreal_ereal`\n`+ _root_.continuous_coe_real_ereal`\n`+ _root_.continuous_real_toNNReal`\n`+ _root_.hasCompactMulSupport_comp_left`\n`+ _root_.hasCompactMulSupport_iff_eventuallyEq`\n`+ _root_.isCompact_range_of_mulSupport_subset_isCompact`\n`+ _root_.isSplittingField_iff_intermediateField`\n`+ _root_.map_multiset_ne_zero_prod`\n`+ _root_.map_multiset_prod`\n`+ _root_.minimalPrimes.finite_of_isNoetherianRing`\n`+ _root_.minpoly.degree_dvd`\n`+ _root_.minpoly.degree_le`\n`+ _root_.minpoly.natDegree_le`\n`+ _root_.tendsto_real_toNNReal`\n`+ _root_.tendsto_real_toNNReal_atTop`\n`+ abelianAux`\n`+ abs`\n`+ abs_isAbsoluteValue`\n`+ abs_isEuclidean`\n`+ abs_sub_le_of_uIcc_subset_uIcc`\n`+ abs_sub_left_of_mem_uIcc`\n`+ abs_sub_right_of_mem_uIcc`\n`+ absolutelyContinuous_compProd`\n`+ absolutelyContinuous_compProd_left`\n`+ absolutelyContinuous_compProd_right`\n`+ absolutelyContinuous_of_compProd`\n`+ abvHom`\n`+ abvHom'`\n`+ abv_add`\n`+ abv_div`\n`+ abv_eq_zero`\n`+ abv_inv`\n`+ abv_mul`\n`+ abv_neg`\n`+ abv_nonneg`\n`+ abv_one`\n`+ abv_one'`\n`+ abv_pos`\n`+ abv_pow`\n`+ abv_sub`\n`+ abv_sub_le`\n`+ abv_zero`\n`+ actionPunitEquivalence`\n`+ addCommGroup`\n`+ addCommMonoid`\n`+ addGroupWithOne`\n`+ addMonoid`\n`+ add_hom`\n`+ add_iInf_le_iInf_add`\n`+ add_le`\n`+ add_liminf_le_liminf_add`\n`+ adjoin`\n`+ adjoin.algebraMap_mem`\n`+ adjoin.fieldCoe`\n`+ adjoin.finiteDimensional`\n`+ adjoin.finrank`\n`+ adjoin.mono`\n`+ adjoin.powerBasis`\n`+ adjoin.range_algebraMap_subset`\n`+ adjoin.setCoe`\n`+ adjoinRootEquivAdjoin`\n`+ adjoinRootEquivAdjoin_apply_root`\n`+ adjoinRootEquivAdjoin_symm_apply_gen`\n`+ adjoin_adjoin_comm`\n`+ adjoin_adjoin_left`\n`+ adjoin_algHom_ext`\n`+ adjoin_algebraic_toSubalgebra`\n`+ adjoin_contains_field_as_subfield`\n`+ adjoin_empty`\n`+ adjoin_eq_algebra_adjoin`\n`+ adjoin_eq_bot_iff`\n`+ adjoin_eq_range_algebraMap_adjoin`\n`+ adjoin_eq_top_of_adjoin_eq_top`\n`+ adjoin_eq_top_of_algebra`\n`+ adjoin_finite_isCompactElement`\n`+ adjoin_finset_isCompactElement`\n`+ adjoin_iUnion`\n`+ adjoin_induction`\n`+ adjoin_insert_adjoin`\n`+ adjoin_int`\n`+ adjoin_intCast`\n`+ adjoin_le_iff`\n`+ adjoin_le_subfield`\n`+ adjoin_map`\n`+ adjoin_minpoly_coeff_of_exists_primitive_element`\n`+ adjoin_nat`\n`+ adjoin_natCast`\n`+ adjoin_one`\n`+ adjoin_rank_le_of_isAlgebraic`\n`+ adjoin_rank_le_of_isAlgebraic_left`\n`+ adjoin_rank_le_of_isAlgebraic_right`\n`+ adjoin_rootSet_isSplittingField`\n`+ adjoin_root_eq_top`\n`+ adjoin_self`\n`+ adjoin_simple_adjoin_simple`\n`+ adjoin_simple_comm`\n`+ adjoin_simple_eq_bot_iff`\n`+ adjoin_simple_isCompactElement`\n`+ adjoin_simple_le_iff`\n`+ adjoin_simple_toSubalgebra_of_integral`\n`+ adjoin_subset_adjoin_iff`\n`+ adjoin_toSubalgebra_of_isAlgebraic`\n`+ adjoin_toSubalgebra_of_isAlgebraic_left`\n`+ adjoin_toSubalgebra_of_isAlgebraic_right`\n`+ adjoin_toSubfield`\n`+ adjoin_union`\n`+ adjoin_univ`\n`+ adjoin_zero`\n`+ ae_kernel_lt_top`\n`+ ae_null_of_compProd_null`\n`+ aestronglyMeasurable_exp_mul_add`\n`+ aestronglyMeasurable_exp_mul_sum`\n`+ aevalEquiv`\n`+ aevalEquivField`\n`+ aevalEquivField_algebraMap_apply_coe`\n`+ aevalEquivField_apply_coe`\n`+ aeval_comp_repr`\n`+ aeval_gen_minpoly`\n`+ aeval_of_algebraicIndependent`\n`+ aeval_repr`\n`+ aleph0_toPartENat`\n`+ algEquivOfAssociated`\n`+ algEquivOfAssociated_apply_root`\n`+ algEquivOfAssociated_toAlgHom`\n`+ algEquivOfEq`\n`+ algEquivOfEq_apply_root`\n`+ algEquivOfEq_toAlgHom`\n`+ algEquivShrink`\n`+ algEquiv_symm_apply`\n`+ algHomAdjoinIntegralEquiv`\n`+ algHomAdjoinIntegralEquiv_symm_apply_gen`\n`+ algHomOfDvd`\n`+ algHomOfDvd_apply_root`\n`+ algHom_bijective`\n`+ algHom_bijective₂`\n`+ algHom_ext_of_eq_adjoin`\n`+ algHom_fieldRange_eq_of_comp_eq`\n`+ algHom_fieldRange_eq_of_comp_eq_of_range_eq`\n`+ algebra`\n`+ algebraMap_aevalEquiv`\n`+ algebraMap_def`\n`+ algebraMap_injective`\n`+ algebraMap₀`\n`+ algebraMap₀_eq_smul_one`\n`+ algebraMap₀_mul`\n`+ algebraMap₀_mul_algebraMap₀`\n`+ algebraMap₀_one`\n`+ algebraOverBot`\n`+ algebra_adjoin_le_adjoin`\n`+ algebra_isAlgebraic_bot_left_iff`\n`+ algebra_isAlgebraic_bot_right`\n`+ algebra_isAlgebraic_of_algebra_isAlgebraic_bot_left`\n`+ algebraicIndependent_adjoin`\n`+ algebraicIndependent_bounded_of_finset_algebraicIndependent_bounded`\n`+ algebraicIndependent_comp_subtype`\n`+ algebraicIndependent_empty`\n`+ algebraicIndependent_empty_iff`\n`+ algebraicIndependent_empty_type`\n`+ algebraicIndependent_empty_type_iff`\n`+ algebraicIndependent_equiv`\n`+ algebraicIndependent_equiv'`\n`+ algebraicIndependent_finset_map_embedding_subtype`\n`+ algebraicIndependent_iUnion_of_directed`\n`+ algebraicIndependent_iff`\n`+ algebraicIndependent_iff_injective_aeval`\n`+ algebraicIndependent_iff_ker_eq_bot`\n`+ algebraicIndependent_iff_transcendental`\n`+ algebraicIndependent_image`\n`+ algebraicIndependent_of_finite`\n`+ algebraicIndependent_of_finite'`\n`+ algebraicIndependent_of_finite_type'`\n`+ algebraicIndependent_of_subsingleton`\n`+ algebraicIndependent_polynomial_aeval_X`\n`+ algebraicIndependent_ringHom_iff_of_comp_eq`\n`+ algebraicIndependent_sUnion_of_directed`\n`+ algebraicIndependent_subtype`\n`+ algebraicIndependent_subtype_range`\n`+ algebraicIndependent_unique_type_iff`\n`+ alternatingProd`\n`+ alternatingProd_append`\n`+ alternatingProd_cons`\n`+ alternatingProd_cons'`\n`+ alternatingProd_cons_cons`\n`+ alternatingProd_cons_cons'`\n`+ alternatingProd_nil`\n`+ alternatingProd_reverse`\n`+ alternatingProd_singleton`\n`+ alternatingSum`\n`+ antisymm`\n`+ antitone_le`\n`+ antitone_lt`\n`+ appHom`\n`+ appHom_restrict`\n`+ appHom_valid_glue`\n`+ appIso`\n`+ apply`\n`+ apply_apply_toDualRight_symm`\n`+ apply_iterate`\n`+ apply_toDualLeft_symm_apply`\n`+ asIdeal_jacobson`\n`+ asIdeal_le_asIdeal`\n`+ asIdeal_lt_asIdeal`\n`+ associated_eq_eq`\n`+ associated_iff_eq`\n`+ associated_isUnit_mul_left_iff`\n`+ associated_isUnit_mul_right_iff`\n`+ associated_map_mk`\n`+ associated_mul_isUnit_left_iff`\n`+ associated_mul_isUnit_right_iff`\n`+ associated_mul_unit_left`\n`+ associated_mul_unit_left_iff`\n`+ associated_mul_unit_right`\n`+ associated_mul_unit_right_iff`\n`+ associated_of_dvd_dvd`\n`+ associated_one_iff_isUnit`\n`+ associated_one_of_associated_mul_one`\n`+ associated_one_of_mul_eq_one`\n`+ associated_unit_mul_left`\n`+ associated_unit_mul_left_iff`\n`+ associated_unit_mul_right`\n`+ associated_unit_mul_right_iff`\n`+ associated_zero_iff_eq_zero`\n`+ asymm`\n`+ asymm_of`\n`+ bUnion_ptsOfPeriod`\n`+ baseChange`\n`+ basicOpen`\n`+ basicOpen_eq_bot_iff`\n`+ basicOpen_eq_zeroLocus_compl`\n`+ basicOpen_le_basicOpen_iff`\n`+ basicOpen_mul`\n`+ basicOpen_mul_le_left`\n`+ basicOpen_mul_le_right`\n`+ basicOpen_one`\n`+ basicOpen_pow`\n`+ basicOpen_zero`\n`+ bddAbove_image`\n`+ bddAbove_l_image`\n`+ bddAbove_preimage`\n`+ bddBelow_image`\n`+ bddBelow_preimage`\n`+ bddBelow_u_image`\n`+ biInf_le_nhds`\n`+ biSup_adjoin_simple`\n`+ bigOpBindersPattern`\n`+ bigOpBindersProd`\n`+ bijOn_periodicPts`\n`+ bijOn_ptsOfPeriod`\n`+ bijective_of_injective_endomorphism`\n`+ bijective_of_isScalarTower`\n`+ bijective_of_isScalarTower'`\n`+ bijective_toDualRight_symm_toDualLeft`\n`+ bot`\n`+ botEquiv`\n`+ botEquiv_def`\n`+ botEquiv_symm`\n`+ botOrderOrNoBotOrder`\n`+ bot_apply`\n`+ bot_def`\n`+ bot_eq`\n`+ bot_eq_false`\n`+ bot_eq_one`\n`+ bot_eq_top_of_finrank_adjoin_eq_one`\n`+ bot_eq_top_of_finrank_adjoin_le_one`\n`+ bot_eq_top_of_rank_adjoin_eq_one`\n`+ bot_inf_eq`\n`+ bot_le`\n`+ bot_lt_iff_ne_bot`\n`+ bot_lt_of_lt`\n`+ bot_lt_top`\n`+ bot_ne_top`\n`+ bot_not_mem_iff`\n`+ bot_sup_eq`\n`+ bot_toSubalgebra`\n`+ bot_toSubfield`\n`+ bot_unique`\n`+ bound_of_isBigO_cofinite`\n`+ bound_of_isBigO_nat_atTop`\n`+ boundedOrder`\n`+ cacheEtaPossibilities`\n`+ card_algHom_adjoin_integral`\n`+ card_biUnion`\n`+ card_biUnion_le`\n`+ card_disjiUnion`\n`+ card_eq_sum_card_fiberwise`\n`+ card_eq_sum_card_image`\n`+ card_eq_sum_ones`\n`+ card_filter`\n`+ card_pow_eq_card_pow_card_univ`\n`+ card_sigma`\n`+ cardinalMk_adjoin_le`\n`+ cast`\n`+ cast_cast`\n`+ cast_eq_cast`\n`+ cast_refl`\n`+ cast_symm`\n`+ cast_tprod`\n`+ cast_trans`\n`+ cauchySeq_of_edist_le_of_summable`\n`+ cauchySeq_of_edist_le_of_tsum_ne_top`\n`+ centralMoment`\n`+ centralMoment_one`\n`+ centralMoment_one'`\n`+ centralMoment_two_eq_variance`\n`+ centralMoment_zero`\n`+ cgf`\n`+ cgf_const`\n`+ cgf_const'`\n`+ cgf_neg`\n`+ cgf_undef`\n`+ cgf_zero`\n`+ cgf_zero'`\n`+ cgf_zero_fun`\n`+ cgf_zero_measure`\n`+ chart_mem_maximalAtlas`\n`+ closedEmbedding`\n`+ closedEmbedding_coe_ennreal`\n`+ closedEmbedding_comap_of_surjective`\n`+ closedPoint`\n`+ closedPoint_mem_iff`\n`+ closed_point_mem_iff`\n`+ closed_range`\n`+ closedsEmbedding`\n`+ closure_image_comap_zeroLocus`\n`+ closure_of_rat_image_le_eq`\n`+ closure_of_rat_image_le_le_eq`\n`+ closure_of_rat_image_lt`\n`+ closure_range_comap`\n`+ closure_singleton`\n`+ cmp_eq_compare`\n`+ cmp_eq_compareOfLessAndEq`\n`+ codetector`\n`+ coeAddMonoidHom`\n`+ coeFn_injective`\n`+ coeRingHom`\n`+ coe_add`\n`+ coe_algEquivOfAssociated`\n`+ coe_algEquivOfEq`\n`+ coe_algHomOfDvd`\n`+ coe_algebraMap_over_bot`\n`+ coe_comap`\n`+ coe_compl`\n`+ coe_eq_bot_iff`\n`+ coe_eq_toFun`\n`+ coe_eq_top_iff`\n`+ coe_equivMap_apply`\n`+ coe_iInf`\n`+ coe_iSup_of_directed`\n`+ coe_inf`\n`+ coe_inj`\n`+ coe_max`\n`+ coe_mk`\n`+ coe_mul`\n`+ coe_natCast`\n`+ coe_nat_cast`\n`+ coe_nsmul`\n`+ coe_pow`\n`+ coe_range`\n`+ coe_range_mem_nhds`\n`+ coe_sInf`\n`+ coe_sumAddMonoidHom`\n`+ coe_toLinearMap_flip`\n`+ coe_toMonoidHom`\n`+ coe_toMonoidWithZeroHom`\n`+ coe_toMulHom`\n`+ coe_toNonneg`\n`+ coe_tsum_of_nonneg`\n`+ coe_unit_eq_one`\n`+ coe_vanishingIdeal`\n`+ cofan`\n`+ cofan'`\n`+ cofan_inj_comp_app`\n`+ cofan_inj_epi_naturality`\n`+ cofan_inj_eq`\n`+ cofan_inj_id`\n`+ cofan_inj_naturality_symm`\n`+ comapRight_compProd_id_prod`\n`+ comap_C_mem_imageOfDf`\n`+ comap_apply`\n`+ comap_apply'`\n`+ comap_asIdeal`\n`+ comap_basicOpen`\n`+ comap_closedPoint`\n`+ comap_coe_atTop`\n`+ comap_comp`\n`+ comap_comp_apply`\n`+ comap_id'`\n`+ comap_inducing_of_surjective`\n`+ comap_injective_of_surjective`\n`+ comap_isInducing_of_surjective`\n`+ comap_jacobson`\n`+ comap_jacobson_of_surjective`\n`+ comap_map`\n`+ comap_map_comm`\n`+ comap_prod_swap`\n`+ comap_singleton_isClosed_of_surjective`\n`+ comap_zero`\n`+ comm`\n`+ commGroup`\n`+ commMonoid`\n`+ commMonoidWithZero`\n`+ commSemigroup`\n`+ compProdFun`\n`+ compProdFun_empty`\n`+ compProdFun_eq_tsum`\n`+ compProdFun_iUnion`\n`+ compProdFun_tsum_left`\n`+ compProdFun_tsum_right`\n`+ compProd_apply_eq_compProdFun`\n`+ compProd_apply_prod`\n`+ compProd_apply_univ_le`\n`+ compProd_congr`\n`+ compProd_deterministic_apply`\n`+ compProd_eq_sum_compProd`\n`+ compProd_eq_sum_compProd_left`\n`+ compProd_eq_sum_compProd_right`\n`+ compProd_eq_tsum_compProd`\n`+ compProd_null`\n`+ compProd_of_not_isSFiniteKernel`\n`+ compProd_of_not_isSFiniteKernel_left`\n`+ compProd_of_not_isSFiniteKernel_right`\n`+ compProd_of_not_sfinite`\n`+ compProd_preimage_fst`\n`+ compProd_restrict`\n`+ compProd_restrict_left`\n`+ compProd_restrict_right`\n`+ comp_C_integral_of_surjective_of_jacobson`\n`+ comp_F`\n`+ comp_apply`\n`+ comp_apply'`\n`+ comp_assoc`\n`+ comp_closedEmbedding`\n`+ comp_deterministic_eq_comap`\n`+ comp_eq_snd_compProd`\n`+ comp_f`\n`+ comp_hom`\n`+ comp_isClosedEmbedding`\n`+ comp_lcm`\n`+ comp_left`\n`+ comp_zero`\n`+ compactSpace`\n`+ compare_eq_iff_eq`\n`+ compare_ge_iff_ge`\n`+ compare_gt_iff_gt`\n`+ compare_iff`\n`+ compare_le_iff_le`\n`+ compare_lt_iff_lt`\n`+ compatiblePreserving`\n`+ compatible_of_mem_maximalAtlas`\n`+ compl`\n`+ compl_compl`\n`+ complete_distinguished_triangle_morphism`\n`+ compose`\n`+ comp₂_left`\n`+ conditionallyCompleteLinearOrder`\n`+ conditionallyCompleteLinearOrderBot`\n`+ congr_F`\n`+ congr_f`\n`+ const_comp`\n`+ const_comp'`\n`+ const_mul`\n`+ contDiffGroupoid`\n`+ contDiffGroupoid_le`\n`+ contDiffGroupoid_prod`\n`+ contDiffGroupoid_zero_eq`\n`+ contDiffOn_ext_coord_change`\n`+ contDiffOn_extend_coord_change`\n`+ contDiffPregroupoid`\n`+ contDiffWithinAt_ext_coord_change`\n`+ contDiffWithinAt_extend_coord_change`\n`+ contDiffWithinAt_extend_coord_change'`\n`+ continuous`\n`+ continuousAt`\n`+ continuousAt_add`\n`+ continuousAt_add_bot_bot`\n`+ continuousAt_add_bot_coe`\n`+ continuousAt_add_coe_bot`\n`+ continuousAt_add_coe_coe`\n`+ continuousAt_add_coe_top`\n`+ continuousAt_add_top_coe`\n`+ continuousAt_add_top_top`\n`+ continuousAt_coe_iff`\n`+ continuousAt_const_mul`\n`+ continuousAt_extChartAt`\n`+ continuousAt_extChartAt'`\n`+ continuousAt_extChartAt_symm`\n`+ continuousAt_extChartAt_symm'`\n`+ continuousAt_extChartAt_symm''`\n`+ continuousAt_extend`\n`+ continuousAt_extend_symm`\n`+ continuousAt_extend_symm'`\n`+ continuousAt_iff_isLittleO`\n`+ continuousAt_mul`\n`+ continuousAt_mul_const`\n`+ continuousAt_symm`\n`+ continuousAt_toReal`\n`+ continuousOn_extChartAt`\n`+ continuousOn_extChartAt_symm`\n`+ continuousOn_extend`\n`+ continuousOn_extend_symm`\n`+ continuousOn_sub`\n`+ continuousOn_sub_left`\n`+ continuousOn_symm`\n`+ continuousOn_toNNReal`\n`+ continuousOn_writtenInExtend_iff`\n`+ continuousWithinAt`\n`+ continuousWithinAt_symm`\n`+ continuousWithinAt_writtenInExtend_iff`\n`+ continuous_coe_ennreal_iff`\n`+ continuous_const_mul`\n`+ continuous_div_const`\n`+ continuous_edist`\n`+ continuous_extend_one`\n`+ continuous_mul_const`\n`+ continuous_nnreal_sub`\n`+ continuous_ofReal`\n`+ continuous_of_le_add_edist`\n`+ continuous_of_mulTSupport`\n`+ continuous_pow`\n`+ continuous_sub_left`\n`+ continuous_sub_right`\n`+ continuous_symm`\n`+ continuous_truncateToReal`\n`+ continuous_zpow`\n`+ contractibleTriangleIso`\n`+ contractible_distinguished`\n`+ convergent`\n`+ convergent_of_int`\n`+ convergent_of_zero`\n`+ convergent_succ`\n`+ convergent_zero`\n`+ convs_eq_convergent`\n`+ coseparator`\n`+ cosimplicialSimplicialEquiv`\n`+ cosimplicialToSimplicialAugmented`\n`+ cosk`\n`+ cosk.faithful`\n`+ cosk.full`\n`+ cosk.fullyFaithful`\n`+ coskAdj`\n`+ coskAdj.reflective`\n`+ cosk_reflective`\n`+ countP_bind`\n`+ countP_flatMap`\n`+ count_bind`\n`+ count_flatMap`\n`+ count_sum'`\n`+ coverPreserving`\n`+ decidableEqOfDecidableLE`\n`+ decidableLTOfDecidableLE`\n`+ decidableMemMul`\n`+ decidableMemPow`\n`+ decompositionMonoid_iff`\n`+ delabFinsetProd`\n`+ delabFinsetSum`\n`+ den_le_and_le_num_le_of_sub_lt_one_div_den_sq`\n`+ denseRange_comap_iff_ker_le_nilRadical`\n`+ denseRange_comap_iff_minimalPrimes`\n`+ denseRange_ratCast`\n`+ desc`\n`+ detector`\n`+ deterministic_comp_deterministic`\n`+ deterministic_comp_eq_map`\n`+ deterministic_prod_deterministic`\n`+ dfun`\n`+ diagonalOneIsoLeftRegular`\n`+ diagonalSucc`\n`+ diam_Icc`\n`+ diam_Ico`\n`+ diam_Ioc`\n`+ diam_Ioo`\n`+ diam_eq`\n`+ dirac_compProd_apply`\n`+ dirac_unit_compProd`\n`+ dirac_unit_compProd_const`\n`+ directSum`\n`+ directedSystem`\n`+ directed_ptsOfPeriod_pNat`\n`+ disjoint_finset_sum_left`\n`+ disjoint_finset_sum_right`\n`+ disjoint_list_sum_left`\n`+ disjoint_list_sum_right`\n`+ disjoint_partial_infs_eventually_top`\n`+ disjoint_sum_left`\n`+ disjoint_sum_right`\n`+ distinguishedTriangles`\n`+ distinguished_cocone_triangle`\n`+ distribLattice`\n`+ distribMulAction`\n`+ div`\n`+ div_def`\n`+ div_isBoundedUnder_of_isBigO`\n`+ divisionRing`\n`+ down_bot`\n`+ down_top`\n`+ drop_sum_flatten`\n`+ drop_sum_join`\n`+ drop_take_succ_flatten_eq_getElem`\n`+ drop_take_succ_join_eq_get`\n`+ drop_take_succ_join_eq_getElem`\n`+ dual`\n`+ dualAnnihilator_map_linearEquiv_flip_symm`\n`+ dualCoannihilator_map_linearEquiv_flip`\n`+ dvdNotUnit_iff_lt`\n`+ dvdNotUnit_of_dvdNotUnit_associated`\n`+ dvdNotUnit_of_lt`\n`+ dvd_dvd_iff_associated`\n`+ dvd_eq_le`\n`+ dvd_of_mk_le_mk`\n`+ dvd_prime_pow`\n`+ dvd_prod_of_mem`\n`+ e`\n`+ ediam_Icc`\n`+ ediam_Ico`\n`+ ediam_Ioc`\n`+ ediam_Ioo`\n`+ ediam_eq`\n`+ edist_le_tsum_of_edist_le_of_tendsto`\n`+ edist_le_tsum_of_edist_le_of_tendsto₀`\n`+ edist_ne_top_of_mem_ball`\n`+ ediv_two_mul_two_of_even`\n`+ elabBeta`\n`+ embedding_coe_ennreal`\n`+ emetricSpace`\n`+ emod_two_ne_one`\n`+ emod_two_ne_zero`\n`+ empty`\n`+ epiComp`\n`+ eq`\n`+ eqId_iff_eq`\n`+ eqId_iff_len_eq`\n`+ eqId_iff_len_le`\n`+ eqId_iff_mono`\n`+ eq_adjoin_of_eq_algebra_adjoin`\n`+ eq_bot_iff`\n`+ eq_bot_mono`\n`+ eq_bot_of_bot_eq_top`\n`+ eq_bot_of_minimal`\n`+ eq_bot_or_bot_lt`\n`+ eq_isEquiv`\n`+ eq_jacobson_iff_not_mem`\n`+ eq_jacobson_iff_sInf_maximal`\n`+ eq_jacobson_iff_sInf_maximal'`\n`+ eq_max`\n`+ eq_min`\n`+ eq_of_apply_eq`\n`+ eq_of_apply_eq_same`\n`+ eq_of_card_le_one_of_prod_eq`\n`+ eq_of_isDetecting`\n`+ eq_of_le_of_isDetecting`\n`+ eq_of_le_of_le`\n`+ eq_of_mul_eq_one`\n`+ eq_of_prime_pow_eq`\n`+ eq_of_prime_pow_eq'`\n`+ eq_of_prod_take_eq`\n`+ eq_of_root`\n`+ eq_one_of_prod_eq_one`\n`+ eq_one_or_neg_one_of_mul_eq_neg_one`\n`+ eq_one_or_neg_one_of_mul_eq_neg_one'`\n`+ eq_one_or_neg_one_of_mul_eq_one`\n`+ eq_one_or_neg_one_of_mul_eq_one'`\n`+ eq_or_lt_of_le`\n`+ eq_or_lt_of_not_lt`\n`+ eq_prod_range_div`\n`+ eq_prod_range_div'`\n`+ eq_top_iff`\n`+ eq_top_mono`\n`+ eq_top_of_bot_eq_top`\n`+ eq_top_or_lt_top`\n`+ eq_zero`\n`+ eq_zero_iff`\n`+ equalizer_mem`\n`+ equivAdjoinSimple`\n`+ equivAdjoinSimple_aeval`\n`+ equivAdjoinSimple_gen`\n`+ equivAdjoinSimple_symm_aeval`\n`+ equivAdjoinSimple_symm_gen`\n`+ equivMap`\n`+ equivOfEq`\n`+ equivOfEq_rfl`\n`+ equivOfEq_symm`\n`+ equivOfEq_trans`\n`+ equivPi`\n`+ equivShrink_div`\n`+ equivShrink_inv`\n`+ equivShrink_mul`\n`+ equivShrink_smul`\n`+ equivShrink_symm_div`\n`+ equivShrink_symm_inv`\n`+ equivShrink_symm_mul`\n`+ equivShrink_symm_one`\n`+ equivShrink_symm_smul`\n`+ etaExpand`\n`+ etaPossibilities`\n`+ evalN`\n`+ even_add`\n`+ even_add_one`\n`+ even_coe_nat`\n`+ even_iff`\n`+ even_mul`\n`+ even_pow`\n`+ even_pow'`\n`+ even_sub`\n`+ even_sub_one`\n`+ eventuallyConst_of_isArtinian`\n`+ eventuallyEq_of_toReal_eventuallyEq`\n`+ eventuallyMeasurableSet_of_mem_filter`\n`+ eventually_codisjoint_ker_pow_range_pow`\n`+ eventually_constant_prod`\n`+ eventually_iInf_range_pow_eq`\n`+ eventually_isCompl_ker_pow_range_pow`\n`+ exact_iff_rTensor_exact`\n`+ exists_and_iff_of_antitone`\n`+ exists_and_iff_of_monotone`\n`+ exists_compact_iff_hasCompactMulSupport`\n`+ exists_convs_eq_rat`\n`+ exists_countable_dense_no_zero_top`\n`+ exists_eq_l`\n`+ exists_eq_u`\n`+ exists_finset_of_mem_adjoin`\n`+ exists_finset_of_mem_iSup`\n`+ exists_finset_of_mem_supr'`\n`+ exists_finset_of_mem_supr''`\n`+ exists_frequently_lt_of_liminf_ne_top`\n`+ exists_frequently_lt_of_liminf_ne_top'`\n`+ exists_ge_and_iff_exists`\n`+ exists_idempotent_basicOpen_eq_of_is_clopen`\n`+ exists_int_int_abs_mul_sub_le`\n`+ exists_integral_multiple`\n`+ exists_inv`\n`+ exists_isClosed_singleton_of_isJacobsonRing`\n`+ exists_isTranscendenceBasis`\n`+ exists_isTranscendenceBasis'`\n`+ exists_le_and_iff_exists`\n`+ exists_le_hasSum_of_le`\n`+ exists_lt_finrank_of_infinite_dimensional`\n`+ exists_maximal_algebraicIndependent`\n`+ exists_mem_ne_one_of_prod_ne_one`\n`+ exists_mul_add_sub_mem_of_mem_jacobson`\n`+ exists_mul_sub_mem_of_sub_one_mem_jacobson`\n`+ exists_nat_abs_mul_sub_round_le`\n`+ exists_ne_one_of_prod_ne_one`\n`+ exists_non_zero_rep`\n`+ exists_pow_succ_smul_dvd`\n`+ exists_primeSpectrum_prod_le`\n`+ exists_primeSpectrum_prod_le_and_ne_bot_of_domain`\n`+ exists_rat_abs_sub_le_and_den_le`\n`+ exists_rat_abs_sub_lt_and_lt_of_irrational`\n`+ exists_rat_eq_convergent`\n`+ exists_rat_eq_convergent'`\n`+ exists_rep`\n`+ exists_smul_of_dvd_count`\n`+ exists_type_univ_nonempty_mulEquiv`\n`+ exists_upcrossings_of_not_bounded_under`\n`+ exists_variableChange_of_j_eq`\n`+ ext'`\n`+ extChartAt`\n`+ extChartAt_coe`\n`+ extChartAt_coe_symm`\n`+ extChartAt_comp`\n`+ extChartAt_image_nhd_mem_nhds_of_boundaryless`\n`+ extChartAt_mem_closure_interior`\n`+ extChartAt_model_space_eq_id`\n`+ extChartAt_preimage_inter_eq`\n`+ extChartAt_preimage_mem_nhds`\n`+ extChartAt_preimage_mem_nhds'`\n`+ extChartAt_preimage_mem_nhdsWithin`\n`+ extChartAt_preimage_mem_nhdsWithin'`\n`+ extChartAt_prod`\n`+ extChartAt_self_apply`\n`+ extChartAt_self_eq`\n`+ extChartAt_source`\n`+ extChartAt_source_mem_nhds`\n`+ extChartAt_source_mem_nhds'`\n`+ extChartAt_source_mem_nhdsWithin`\n`+ extChartAt_source_mem_nhdsWithin'`\n`+ extChartAt_target`\n`+ extChartAt_target_eventuallyEq`\n`+ extChartAt_target_eventuallyEq'`\n`+ extChartAt_target_eventuallyEq_of_mem`\n`+ extChartAt_target_mem_nhds`\n`+ extChartAt_target_mem_nhds'`\n`+ extChartAt_target_mem_nhdsWithin`\n`+ extChartAt_target_mem_nhdsWithin'`\n`+ extChartAt_target_mem_nhdsWithin_of_mem`\n`+ extChartAt_target_subset_closure_interior`\n`+ extChartAt_target_subset_range`\n`+ extChartAt_target_union_comp_range_mem_nhds_of_mem`\n`+ extChartAt_to_inv`\n`+ ext_chart_model_space_apply`\n`+ ext_coord_change_source`\n`+ extend`\n`+ extendScalars_adjoin`\n`+ extend_coe`\n`+ extend_coe_symm`\n`+ extend_coord_change_source`\n`+ extend_coord_change_source_mem_nhdsWithin`\n`+ extend_coord_change_source_mem_nhdsWithin'`\n`+ extend_image_nhd_mem_nhds_of_boundaryless`\n`+ extend_image_source_inter`\n`+ extend_left_inv`\n`+ extend_left_inv'`\n`+ extend_one`\n`+ extend_preimage_inter_eq`\n`+ extend_preimage_mem_nhds`\n`+ extend_preimage_mem_nhdsWithin`\n`+ extend_source`\n`+ extend_source_mem_nhds`\n`+ extend_source_mem_nhdsWithin`\n`+ extend_symm_continuousWithinAt_comp_right_iff`\n`+ extend_symm_preimage_inter_range_eventuallyEq`\n`+ extend_symm_preimage_inter_range_eventuallyEq_aux`\n`+ extend_target`\n`+ extend_target'`\n`+ extend_target_eventuallyEq`\n`+ extend_target_mem_nhdsWithin`\n`+ extend_target_subset_range`\n`+ fG_of_fG_toSubalgebra`\n`+ fac_pull`\n`+ fg_adjoin_finset`\n`+ fg_adjoin_of_finite`\n`+ fg_bot`\n`+ fg_def`\n`+ fg_iSup`\n`+ fg_of_fg_toSubalgebra`\n`+ fg_of_noetherian`\n`+ fg_sup`\n`+ fieldOfSubtypeIsMaximal`\n`+ fieldRange_comp_val`\n`+ findKey`\n`+ finiteDimensional_adjoin`\n`+ finiteDimensional_iSup_of_finite`\n`+ finiteDimensional_iSup_of_finset`\n`+ finiteDimensional_iSup_of_finset'`\n`+ finiteDimensional_sup`\n`+ finiteSubspace`\n`+ finite_const_le_of_tsum_ne_top`\n`+ finite_dist_eq`\n`+ finite_div`\n`+ finite_edist_eq`\n`+ finite_inv`\n`+ finite_mul`\n`+ finite_norm_eq`\n`+ finite_of_finite_type_of_isJacobsonRing`\n`+ finite_one`\n`+ finite_rat_abs_sub_lt_one_div_den_sq`\n`+ finite_setOf_isMin`\n`+ finite_smul_set`\n`+ finrank_adjoin_eq_one_iff`\n`+ finrank_adjoin_simple_eq_one_iff`\n`+ finrank_bot`\n`+ finrank_bot'`\n`+ finrank_eq_one_iff`\n`+ finrank_sup_le`\n`+ finrank_top`\n`+ finrank_top'`\n`+ finset_card_const_le_le_of_tsum_le`\n`+ finset_prod_mem_finset_prod`\n`+ finset_prod_singleton`\n`+ finset_prod_subset_finset_prod`\n`+ finsupp`\n`+ fintypeDiv`\n`+ fintypeMul`\n`+ fintypeOfAlgHomAdjoinIntegral`\n`+ fixIndType`\n`+ flip_apply`\n`+ flip_apply_apply`\n`+ forall_associated`\n`+ forall_ge_iff`\n`+ forall_le_iff`\n`+ forget_additive`\n`+ forget_linear`\n`+ forget_preservesZeroMorphisms`\n`+ forget_δ`\n`+ forget_ε`\n`+ forget_η`\n`+ forget_μ`\n`+ forget₂_additive`\n`+ forget₂_linear`\n`+ forget₂_preservesZeroMorphisms`\n`+ fst`\n`+ fst_apply`\n`+ fst_apply'`\n`+ fst_bot`\n`+ fst_comp`\n`+ fst_compProd`\n`+ fst_eq`\n`+ fst_map_id_prod`\n`+ fst_map_prod`\n`+ fst_prodMkLeft`\n`+ fst_prodMkRight`\n`+ fst_swapRight`\n`+ fst_top`\n`+ fst_zero`\n`+ funLike`\n`+ functorCategoryEquivalence`\n`+ functorCategoryEquivalence.functor_def`\n`+ functorCategoryEquivalence.inverse_def`\n`+ functorCategoryEquivalenceCompEvaluation`\n`+ functorCategoryEquivalence_additive`\n`+ functorCategoryEquivalence_linear`\n`+ functorCategoryEquivalence_preservesZeroMorphisms`\n`+ functorPullback_pushforward_covering`\n`+ functorPushforward_mem_iff`\n`+ gMul`\n`+ gMul_def`\n`+ gMul_eq_coe_linearMap`\n`+ gOne`\n`+ gOne_def`\n`+ galgebra`\n`+ galgebra_toFun_def`\n`+ galoisConnection_mul_div`\n`+ gc_Ici_sInf`\n`+ gc_sSup_Iic`\n`+ gc_set`\n`+ gcd`\n`+ gci_Ici_sInf`\n`+ ge_trans`\n`+ get?_zero_mul_tail_prod`\n`+ getIgnores`\n`+ getMatchWithScore`\n`+ gi`\n`+ gi_sSup_Iic`\n`+ gmonoid`\n`+ gradedMonoid_eq_of_cast`\n`+ gradedMonoid_eq_of_reindex_cast`\n`+ group`\n`+ groupoid_of_isCodetecting_empty`\n`+ groupoid_of_isDetecting_empty`\n`+ gsemiring`\n`+ gt_irrefl`\n`+ gt_of_ge_of_gt`\n`+ gt_of_gt_of_ge`\n`+ gt_trans`\n`+ hasBasis_nhds_of_ne_top`\n`+ hasBasis_nhds_of_ne_top'`\n`+ hasCodetector_op_iff`\n`+ hasColimitsOfShape`\n`+ hasCompactMulSupport_def`\n`+ hasCoseparator_op_iff`\n`+ hasDetector_op_iff`\n`+ hasFiniteIntegral_compProd_iff`\n`+ hasFiniteIntegral_compProd_iff'`\n`+ hasFiniteIntegral_prod_mk_left`\n`+ hasForgetToV`\n`+ hasInitial_of_isCoseparating`\n`+ hasLimitsOfShape`\n`+ hasSeparator_op_iff`\n`+ hasSum`\n`+ hasSum_iff_tendsto_nat_of_nonneg`\n`+ hasSum_nat_add_iff`\n`+ hasSum_real_toNNReal_of_nonneg`\n`+ hasSum_strict_mono`\n`+ hasSum_toReal`\n`+ hasTerminal_of_isSeparating`\n`+ has_injective_coseparator`\n`+ has_projective_separator`\n`+ headI_add_tail_sum`\n`+ headI_le_sum`\n`+ headI_mul_tail_prod_of_ne_nil`\n`+ homOver`\n`+ hom_ext'`\n`+ hom_inv_hom`\n`+ iIndepFun.cgf_sum`\n`+ iIndepFun.integrable_exp_mul_sum`\n`+ iIndepFun.mgf_sum`\n`+ iInf_mul_left`\n`+ iInf_mul_left'`\n`+ iInf_mul_right`\n`+ iInf_mul_right'`\n`+ iInf_real_pos_eq_iInf_nnreal_pos`\n`+ iInf_toSubalgebra`\n`+ iInf_toSubfield`\n`+ iSup_add_le_add_iSup`\n`+ iSup_basicOpen_eq_top_iff`\n`+ iSup_basicOpen_eq_top_iff'`\n`+ iSup_eq_adjoin`\n`+ iSup_toSubfield`\n`+ iUnion_pNat_ptsOfPeriod`\n`+ id_F`\n`+ id_f`\n`+ id_hom`\n`+ idempotent`\n`+ identity`\n`+ iff_eq_one`\n`+ iff_eq_zero_or_one`\n`+ iff_exact_iff_lTensor_exact`\n`+ iff_exact_iff_rTensor_exact`\n`+ iff_flat_and_ideal_smul_eq_top`\n`+ iff_flat_and_lTensor_faithful`\n`+ iff_flat_and_lTensor_reflects_triviality`\n`+ iff_flat_and_proper_ideal`\n`+ iff_flat_and_rTensor_faithful`\n`+ iff_flat_and_rTensor_reflects_triviality`\n`+ iff_zero_iff_lTensor_zero`\n`+ iff_zero_iff_rTensor_zero`\n`+ imageOfDf`\n`+ imageOfDf_eq_comap_C_compl_zeroLocus`\n`+ imageSieve_mem`\n`+ image_add_const_Iic`\n`+ image_add_const_Iio`\n`+ image_add_const_uIcc`\n`+ image_affine_Icc'`\n`+ image_affine_Ico`\n`+ image_affine_Ioc`\n`+ image_affine_Ioo`\n`+ image_comap_zeroLocus_eq_zeroLocus_comap`\n`+ image_const_add_Iic`\n`+ image_const_add_Iio`\n`+ image_const_add_uIcc`\n`+ image_const_mul_Ioi_zero`\n`+ image_const_mul_uIcc`\n`+ image_const_sub_Icc`\n`+ image_const_sub_Ici`\n`+ image_const_sub_Ico`\n`+ image_const_sub_Iic`\n`+ image_const_sub_Iio`\n`+ image_const_sub_Ioc`\n`+ image_const_sub_Ioi`\n`+ image_const_sub_Ioo`\n`+ image_const_sub_uIcc`\n`+ image_div_const_uIcc`\n`+ image_eq`\n`+ image_eq_one_of_nmem_mulTSupport`\n`+ image_finset_prod`\n`+ image_finset_prod_pi`\n`+ image_fintype_prod_pi`\n`+ image_list_prod`\n`+ image_mem_nhdsWithin`\n`+ image_mul_const_uIcc`\n`+ image_mul_left_Icc`\n`+ image_mul_left_Icc'`\n`+ image_mul_left_Ico`\n`+ image_mul_left_Ioc`\n`+ image_mul_left_Ioo`\n`+ image_mul_right_Icc`\n`+ image_mul_right_Icc'`\n`+ image_mul_right_Ico`\n`+ image_mul_right_Ioc`\n`+ image_mul_right_Ioo`\n`+ image_multiset_prod`\n`+ image_neg_Icc`\n`+ image_neg_Ici`\n`+ image_neg_Ico`\n`+ image_neg_Iic`\n`+ image_neg_Iio`\n`+ image_neg_Ioc`\n`+ image_neg_Ioi`\n`+ image_neg_Ioo`\n`+ image_neg_uIcc`\n`+ image_specComap_zeroLocus_eq_zeroLocus_comap`\n`+ image_sub_const_Icc`\n`+ image_sub_const_Ici`\n`+ image_sub_const_Ico`\n`+ image_sub_const_Iic`\n`+ image_sub_const_Iio`\n`+ image_sub_const_Ioc`\n`+ image_sub_const_Ioi`\n`+ image_sub_const_Ioo`\n`+ image_sub_const_uIcc`\n`+ increasing`\n`+ indicator_summable`\n`+ inducedTopology`\n`+ inducedTopologyOfIsCoverDense`\n`+ inducedTopology_coverPreserving`\n`+ inducedTopology_isCocontinuous`\n`+ induction`\n`+ induction_on_adjoin`\n`+ induction_on_adjoin_fg`\n`+ induction_on_adjoin_finset`\n`+ inf_bot_eq`\n`+ inf_eq_of_isDetecting`\n`+ inf_eq_top_iff`\n`+ inf_toSubalgebra`\n`+ inf_toSubfield`\n`+ inf_top_eq`\n`+ infinite_div`\n`+ infinite_inv`\n`+ infinite_mul`\n`+ infinite_rat_abs_sub_lt_one_div_den_sq_of_irrational`\n`+ infinite_smul_set`\n`+ inhabited'`\n`+ injective_stoneCechUnit_of_t35Space`\n`+ insert`\n`+ insertDTExpr`\n`+ insertEqn`\n`+ insertInRefinedDiscrTree`\n`+ instAddCancelCommMonoid`\n`+ instAddCommGroup`\n`+ instAddGroup`\n`+ instCancelCommMonoidWithZero`\n`+ instCommMonoidWithZero`\n`+ instDecompositionMonoid`\n`+ instDenselyOrdered`\n`+ instFunLike`\n`+ instIsOrderBornology`\n`+ instMonoidalCategory`\n`+ instMul`\n`+ instMulAction`\n`+ instOrderedCommMonoid`\n`+ instPartialOrder`\n`+ instPreorder`\n`+ instProperSpace`\n`+ instance (G : Type*) (X : Type*) [Monoid G] [MulAction G X] [Fintype X] :`\n`+ instance (M : Action V G) : Inhabited (Action.Hom M M)`\n`+ instance (R) [CommRing R] [IsArtinianRing R] (I : Ideal R) : IsArtinianRing (R ⧸ I)`\n`+ instance (S : SSet) [KanComplex S] : Quasicategory S`\n`+ instance (X : Action V G) : MulAction G ((CategoryTheory.forget₂ _ TopCat).obj X)`\n`+ instance (X : DiscreteContAction V G) :`\n`+ instance (Y : Sheaf J A) : IsIso ((G.sheafAdjunctionCocontinuous A J K).counit.app Y) := by`\n`+ instance (a b : Key) : Decidable (a < b) := inferInstanceAs (Decidable (Key.lt a b))`\n`+ instance (priority := 100) CanonicallyLinearOrderedSemifield.toCanonicallyLinearOrderedAddCommMonoid`\n`+ instance (priority := 100) CanonicallyLinearOrderedSemifield.toLinearOrderedCommGroupWithZero`\n`+ instance (priority := 100) IsAsymm.toIsAntisymm {α : Sort*} (r : α → α → Prop) [IsAsymm α r] :`\n`+ instance (priority := 100) [IsArtinianRing R] : IsJacobsonRing R`\n`+ instance (priority := 100) isArtinian_of_finite [Finite M] : IsArtinian R M`\n`+ instance (priority := 100) isFiniteKernel_of_isFiniteKernel_fst {κ : Kernel α (β × γ)}`\n`+ instance (priority := 100) isFiniteKernel_of_isFiniteKernel_snd {κ : Kernel α (β × γ)}`\n`+ instance (priority := 100) isIso_of_hom_isIso {M N : Action V G} (f : M ⟶ N) [IsIso f.hom] :`\n`+ instance (priority := 100) isJacobsonRing_quotient [IsJacobsonRing R] : IsJacobsonRing (R ⧸ I)`\n`+ instance (priority := 100) jacobson.isMaximal [H : IsMaximal I] : IsMaximal (jacobson I)`\n`+ instance (priority := 100) {α : Sort*} {r : α → α → Prop} [Trans r r r] : IsTrans α r`\n`+ instance (priority := 200) One.ofOfNat1 {α} [OfNat α (nat_lit 1)] : One α`\n`+ instance (priority := 300) One.toOfNat1 {α} [One α] : OfNat α (nat_lit 1)`\n`+ instance (priority := 90) isAsymm_of_isTrans_of_isIrrefl [IsTrans α r] [IsIrrefl α r] :`\n`+ instance (priority := 900) (a b : α) : Decidable (a < b) := LinearOrder.decidableLT a b`\n`+ instance (priority := 900) (a b : α) : Decidable (a = b) := LinearOrder.decidableEq a b`\n`+ instance (priority := 900) (a b : α) : Decidable (a ≤ b) := LinearOrder.decidableLE a b`\n`+ instance (priority := 900) : @Trans α α α GE.ge GE.ge GE.ge := ⟨ge_trans⟩`\n`+ instance (priority := 900) : @Trans α α α GE.ge GT.gt GT.gt := ⟨gt_of_ge_of_gt⟩`\n`+ instance (priority := 900) : @Trans α α α GT.gt GE.ge GT.gt := ⟨gt_of_gt_of_ge⟩`\n`+ instance (priority := 900) : @Trans α α α GT.gt GT.gt GT.gt := ⟨gt_trans⟩`\n`+ instance (priority := 900) : @Trans α α α LE.le LE.le LE.le := ⟨le_trans⟩`\n`+ instance (priority := 900) : @Trans α α α LE.le LT.lt LT.lt := ⟨lt_of_le_of_lt⟩`\n`+ instance (priority := 900) : @Trans α α α LT.lt LE.le LT.lt := ⟨lt_of_lt_of_le⟩`\n`+ instance (priority := 900) : @Trans α α α LT.lt LT.lt LT.lt := ⟨lt_trans⟩`\n`+ instance (priority := 900) : G.IsCocontinuous J K`\n`+ instance (priority := 900) : G.IsContinuous J K`\n`+ instance (priority := 900) [G.IsCoverDense K] : G.IsDenseSubsite (G.inducedTopology K) K`\n`+ instance (priority := 900) locallyCoverDense_of_isCoverDense [G.IsCoverDense K] :`\n`+ instance : (Action.forget V G).Braided`\n`+ instance : (Action.forget V G).Monoidal`\n`+ instance : (FunctorCategoryEquivalence.functor (V := V) (G := G)).IsEquivalence`\n`+ instance : (FunctorCategoryEquivalence.functor (V := V) (G := G)).Monoidal`\n`+ instance : (FunctorCategoryEquivalence.inverse (V := V) (G := G)).IsEquivalence`\n`+ instance : (FunctorCategoryEquivalence.inverse (V := V) (G := G)).Monoidal`\n`+ instance : (G.sheafPushforwardContinuous A J K).IsEquivalence`\n`+ instance : (forget V G).Faithful where map_injective w := Hom.ext w`\n`+ instance : (functorCategoryEquivalence V G).functor.Monoidal := by`\n`+ instance : (functorCategoryEquivalence V G).inverse.Monoidal := by`\n`+ instance : AB5 (AddCommGrp.{u})`\n`+ instance : AddCommGroup (DirectLimit G f)`\n`+ instance : AddCommGroup (TangentSpace I x) := inferInstanceAs (AddCommGroup E)`\n`+ instance : Batteries.LawfulCmp (compare (α := α))`\n`+ instance : BraidedCategory (Action V G)`\n`+ instance : CanonicallyOrderedCommMonoid (Associates M)`\n`+ instance : Category (Action V G)`\n`+ instance : Category (ContAction V G)`\n`+ instance : Category (CosimplicialObject C) := by`\n`+ instance : Category (DiscreteContAction V G)`\n`+ instance : Category (SimplicialObject C) := by`\n`+ instance : Category (Split C)`\n`+ instance : ClosedUnderRestriction (contDiffGroupoid n I)`\n`+ instance : Coe (ContAction V G) (Action V G)`\n`+ instance : CoeFun (ENorm 𝕜 V) fun _ => V → ℝ≥0∞`\n`+ instance : CoeFun (ModelWithCorners 𝕜 E H) fun _ => H → E := ⟨toFun'⟩`\n`+ instance : CompleteLattice (IntermediateField F E)`\n`+ instance : CompleteSpace ℝ≥0`\n`+ instance : ConcreteCategory (ContAction V G)`\n`+ instance : ConcreteCategory (DiscreteContAction V G)`\n`+ instance : ContinuousAdd ℝ≥0∞ := by`\n`+ instance : ContinuousInv ℝ≥0∞ := ⟨OrderIso.invENNReal.continuous⟩`\n`+ instance : ContinuousNeg EReal := ⟨negOrderIso.continuous⟩`\n`+ instance : ContinuousStar ℝ := ⟨continuous_id⟩`\n`+ instance : ContinuousStar ℝ≥0`\n`+ instance : ContinuousSub ℝ≥0`\n`+ instance : DecidablePred (Even : ℤ → Prop) := fun _ ↦ decidable_of_iff _ even_iff.symm`\n`+ instance : DecidablePred (IsSquare : ℤ → Prop)`\n`+ instance : Epi A.e`\n`+ instance : Fintype (IndexSet Δ)`\n`+ instance : FunLike (Nucleus X) X X`\n`+ instance : HasCompl { p : R // IsIdempotentElem p }`\n`+ instance : HasContinuousInv₀ ℝ≥0 := inferInstance`\n`+ instance : HasFilteredColimits (AddCommGrp.{u})`\n`+ instance : HasForget₂ (Action V G) TopCat`\n`+ instance : HasForget₂ (ContAction V G) (Action V G)`\n`+ instance : HasForget₂ (ContAction V G) TopCat`\n`+ instance : HasForget₂ (ContAction V G) V`\n`+ instance : HasForget₂ (DiscreteContAction V G) (ContAction V G)`\n`+ instance : HasForget₂ (DiscreteContAction V G) TopCat`\n`+ instance : HasZeroMorphisms (Action V G)`\n`+ instance : Hashable Key := ⟨Key.hash⟩`\n`+ instance : Inhabited (AbsoluteValue S S)`\n`+ instance : Inhabited (Action AddCommGrp G)`\n`+ instance : Inhabited (ENorm 𝕜 V)`\n`+ instance : Inhabited (IndexSet Δ)`\n`+ instance : Inhabited (IntermediateField F E)`\n`+ instance : Inhabited (RefinedDiscrTree α) := ⟨{}⟩`\n`+ instance : Inhabited (TangentSpace I x) := ⟨0⟩`\n`+ instance : Inhabited (Trie α) := ⟨.node #[]⟩`\n`+ instance : IsArtinianRing (Localization S)`\n`+ instance : IsCompactlyGenerated (IntermediateField F E)`\n`+ instance : LE (Nucleus X)`\n`+ instance : LT Key := ⟨fun a b => Key.lt a b⟩`\n`+ instance : Linear R (Action V G)`\n`+ instance : MetrizableSpace ENNReal`\n`+ instance : Module 𝕜 (TangentSpace I x) := inferInstanceAs (Module 𝕜 E)`\n`+ instance : Module.Finite F (⊥ : IntermediateField F E) := Subalgebra.finite_bot`\n`+ instance : MonadCache Expr DTExpr M`\n`+ instance : MonoidalLinear R (Action V G)`\n`+ instance : MonoidalPreadditive (Action V G)`\n`+ instance : NoZeroDivisors (Associates M) := by infer_instance`\n`+ instance : NoetherianSpace (PrimeSpectrum R)`\n`+ instance : NoncompactSpace ℝ := Int.isClosedEmbedding_coe_real.noncompactSpace`\n`+ instance : NucleusClass (Nucleus X) X`\n`+ instance : One { p : M₁ // IsIdempotentElem p } where one := ⟨1, one⟩`\n`+ instance : OrderBot (Nucleus X)`\n`+ instance : OrderTop (ENorm 𝕜 V)`\n`+ instance : OrderTop (Nucleus X)`\n`+ instance : OrderTopology EReal := ⟨rfl⟩`\n`+ instance : OrderTopology ℝ≥0`\n`+ instance : OrderTopology ℝ≥0∞ := ⟨rfl⟩`\n`+ instance : PartialOrder (PrimeSpectrum R)`\n`+ instance : PathConnectedSpace (TangentSpace I x) := inferInstanceAs (PathConnectedSpace E)`\n`+ instance : Preadditive (Action V G)`\n`+ instance : Preorder (Nucleus X)`\n`+ instance : ProperSpace ℝ`\n`+ instance : ReflectsColimits (Action.forget V G)`\n`+ instance : ReflectsLimits (Action.forget V G)`\n`+ instance : SFinite (μ ⊗ₘ κ) := by rw [compProd]; infer_instance`\n`+ instance : SecondCountableTopology EReal`\n`+ instance : SecondCountableTopology ℝ := secondCountable_of_proper`\n`+ instance : SecondCountableTopology ℝ≥0`\n`+ instance : SecondCountableTopology ℝ≥0∞`\n`+ instance : SemilatticeSup (ENorm 𝕜 V)`\n`+ instance : SmoothManifoldWithCorners I s`\n`+ instance : T0Space (PrimeSpectrum R)`\n`+ instance : T1Space <| MaximalSpectrum R`\n`+ instance : T2Space EReal := inferInstance`\n`+ instance : T2Space ℝ≥0∞ := inferInstance`\n`+ instance : T4Space ℝ≥0∞ := inferInstance`\n`+ instance : T5Space EReal := inferInstance`\n`+ instance : T5Space ℝ≥0∞ := inferInstance`\n`+ instance : ToFormat DTExpr := ⟨DTExpr.format⟩`\n`+ instance : ToFormat Key := ⟨Key.format⟩`\n`+ instance : Top (ENorm 𝕜 V)`\n`+ instance : TopologicalAddGroup (TangentSpace I x) := inferInstanceAs (TopologicalAddGroup E)`\n`+ instance : TopologicalAddGroup ℝ := by infer_instance`\n`+ instance : TopologicalDivisionRing ℝ := inferInstance`\n`+ instance : TopologicalRing ℝ := inferInstance`\n`+ instance : TopologicalSemiring ℝ≥0`\n`+ instance : TopologicalSpace (TangentSpace I x) := inferInstanceAs (TopologicalSpace E)`\n`+ instance : TopologicalSpace EReal := Preorder.topology EReal`\n`+ instance : TopologicalSpace ℝ≥0 := inferInstance`\n`+ instance : TopologicalSpace ℝ≥0∞ := Preorder.topology ℝ≥0∞`\n`+ instance : UniformAddGroup ℝ`\n`+ instance : Unique (IntermediateField F F)`\n`+ instance : Zero { p : M₀ // IsIdempotentElem p } where zero := ⟨0, zero⟩`\n`+ instance [Abelian V] : Abelian (Action V G)`\n`+ instance [AddGroupWithOne α] [Small α] : AddGroupWithOne (Shrink α)`\n`+ instance [AddMonoidWithOne α] [Small α] : AddMonoidWithOne (Shrink α)`\n`+ instance [Bot α] : Bot (ULift.{v} α) where bot := up ⊥`\n`+ instance [CancelMonoidWithZero M] [DecidableRel ((· ∣ ·) : M → M → Prop)] :`\n`+ instance [CommGroup α] [Small α] : CommGroup (Shrink α)`\n`+ instance [CommMonoid α] [Small α] : CommMonoid (Shrink α)`\n`+ instance [CommRing α] [Small α] : CommRing (Shrink α)`\n`+ instance [CommSemigroup α] [Small α] : CommSemigroup (Shrink α)`\n`+ instance [CommSemiring α] [Semiring β] [Algebra α β] [Small β] : Algebra α (Shrink β)`\n`+ instance [CommSemiring α] [Small α] : CommSemiring (Shrink α)`\n`+ instance [ConcreteCategory V] : ConcreteCategory (Action V G)`\n`+ instance [DecidableEq α] {f : α → α} {n : ℕ} {x : α} : Decidable (IsPeriodicPt f n x)`\n`+ instance [DecidableRel ((· ∣ ·) : M → M → Prop)] :`\n`+ instance [Div α] [Small α] : Div (Shrink α) := (equivShrink _).symm.div`\n`+ instance [DivisionRing α] [Small α] : DivisionRing (Shrink α)`\n`+ instance [F.LaxMonoidal] : (F.mapAction G).LaxMonoidal`\n`+ instance [F.Monoidal] : (F.mapAction G).Monoidal`\n`+ instance [F.OplaxMonoidal] : (F.mapAction G).OplaxMonoidal`\n`+ instance [Field α] [Small α] : Field (Shrink α)`\n`+ instance [Group α] [Small α] : Group (Shrink α)`\n`+ instance [HasColimits C] : HasColimits (CosimplicialObject C)`\n`+ instance [HasColimits C] : HasColimits (SimplicialObject C)`\n`+ instance [HasColimits V] : HasColimits (Action V G)`\n`+ instance [HasFiniteColimits V] : HasFiniteColimits (Action V G)`\n`+ instance [HasFiniteColimits V] : PreservesFiniteColimits (Action.forget V G) := by`\n`+ instance [HasFiniteCoproducts V] : HasFiniteCoproducts (Action V G)`\n`+ instance [HasFiniteLimits V] : HasFiniteLimits (Action V G)`\n`+ instance [HasFiniteLimits V] : PreservesFiniteLimits (Action.forget V G) := by`\n`+ instance [HasFiniteProducts V] : HasFiniteProducts (Action V G)`\n`+ instance [HasLimits C] : HasLimits (CosimplicialObject C)`\n`+ instance [HasLimits C] : HasLimits (SimplicialObject C)`\n`+ instance [HasLimits V] : HasLimits (Action V G)`\n`+ instance [Inv α] [Small α] : Inv (Shrink α) := (equivShrink _).symm.Inv`\n`+ instance [IsDomain R] : OrderBot (PrimeSpectrum R)`\n`+ instance [IsEmpty ι] : Unique (DirectLimit G f) := Module.DirectLimit.unique _ _`\n`+ instance [IsFiniteMeasure μ] [IsFiniteKernel κ] : IsFiniteMeasure (μ ⊗ₘ κ) := by`\n`+ instance [IsJacobsonRing R] : IsJacobsonRing R[X]`\n`+ instance [IsJacobsonRing R] : JacobsonSpace (PrimeSpectrum R) := by`\n`+ instance [IsProbabilityMeasure μ] [IsMarkovKernel κ] : IsProbabilityMeasure (μ ⊗ₘ κ) := by`\n`+ instance [IsReduced R] : DecompositionMonoid (Polynomial R)`\n`+ instance [IsReduced R] : DecompositionMonoid R := MulEquiv.decompositionMonoid (equivPi R)`\n`+ instance [LE α] [BoundedOrder α] : BoundedOrder (ULift.{v} α)`\n`+ instance [LE α] [OrderBot α] : OrderBot (ULift.{v} α)`\n`+ instance [LE α] [OrderTop α] : OrderTop (ULift.{v} α)`\n`+ instance [LeftRigidCategory V] : LeftRigidCategory (Action V H)`\n`+ instance [LeftRigidCategory V] : LeftRigidCategory (SingleObj (H : MonCat.{u}) ⥤ V) := by`\n`+ instance [Monoid M] : Bot (Associates M)`\n`+ instance [Monoid M] : Inhabited (Associates M)`\n`+ instance [Monoid M] : IsRefl M Associated`\n`+ instance [Monoid M] : IsSymm M Associated`\n`+ instance [Monoid M] : IsTrans M Associated`\n`+ instance [Monoid M] : One (Associates M)`\n`+ instance [Monoid M] [Subsingleton M] :`\n`+ instance [Monoid α] [Small α] : Monoid (Shrink α)`\n`+ instance [Mul α] [Small α] : Mul (Shrink α) := (equivShrink _).symm.mul`\n`+ instance [MulOneClass α] [Small α] : MulOneClass (Shrink α)`\n`+ instance [MulZeroClass α] [Small α] : MulZeroClass (Shrink α)`\n`+ instance [MulZeroOneClass α] [Small α] : MulZeroOneClass (Shrink α)`\n`+ instance [NonAssocSemiring α] [Small α] : NonAssocSemiring (Shrink α)`\n`+ instance [NonUnitalCommRing α] [Small α] : NonUnitalCommRing (Shrink α)`\n`+ instance [NonUnitalCommSemiring α] [Small α] : NonUnitalCommSemiring (Shrink α)`\n`+ instance [NonUnitalNonAssocRing α] [Small α] : NonUnitalNonAssocRing (Shrink α)`\n`+ instance [NonUnitalNonAssocSemiring α] [Small α] : NonUnitalNonAssocSemiring (Shrink α)`\n`+ instance [NonUnitalRing α] [Small α] : NonUnitalRing (Shrink α)`\n`+ instance [NonUnitalSemiring α] [Small α] : NonUnitalSemiring (Shrink α)`\n`+ instance [Nontrivial M] : Nontrivial (Associates M)`\n`+ instance [Nontrivial M] [Module.Free R M] : FaithfullyFlat R M`\n`+ instance [Nontrivial R] : Nonempty <| MaximalSpectrum R`\n`+ instance [Nontrivial R] : Nonempty <| PrimeSpectrum R`\n`+ instance [Nontrivial R] [IsDomain S] : MulRingNormClass (AbsoluteValue R S) R S`\n`+ instance [Nontrivial α] [Small α] : Nontrivial (Shrink α)`\n`+ instance [One α] [Small α] : One (Shrink α) := (equivShrink _).symm.one`\n`+ instance [Preadditive C] [∀ (n : ℤ), (shiftFunctor C n).Additive] (n : ℤ) :`\n`+ instance [RightRigidCategory V] : RightRigidCategory (Action V H)`\n`+ instance [RightRigidCategory V] : RightRigidCategory (SingleObj (H : MonCat.{u}) ⥤ V) := by`\n`+ instance [RigidCategory V] : RigidCategory (Action V H)`\n`+ instance [RigidCategory V] : RigidCategory (SingleObj (H : MonCat.{u}) ⥤ V) := by`\n`+ instance [Ring α] [Small α] : Ring (Shrink α)`\n`+ instance [Semigroup α] [Small α] : Semigroup (Shrink α)`\n`+ instance [SemigroupWithZero α] [Small α] : SemigroupWithZero (Shrink α)`\n`+ instance [Semiring α] [AddCommMonoid β] [Module α β] [Small β] : Module α (Shrink β)`\n`+ instance [Semiring α] [Small α] : Semiring (Shrink α)`\n`+ instance [Small.{v} α] (N : Type*) [Pow α N] : Pow (Shrink.{v} α) N`\n`+ instance [Small.{v} α] (R : Type*) [SMul R α] : SMul R (Shrink.{v} α)`\n`+ instance [Small.{v} α] [AddCommMonoid α] [DistribMulAction R α] :`\n`+ instance [Small.{v} α] [AddCommMonoid α] [Module R α] : Module R (Shrink.{v} α)`\n`+ instance [Small.{v} α] [AddGroupWithOne α] : AddGroupWithOne (Shrink.{v} α)`\n`+ instance [Small.{v} α] [AddMonoidWithOne α] : AddMonoidWithOne (Shrink.{v} α)`\n`+ instance [Small.{v} α] [CommGroup α] : CommGroup (Shrink.{v} α)`\n`+ instance [Small.{v} α] [CommMonoid α] : CommMonoid (Shrink.{v} α)`\n`+ instance [Small.{v} α] [CommRing α] : CommRing (Shrink.{v} α)`\n`+ instance [Small.{v} α] [CommSemigroup α] : CommSemigroup (Shrink.{v} α)`\n`+ instance [Small.{v} α] [CommSemiring α] : CommSemiring (Shrink.{v} α)`\n`+ instance [Small.{v} α] [Div α] : Div (Shrink.{v} α)`\n`+ instance [Small.{v} α] [DivisionRing α] : DivisionRing (Shrink.{v} α)`\n`+ instance [Small.{v} α] [Field α] : Field (Shrink.{v} α)`\n`+ instance [Small.{v} α] [Group α] : Group (Shrink.{v} α)`\n`+ instance [Small.{v} α] [Inv α] : Inv (Shrink.{v} α)`\n`+ instance [Small.{v} α] [Monoid α] : Monoid (Shrink.{v} α)`\n`+ instance [Small.{v} α] [Mul α] : Mul (Shrink.{v} α)`\n`+ instance [Small.{v} α] [MulAction R α] : MulAction R (Shrink.{v} α)`\n`+ instance [Small.{v} α] [MulOneClass α] : MulOneClass (Shrink.{v} α)`\n`+ instance [Small.{v} α] [MulZeroClass α] : MulZeroClass (Shrink.{v} α)`\n`+ instance [Small.{v} α] [MulZeroOneClass α] : MulZeroOneClass (Shrink.{v} α)`\n`+ instance [Small.{v} α] [NonAssocRing α] : NonAssocRing (Shrink.{v} α)`\n`+ instance [Small.{v} α] [NonAssocSemiring α] : NonAssocSemiring (Shrink.{v} α)`\n`+ instance [Small.{v} α] [NonUnitalCommRing α] : NonUnitalCommRing (Shrink.{v} α)`\n`+ instance [Small.{v} α] [NonUnitalCommSemiring α] :`\n`+ instance [Small.{v} α] [NonUnitalNonAssocRing α] :`\n`+ instance [Small.{v} α] [NonUnitalNonAssocSemiring α] :`\n`+ instance [Small.{v} α] [NonUnitalRing α] : NonUnitalRing (Shrink.{v} α)`\n`+ instance [Small.{v} α] [NonUnitalSemiring α] : NonUnitalSemiring (Shrink.{v} α)`\n`+ instance [Small.{v} α] [Nontrivial α] : Nontrivial (Shrink.{v} α)`\n`+ instance [Small.{v} α] [One α] : One (Shrink.{v} α)`\n`+ instance [Small.{v} α] [Ring α] : Ring (Shrink.{v} α)`\n`+ instance [Small.{v} α] [Ring α] [IsDomain α] : IsDomain (Shrink.{v} α)`\n`+ instance [Small.{v} α] [Semigroup α] : Semigroup (Shrink.{v} α)`\n`+ instance [Small.{v} α] [SemigroupWithZero α] : SemigroupWithZero (Shrink.{v} α)`\n`+ instance [Small.{v} α] [Semiring α] : Semiring (Shrink.{v} α)`\n`+ instance [Small.{v} α] [Semiring α] [Algebra R α] :`\n`+ instance [Subsingleton R] : IsEmpty (PrimeSpectrum R)`\n`+ instance [SymmetricCategory V] : SymmetricCategory (Action V G)`\n`+ instance [ToFormat α] : ToFormat (RefinedDiscrTree α) := ⟨format⟩`\n`+ instance [ToFormat α] : ToFormat (Trie α) := ⟨Trie.format⟩`\n`+ instance [Top α] : Top (ULift.{v} α) where top := up ⊤`\n`+ instance [TopologicalSpace X] {s : Set X} [T0Space s] [SecondCountableTopology s] :`\n`+ instance [TopologicalSpace X] {s : Set X} [h : HasCountableSeparatingOn X IsOpen s] :`\n`+ instance [TopologicalSpace α] [MulAction ℝ α] [ContinuousSMul ℝ α] :`\n`+ instance [Zero M] [Monoid M] : Top (Associates M)`\n`+ instance [Zero M] [Monoid M] : Zero (Associates M)`\n`+ instance [∀ i, Bot (α' i)] : Bot (∀ i, α' i)`\n`+ instance [∀ i, Top (α' i)] : Top (∀ i, α' i)`\n`+ instance _root_.AbsoluteValue.isAbsoluteValue (abv : AbsoluteValue R S) : IsAbsoluteValue abv`\n`+ instance _root_.Shrink.instNNRatCast [Small.{v} α] [NNRatCast α] :`\n`+ instance _root_.Shrink.instRatCast [Small.{v} α] [RatCast α] :`\n`+ instance {G : MonCat.{u}} (X : Action FintypeCat G) : MulAction G X.V := Action.instMulAction X`\n`+ instance {G : Type u} [Group G] (X : Action FintypeCat (MonCat.of G)) : MulAction G X.V`\n`+ instance {J : Type w₁} [Category.{w₂} J] [HasColimitsOfShape J V] :`\n`+ instance {J : Type w₁} [Category.{w₂} J] [HasLimitsOfShape J V] :`\n`+ instance {J C : Type*} [Category J] [Category C] [HasColimitsOfShape J C] [Preadditive C] :`\n`+ instance {M N : Action V G} (f : M ≅ N) : IsIso f.hom.hom`\n`+ instance {M N : Action V G} (f : M ≅ N) : IsIso f.inv.hom`\n`+ instance {R : Type*} [Field R] : Unique (PrimeSpectrum R)`\n`+ instance {X Y : Action V G} : Add (X ⟶ Y)`\n`+ instance {X Y : Action V G} : Neg (X ⟶ Y)`\n`+ instance {X Y : Action V G} : Zero (X ⟶ Y) := ⟨0, by aesop_cat⟩`\n`+ instance {n} [HasColimits C] : HasColimits (CosimplicialObject.Truncated C n)`\n`+ instance {n} [HasColimits C] : HasColimits (SimplicialObject.Truncated C n)`\n`+ instance {n} [HasLimits C] : HasLimits (CosimplicialObject.Truncated C n)`\n`+ instance {n} [HasLimits C] : HasLimits (SimplicialObject.Truncated C n)`\n`+ instance {α : Sort*} {r : α → α → Prop} [IsTrans α r] : Trans r r r`\n`+ integrable_kernel_prod_mk_left`\n`+ interior_extend_target_subset_interior_range`\n`+ intro`\n`+ intro'`\n`+ inv`\n`+ inv_Ioi`\n`+ inv_Ioo_0_left`\n`+ inv_def`\n`+ inv_eq_of_aeval_divX_ne_zero`\n`+ inv_eq_of_root_of_coeff_zero_ne_zero`\n`+ inv_hom_hom`\n`+ inv_liminf`\n`+ inv_limsup`\n`+ inv_map_iInf`\n`+ inv_map_iSup`\n`+ inv_mul_cancel`\n`+ irreducibleSpace`\n`+ irreducible_iff_prime_iff`\n`+ irreducible_mk`\n`+ irrefl`\n`+ irrefl_of`\n`+ isAlgebraic_adjoin`\n`+ isAlgebraic_adjoin_simple`\n`+ isAlgebraic_algHom_iff`\n`+ isAlgebraic_algebraMap`\n`+ isAlgebraic_algebraMap_iff`\n`+ isAlgebraic_bot_iff`\n`+ isAlgebraic_iSup`\n`+ isAlgebraic_iff_isAlgebraic_val`\n`+ isAlgebraic_iff_isIntegral`\n`+ isAlgebraic_iff_not_injective`\n`+ isAlgebraic_int`\n`+ isAlgebraic_nat`\n`+ isAlgebraic_of_isAlgebraic_bot`\n`+ isAlgebraic_of_mem_rootSet`\n`+ isAlgebraic_one`\n`+ isAlgebraic_rat`\n`+ isAlgebraic_ringHom_iff_of_comp_eq`\n`+ isAlgebraic_zero`\n`+ isArtinianRing_iff`\n`+ isArtinianRing_range`\n`+ isArtinian_finsupp`\n`+ isArtinian_iSup`\n`+ isArtinian_iff`\n`+ isArtinian_iff_submodule_quotient`\n`+ isArtinian_of_fg_of_artinian`\n`+ isArtinian_of_fg_of_artinian'`\n`+ isArtinian_of_injective`\n`+ isArtinian_of_le`\n`+ isArtinian_of_linearEquiv`\n`+ isArtinian_of_quotient_of_artinian`\n`+ isArtinian_of_range_eq_ker`\n`+ isArtinian_of_submodule_of_artinian`\n`+ isArtinian_of_surjective`\n`+ isArtinian_of_tower`\n`+ isArtinian_pi`\n`+ isArtinian_pi'`\n`+ isArtinian_prod`\n`+ isArtinian_range`\n`+ isArtinian_span_of_finite`\n`+ isArtinian_submodule'`\n`+ isArtinian_sup`\n`+ isBaseChange`\n`+ isBasis_basic_opens`\n`+ isBigOWith_abs_abs`\n`+ isBigOWith_abs_left`\n`+ isBigOWith_abs_right`\n`+ isBigOWith_bot`\n`+ isBigOWith_comm`\n`+ isBigOWith_const_const`\n`+ isBigOWith_const_mul_self`\n`+ isBigOWith_const_one`\n`+ isBigOWith_fst_prod`\n`+ isBigOWith_iff`\n`+ isBigOWith_iff_exists_eq_mul`\n`+ isBigOWith_insert`\n`+ isBigOWith_inv`\n`+ isBigOWith_map`\n`+ isBigOWith_neg_left`\n`+ isBigOWith_neg_right`\n`+ isBigOWith_norm_left`\n`+ isBigOWith_norm_norm`\n`+ isBigOWith_norm_right`\n`+ isBigOWith_of_eq_mul`\n`+ isBigOWith_of_le`\n`+ isBigOWith_of_le'`\n`+ isBigOWith_pi`\n`+ isBigOWith_prod_left`\n`+ isBigOWith_pure`\n`+ isBigOWith_refl`\n`+ isBigOWith_rev_principal`\n`+ isBigOWith_self_const_mul`\n`+ isBigOWith_self_const_mul'`\n`+ isBigOWith_snd_prod`\n`+ isBigOWith_top`\n`+ isBigOWith_zero`\n`+ isBigOWith_zero'`\n`+ isBigOWith_zero_right_iff`\n`+ isBigO_abs_abs`\n`+ isBigO_abs_left`\n`+ isBigO_abs_right`\n`+ isBigO_atTop_iff_eventually_exists`\n`+ isBigO_atTop_iff_eventually_exists_pos`\n`+ isBigO_bot`\n`+ isBigO_cofinite_iff`\n`+ isBigO_comm`\n`+ isBigO_const_const`\n`+ isBigO_const_const_iff`\n`+ isBigO_const_iff`\n`+ isBigO_const_left_iff_pos_le_norm`\n`+ isBigO_const_mul_left_iff`\n`+ isBigO_const_mul_left_iff'`\n`+ isBigO_const_mul_right_iff`\n`+ isBigO_const_mul_right_iff'`\n`+ isBigO_const_mul_self`\n`+ isBigO_const_of_ne`\n`+ isBigO_const_of_tendsto`\n`+ isBigO_const_one`\n`+ isBigO_const_smul_left`\n`+ isBigO_const_smul_right`\n`+ isBigO_fst_prod`\n`+ isBigO_fst_prod'`\n`+ isBigO_iff`\n`+ isBigO_iff'`\n`+ isBigO_iff''`\n`+ isBigO_iff_div_isBoundedUnder`\n`+ isBigO_iff_eventually`\n`+ isBigO_iff_eventually_isBigOWith`\n`+ isBigO_iff_exists_eq_mul`\n`+ isBigO_iff_isBigOWith`\n`+ isBigO_iff_isBoundedUnder_le_div`\n`+ isBigO_map`\n`+ isBigO_mul_iff_isBigO_div`\n`+ isBigO_nat_atTop_iff`\n`+ isBigO_neg_left`\n`+ isBigO_neg_right`\n`+ isBigO_norm_left`\n`+ isBigO_norm_norm`\n`+ isBigO_norm_right`\n`+ isBigO_of_div_tendsto_nhds`\n`+ isBigO_of_le`\n`+ isBigO_of_le'`\n`+ isBigO_of_subsingleton`\n`+ isBigO_one_iff`\n`+ isBigO_one_nat_atTop_iff`\n`+ isBigO_one_nhds_ne_iff`\n`+ isBigO_pi`\n`+ isBigO_prod_left`\n`+ isBigO_pure`\n`+ isBigO_refl`\n`+ isBigO_refl_left`\n`+ isBigO_rev_principal`\n`+ isBigO_self_const_mul`\n`+ isBigO_self_const_mul'`\n`+ isBigO_snd_prod`\n`+ isBigO_snd_prod'`\n`+ isBigO_sup`\n`+ isBigO_top`\n`+ isBigO_zero`\n`+ isBigO_zero_right_iff`\n`+ isBot_bot`\n`+ isBot_iff_eq_bot`\n`+ isClosedEmbedding`\n`+ isClosedEmbedding_coe_ennreal`\n`+ isClosedEmbedding_comap_of_surjective`\n`+ isClosedMap_comap_of_isIntegral`\n`+ isClosed_comap_singleton_of_isIntegral`\n`+ isClosed_iff_zeroLocus`\n`+ isClosed_iff_zeroLocus_ideal`\n`+ isClosed_iff_zeroLocus_radical_ideal`\n`+ isClosed_image_of_stableUnderSpecialization`\n`+ isClosed_mulTSupport`\n`+ isClosed_range`\n`+ isClosed_range_comap_of_surjective`\n`+ isClosed_range_of_stableUnderSpecialization`\n`+ isClosed_setOf_lipschitzOnWith`\n`+ isClosed_setOf_lipschitzWith`\n`+ isClosed_singleton_iff_isMaximal`\n`+ isClosed_zeroLocus`\n`+ isCodetecting_empty_of_groupoid`\n`+ isCodetecting_iff_isCoseparating`\n`+ isCodetecting_op_iff`\n`+ isCodetecting_unop_iff`\n`+ isCodetector_codetector`\n`+ isCodetector_coseparator`\n`+ isCodetector_def`\n`+ isCodetector_iff_reflectsIsomorphisms_yoneda_obj`\n`+ isCodetector_op_iff`\n`+ isCodetector_unop_iff`\n`+ isColimit`\n`+ isCompact`\n`+ isCompact_basicOpen`\n`+ isCompact_isOpen_iff`\n`+ isCompact_isOpen_iff_ideal`\n`+ isCompact_preimage`\n`+ isCompact_range`\n`+ isCompl_iSup_ker_pow_iInf_range_pow`\n`+ isContinuous`\n`+ isCoseparating_empty_of_thin`\n`+ isCoseparating_iff_mono`\n`+ isCoseparating_op_iff`\n`+ isCoseparating_proj_preimage`\n`+ isCoseparating_unop_iff`\n`+ isCoseparator_codetector`\n`+ isCoseparator_coseparator`\n`+ isCoseparator_def`\n`+ isCoseparator_iff_faithful_preadditiveYoneda`\n`+ isCoseparator_iff_faithful_preadditiveYonedaObj`\n`+ isCoseparator_iff_faithful_yoneda_obj`\n`+ isCoseparator_iff_mono`\n`+ isCoseparator_op_iff`\n`+ isCoseparator_pi`\n`+ isCoseparator_pi_of_isCoseparator`\n`+ isCoseparator_prod`\n`+ isCoseparator_prod_of_isCoseparator_left`\n`+ isCoseparator_prod_of_isCoseparator_right`\n`+ isCoseparator_unop_iff`\n`+ isCoverDense`\n`+ isDetecting_empty_of_groupoid`\n`+ isDetecting_iff_isSeparating`\n`+ isDetecting_op_iff`\n`+ isDetecting_unop_iff`\n`+ isDetector_def`\n`+ isDetector_detector`\n`+ isDetector_iff_reflectsIsomorphisms_coyoneda_obj`\n`+ isDetector_op_iff`\n`+ isDetector_separator`\n`+ isDetector_unop_iff`\n`+ isDomain`\n`+ isEmbedding_coe_ennreal`\n`+ isEmpty_of_isAlgebraic`\n`+ isFixedPt`\n`+ isFixedPt_prod_map`\n`+ isGLB_l`\n`+ isGLB_of_l_image`\n`+ isGLB_of_u_image`\n`+ isGLB_u_image`\n`+ isGreatest_u`\n`+ isIntegral_of_isClosedMap_comap_mapRingHom`\n`+ isIrreducible_iff_vanishingIdeal_isPrime`\n`+ isIrreducible_zeroLocus_iff`\n`+ isIrreducible_zeroLocus_iff_of_radical`\n`+ isIso_hom_mk`\n`+ isIso_ranCounit_app_of_isDenseSubsite`\n`+ isJacobsonRing`\n`+ isJacobsonRing_MvPolynomial_fin`\n`+ isJacobsonRing_iff`\n`+ isJacobsonRing_iff_jacobsonSpace`\n`+ isJacobsonRing_iff_prime_eq`\n`+ isJacobsonRing_iff_sInf_maximal`\n`+ isJacobsonRing_iff_sInf_maximal'`\n`+ isJacobsonRing_iso`\n`+ isJacobsonRing_localization`\n`+ isJacobsonRing_of_finiteType`\n`+ isJacobsonRing_of_isIntegral`\n`+ isJacobsonRing_of_isIntegral'`\n`+ isJacobsonRing_of_surjective`\n`+ isJacobsonRing_polynomial_iff_isJacobsonRing`\n`+ isJacobsonRing_polynomial_of_isJacobsonRing`\n`+ isJacobson_iff`\n`+ isJacobson_iff_prime_eq`\n`+ isJacobson_iff_sInf_maximal`\n`+ isJacobson_iff_sInf_maximal'`\n`+ isJacobson_iso`\n`+ isJacobson_localization`\n`+ isJacobson_of_isIntegral`\n`+ isJacobson_of_isIntegral'`\n`+ isJacobson_of_surjective`\n`+ isJacobson_polynomial_iff_isJacobson`\n`+ isJacobson_polynomial_of_isJacobson`\n`+ isLUB_l_image`\n`+ isLUB_of_l_image`\n`+ isLUB_of_u_image`\n`+ isLUB_u`\n`+ isLeast_l`\n`+ isLittleO_abs_abs`\n`+ isLittleO_abs_left`\n`+ isLittleO_abs_right`\n`+ isLittleO_bot`\n`+ isLittleO_comm`\n`+ isLittleO_const_const_iff`\n`+ isLittleO_const_id_atBot`\n`+ isLittleO_const_id_atTop`\n`+ isLittleO_const_id_cobounded`\n`+ isLittleO_const_iff`\n`+ isLittleO_const_iff_isLittleO_one`\n`+ isLittleO_const_left`\n`+ isLittleO_const_left_of_ne`\n`+ isLittleO_const_mul_left_iff`\n`+ isLittleO_const_mul_left_iff'`\n`+ isLittleO_const_mul_right_iff`\n`+ isLittleO_const_mul_right_iff'`\n`+ isLittleO_const_smul_left`\n`+ isLittleO_const_smul_right`\n`+ isLittleO_id_const`\n`+ isLittleO_id_one`\n`+ isLittleO_iff`\n`+ isLittleO_iff_exists_eq_mul`\n`+ isLittleO_iff_forall_isBigOWith`\n`+ isLittleO_iff_nat_mul_le`\n`+ isLittleO_iff_nat_mul_le'`\n`+ isLittleO_iff_nat_mul_le_aux`\n`+ isLittleO_iff_tendsto`\n`+ isLittleO_iff_tendsto'`\n`+ isLittleO_insert`\n`+ isLittleO_irrefl`\n`+ isLittleO_irrefl'`\n`+ isLittleO_map`\n`+ isLittleO_neg_left`\n`+ isLittleO_neg_right`\n`+ isLittleO_norm_left`\n`+ isLittleO_norm_norm`\n`+ isLittleO_norm_pow_id`\n`+ isLittleO_norm_pow_norm_pow`\n`+ isLittleO_norm_right`\n`+ isLittleO_of_subsingleton`\n`+ isLittleO_of_tendsto`\n`+ isLittleO_of_tendsto'`\n`+ isLittleO_one_iff`\n`+ isLittleO_one_left_iff`\n`+ isLittleO_pi`\n`+ isLittleO_pow_id`\n`+ isLittleO_pow_pow`\n`+ isLittleO_pow_sub_pow_sub`\n`+ isLittleO_pow_sub_sub`\n`+ isLittleO_principal`\n`+ isLittleO_prod_left`\n`+ isLittleO_pure`\n`+ isLittleO_refl_left`\n`+ isLittleO_sup`\n`+ isLittleO_top`\n`+ isLittleO_zero`\n`+ isLittleO_zero_right_iff`\n`+ isLocalHom_iff_comap_closedPoint`\n`+ isLocalRingHom_iff_comap_closedPoint`\n`+ isLocal_iff`\n`+ isLocal_of_isMaximal_radical`\n`+ isLocallyFaithful`\n`+ isLocallyFull`\n`+ isMax_iff`\n`+ isMax_iff_eq_top`\n`+ isMax_top`\n`+ isMaximal_comap_C_of_isJacobson`\n`+ isMaximal_comap_C_of_isJacobsonRing`\n`+ isMaximal_iff_isMaximal_disjoint`\n`+ isMaximal_of_isMaximal_disjoint`\n`+ isMaximal_of_isPrime`\n`+ isMin_bot`\n`+ isMin_iff`\n`+ isMin_iff_eq_bot`\n`+ isNilpotent_jacobson_bot`\n`+ isOpenMap_comap_C`\n`+ isOpen_basicOpen`\n`+ isOpen_extChartAt_preimage`\n`+ isOpen_extChartAt_preimage'`\n`+ isOpen_extChartAt_source`\n`+ isOpen_extChartAt_target`\n`+ isOpen_extend_preimage`\n`+ isOpen_extend_preimage'`\n`+ isOpen_extend_source`\n`+ isOpen_extend_target`\n`+ isOpen_iff`\n`+ isOpen_imageOfDf`\n`+ isOpen_ne_top`\n`+ isOpen_singleton_tfae_of_isNoetherian_of_isJacobsonRing`\n`+ isPeriodicPt_iff_minimalPeriod_dvd`\n`+ isPeriodicPt_minimalPeriod`\n`+ isPeriodicPt_of_mem_periodicPts_of_isPeriodicPt_iterate`\n`+ isPeriodicPt_prod_map`\n`+ isPeriodicPt_smul_iff`\n`+ isPeriodicPt_zero`\n`+ isPrimal_iff`\n`+ isPrimal_mk`\n`+ isPrimary_of_isMaximal_radical`\n`+ isPrime_iff_isMaximal`\n`+ isRadical_jacobson`\n`+ isRadical_of_eq_jacobson`\n`+ isRadical_vanishingIdeal`\n`+ isReflexive_of_equiv_dual_of_isReflexive`\n`+ isSFiniteKernel_prodMkLeft_unit`\n`+ isSFiniteKernel_prodMkRight_unit`\n`+ isScalarTower_over_bot`\n`+ isSemisimpleRing_of_isReduced`\n`+ isSeparating_empty_of_thin`\n`+ isSeparating_iff_epi`\n`+ isSeparating_op_iff`\n`+ isSeparating_proj_preimage`\n`+ isSeparating_unop_iff`\n`+ isSeparator_coprod`\n`+ isSeparator_coprod_of_isSeparator_left`\n`+ isSeparator_coprod_of_isSeparator_right`\n`+ isSeparator_def`\n`+ isSeparator_detector`\n`+ isSeparator_iff_epi`\n`+ isSeparator_iff_faithful_coyoneda_obj`\n`+ isSeparator_iff_faithful_preadditiveCoyoneda`\n`+ isSeparator_iff_faithful_preadditiveCoyonedaObj`\n`+ isSeparator_op_iff`\n`+ isSeparator_separator`\n`+ isSeparator_sigma`\n`+ isSeparator_sigma_of_isSeparator`\n`+ isSeparator_unop_iff`\n`+ isSplittingField_iSup`\n`+ isSplittingField_iff`\n`+ isSquare_prod`\n`+ isStar`\n`+ isStarWithArg`\n`+ isStrictTotalOrder_of_linearOrder`\n`+ isTop_iff_eq_top`\n`+ isTop_top`\n`+ isTopologicalBasis_basic_opens`\n`+ isUnit_add_isUnit_eq_isUnit_add_isUnit`\n`+ isUnit_eq_one_or`\n`+ isUnit_eq_or_eq_neg`\n`+ isUnit_iff`\n`+ isUnit_iff_eq_bot`\n`+ isUnit_iff_eq_one`\n`+ isUnit_iff_natAbs_eq`\n`+ isUnit_mk`\n`+ isUnit_mul_self`\n`+ isUnit_ne_iff_eq_neg`\n`+ isUnit_of_associated_mul`\n`+ isUnit_of_sub_one_mem_jacobson_bot`\n`+ is_one_at_infty`\n`+ is_periodic_id`\n`+ is_transcendental_of_subsingleton`\n`+ isoOver`\n`+ iso_of_restrict_iso`\n`+ isomorphic_distinguished`\n`+ iterate`\n`+ iterate_add_minimalPeriod_eq`\n`+ iterate_eq_iterate_iff_of_lt_minimalPeriod`\n`+ iterate_injOn_Iio_minimalPeriod`\n`+ iterate_mem_periodicOrbit`\n`+ iterate_minimalPeriod`\n`+ iterate_mod_apply`\n`+ iterate_mod_minimalPeriod_eq`\n`+ jacobson_bot_polynomial_le_sInf_map_maximal`\n`+ jacobson_bot_polynomial_of_jacobson_bot`\n`+ jacobson_eq_bot`\n`+ jacobson_eq_iff_jacobson_quotient_eq_bot`\n`+ jacobson_eq_self_of_isMaximal`\n`+ jacobson_eq_top_iff`\n`+ jacobson_idem`\n`+ jacobson_mono`\n`+ jacobson_mul_mem_right`\n`+ jacobson_radical_eq_jacobson`\n`+ jacobson_top`\n`+ lTensor_nontrivial`\n`+ lTensor_reflects_exact`\n`+ lTensor_reflects_triviality`\n`+ l_biInf_of_ul_eq_self`\n`+ l_biInf_u`\n`+ l_biSup_u`\n`+ l_bot`\n`+ l_comm_iff_u_comm`\n`+ l_comm_of_u_comm`\n`+ l_eq`\n`+ l_eq_bot`\n`+ l_iInf_of_ul_eq_self`\n`+ l_iInf_u`\n`+ l_iSup`\n`+ l_iSup_u`\n`+ l_iSup₂`\n`+ l_inf_u`\n`+ l_injective`\n`+ l_le`\n`+ l_le_l_iff`\n`+ l_sInf_u_image`\n`+ l_sSup`\n`+ l_sSup_u_image`\n`+ l_sup`\n`+ l_sup_u`\n`+ l_surjective`\n`+ l_top`\n`+ l_u_eq`\n`+ l_u_l_eq_l`\n`+ l_u_l_eq_l'`\n`+ l_u_le`\n`+ l_u_le_trans`\n`+ l_unique`\n`+ le_add`\n`+ le_antisymm`\n`+ le_antisymm_iff`\n`+ le_bot_iff`\n`+ le_compProd_apply`\n`+ le_iff`\n`+ le_iff_le`\n`+ le_iff_mem_closure`\n`+ le_iff_specializes`\n`+ le_imp_le_of_lt_imp_lt`\n`+ le_jacobson`\n`+ le_liminf_add`\n`+ le_liminf_mul`\n`+ le_limsup_add`\n`+ le_limsup_mul`\n`+ le_max_left`\n`+ le_max_right`\n`+ le_min`\n`+ le_mul_left`\n`+ le_mul_right`\n`+ le_not_le_of_lt`\n`+ le_of_eq`\n`+ le_of_eq_or_lt`\n`+ le_of_forall_lt_one_mul_le`\n`+ le_of_lt`\n`+ le_of_lt_minimalPeriod_of_iterate_eq`\n`+ le_of_lt_or_eq`\n`+ le_of_mul_le_mul_left`\n`+ le_of_not_ge`\n`+ le_of_not_gt`\n`+ le_of_not_le`\n`+ le_of_not_lt`\n`+ le_one_iff`\n`+ le_or_gt`\n`+ le_or_lt`\n`+ le_refl`\n`+ le_rfl`\n`+ le_sub`\n`+ le_sup_toSubalgebra`\n`+ le_top`\n`+ le_total`\n`+ le_trans`\n`+ le_tsum`\n`+ le_u`\n`+ le_u_l`\n`+ le_u_l_trans`\n`+ le_vanishingIdeal_zeroLocus`\n`+ le_zero`\n`+ leftDual_v`\n`+ leftDual_ρ`\n`+ leftInverse`\n`+ leftInverse_l_u`\n`+ leftRegular`\n`+ leftRegularTensorIso`\n`+ left_inv`\n`+ left_of_add`\n`+ left_of_comp`\n`+ length_bind`\n`+ length_flatMap`\n`+ length_le_sum_of_one_le`\n`+ length_pos_of_one_lt_prod`\n`+ length_pos_of_prod_lt_one`\n`+ length_pos_of_prod_ne_one`\n`+ length_sigma`\n`+ liftAlgHom_comp_reprField`\n`+ liftAlgHom_fieldRange`\n`+ liftAlgHom_fieldRange_eq_of_range_eq`\n`+ liftOrderBot`\n`+ liftOrderTop`\n`+ lift_adjoin`\n`+ lift_adjoin_simple`\n`+ lift_bot`\n`+ lift_cardinalMk_adjoin_le`\n`+ lift_reprField`\n`+ lift_top`\n`+ liminf_add_gt_of_gt`\n`+ liminf_add_le`\n`+ liminf_add_le_limsup_add_liminf`\n`+ liminf_add_top_of_ne_bot`\n`+ liminf_const_sub`\n`+ liminf_mul_le`\n`+ liminf_neg`\n`+ liminf_sub_const`\n`+ liminf_toReal_eq`\n`+ limsup_add_bot_of_ne_top`\n`+ limsup_add_le`\n`+ limsup_add_le_add_limsup`\n`+ limsup_add_le_of_le`\n`+ limsup_add_liminf_le_limsup_add`\n`+ limsup_const_sub`\n`+ limsup_mul_le'`\n`+ limsup_neg`\n`+ limsup_sub_const`\n`+ limsup_toReal_eq`\n`+ linearEquiv`\n`+ linearEquivShrink`\n`+ linearIndependent`\n`+ lintegral_comap`\n`+ lintegral_comp`\n`+ lintegral_compProd'`\n`+ lintegral_compProd₀`\n`+ lintegral_fst`\n`+ lintegral_map`\n`+ lintegral_prod`\n`+ lintegral_prodMkLeft`\n`+ lintegral_prodMkRight`\n`+ lintegral_snd`\n`+ lintegral_swapLeft`\n`+ lintegral_swapRight`\n`+ list_prod_mem_list_prod`\n`+ list_prod_singleton`\n`+ list_prod_subset_list_prod`\n`+ localizationMapOfSpecializes`\n`+ localization_artinian`\n`+ localization_away_comap_range`\n`+ localization_away_isOpenEmbedding`\n`+ localization_away_openEmbedding`\n`+ localization_comap_embedding`\n`+ localization_comap_inducing`\n`+ localization_comap_injective`\n`+ localization_comap_isEmbedding`\n`+ localization_comap_isInducing`\n`+ localization_comap_range`\n`+ localization_specComap_injective`\n`+ localization_specComap_range`\n`+ localization_surjective`\n`+ locallyCompactSpace`\n`+ locallyFinite_mulSupport_iff`\n`+ lowerBounds_u_image`\n`+ ltGeByCases`\n`+ ltTopHomeomorphNNReal`\n`+ lt_asymm`\n`+ lt_iff_le_not_le`\n`+ lt_iff_lt`\n`+ lt_iff_not_ge`\n`+ lt_irrefl`\n`+ lt_min`\n`+ lt_of_le_not_le`\n`+ lt_of_le_of_lt`\n`+ lt_of_le_of_ne`\n`+ lt_of_lt_of_le`\n`+ lt_of_not_ge`\n`+ lt_or_ge`\n`+ lt_or_gt_of_ne`\n`+ lt_or_le`\n`+ lt_top_iff_ne_top`\n`+ lt_top_of_lt`\n`+ lt_top_of_tsum_ne_top`\n`+ lt_trans`\n`+ lt_trichotomy`\n`+ map'`\n`+ mapAction`\n`+ mapAction_linear`\n`+ mapAction_preadditive`\n`+ mapAction_δ_hom`\n`+ mapAction_ε_hom`\n`+ mapAction_η_hom`\n`+ mapAction_μ_hom`\n`+ mapArrays`\n`+ mapArraysM`\n`+ mapOfMeasurable`\n`+ mapOfMeasurable_eq_map`\n`+ map_add_le`\n`+ map_apply`\n`+ map_apply'`\n`+ map_bot`\n`+ map_coe_atTop`\n`+ map_comap_eq`\n`+ map_comap_eq_self`\n`+ map_comap_eq_self_of_surjective`\n`+ map_const`\n`+ map_distinguished_op_exact`\n`+ map_dualAnnihilator_linearEquiv_flip_symm`\n`+ map_dualCoannihilator_linearEquiv_flip`\n`+ map_extChartAt_nhds`\n`+ map_extChartAt_nhds'`\n`+ map_extChartAt_nhdsWithin`\n`+ map_extChartAt_nhdsWithin'`\n`+ map_extChartAt_nhdsWithin_eq_image`\n`+ map_extChartAt_nhdsWithin_eq_image'`\n`+ map_extChartAt_nhds_of_boundaryless`\n`+ map_extChartAt_symm_nhdsWithin`\n`+ map_extChartAt_symm_nhdsWithin'`\n`+ map_extChartAt_symm_nhdsWithin_range`\n`+ map_extChartAt_symm_nhdsWithin_range'`\n`+ map_extend_nhds`\n`+ map_extend_nhdsWithin`\n`+ map_extend_nhdsWithin_eq_image`\n`+ map_extend_nhdsWithin_eq_image_of_subset`\n`+ map_extend_nhds_of_boundaryless`\n`+ map_extend_symm_nhdsWithin`\n`+ map_extend_symm_nhdsWithin_range`\n`+ map_iInf`\n`+ map_iSup`\n`+ map_id'`\n`+ map_jacobson_of_bijective`\n`+ map_jacobson_of_surjective`\n`+ map_lt_map_iff`\n`+ map_mul`\n`+ map_nhdsWithin_eq`\n`+ map_nhds_eq`\n`+ map_of_not_measurable`\n`+ map_one`\n`+ map_one_of_isLeftRegular`\n`+ map_pow`\n`+ map_prod`\n`+ map_prodMkLeft`\n`+ map_prodMkRight`\n`+ map_prod_swap`\n`+ map_smul`\n`+ map_sub`\n`+ map_sub_eq_zero_iff`\n`+ map_sub_le`\n`+ map_sub_rev`\n`+ map_sup`\n`+ map_top`\n`+ mapsTo_extChartAt`\n`+ mapsTo_extend`\n`+ matchTargetStar`\n`+ matchTreeStars`\n`+ maxDefault`\n`+ max_assoc`\n`+ max_bot_left`\n`+ max_bot_right`\n`+ max_comm`\n`+ max_def`\n`+ max_eq_bot`\n`+ max_eq_left`\n`+ max_eq_left_of_lt`\n`+ max_eq_right`\n`+ max_eq_right_of_lt`\n`+ max_eq_top`\n`+ max_le`\n`+ max_left_comm`\n`+ max_lt`\n`+ max_map`\n`+ max_self`\n`+ max_top_left`\n`+ max_top_right`\n`+ maximalAtlas`\n`+ maximal_ideals_finite`\n`+ measurableSingleton`\n`+ measurable_compProdFun`\n`+ measurable_compProdFun_of_finite`\n`+ measure_ge_le_exp_cgf`\n`+ measure_ge_le_exp_mul_mgf`\n`+ measure_le_le_exp_cgf`\n`+ measure_le_le_exp_mul_mgf`\n`+ mem_adjoin_iff`\n`+ mem_adjoin_range_iff`\n`+ mem_adjoin_simple_iff`\n`+ mem_adjoin_simple_self`\n`+ mem_basicOpen`\n`+ mem_bot`\n`+ mem_closure_X_union_C`\n`+ mem_compl_zeroLocus_iff_not_mem`\n`+ mem_distTriang_op_iff`\n`+ mem_distTriang_op_iff'`\n`+ mem_distinguishedTriangles_iff`\n`+ mem_distinguishedTriangles_iff'`\n`+ mem_extChartAt_source`\n`+ mem_extChartAt_target`\n`+ mem_finset_prod`\n`+ mem_fintype_prod`\n`+ mem_inducedTopology_sieves_iff`\n`+ mem_inf`\n`+ mem_interior_extend_target`\n`+ mem_jacobson_bot`\n`+ mem_list_prod`\n`+ mem_mem_ranges_iff_lt_sum`\n`+ mem_nhds_bot_iff`\n`+ mem_nhds_top_iff`\n`+ mem_periodicOrbit_iff`\n`+ mem_periodicPts`\n`+ mem_pow`\n`+ mem_prod_list_ofFn`\n`+ mem_ptsOfPeriod`\n`+ mem_top`\n`+ mem_vanishingIdeal`\n`+ mem_zeroLocus`\n`+ metricSpace`\n`+ metricSpaceEMetricBall`\n`+ mgf`\n`+ mgf_const`\n`+ mgf_const'`\n`+ mgf_neg`\n`+ mgf_nonneg`\n`+ mgf_pos`\n`+ mgf_pos'`\n`+ mgf_undef`\n`+ mgf_zero`\n`+ mgf_zero'`\n`+ mgf_zero_fun`\n`+ mgf_zero_measure`\n`+ minDefault`\n`+ min_assoc`\n`+ min_bot_left`\n`+ min_bot_right`\n`+ min_comm`\n`+ min_def`\n`+ min_eq_bot`\n`+ min_eq_left`\n`+ min_eq_left_of_lt`\n`+ min_eq_right`\n`+ min_eq_right_of_lt`\n`+ min_eq_top`\n`+ min_le_left`\n`+ min_le_right`\n`+ min_left_comm`\n`+ min_self`\n`+ min_top_left`\n`+ min_top_right`\n`+ minimalPeriod`\n`+ minimalPeriod_apply`\n`+ minimalPeriod_apply_iterate`\n`+ minimalPeriod_eq_minimalPeriod_iff`\n`+ minimalPeriod_eq_one_iff_isFixedPt`\n`+ minimalPeriod_eq_prime`\n`+ minimalPeriod_eq_prime_pow`\n`+ minimalPeriod_eq_zero_iff_nmem_periodicPts`\n`+ minimalPeriod_eq_zero_of_nmem_periodicPts`\n`+ minimalPeriod_fst_dvd`\n`+ minimalPeriod_id`\n`+ minimalPeriod_iterate_eq_div_gcd`\n`+ minimalPeriod_iterate_eq_div_gcd'`\n`+ minimalPeriod_pos_iff_mem_periodicPts`\n`+ minimalPeriod_pos_of_mem_periodicPts`\n`+ minimalPeriod_prod_map`\n`+ minimalPeriod_snd_dvd`\n`+ minimalPrimes.equivIrreducibleComponents`\n`+ minpoly_gen`\n`+ mk'`\n`+ mkAppNTerm`\n`+ mkAuxFunction`\n`+ mkDTExpr`\n`+ mkDTExprs`\n`+ mkInstanceCmds`\n`+ mkIso`\n`+ mkLocalInstanceLetDecls`\n`+ mkMonoidHom`\n`+ mkMonoidHom_apply`\n`+ mkMutualBlock`\n`+ mkOfInjective`\n`+ mkOfInjective'`\n`+ mkToExprBody`\n`+ mkToExprHeader`\n`+ mkToExprInstanceCmds`\n`+ mkToExprInstanceHandler`\n`+ mkToLevelBinders`\n`+ mkToTypeExpr`\n`+ mk_add_mk`\n`+ mk_bot`\n`+ mk_coe`\n`+ mk_dvdNotUnit_mk_iff`\n`+ mk_dvd_mk`\n`+ mk_eq_bot_iff`\n`+ mk_eq_mk_iff_associated`\n`+ mk_eq_top_iff`\n`+ mk_injective`\n`+ mk_isRelPrime_iff`\n`+ mk_le_mk_iff_dvd`\n`+ mk_le_mk_iff_dvd_iff`\n`+ mk_le_mk_of_dvd`\n`+ mk_mem_periodicPts`\n`+ mk_natCast`\n`+ mk_nat_cast`\n`+ mk_ne_zero`\n`+ mk_one`\n`+ mk_quot_out`\n`+ mk_sub_mk`\n`+ mk_surjective`\n`+ mk_symm`\n`+ mk_toPartENat_eq_coe_card`\n`+ mk_toPartENat_of_infinite`\n`+ mk_top`\n`+ mk_zero`\n`+ mod`\n`+ modelWithCornersSelf`\n`+ modelWithCornersSelf_boundaryless`\n`+ modelWithCornersSelf_coe`\n`+ modelWithCornersSelf_coe_symm`\n`+ modelWithCornersSelf_partialEquiv`\n`+ modelWithCornersSelf_prod`\n`+ modelWithCorners_prod_coe`\n`+ modelWithCorners_prod_coe_symm`\n`+ modelWithCorners_prod_toPartialEquiv`\n`+ model_space_smooth`\n`+ moment`\n`+ moment_zero`\n`+ mono`\n`+ mono'`\n`+ monoid`\n`+ monoidWithZero`\n`+ monoidWithZeroHomClass`\n`+ monotone_and`\n`+ monotone_intro`\n`+ monotone_l`\n`+ monotone_le`\n`+ monotone_lt`\n`+ monotone_or`\n`+ monotone_stabilizes`\n`+ monotone_stabilizes_iff_artinian`\n`+ monotone_truncateToReal`\n`+ monotone_u`\n`+ mulAction`\n`+ mulEquiv_apply`\n`+ mulEquiv_symm_apply`\n`+ mulHomClass`\n`+ mulIndicator_biUnion`\n`+ mulIndicator_biUnion_apply`\n`+ mulIndicator_prod`\n`+ mulOneClass`\n`+ mulSupport_prod`\n`+ mulTSupport`\n`+ mulTSupport_eq_empty_iff`\n`+ mulTSupport_extend_one`\n`+ mulTSupport_extend_one_subset`\n`+ mulTSupport_mul`\n`+ mulZeroClass`\n`+ mulZeroOneClass`\n`+ mul_algebraMap₀`\n`+ mul_assoc`\n`+ mul_const`\n`+ mul_def`\n`+ mul_eq_neg_one_iff_eq_one_or_neg_one`\n`+ mul_eq_one_iff`\n`+ mul_eq_one_iff_eq_one_or_neg_one`\n`+ mul_inv_cancel`\n`+ mul_mono`\n`+ mul_of_commute`\n`+ mul_one`\n`+ mul_prod_erase`\n`+ multiset_prod_mem_multiset_prod`\n`+ multiset_prod_singleton`\n`+ multiset_prod_subset_multiset_prod`\n`+ natAbs_of_isUnit`\n`+ natCast`\n`+ natTransCofanInj`\n`+ nat_abs_sum_le`\n`+ naturality`\n`+ naturality_apply`\n`+ neBotTopHomeomorphReal`\n`+ neTopHomeomorphNNReal`\n`+ ne_bot_of_gt`\n`+ ne_bot_of_le_ne_bot`\n`+ ne_iff_lt_or_gt`\n`+ ne_of_gt`\n`+ ne_of_lt`\n`+ ne_top_of_le_ne_top`\n`+ ne_top_of_lt`\n`+ ne_top_of_tsum_ne_top`\n`+ ne_zero_iff`\n`+ neg_hom`\n`+ neg_one_mem_of_prod_eq_neg_one`\n`+ nhdsOrderEmbedding`\n`+ nhdsWithin_Iio_neBot`\n`+ nhdsWithin_Ioi_coe_neBot`\n`+ nhdsWithin_Ioi_nat_neBot`\n`+ nhdsWithin_Ioi_ofNat_nebot`\n`+ nhdsWithin_Ioi_one_neBot`\n`+ nhdsWithin_Ioi_zero_neBot`\n`+ nhdsWithin_bot`\n`+ nhdsWithin_extChartAt_target_eq`\n`+ nhdsWithin_extChartAt_target_eq'`\n`+ nhdsWithin_extChartAt_target_eq_of_mem`\n`+ nhdsWithin_extend_target_eq`\n`+ nhdsWithin_top`\n`+ nhds_bot`\n`+ nhds_bot'`\n`+ nhds_bot_basis`\n`+ nhds_eq_nhds_emetric_ball`\n`+ nhds_of_ne_top`\n`+ nhds_zero_basis_Iic`\n`+ nnratCast`\n`+ noMaxOrder`\n`+ nodup_periodicOrbit`\n`+ nonAssocRing`\n`+ nonAssocSemiring`\n`+ nonUnitalCommRing`\n`+ nonUnitalCommSemiring`\n`+ nonUnitalNonAssocRing`\n`+ nonUnitalNonAssocSemiring`\n`+ nonUnitalRing`\n`+ nonUnitalSemiring`\n`+ nonempty_of_prod_ne_one`\n`+ nonneg`\n`+ nonnegHomClass`\n`+ normedAddCommGroup`\n`+ normedSpace`\n`+ not_bot_lt_iff`\n`+ not_even_iff`\n`+ not_even_one`\n`+ not_isBot_iff_ne_bot`\n`+ not_isMax_bot`\n`+ not_isMax_iff_ne_top`\n`+ not_isMin_iff_ne_bot`\n`+ not_isMin_top`\n`+ not_isPeriodicPt_of_pos_of_lt_minimalPeriod`\n`+ not_isTop_iff_ne_top`\n`+ not_le`\n`+ not_le_of_gt`\n`+ not_le_of_lt`\n`+ not_lt`\n`+ not_lt_bot`\n`+ not_lt_of_ge`\n`+ not_lt_of_gt`\n`+ not_lt_of_le`\n`+ not_lt_of_lt`\n`+ not_lt_top_iff`\n`+ not_mem_mulTSupport_iff_eventuallyEq`\n`+ not_summable_iff_tendsto_nat_atTop`\n`+ not_top_lt`\n`+ nsmul`\n`+ nsmul_coe`\n`+ nsmul_eq_mul`\n`+ nsmul_mk`\n`+ of.zero_exact_aux2`\n`+ ofAdd_list_prod`\n`+ ofAdd_mul`\n`+ ofAdd_multiset_prod`\n`+ ofAdd_sum`\n`+ ofDual_bot`\n`+ ofDual_top`\n`+ ofIso`\n`+ ofMulActionLimitCone`\n`+ ofMul_list_prod`\n`+ ofMul_multiset_prod`\n`+ ofMul_prod`\n`+ ofNat_isUnit`\n`+ ofReal_cinfi`\n`+ ofSet_mem_contDiffGroupoid`\n`+ of_aeval`\n`+ of_comp`\n`+ of_injective`\n`+ of_isIdempotent`\n`+ of_linearEquiv`\n`+ of_mulSupport_subset_isCompact`\n`+ on`\n`+ one_compl`\n`+ one_def`\n`+ one_emod_two`\n`+ one_eq_mk_one`\n`+ one_le`\n`+ one_mul`\n`+ one_or_eq_of_le_of_prime`\n`+ one_sub`\n`+ one_sub_iff`\n`+ opShiftFunctorEquivalence`\n`+ opShiftFunctorEquivalence_counitIso_hom_app_shift`\n`+ opShiftFunctorEquivalence_counitIso_hom_naturality`\n`+ opShiftFunctorEquivalence_counitIso_inv_app_shift`\n`+ opShiftFunctorEquivalence_counitIso_inv_naturality`\n`+ opShiftFunctorEquivalence_unitIso_hom_app_eq`\n`+ opShiftFunctorEquivalence_unitIso_hom_naturality`\n`+ opShiftFunctorEquivalence_unitIso_inv_app_eq`\n`+ opShiftFunctorEquivalence_unitIso_inv_naturality`\n`+ opShiftFunctorEquivalence_zero_unitIso_hom_app`\n`+ opShiftFunctorEquivalence_zero_unitIso_inv_app`\n`+ op_distinguished`\n`+ op_list_prod`\n`+ op_sum`\n`+ orderTop`\n`+ over_forget_locallyCoverDense`\n`+ partENatOfENat_toENat`\n`+ partialOrder`\n`+ period`\n`+ period_eq_minimalPeriod`\n`+ periodicOrbit`\n`+ periodicOrbit_apply_eq`\n`+ periodicOrbit_apply_iterate_eq`\n`+ periodicOrbit_chain`\n`+ periodicOrbit_chain'`\n`+ periodicOrbit_def`\n`+ periodicOrbit_eq_cycle_map`\n`+ periodicOrbit_eq_nil_iff_not_periodic_pt`\n`+ periodicOrbit_eq_nil_of_not_periodic_pt`\n`+ periodicOrbit_length`\n`+ periodicPts`\n`+ pointsEquivIrreducibleCloseds`\n`+ polynomial_smul_apply`\n`+ polynomial_smul_apply'`\n`+ pos`\n`+ pos_iff`\n`+ powOrderIso`\n`+ pow_add_period_smul`\n`+ pow_card_mul_prod`\n`+ pow_count`\n`+ pow_def`\n`+ pow_eq_prod_const`\n`+ pow_mod_period_smul`\n`+ pow_nonneg`\n`+ pow_period_add_smul`\n`+ pow_period_smul`\n`+ pow_smul_eq_iff_minimalPeriod_dvd`\n`+ pow_smul_eq_iff_period_dvd`\n`+ pow_smul_mod_minimalPeriod`\n`+ pow_succ_eq`\n`+ powerBasisAux`\n`+ preimage_add_const_Icc`\n`+ preimage_add_const_Ici`\n`+ preimage_add_const_Ico`\n`+ preimage_add_const_Iic`\n`+ preimage_add_const_Iio`\n`+ preimage_add_const_Ioc`\n`+ preimage_add_const_Ioi`\n`+ preimage_add_const_Ioo`\n`+ preimage_add_const_uIcc`\n`+ preimage_comap_zeroLocus`\n`+ preimage_const_add_Icc`\n`+ preimage_const_add_Ici`\n`+ preimage_const_add_Ico`\n`+ preimage_const_add_Iic`\n`+ preimage_const_add_Iio`\n`+ preimage_const_add_Ioc`\n`+ preimage_const_add_Ioi`\n`+ preimage_const_add_Ioo`\n`+ preimage_const_add_uIcc`\n`+ preimage_const_mul_Icc`\n`+ preimage_const_mul_Icc_of_neg`\n`+ preimage_const_mul_Ici`\n`+ preimage_const_mul_Ici_of_neg`\n`+ preimage_const_mul_Ico`\n`+ preimage_const_mul_Ico_of_neg`\n`+ preimage_const_mul_Iic`\n`+ preimage_const_mul_Iic_of_neg`\n`+ preimage_const_mul_Iio`\n`+ preimage_const_mul_Iio_of_neg`\n`+ preimage_const_mul_Ioc`\n`+ preimage_const_mul_Ioc_of_neg`\n`+ preimage_const_mul_Ioi`\n`+ preimage_const_mul_Ioi_of_neg`\n`+ preimage_const_mul_Ioi_or_Iio`\n`+ preimage_const_mul_Ioo`\n`+ preimage_const_mul_Ioo_of_neg`\n`+ preimage_const_mul_uIcc`\n`+ preimage_const_sub_Icc`\n`+ preimage_const_sub_Ici`\n`+ preimage_const_sub_Ico`\n`+ preimage_const_sub_Iic`\n`+ preimage_const_sub_Iio`\n`+ preimage_const_sub_Ioc`\n`+ preimage_const_sub_Ioi`\n`+ preimage_const_sub_Ioo`\n`+ preimage_const_sub_uIcc`\n`+ preimage_div_const_uIcc`\n`+ preimage_image`\n`+ preimage_mul_const_Icc`\n`+ preimage_mul_const_Icc_of_neg`\n`+ preimage_mul_const_Ici`\n`+ preimage_mul_const_Ici_of_neg`\n`+ preimage_mul_const_Ico`\n`+ preimage_mul_const_Ico_of_neg`\n`+ preimage_mul_const_Iic`\n`+ preimage_mul_const_Iic_of_neg`\n`+ preimage_mul_const_Iio`\n`+ preimage_mul_const_Iio_of_neg`\n`+ preimage_mul_const_Ioc`\n`+ preimage_mul_const_Ioc_of_neg`\n`+ preimage_mul_const_Ioi`\n`+ preimage_mul_const_Ioi_of_neg`\n`+ preimage_mul_const_Ioo`\n`+ preimage_mul_const_Ioo_of_neg`\n`+ preimage_mul_const_uIcc`\n`+ preimage_neg_Icc`\n`+ preimage_neg_Ici`\n`+ preimage_neg_Ico`\n`+ preimage_neg_Iic`\n`+ preimage_neg_Iio`\n`+ preimage_neg_Ioc`\n`+ preimage_neg_Ioi`\n`+ preimage_neg_Ioo`\n`+ preimage_neg_uIcc`\n`+ preimage_specComap_zeroLocus`\n`+ preimage_specComap_zeroLocus_aux`\n`+ preimage_sub_const_Icc`\n`+ preimage_sub_const_Ici`\n`+ preimage_sub_const_Ico`\n`+ preimage_sub_const_Iic`\n`+ preimage_sub_const_Iio`\n`+ preimage_sub_const_Ioc`\n`+ preimage_sub_const_Ioi`\n`+ preimage_sub_const_Ioo`\n`+ preimage_sub_const_uIcc`\n`+ preservesColimit_of_preserves`\n`+ preservesColimitsOfShape_of_preserves`\n`+ preservesColimitsOfSize_of_preserves`\n`+ preservesColimits_forget`\n`+ preservesFiniteLimits_liftToFinset`\n`+ preservesLimit_of_preserves`\n`+ preservesLimitsOfShape_of_preserves`\n`+ preservesLimitsOfSize_of_preserves`\n`+ preservesLimits_forget`\n`+ presheafHom`\n`+ primeSpectrumProd`\n`+ primeSpectrumProdHomeo`\n`+ primeSpectrumProdOfSum`\n`+ primeSpectrumProd_symm_inl`\n`+ primeSpectrumProd_symm_inl_asIdeal`\n`+ primeSpectrumProd_symm_inr`\n`+ primeSpectrumProd_symm_inr_asIdeal`\n`+ primeSpectrum_finite`\n`+ primeSpectrum_unique_of_localization_at_minimal`\n`+ prime_dvd_prime_iff_eq`\n`+ prime_mk`\n`+ prime_mul_iff`\n`+ prime_pow_iff`\n`+ processBigOpBinder`\n`+ processBigOpBinders`\n`+ prodMkLeft`\n`+ prodMkLeft_add`\n`+ prodMkLeft_apply`\n`+ prodMkLeft_apply'`\n`+ prodMkLeft_zero`\n`+ prodMkRight`\n`+ prodMkRight_add`\n`+ prodMkRight_apply`\n`+ prodMkRight_apply'`\n`+ prodMkRight_zero`\n`+ prod_add`\n`+ prod_append`\n`+ prod_apply`\n`+ prod_apply'`\n`+ prod_apply_dite`\n`+ prod_apply_ite`\n`+ prod_apply_ite_of_false`\n`+ prod_apply_ite_of_true`\n`+ prod_attach`\n`+ prod_attach_univ`\n`+ prod_biUnion`\n`+ prod_bij`\n`+ prod_bij'`\n`+ prod_bij_ne_one`\n`+ prod_cancels_of_partition_cancels`\n`+ prod_coe`\n`+ prod_coe_sort`\n`+ prod_coe_sort_eq_attach`\n`+ prod_comm`\n`+ prod_comm'`\n`+ prod_comp`\n`+ prod_compl_mul_prod`\n`+ prod_concat`\n`+ prod_congr`\n`+ prod_congr_set`\n`+ prod_const_one`\n`+ prod_diag`\n`+ prod_disjUnion`\n`+ prod_disj_sum`\n`+ prod_disjiUnion`\n`+ prod_dite`\n`+ prod_dite_irrel`\n`+ prod_dite_of_false`\n`+ prod_dite_of_true`\n`+ prod_div_distrib`\n`+ prod_drop_succ`\n`+ prod_dvd_prod_of_le`\n`+ prod_dvd_prod_of_subset`\n`+ prod_eq_fold`\n`+ prod_eq_mul`\n`+ prod_eq_mul_of_mem`\n`+ prod_eq_mul_prod_diff_singleton`\n`+ prod_eq_multiset_prod`\n`+ prod_eq_prod_diff_singleton_mul`\n`+ prod_eq_single`\n`+ prod_eq_single_of_mem`\n`+ prod_erase_attach`\n`+ prod_erase_eq_div`\n`+ prod_erase_lt_of_one_lt`\n`+ prod_erase_mul`\n`+ prod_erase_of_comm`\n`+ prod_extend_by_one`\n`+ prod_fiberwise_eq_prod_filter`\n`+ prod_fiberwise_eq_prod_filter'`\n`+ prod_fiberwise_of_maps_to`\n`+ prod_fiberwise_of_maps_to'`\n`+ prod_filter`\n`+ prod_filter_ne_one`\n`+ prod_filter_not_mul_prod_filter`\n`+ prod_filter_of_ne`\n`+ prod_finset_coe`\n`+ prod_finset_product`\n`+ prod_finset_product'`\n`+ prod_finset_product_right`\n`+ prod_finset_product_right'`\n`+ prod_flatten`\n`+ prod_flip`\n`+ prod_hom'`\n`+ prod_hom_ne_zero`\n`+ prod_hom_nonempty`\n`+ prod_hom₂_ne_zero`\n`+ prod_hom₂_nonempty`\n`+ prod_image`\n`+ prod_image'`\n`+ prod_insert`\n`+ prod_insert_div`\n`+ prod_insert_of_eq_one_if_not_mem`\n`+ prod_insert_one`\n`+ prod_inter_mul_prod_diff`\n`+ prod_inv`\n`+ prod_inv_distrib`\n`+ prod_inv_reverse`\n`+ prod_involution`\n`+ prod_isUnit`\n`+ prod_isUnit_iff`\n`+ prod_ite`\n`+ prod_ite_eq_ite_exists`\n`+ prod_ite_index`\n`+ prod_ite_irrel`\n`+ prod_ite_of_false`\n`+ prod_ite_of_true`\n`+ prod_ite_one`\n`+ prod_join`\n`+ prod_list_count`\n`+ prod_list_count_of_subset`\n`+ prod_list_map_count`\n`+ prod_map`\n`+ prod_map_div`\n`+ prod_map_filter_mul_prod_map_filter_not`\n`+ prod_map_hom`\n`+ prod_map_inv`\n`+ prod_map_inv'`\n`+ prod_map_ite`\n`+ prod_map_ite_eq`\n`+ prod_map_pow`\n`+ prod_map_prod_map`\n`+ prod_map_val`\n`+ prod_map_zpow`\n`+ prod_mem_multiset`\n`+ prod_mk`\n`+ prod_mulIndicator_eq_prod_filter`\n`+ prod_mulIndicator_eq_prod_inter`\n`+ prod_mulIndicator_subset`\n`+ prod_mulIndicator_subset_of_eq_one`\n`+ prod_mul_distrib`\n`+ prod_mul_eq_prod_mul_of_exists`\n`+ prod_mul_pow_card`\n`+ prod_mul_prod_comm`\n`+ prod_mul_prod_compl`\n`+ prod_mul_prod_eq_prod_zipWith_mul_prod_drop`\n`+ prod_mul_prod_eq_prod_zipWith_of_length_eq`\n`+ prod_multiset_count`\n`+ prod_multiset_count_of_subset`\n`+ prod_multiset_map_count`\n`+ prod_nbij`\n`+ prod_nbij'`\n`+ prod_nil`\n`+ prod_ninvolution`\n`+ prod_nsmul`\n`+ prod_of_empty`\n`+ prod_of_injOn`\n`+ prod_of_injective`\n`+ prod_of_isEmpty`\n`+ prod_one_cons`\n`+ prod_partition`\n`+ prod_piecewise`\n`+ prod_pow`\n`+ prod_pow_boole`\n`+ prod_pow_eq_pow_sum`\n`+ prod_powerset`\n`+ prod_powersetCard`\n`+ prod_powerset_cons`\n`+ prod_powerset_insert`\n`+ prod_preimage`\n`+ prod_preimage'`\n`+ prod_preimage_of_bij`\n`+ prod_product`\n`+ prod_product'`\n`+ prod_product_right`\n`+ prod_product_right'`\n`+ prod_range_add`\n`+ prod_range_add_div_prod_range`\n`+ prod_range_induction`\n`+ prod_range_one`\n`+ prod_range_succ_comm`\n`+ prod_range_zero`\n`+ prod_reverse`\n`+ prod_reverse_noncomm`\n`+ prod_rotate_eq_one_of_prod_eq_one`\n`+ prod_sdiff`\n`+ prod_sdiff_div_prod_sdiff`\n`+ prod_sdiff_eq_div`\n`+ prod_sdiff_eq_prod_sdiff_iff`\n`+ prod_sdiff_ne_prod_sdiff_iff`\n`+ prod_set`\n`+ prod_set'`\n`+ prod_set_coe`\n`+ prod_sigma`\n`+ prod_sigma'`\n`+ prod_subset_one_on_sdiff`\n`+ prod_subsingleton`\n`+ prod_subtype`\n`+ prod_subtype_eq_prod_filter`\n`+ prod_subtype_map_embedding`\n`+ prod_subtype_mul_prod_subtype`\n`+ prod_subtype_of_mem`\n`+ prod_sum`\n`+ prod_sum_elim`\n`+ prod_take_mul_prod_drop`\n`+ prod_take_succ`\n`+ prod_toFinset`\n`+ prod_toList`\n`+ prod_to_list`\n`+ prod_union`\n`+ prod_union_eq_left`\n`+ prod_union_eq_right`\n`+ prod_union_inter`\n`+ prod_unique`\n`+ prod_unique_nonempty`\n`+ prod_univ_pi`\n`+ prod_update_of_mem`\n`+ prod_update_of_not_mem`\n`+ prod_val`\n`+ prod_zero`\n`+ prod_zpow`\n`+ ptsOfPeriod`\n`+ pull`\n`+ pushforwardFamily`\n`+ pushforwardFamily_apply`\n`+ pushforwardFamily_compatible`\n`+ pushforwardFamily_def`\n`+ pushforward_cover_iff_cover_pullback`\n`+ quasiSober`\n`+ quasicategory_of_filler`\n`+ quotNilradicalEquivPi`\n`+ quot_mk_eq_mk`\n`+ quot_out`\n`+ quot_out_zero`\n`+ quotientToEndHom`\n`+ quotientToEndHom_mk`\n`+ quotientToQuotientOfLE`\n`+ quotientToQuotientOfLE_hom_mk`\n`+ quotient_mk_comp_C_isIntegral_of_jacobson`\n`+ quotient_mk_eq_mk`\n`+ rTensor_nontrivial`\n`+ rTensor_reflects_exact`\n`+ rTensor_reflects_triviality`\n`+ radical_eq_jacobson_iff_radical_quotient_eq_jacobson_bot`\n`+ radical_le_jacobson`\n`+ range_comap_of_surjective`\n`+ range_eq_closure_interior`\n`+ range_eq_image_mulTSupport_or`\n`+ range_le_ker_of_exact_rTensor`\n`+ range_smul_pow_stabilizes`\n`+ range_specComap_of_surjective`\n`+ range_subset_closure_interior`\n`+ range_subset_insert_image_mulTSupport`\n`+ ranges_flatten`\n`+ ranges_join`\n`+ ranges_nodup`\n`+ rank_adjoin_eq_one_iff`\n`+ rank_adjoin_simple_eq_one_iff`\n`+ rank_bot`\n`+ rank_bot'`\n`+ rank_eq_one_iff`\n`+ rank_quotient_eq_of_le_torsion`\n`+ rank_sup_le_of_isAlgebraic`\n`+ rank_top`\n`+ rank_top'`\n`+ ratCast`\n`+ reduceHBinOp`\n`+ reduceHBinOpAux`\n`+ reduceUnOp`\n`+ reduceUnOpAux`\n`+ reducibleId`\n`+ refl_of`\n`+ reflexive_left`\n`+ reflexive_right`\n`+ rel_prod`\n`+ repr`\n`+ reprField`\n`+ repr_ker`\n`+ res`\n`+ resComp`\n`+ resId`\n`+ res_additive`\n`+ res_linear`\n`+ restrict`\n`+ restrictHomEquivHom`\n`+ restrictScalars`\n`+ restrictScalarsField`\n`+ restrictScalars_adjoin`\n`+ restrictScalars_adjoin_eq_sup`\n`+ restrictScalars_adjoin_of_algEquiv`\n`+ restrictScalars_bot_eq_self`\n`+ restrictScalars_inf`\n`+ restrictScalars_sup`\n`+ restrictScalars_top`\n`+ rfl`\n`+ rightDual_v`\n`+ rightDual_ρ`\n`+ rightInvOn`\n`+ right_inv`\n`+ right_of_add`\n`+ ringEquiv`\n`+ ringEquiv_apply`\n`+ ringEquiv_symm_apply`\n`+ rotateTriangleOpEquivalenceInverseObjRotateUnopIso`\n`+ rotate_distinguished_triangle`\n`+ sInf_image2_eq_sInf_sInf`\n`+ sInf_image2_eq_sInf_sSup`\n`+ sInf_image2_eq_sSup_sInf`\n`+ sInf_image2_eq_sSup_sSup`\n`+ sInf_toSubalgebra`\n`+ sInf_toSubfield`\n`+ sSup_def`\n`+ sSup_image2_eq_sInf_sInf`\n`+ sSup_image2_eq_sInf_sSup`\n`+ sSup_image2_eq_sSup_sInf`\n`+ sSup_image2_eq_sSup_sSup`\n`+ sSup_toSubfield`\n`+ secondCountableTopology`\n`+ self_mem_periodicOrbit`\n`+ semigroup`\n`+ semigroupWithZero`\n`+ semilatticeInf`\n`+ semilatticeSup`\n`+ separatesPoints_continuous_of_t35Space`\n`+ separatesPoints_continuous_of_t35Space_Icc`\n`+ separator`\n`+ setIntegral_compProd_univ_left`\n`+ setIntegral_compProd_univ_right`\n`+ setLIntegral_compProd_univ_left`\n`+ setLIntegral_compProd_univ_right`\n`+ set_has_minimal_iff_artinian`\n`+ set_integral_compProd_univ_left`\n`+ set_integral_compProd_univ_right`\n`+ set_lintegral_compProd_univ_left`\n`+ set_lintegral_compProd_univ_right`\n`+ setoid`\n`+ sheafCoyonedaHom`\n`+ sheafEquiv`\n`+ sheafEquivSheafificationCompatibility`\n`+ sheafHom`\n`+ sheafHom_eq`\n`+ sheafHom_restrict_eq`\n`+ sheafInducedTopologyEquivOfIsCoverDense`\n`+ sheafYonedaHom`\n`+ sheaf_eq_amalgamation`\n`+ shiftFunctorAdd'_op_hom_app`\n`+ shiftFunctorAdd'_op_inv_app`\n`+ shiftFunctorOpIso`\n`+ shiftFunctorZero_op_hom_app`\n`+ shiftFunctorZero_op_inv_app`\n`+ shiftFunctor_op_map`\n`+ shift_unop_opShiftFunctorEquivalence_counitIso_hom_app`\n`+ shift_unop_opShiftFunctorEquivalence_counitIso_inv_app`\n`+ simplicialCosimplicialAugmentedEquiv`\n`+ simplicialCosimplicialEquiv`\n`+ simplicialToCosimplicialAugmented`\n`+ sk`\n`+ sk.faithful`\n`+ sk.full`\n`+ sk.fullyFaithful`\n`+ skAdj`\n`+ skAdj.coreflective`\n`+ sk_coreflective`\n`+ smoothManifoldWithCorners_of_contDiffOn`\n`+ smul`\n`+ smul_def`\n`+ smul_hom`\n`+ snd`\n`+ snd_apply`\n`+ snd_apply'`\n`+ snd_bot`\n`+ snd_comp`\n`+ snd_compProd_prodMkLeft`\n`+ snd_dirac_unit_compProd_const`\n`+ snd_eq`\n`+ snd_map_prod`\n`+ snd_map_prod_id`\n`+ snd_prodMkLeft`\n`+ snd_prodMkRight`\n`+ snd_swapRight`\n`+ snd_top`\n`+ snd_zero`\n`+ specComap_asIdeal`\n`+ specComap_comp`\n`+ specComap_comp_apply`\n`+ specComap_id`\n`+ specComap_injective_of_surjective`\n`+ specializes_closedPoint`\n`+ stableUnderGeneralization_singleton`\n`+ stableUnderSpecialization_image_iff`\n`+ stableUnderSpecialization_range_iff`\n`+ stableUnderSpecialization_singleton`\n`+ strictMono_l`\n`+ strictMono_u`\n`+ sub_abv_le_abv_sub`\n`+ sub_le`\n`+ sub_le_add`\n`+ sub_mod_lt`\n`+ subadditiveHomClass`\n`+ subset_adjoin`\n`+ subset_adjoin_of_subset_left`\n`+ subset_adjoin_of_subset_right`\n`+ subset_maximalAtlas`\n`+ subset_mulTSupport`\n`+ subset_vanishingIdeal_zeroLocus`\n`+ subset_zeroLocus_iff_le_vanishingIdeal`\n`+ subset_zeroLocus_iff_subset_vanishingIdeal`\n`+ subset_zeroLocus_vanishingIdeal`\n`+ subsingleton_iff_bot_eq_top`\n`+ subsingleton_of_bot_eq_top`\n`+ subsingleton_of_finrank_adjoin_eq_one`\n`+ subsingleton_of_finrank_adjoin_le_one`\n`+ subsingleton_of_rank_adjoin_eq_one`\n`+ subsingleton_of_top_le_bot`\n`+ subtype_isMaximal_finite`\n`+ sumAddMonoidHom`\n`+ sum_add_tsum_nat_add`\n`+ sum_card_fiberwise_eq_card_filter`\n`+ sum_comap_seq`\n`+ sum_count_eq`\n`+ sum_count_eq_card`\n`+ sum_filter_count_eq_countP`\n`+ sum_hom`\n`+ sum_join`\n`+ sum_le_tsum`\n`+ sum_map_count_dedup_eq_length`\n`+ sum_map_count_dedup_filter_eq_countP`\n`+ sum_map_seq`\n`+ sum_map_singleton`\n`+ sum_map_tsub`\n`+ sum_multiset_singleton`\n`+ sum_of_empty`\n`+ sum_range_tsub`\n`+ sum_toFinset_count_eq_length`\n`+ sum_tsub_distrib`\n`+ summable`\n`+ summable_coe`\n`+ summable_comp_injective`\n`+ summable_iff_not_tendsto_nat_atTop`\n`+ summable_mk`\n`+ summable_nat_add`\n`+ summable_nat_add_iff`\n`+ summable_of_isBigO`\n`+ summable_of_isBigO_nat`\n`+ summable_of_le`\n`+ summable_of_sum_range_le`\n`+ summable_sigma`\n`+ summable_toNNReal_of_tsum_ne_top`\n`+ summable_toReal`\n`+ summand`\n`+ sup_bot_eq`\n`+ sup_def`\n`+ sup_eq_bot_iff`\n`+ sup_toSubalgebra_of_isAlgebraic`\n`+ sup_toSubalgebra_of_isAlgebraic_left`\n`+ sup_toSubalgebra_of_isAlgebraic_right`\n`+ sup_toSubalgebra_of_left`\n`+ sup_toSubalgebra_of_right`\n`+ sup_toSubfield`\n`+ sup_top_eq`\n`+ sup_vanishingIdeal_le`\n`+ surjective_of_injective_endomorphism`\n`+ swapLeft`\n`+ swapLeft_apply`\n`+ swapLeft_apply'`\n`+ swapLeft_prodMkLeft`\n`+ swapLeft_prodMkRight`\n`+ swapRight`\n`+ swapRight_apply`\n`+ swapRight_apply'`\n`+ swapRight_eq`\n`+ symm_comp_self`\n`+ symm_continuousWithinAt_comp_right_iff`\n`+ symm_flip`\n`+ symm_map_nhdsWithin_image`\n`+ symm_map_nhdsWithin_range`\n`+ symm_of`\n`+ symm_trans_mem_contDiffGroupoid`\n`+ t1Space`\n`+ t1Space_iff_isField`\n`+ tail_sum`\n`+ take_sum_flatten`\n`+ take_sum_join`\n`+ target_eq`\n`+ tendsto_atTop`\n`+ tendsto_atTop_zero`\n`+ tendsto_atTop_zero_of_summable`\n`+ tendsto_atTop_zero_of_tsum_ne_top`\n`+ tendsto_coe'`\n`+ tendsto_coe_atTop`\n`+ tendsto_coe_ennreal`\n`+ tendsto_coe_nhds_top`\n`+ tendsto_coe_sub`\n`+ tendsto_cofinite_zero_of_summable`\n`+ tendsto_cofinite_zero_of_tsum_ne_top`\n`+ tendsto_extend_comp_iff`\n`+ tendsto_finset_prod_of_ne_top`\n`+ tendsto_iff_edist_tendsto_0`\n`+ tendsto_inv_iff`\n`+ tendsto_inv_nat_nhds_zero`\n`+ tendsto_mul`\n`+ tendsto_nat_nhds_top`\n`+ tendsto_nat_tsum`\n`+ tendsto_nhds`\n`+ tendsto_nhds_bot_iff_real`\n`+ tendsto_nhds_coe_iff`\n`+ tendsto_nhds_of_Icc`\n`+ tendsto_nhds_top`\n`+ tendsto_nhds_top_iff_nat`\n`+ tendsto_nhds_top_iff_nnreal`\n`+ tendsto_nhds_top_iff_real`\n`+ tendsto_nhds_zero`\n`+ tendsto_ofReal`\n`+ tendsto_ofReal_atTop`\n`+ tendsto_ofReal_nhds_top`\n`+ tendsto_of_antitone`\n`+ tendsto_sub`\n`+ tendsto_toNNReal`\n`+ tendsto_toReal_atBot`\n`+ tendsto_toReal_atTop`\n`+ tendsto_toReal_iff`\n`+ tensorUnitIso`\n`+ tensorUnit_ρ`\n`+ tensorUnit_ρ'`\n`+ tensor_ρ`\n`+ tensor_ρ'`\n`+ the`\n`+ thin_of_isCoseparating_empty`\n`+ thin_of_isSeparating_empty`\n`+ toAbsoluteValue`\n`+ toAdd_list_sum`\n`+ toAdd_multiset_sum`\n`+ toAdd_pow`\n`+ toAdd_prod`\n`+ toAdd_zpow`\n`+ toClosureOperator`\n`+ toDualLeft`\n`+ toDualLeft_apply`\n`+ toDualLeft_of_toDualRight_symm`\n`+ toDualRight`\n`+ toDualRight_apply`\n`+ toDualRight_symm_comp_toDualLeft`\n`+ toDualRight_symm_toDualLeft`\n`+ toDual_bot`\n`+ toDual_top`\n`+ toEndHom`\n`+ toEndHom_apply`\n`+ toEndHom_trivial_of_mem`\n`+ toFinset_prod_dvd_prod`\n`+ toFinset_sum_count_eq`\n`+ toFinset_sum_count_nsmul_eq`\n`+ toFun'`\n`+ toLin_apply`\n`+ toModule_totalize_of_le`\n`+ toMonoidHom`\n`+ toMonoidWithZeroHom`\n`+ toMul_list_sum`\n`+ toMul_multiset_sum`\n`+ toMul_sum`\n`+ toNNReal_apply_of_tsum_ne_top`\n`+ toNonneg`\n`+ toNonneg_coe`\n`+ toNonneg_le`\n`+ toNonneg_lt`\n`+ toNonneg_of_nonneg`\n`+ toPartENat`\n`+ toPartENat_apply_of_aleph0_le`\n`+ toPartENat_apply_of_lt_aleph0`\n`+ toPartENat_cast`\n`+ toPartENat_congr`\n`+ toPartENat_eq_iff_of_le_aleph0`\n`+ toPartENat_eq_top`\n`+ toPartENat_eq_top_iff_le_aleph0`\n`+ toPartENat_le_iff_of_le_aleph0`\n`+ toPartENat_le_iff_of_lt_aleph0`\n`+ toPartENat_lift`\n`+ toPartENat_mono`\n`+ toPartENat_natCast`\n`+ toPartENat_strictMonoOn`\n`+ toPartENat_surjective`\n`+ toPartialEquiv_coe`\n`+ toPartialEquiv_coe_symm`\n`+ toPerfectPairing`\n`+ toPrimeSpectrum`\n`+ toPrimeSpectrum_continuous`\n`+ toPrimeSpectrum_injective`\n`+ toPrimeSpectrum_range`\n`+ toSubalgebra_iSup_of_directed`\n`+ top`\n`+ topEquiv`\n`+ topOrderOrNoTopOrder`\n`+ top_apply`\n`+ top_def`\n`+ top_eq_true`\n`+ top_inf_eq`\n`+ top_le_iff`\n`+ top_map`\n`+ top_ne_bot`\n`+ top_not_mem_iff`\n`+ top_sup_eq`\n`+ top_toSubalgebra`\n`+ top_toSubfield`\n`+ top_unique`\n`+ total_of`\n`+ totalize`\n`+ totalize_of_le`\n`+ totalize_of_not_le`\n`+ tprod_mul_tprod`\n`+ transEventuallyEqIsBigO`\n`+ transEventuallyEqIsLittleO`\n`+ transIsBigOEventuallyEq`\n`+ transIsBigOIsBigO`\n`+ transIsBigOIsLittleO`\n`+ transIsLittleOEventuallyEq`\n`+ transIsLittleOIsBigO`\n`+ transIsLittleOIsLittleO`\n`+ trans_dualMap_symm_flip`\n`+ trans_dvd`\n`+ trans_of`\n`+ transcendental`\n`+ transcendental_X`\n`+ transcendental_aeval_iff`\n`+ transcendental_algebraMap_iff`\n`+ transcendental_iff`\n`+ transcendental_iff_injective`\n`+ transcendental_iff_ker_eq_bot`\n`+ transcendental_polynomial_aeval_X`\n`+ transcendental_polynomial_aeval_X_iff`\n`+ transcendental_ringHom_iff_of_comp_eq`\n`+ transcendental_supported_X`\n`+ transcendental_supported_X_iff`\n`+ transcendental_supported_polynomial_aeval_X`\n`+ transcendental_supported_polynomial_aeval_X_iff`\n`+ triangleOpEquivalence`\n`+ trichotomous`\n`+ trichotomous_of`\n`+ trivial`\n`+ truncateToReal`\n`+ truncateToReal_eq_toReal`\n`+ truncateToReal_le`\n`+ truncateToReal_nonneg`\n`+ tsub_div`\n`+ tsum_add`\n`+ tsum_add_one_eq_top`\n`+ tsum_apply`\n`+ tsum_biUnion_le`\n`+ tsum_biUnion_le_tsum`\n`+ tsum_coe_eq`\n`+ tsum_coe_eq_top_iff_not_summable_coe`\n`+ tsum_coe_ne_top_iff_summable`\n`+ tsum_coe_ne_top_iff_summable_coe`\n`+ tsum_comm`\n`+ tsum_comp_le_tsum_of_injective`\n`+ tsum_const_eq_top_of_ne_zero`\n`+ tsum_const_smul`\n`+ tsum_eq_iSup_nat`\n`+ tsum_eq_iSup_nat'`\n`+ tsum_eq_iSup_sum`\n`+ tsum_eq_iSup_sum'`\n`+ tsum_eq_liminf_sum_nat`\n`+ tsum_eq_limsup_sum_nat`\n`+ tsum_eq_toNNReal_tsum`\n`+ tsum_eq_top_of_eq_top`\n`+ tsum_eq_zero`\n`+ tsum_fiberwise`\n`+ tsum_iSup_eq`\n`+ tsum_iUnion_le`\n`+ tsum_iUnion_le_tsum`\n`+ tsum_indicator_ne_zero`\n`+ tsum_le_tsum`\n`+ tsum_le_tsum_comp_of_surjective`\n`+ tsum_mono_subtype`\n`+ tsum_pos`\n`+ tsum_prod`\n`+ tsum_prod'`\n`+ tsum_sigma`\n`+ tsum_sigma'`\n`+ tsum_strict_mono`\n`+ tsum_sub`\n`+ tsum_toNNReal_eq`\n`+ tsum_toReal_eq`\n`+ tsum_top`\n`+ tsum_union_le`\n`+ tsupport_mul_subset_left`\n`+ tsupport_mul_subset_right`\n`+ tsupport_smul_subset_left`\n`+ tsupport_smul_subset_right`\n`+ two_dvd_ne_zero`\n`+ two_mul_ediv_two_of_even`\n`+ two_not_dvd_two_mul_add_one`\n`+ u_biSup_l`\n`+ u_biSup_of_lu_eq_self`\n`+ u_bot`\n`+ u_comm_of_l_comm`\n`+ u_eq`\n`+ u_eq_top`\n`+ u_iInf`\n`+ u_iInf_l`\n`+ u_iInf₂`\n`+ u_iSup_l`\n`+ u_iSup_of_lu_eq_self`\n`+ u_inf`\n`+ u_inf_l`\n`+ u_injective`\n`+ u_l_eq`\n`+ u_l_leftInverse`\n`+ u_l_u_eq_u`\n`+ u_l_u_eq_u'`\n`+ u_le_u_iff`\n`+ u_sInf`\n`+ u_sInf_l_image`\n`+ u_sSup_l_image`\n`+ u_sup_l`\n`+ u_surjective`\n`+ u_top`\n`+ u_unique`\n`+ uniform_embedding_add_rat`\n`+ uniform_embedding_mul_rat`\n`+ union_zeroLocus`\n`+ unique`\n`+ uniqueDiffOn`\n`+ uniqueDiffOn_extChartAt_target`\n`+ uniqueDiffOn_preimage`\n`+ uniqueDiffOn_preimage_source`\n`+ uniqueDiffWithinAt_extChartAt_target`\n`+ uniqueDiffWithinAt_image`\n`+ uniqueUnits`\n`+ unique_diff`\n`+ unique_diff_at_image`\n`+ unique_diff_preimage`\n`+ unique_diff_preimage_source`\n`+ unit_associated_one`\n`+ units_eq_one`\n`+ units_natAbs`\n`+ unop_distinguished`\n`+ unop_list_prod`\n`+ unop_map_list_prod`\n`+ unop_sum`\n`+ up_bot`\n`+ up_top`\n`+ upperBounds_l_image`\n`+ vanishingIdeal`\n`+ vanishingIdeal_anti_mono`\n`+ vanishingIdeal_anti_mono_iff`\n`+ vanishingIdeal_closure`\n`+ vanishingIdeal_empty`\n`+ vanishingIdeal_eq_top_iff`\n`+ vanishingIdeal_iUnion`\n`+ vanishingIdeal_irreducibleComponents`\n`+ vanishingIdeal_isClosed_isIrreducible`\n`+ vanishingIdeal_isIrreducible`\n`+ vanishingIdeal_mem_minimalPrimes`\n`+ vanishingIdeal_range_comap`\n`+ vanishingIdeal_singleton`\n`+ vanishingIdeal_strict_anti_mono_iff`\n`+ vanishingIdeal_union`\n`+ vanishingIdeal_zeroLocus_eq_radical`\n`+ wellPowered_of_isDetecting`\n`+ wellPowered_of_isDetector`\n`+ wellPowered_of_isSeparator`\n`+ whiskerLeft_obj_map_bijective_of_isCoverDense`\n`+ writtenInExtChartAt`\n`+ writtenInExtChartAt_chartAt`\n`+ writtenInExtChartAt_chartAt_comp`\n`+ writtenInExtChartAt_chartAt_symm`\n`+ writtenInExtChartAt_chartAt_symm_comp`\n`+ writtenInExtChartAt_extChartAt`\n`+ writtenInExtChartAt_extChartAt_symm`\n`+ w₀`\n`+ zeroHomClass`\n`+ zeroLocus`\n`+ zeroLocus_anti_mono`\n`+ zeroLocus_anti_mono_ideal`\n`+ zeroLocus_bUnion`\n`+ zeroLocus_bot`\n`+ zeroLocus_empty`\n`+ zeroLocus_empty_iff_eq_top`\n`+ zeroLocus_empty_of_one_mem`\n`+ zeroLocus_eq_iff`\n`+ zeroLocus_eq_top_iff`\n`+ zeroLocus_iSup`\n`+ zeroLocus_iUnion`\n`+ zeroLocus_iUnion₂`\n`+ zeroLocus_ideal_mem_irreducibleComponents`\n`+ zeroLocus_inf`\n`+ zeroLocus_minimalPrimes`\n`+ zeroLocus_mul`\n`+ zeroLocus_pow`\n`+ zeroLocus_radical`\n`+ zeroLocus_singleton_mul`\n`+ zeroLocus_singleton_one`\n`+ zeroLocus_singleton_pow`\n`+ zeroLocus_singleton_zero`\n`+ zeroLocus_span`\n`+ zeroLocus_subset_zeroLocus_iff`\n`+ zeroLocus_subset_zeroLocus_singleton_iff`\n`+ zeroLocus_sup`\n`+ zeroLocus_union`\n`+ zeroLocus_univ`\n`+ zeroLocus_vanishingIdeal_eq_closure`\n`+ zero_comp`\n`+ zero_compl`\n`+ zero_hom`\n`+ zero_iff_lTensor_zero`\n`+ zero_iff_rTensor_zero`\n`+ zpow_add_period_smul`\n`+ zpow_mod_period_smul`\n`+ zpow_period_add_smul`\n`+ zpow_smul_eq_iff_minimalPeriod_dvd`\n`+ zpow_smul_eq_iff_period_dvd`\n`+ zpow_smul_mod_minimalPeriod`\n`+ zsmul_int_int`\n`+ zsmul_int_one`\n`+ ι_desc`\n`+ ρAut`\n`+ ρ_one`\n`+ φ`\n`+ ⟨Finite.of_inv,`\n`+ ⟨Finite.of_smul_set,`\n`+ ⟨_,`\n`++ Augmented`\n`++ Hom`\n`++ Simps.apply`\n`++ Truncated`\n`++ abs_abv_sub_le_abv_sub`\n`++ add`\n`++ addMonoidWithOne`\n`++ ae_ae_of_ae_compProd`\n`++ ae_compProd_iff`\n`++ ae_compProd_of_ae_ae`\n`++ algEquiv`\n`++ algEquivEquivAlgHom`\n`++ algEquiv_apply`\n`++ augment`\n`++ augment_hom_zero`\n`++ coe_bot`\n`++ coe_one`\n`++ coe_top`\n`++ coe_tsum`\n`++ coe_zero`\n`++ comap`\n`++ comap_id`\n`++ commRing`\n`++ commSemiring`\n`++ compProd`\n`++ compProd_add_left`\n`++ compProd_add_right`\n`++ compProd_apply`\n`++ compProd_zero_left`\n`++ compProd_zero_right`\n`++ comp_C_integral_of_surjective_of_isJacobsonRing`\n`++ const`\n`++ continuousOn_toReal`\n`++ continuous_coe`\n`++ continuous_coe_iff`\n`++ counitIso`\n`++ diagonal`\n`++ drop`\n`++ dvd_prod`\n`++ embedding_coe`\n`++ eqToIso`\n`++ eqToIso_refl`\n`++ exists_of`\n`++ extendScalars_inf`\n`++ extendScalars_self`\n`++ extendScalars_sup`\n`++ extendScalars_top`\n`++ faithful_sheafPushforwardContinuous`\n`++ field`\n`++ flip`\n`++ flip_flip`\n`++ forget`\n`++ fst_prod`\n`++ full_sheafPushforwardContinuous`\n`++ functor`\n`++ gc`\n`++ hasSum_coe`\n`++ hasSum_iff_tendsto_nat`\n`++ hasSum_lt`\n`++ iInf_localization_eq_bot`\n`++ inhabited`\n`++ injective`\n`++ instAddCommMonoid`\n`++ instAddCommSemigroup`\n`++ instAddMonoid`\n`++ instAddSemigroup`\n`++ instBot`\n`++ instCommSemigroup`\n`++ instMonoid`\n`++ instSemigroup`\n`++ instTop`\n`++ instance :`\n`++ instance : Category (Augmented C) := by`\n`++ instance : Inhabited (DirectLimit G f)`\n`++ instance {J : Type v} [SmallCategory J] [HasColimitsOfShape J C] :`\n`++ instance {J : Type v} [SmallCategory J] [HasLimitsOfShape J C] :`\n`++ instance {J : Type w₁} [Category.{w₂} J] (F : J ⥤ Action V G) :`\n`++ instance {J : Type w₁} [Category.{w₂} J] :`\n`++ instance {n : ℕ} : Category (Truncated C n) := by`\n`++ instance {n} {J : Type v} [SmallCategory J] [HasColimitsOfShape J C] :`\n`++ instance {n} {J : Type v} [SmallCategory J] [HasLimitsOfShape J C] :`\n`++ integrable_compProd_iff`\n`++ integral_compProd`\n`++ inverse`\n`++ isBigOWith_principal`\n`++ isBigO_principal`\n`++ isEmbedding_coe`\n`++ isIntegral_isLocalization_polynomial_quotient`\n`++ isMaximal_comap_C_of_isMaximal`\n`++ isOpenEmbedding_coe`\n`++ isOpen_Ico_zero`\n`++ jacobson`\n`++ jacobson_bot_of_integral_localization`\n`++ le_iff_lt_or_eq`\n`++ liftBoundedOrder`\n`++ liftCompleteLattice`\n`++ liftLattice`\n`++ liftSemilatticeInf`\n`++ liftSemilatticeSup`\n`++ lintegral_compProd`\n`++ ltByCases`\n`++ lt_or_eq_of_le`\n`++ map_inf`\n`++ map_list_prod`\n`++ map_neg`\n`++ mem_jacobson_iff`\n`++ mem_sum`\n`++ mk`\n`++ mk_eq_one`\n`++ mk_eq_zero`\n`++ mk_mul_mk`\n`++ mk_pow`\n`++ module`\n`++ mulEquiv`\n`++ ne_zero`\n`++ nhds_coe`\n`++ nhds_coe_coe`\n`++ nhds_top`\n`++ nhds_top'`\n`++ nhds_top_basis`\n`++ nhds_zero`\n`++ nhds_zero_basis`\n`++ nontrivial`\n`++ of.zero_exact_aux`\n`++ ofMulAction`\n`++ ofMulAction_apply`\n`++ openEmbedding_coe`\n`++ orderBot`\n`++ point`\n`++ presheafIso`\n`++ prod_bijective`\n`++ prod_const`\n`++ prod_dite_eq`\n`++ prod_dite_eq'`\n`++ prod_dvd_prod_of_dvd`\n`++ prod_empty`\n`++ prod_eq_foldl`\n`++ prod_eq_foldr`\n`++ prod_eq_pow_card`\n`++ prod_eq_pow_single`\n`++ prod_equiv`\n`++ prod_fiberwise`\n`++ prod_fiberwise'`\n`++ prod_filter_mul_prod_filter_not`\n`++ prod_hom`\n`++ prod_hom₂`\n`++ prod_induction_nonempty`\n`++ prod_ite_eq`\n`++ prod_ite_eq'`\n`++ prod_ite_mem`\n`++ prod_map_eq_pow_single`\n`++ prod_map_erase`\n`++ prod_map_mul`\n`++ prod_map_one`\n`++ prod_pair`\n`++ prod_pi_mulSingle`\n`++ prod_pi_mulSingle'`\n`++ prod_range_div`\n`++ prod_range_div'`\n`++ prod_range_succ`\n`++ prod_range_succ'`\n`++ prod_replicate`\n`++ prod_subset`\n`++ quotient_mk_comp_C_isIntegral_of_isJacobsonRing`\n`++ refl`\n`++ ring`\n`++ self`\n`++ semiring`\n`++ setIntegral_compProd`\n`++ setLIntegral_compProd`\n`++ set_integral_compProd`\n`++ set_lintegral_compProd`\n`++ sheafIso`\n`++ snd_prod`\n`++ sub`\n`++ sum_const_nat`\n`++ tendsto_sum_nat_add`\n`++ tendsto_toReal`\n`++ tendsto_tsum_compl_atTop_zero`\n`++ toArrow`\n`++ truncation`\n`++ tsum_comp_le_tsum_of_inj`\n`++ tsum_eq_add_tsum_ite`\n`++ tsum_le_of_sum_range_le`\n`++ tsum_lt_tsum`\n`++ tsum_mul_left`\n`++ tsum_mul_right`\n`++ unitIso`\n`++ whiskeringObj`\n`++ zariskiTopology`\n`++ δ`\n`++ δ_comp_δ`\n`++ δ_comp_δ'`\n`++ δ_comp_δ''`\n`++ δ_comp_δ_self`\n`++ δ_comp_δ_self'`\n`++ δ_comp_σ_of_gt`\n`++ δ_comp_σ_of_gt'`\n`++ δ_comp_σ_of_le`\n`++ δ_comp_σ_self`\n`++ δ_comp_σ_self'`\n`++ δ_comp_σ_succ`\n`++ δ_comp_σ_succ'`\n`++ δ_naturality`\n`++ σ`\n`++ σ_comp_σ`\n`++ σ_naturality`\n`+++ DirectLimit`\n`+++ congr`\n`+++ congr_apply_of`\n`+++ congr_symm_apply_of`\n`+++ id`\n`+++ induction_on`\n`+++ instBoundedOrder`\n`+++ instCommMonoid`\n`+++ isBigOWith_congr`\n`+++ isBigO_congr`\n`+++ isLittleO_congr`\n`+++ lift`\n`+++ lift_injective`\n`+++ lift_of`\n`+++ lift_unique`\n`+++ map_apply_of`\n`+++ map_zero`\n`+++ mul`\n`+++ of.zero_exact`\n`+++ of_f`\n`+++ one`\n`+++ pow`\n`+++ prod_cons`\n`+++ prod_eq_one`\n`+++ prod_erase`\n`+++ prod_hom_rel`\n`+++ prod_induction`\n`+++ prod_int_mod`\n`+++ prod_nat_mod`\n`+++ prod_singleton`\n`+++ sum_int_mod`\n`+++ sum_nat_mod`\n`+++ symm`\n`+++ tendsto_coe`\n`+++ zero`\n`++++ instOrderBot`\n`++++ instOrderTop`\n`++++ map_comp`\n`++++ map_id`\n`++++ of`\n`++++ trans`\n`+++++ ext`\n`+++++ prod`\n`++++++ whiskering`\n`+++++++ comp`\n`+++++++ hom_ext`\n`++++++++ map`\n`+++++++++++++ _`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>\n\n---\n\n<details><summary>Increase in tech debt: (relative, absolute) = (2.46, 0.28)</summary>\n\n|Current number|Change|Type|\n|-:|:-:|:-|\n|4680|112|porting notes|\n|204|3|disabled simpNF lints|\n|1449|36|erw|\n|12|1|maxHeartBeats modifications|\n|62|4|large files|\n|115|8|bare open (scoped) Classical|\n\nCurrent commit [3e67068e2a](https://github.com/leanprover-community/mathlib4/commit/3e67068e2ab3b4756322d4bd917a6d8964534be6)\nReference commit [f033341c29](https://github.com/leanprover-community/mathlib4/commit/f033341c29027b524efda42ef0e579be9fbb786f)\n\nYou can run this locally as\n```\n./scripts/technical-debt-metrics.sh pr_summary\n```\n* The `relative` value is the weighted *sum* of the differences with weight given by the *inverse* of the current value of the statistic.\n* The `absolute` value is the `relative` value divided by the total sum of the inverses of the current values (i.e. the weighted *average* of the differences).\n</details>\n",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6bUISH",
              "createdAt": "2025-01-21T21:10:00Z",
              "body": "oops, git was telling me something about unrelated histories and now there are 93 files changed... I'll just reopen the pull request if I don't manage to fix this here",
              "author": {
                "login": "Bergschaf"
              }
            }
          ]
        }
      }
    }
  }
}
