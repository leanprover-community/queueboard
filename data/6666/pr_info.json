{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 104,
        "assignees": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjIxMTY1NzA=",
              "login": "Vierkantor"
            }
          ]
        },
        "author": {
          "login": "ocfnash"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "---\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n-->\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 3,
        "closed": true,
        "closedAt": "2023-08-22T11:24:09Z",
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c5kh99S",
              "body": "Thank you for the review!",
              "createdAt": "2023-08-21T16:15:28Z",
              "author": {
                "login": "ocfnash"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5knAUh",
              "body": ":v: ocfnash can now approve this pull request. To approve and merge a pull request, simply reply with `bors r+`. More detailed instructions are available [here](https://bors.tech/documentation/getting-started/#reviewing-pull-requests).",
              "createdAt": "2023-08-22T10:44:10Z",
              "author": {
                "login": "bors"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5knEFn",
              "body": "bors merge",
              "createdAt": "2023-08-22T10:55:56Z",
              "author": {
                "login": "ocfnash"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5knNVC",
              "body": "Pull request successfully merged into master.\n\n  Build succeeded!\n\n  The publicly hosted instance of bors-ng is deprecated and will go away soon.\n\n  If you want to self-host your own instance, [instructions are here][instructions].\n  For more help, visit [the forum].\n\n  If you want to switch to GitHub's built-in merge queue, visit [their help page][gh].\n\n  [instructions]: https://github.com/bors-ng/bors-ng#how-to-set-up-your-own-real-instance\n  [the forum]: https://forum.bors.tech\n  [gh]: https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/configuring-pull-request-merges/managing-a-merge-queue\n\n\n\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/5937853340/job/16101111534)\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/5937853340/job/16101112015)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/5937853340/job/16101112229)",
              "createdAt": "2023-08-22T11:24:08Z",
              "author": {
                "login": "bors"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "0af6f5473722af6bdea4fcb8c9b7cddcf4ae8959",
                "additions": 79,
                "deletions": 0,
                "committedDate": "2023-08-18T15:32:15Z",
                "author": {
                  "name": "Oliver Nash",
                  "email": "github@olivernash.org"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "103bf6f454f20b87763e3ae0bdcf94d14af79a7b",
                "additions": 3,
                "deletions": 4,
                "committedDate": "2023-08-18T16:17:30Z",
                "author": {
                  "name": "Oliver Nash",
                  "email": "github@olivernash.org"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "50d00b6389ea0a6cc0ba2a1a5fe4ebc0331d2005",
                "additions": 6,
                "deletions": 7,
                "committedDate": "2023-08-21T15:40:37Z",
                "author": {
                  "name": "Oliver Nash",
                  "email": "github@olivernash.org"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "a6f4c9dcd3ff4221723771f791272ee8aa2de70c",
                "additions": 12,
                "deletions": 13,
                "committedDate": "2023-08-21T16:07:47Z",
                "author": {
                  "name": "Oliver Nash",
                  "email": "github@olivernash.org"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "fd4a7cfd3442175acc9501a8b13597a104851ca9",
                "additions": 4,
                "deletions": 4,
                "committedDate": "2023-08-21T16:13:38Z",
                "author": {
                  "name": "Oliver Nash",
                  "email": "github@olivernash.org"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "b4d6ff93e3a43f94679a9af3974a5f512536129f",
                "additions": 2,
                "deletions": 4,
                "committedDate": "2023-08-22T07:25:42Z",
                "author": {
                  "name": "Oliver Nash",
                  "email": "github@olivernash.org"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "2510601fa8b30e250960c4e9f046fc6c23557288",
                "additions": 2,
                "deletions": 2,
                "committedDate": "2023-08-22T08:04:32Z",
                "author": {
                  "name": "Oliver Nash",
                  "email": "github@olivernash.org"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "9fe3f0b3df84c7a700f350cf984d63e564daeacd",
                "additions": 47,
                "deletions": 18,
                "committedDate": "2023-08-22T10:27:58Z",
                "author": {
                  "name": "Oliver Nash",
                  "email": "github@olivernash.org"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "7aee85dd892b233be5252605a4cc0b0a25acdc15",
                "additions": 1,
                "deletions": 0,
                "committedDate": "2023-08-22T10:30:17Z",
                "author": {
                  "name": "Oliver Nash",
                  "email": "github@olivernash.org"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "46c2c88affeab5d242f0fbc48a824012b77917f7",
                "additions": 1,
                "deletions": 1,
                "committedDate": "2023-08-22T10:32:20Z",
                "author": {
                  "name": "Oliver Nash",
                  "email": "github@olivernash.org"
                },
                "statusCheckRollup": null
              }
            }
          ]
        },
        "createdAt": "2023-08-18T15:36:59Z",
        "deletions": 0,
        "files": {
          "nodes": [
            {
              "path": "Mathlib.lean",
              "additions": 1,
              "deletions": 0
            },
            {
              "path": "Mathlib/LinearAlgebra/FreeModule/PID.lean",
              "additions": 56,
              "deletions": 0
            },
            {
              "path": "Mathlib/LinearAlgebra/PID.lean",
              "additions": 47,
              "deletions": 0
            }
          ]
        },
        "headRefName": "ocfnash/restr_killing",
        "headRefOid": "46c2c88affeab5d242f0fbc48a824012b77917f7",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c5YQp0T",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c8AAAABAt13Ow",
              "color": "bfd4f2",
              "name": "delegated"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
              "color": "06e039",
              "name": "ready-to-merge"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABViJjTQ",
              "color": "33DBEC",
              "name": "t-algebra"
            }
          ]
        },
        "latestReviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5euF0C",
              "body": "Thanks!\r\n\r\nbors d+",
              "state": "APPROVED",
              "author": {
                "login": "Vierkantor"
              },
              "submittedAt": "2023-08-22T10:44:08Z"
            }
          ]
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "UNKNOWN",
        "mergeable": "UNKNOWN",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 6666,
        "potentialMergeCommit": null,
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": "APPROVED",
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5emNvA",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "Vierkantor"
              },
              "submittedAt": "2023-08-21T14:24:33Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5em_BB",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "ocfnash"
              },
              "submittedAt": "2023-08-21T15:26:02Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5enBIq",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "ocfnash"
              },
              "submittedAt": "2023-08-21T15:30:34Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5enCY6",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "ocfnash"
              },
              "submittedAt": "2023-08-21T15:33:20Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5enFmO",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "ocfnash"
              },
              "submittedAt": "2023-08-21T15:37:57Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5enWR7",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "ocfnash"
              },
              "submittedAt": "2023-08-21T16:01:27Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5enYeg",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "ocfnash"
              },
              "submittedAt": "2023-08-21T16:06:50Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5esN9O",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "ocfnash"
              },
              "submittedAt": "2023-08-22T07:27:05Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5esONF",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "ocfnash"
              },
              "submittedAt": "2023-08-22T07:27:38Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5etqmR",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "Vierkantor"
              },
              "submittedAt": "2023-08-22T09:53:03Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5etr4F",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "Vierkantor"
              },
              "submittedAt": "2023-08-22T09:55:13Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5euBV9",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "ocfnash"
              },
              "submittedAt": "2023-08-22T10:32:54Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5euFqW",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "Vierkantor"
              },
              "submittedAt": "2023-08-22T10:43:46Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5euF0C",
              "body": "Thanks!\r\n\r\nbors d+",
              "state": "APPROVED",
              "author": {
                "login": "Vierkantor"
              },
              "submittedAt": "2023-08-22T10:44:08Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5euKjb",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "ocfnash"
              },
              "submittedAt": "2023-08-22T10:55:50Z"
            }
          ]
        },
        "reviewThreads": {
          "nodes": [
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5Nfucu",
                    "body": "I'm a bit skeptical about this extra import: it feels like we're bringing in quite a bit of theory that would not be needed to simply define the trace. What do you think of putting your additions in a new file?",
                    "createdAt": "2023-08-21T14:05:42Z",
                    "author": {
                      "login": "Vierkantor"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5NgN1r",
                    "body": "I had the same concern but I couldn't quite convince myself that such a file had a future beyond this little lemma.\r\n\r\nHowever, I'm really on the fence: if you think a new file is better, I'll happily take that approach.",
                    "createdAt": "2023-08-21T15:33:19Z",
                    "author": {
                      "login": "ocfnash"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5NkaSg",
                    "body": "I agree the tradeoff is not obviously on either the splitter or the merger side. In this case, splitting files is going to be cheaper to undo (move the imports and declarations into one file) compared to merging (where you'd have to determine per declaration which file would be most appropriate), so I'd advocate splitting when in doubt.\r\n\r\nThis is actually something I learned from Linus Torvalds: if a choice is unclear, go for the one that is easiest to revert :)",
                    "createdAt": "2023-08-22T09:53:03Z",
                    "author": {
                      "login": "Vierkantor"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5NknHP",
                    "body": "OK I've split it out!",
                    "createdAt": "2023-08-22T10:32:54Z",
                    "author": {
                      "login": "ocfnash"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5NfvaH",
                    "body": "Is using `hf'` as well as `hf` intended to help the reader? Or is there a technical reason? (Also below.)",
                    "createdAt": "2023-08-21T14:08:39Z",
                    "author": {
                      "login": "Vierkantor"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5NgNB2",
                    "body": "The reason for `hf'` here (and below) is that I need this hypothesis in the lemma statement since this is what is demanded by `LinearMap.restrict`.\r\n\r\nHowever for the lemma to be true we need the stronger hypothesis `hf` so I have made `hf'` an `optParam` and the user can ignore it. The alternative would be to inline the proof appearing in `hf'` into the lemma statement (i.e., inside the call to `LinearMap.restrict`) but I think this would make for a slightly inferior lemma statement since what I have is true for any `Prop` of this type so I think this lemma should behave better in rewrites, for example.",
                    "createdAt": "2023-08-21T15:30:34Z",
                    "author": {
                      "login": "ocfnash"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5NjfGf",
                    "body": "For emphasis: `hf` is stronger because it quantifies over all of `M` whereas `hf'` only quantifies over `N`.",
                    "createdAt": "2023-08-22T07:27:38Z",
                    "author": {
                      "login": "ocfnash"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5NkbM3",
                    "body": "> I think this lemma should behave better in rewrites\r\n\r\nRewrites were indeed what I was thinking of with \"technical reason\". However, Eric Wieser demonstrated to me that `rw` and `simp` have no problem seeing through `Prop`s, so this kind of `optParam` trick is not needed. I agree though that `hf'` makes for better reading, so I suppose it's fine like this.",
                    "createdAt": "2023-08-22T09:55:13Z",
                    "author": {
                      "login": "Vierkantor"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5Nfx7Y",
                    "body": "I'm surprised that this takes so much work, since we already have the field `snf : ∀ (i : Fin n), ↑(↑bN i) = a i • ↑bM (↑f i)`. Maybe there's some general theorem about bases waiting to be extracted? (I can try doing so tomorrow.)",
                    "createdAt": "2023-08-21T14:16:34Z",
                    "author": {
                      "login": "Vierkantor"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5NgPHO",
                    "body": "I don't see a result to extract but of course it would be great if you find one!\r\n\r\nAlso this is only a 11-line proof and there is some genuine content here.",
                    "createdAt": "2023-08-21T15:37:56Z",
                    "author": {
                      "login": "ocfnash"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5Nkp0y",
                    "body": "I still think there is something to be extracted here, but about an hour of trying didn't give me anything sensible. So it's probably not worth trying further right now.",
                    "createdAt": "2023-08-22T10:43:46Z",
                    "author": {
                      "login": "Vierkantor"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5NktJY",
                    "body": "Thank you for taking the time to look for this, I really appreciate it!",
                    "createdAt": "2023-08-22T10:55:49Z",
                    "author": {
                      "login": "ocfnash"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5NfzGp",
                    "body": "I would suggest to put this result before `repr_comp_embedding_eq_smul`, so that the proof of `repr_comp_embedding_eq_smul` can look something like `by ext; simp [repr_apply_embedding_eq_repr_smul, mul_comm]` (hopefully!)",
                    "createdAt": "2023-08-21T14:20:10Z",
                    "author": {
                      "login": "Vierkantor"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5NgX_T",
                    "body": "OK I've inverted the order of these two lemmas. Again, unfortunately `Pi.smul_apply` will only fire with `rw` so the closest we can get to what you outlined is: `ext; simp [mul_comm _ (snf.a _)]; rfl` but I feel its better to use a lemma rather than `rfl` so I've used rewrite proof.",
                    "createdAt": "2023-08-21T16:06:50Z",
                    "author": {
                      "login": "ocfnash"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5NfzS9",
                    "body": "This lemma can be moved next to `repr_eq_zero_of_nmem_range` since it is a direct corollary; that avoids the interruption by `repr_comp_embedding`.",
                    "createdAt": "2023-08-21T14:20:33Z",
                    "author": {
                      "login": "Vierkantor"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5NgWEy",
                    "body": "OK done!\r\n\r\nWe can either group things together according to `i ∉ Set.range snf.f` or whether we're building API for `Basis.repr` / `Basis.coord`: both makes sense!",
                    "createdAt": "2023-08-21T16:01:27Z",
                    "author": {
                      "login": "ocfnash"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5Nf0MX",
                    "body": "It looks like you use only `simp` lemmas here. Can this just be:\r\n```suggestion\r\n  simp\r\n```",
                    "createdAt": "2023-08-21T14:23:09Z",
                    "author": {
                      "login": "Vierkantor"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5NgLqF",
                    "body": "Sadly no; I too would like if this could be just `simp`.\r\n\r\nThe first issue is minor: we need to make sure `smul_eq_mul` and `Algebra.id.smul_eq_mul` don't fire (or else we need to rethink our simp set elsewhere). However `simp [-smul_eq_mul, -Algebra.id.smul_eq_mul]` still fails because `simp` won't fire `Pi.smul_apply`. I don't know why!\r\n\r\nFor emphasis: even replacing the `rw` with `simp only`, everything fires except `Pi.smul_apply`.\r\n",
                    "createdAt": "2023-08-21T15:26:02Z",
                    "author": {
                      "login": "ocfnash"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5Nje8K",
                    "body": "Got it to work at the cost of having to feed in `Pi.smul_apply _` to `simp`.",
                    "createdAt": "2023-08-22T07:27:05Z",
                    "author": {
                      "login": "ocfnash"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5Nf0pz",
                    "body": "I like how this proof explains itself!",
                    "createdAt": "2023-08-21T14:24:30Z",
                    "author": {
                      "login": "Vierkantor"
                    }
                  }
                ]
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjc3MzQzNjQ=",
              "login": "ocfnash"
            },
            {
              "id": "MDQ6VXNlcjIxMTY1NzA=",
              "login": "Vierkantor"
            },
            {
              "id": "U_kgDOB75MNQ",
              "login": "leanprover-community-mathlib4-bot"
            }
          ]
        },
        "state": "CLOSED",
        "statusCheckRollup": null,
        "title": "[Merged by Bors] - feat: lemmas about Smith normal form and trace of restriction",
        "updatedAt": "2023-08-22T11:24:13Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/6666",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "0af6f5473722af6bdea4fcb8c9b7cddcf4ae8959"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5urma4zwAAAAJb3xvg",
              "createdAt": "2023-08-18T15:36:59Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5urma4zwAAAAJb3xvm",
              "createdAt": "2023-08-18T15:36:59Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKteTVQ",
                "name": "awaiting-CI"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5urma4zwAAAAJb3xvt",
              "createdAt": "2023-08-18T15:36:59Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABViJjTQ",
                "name": "t-algebra"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "103bf6f454f20b87763e3ae0bdcf94d14af79a7b"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5urma4zwAAAAJb5tOr",
              "createdAt": "2023-08-18T16:42:44Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKteTVQ",
                "name": "awaiting-CI"
              }
            },
            {
              "__typename": "ReviewRequestedEvent",
              "id": "RRE_lADOFcwZ1c5urma4zwAAAAJcJm4H",
              "createdAt": "2023-08-19T12:20:31Z",
              "requestedReviewer": {
                "id": "MDQ6VXNlcjIxMTY1NzA=",
                "login": "Vierkantor"
              }
            },
            {
              "__typename": "AssignedEvent",
              "id": "AE_lADOFcwZ1c5urma4zwAAAAJcvXdV",
              "createdAt": "2023-08-21T13:54:57Z",
              "assignee": {
                "id": "MDQ6VXNlcjIxMTY1NzA=",
                "login": "Vierkantor"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5emNvA",
              "createdAt": "2023-08-21T14:05:42Z",
              "body": "",
              "author": {
                "login": "Vierkantor"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5urma4zwAAAAJcwyAA",
              "createdAt": "2023-08-21T14:24:41Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5urma4zwAAAAJcwyAH",
              "createdAt": "2023-08-21T14:24:41Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "50d00b6389ea0a6cc0ba2a1a5fe4ebc0331d2005"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "a6f4c9dcd3ff4221723771f791272ee8aa2de70c"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "fd4a7cfd3442175acc9501a8b13597a104851ca9"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5urma4zwAAAAJc2NCL",
              "createdAt": "2023-08-21T16:15:22Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5urma4zwAAAAJc2NCV",
              "createdAt": "2023-08-21T16:15:22Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5kh99S",
              "createdAt": "2023-08-21T16:15:28Z",
              "body": "Thank you for the review!",
              "author": {
                "login": "ocfnash"
              }
            },
            {
              "__typename": "ReviewRequestedEvent",
              "id": "RRE_lADOFcwZ1c5urma4zwAAAAJc2NeL",
              "createdAt": "2023-08-21T16:15:33Z",
              "requestedReviewer": {
                "id": "MDQ6VXNlcjIxMTY1NzA=",
                "login": "Vierkantor"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "b4d6ff93e3a43f94679a9af3974a5f512536129f"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "2510601fa8b30e250960c4e9f046fc6c23557288"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "9fe3f0b3df84c7a700f350cf984d63e564daeacd"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "7aee85dd892b233be5252605a4cc0b0a25acdc15"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "46c2c88affeab5d242f0fbc48a824012b77917f7"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5euF0C",
              "createdAt": "2023-08-22T10:44:09Z",
              "body": "Thanks!\r\n\r\nbors d+",
              "author": {
                "login": "Vierkantor"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5knAUh",
              "createdAt": "2023-08-22T10:44:10Z",
              "body": ":v: ocfnash can now approve this pull request. To approve and merge a pull request, simply reply with `bors r+`. More detailed instructions are available [here](https://bors.tech/documentation/getting-started/#reviewing-pull-requests).",
              "author": {
                "login": "bors"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5urma4zwAAAAJdZhR6",
              "createdAt": "2023-08-22T10:44:21Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABAt13Ow",
                "name": "delegated"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5urma4zwAAAAJdZhTx",
              "createdAt": "2023-08-22T10:44:21Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5knEFn",
              "createdAt": "2023-08-22T10:55:56Z",
              "body": "bors merge",
              "author": {
                "login": "ocfnash"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5urma4zwAAAAJdZ86t",
              "createdAt": "2023-08-22T10:56:09Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
                "name": "ready-to-merge"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5knNVC",
              "createdAt": "2023-08-22T11:24:08Z",
              "body": "Pull request successfully merged into master.\n\n  Build succeeded!\n\n  The publicly hosted instance of bors-ng is deprecated and will go away soon.\n\n  If you want to self-host your own instance, [instructions are here][instructions].\n  For more help, visit [the forum].\n\n  If you want to switch to GitHub's built-in merge queue, visit [their help page][gh].\n\n  [instructions]: https://github.com/bors-ng/bors-ng#how-to-set-up-your-own-real-instance\n  [the forum]: https://forum.bors.tech\n  [gh]: https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/configuring-pull-request-merges/managing-a-merge-queue\n\n\n\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/5937853340/job/16101111534)\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/5937853340/job/16101112015)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/5937853340/job/16101112229)",
              "author": {
                "login": "bors"
              }
            },
            {
              "__typename": "RenamedTitleEvent"
            },
            {
              "__typename": "ClosedEvent",
              "id": "CE_lADOFcwZ1c5urma4zwAAAAJda-J6",
              "createdAt": "2023-08-22T11:24:09Z"
            },
            {
              "__typename": "HeadRefDeletedEvent",
              "id": "HRDE_lADOFcwZ1c5urma4zwAAAAJda-Sg",
              "createdAt": "2023-08-22T11:24:13Z"
            }
          ]
        }
      }
    }
  }
}
