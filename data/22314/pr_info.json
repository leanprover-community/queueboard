{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 404,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "shetzl"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "Leftmost derivations are often easier to reason about than arbitrary derivations. This PR adds leftmost variants of Rewrites, Produces and Derives to the existing definition of context-free grammars and proves that a string of terminals can be derived iff it can be leftmost derived.\r\n\r\nCo-authored-by: Tobias Leichtfried <tobias.leichtfried@tuwien.ac.at>\r\n\r\n---\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nFor details on the \"pull request lifecycle\" in mathlib, please see:\r\nhttps://leanprover-community.github.io/contribute/index.html\r\n\r\nIn particular, note that most reviewers will only notice your PR\r\nif it passes the continuous integration checks.\r\nPlease ask for help on https://leanprover.zulipchat.com if needed.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nIf you are moving or deleting declarations, please include these lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nMoves:\r\n- Vector.* -> List.Vector.*\r\n- ...\r\n\r\nDeletions:\r\n- Nat.bit1_add_bit1\r\n- ...\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n\r\n-->\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 2,
        "closed": false,
        "closedAt": null,
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c6f_9BY",
              "body": "### PR summary [2f92affdc0](https://github.com/leanprover-community/mathlib4/pull/22314/commits/2f92affdc0b2e4446b6f6ed5c1ffa504210d36a6)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n| `Mathlib.Computability.LeftmostDerivation` (new file)|545|\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ DerivesLeftmost`\n`+ DerivesLeftmost.append_left`\n`+ DerivesLeftmost.append_right`\n`+ DerivesLeftmost.eq_or_head`\n`+ DerivesLeftmost.eq_or_tail`\n`+ DerivesLeftmost.refl`\n`+ DerivesLeftmost.trans`\n`+ DerivesLeftmost.trans_produces`\n`+ ProducesLeftmost`\n`+ ProducesLeftmost.append_left`\n`+ ProducesLeftmost.append_right`\n`+ ProducesLeftmost.single`\n`+ ProducesLeftmost.trans_derivesLeftmost`\n`+ RewritesLeftmost`\n`+ RewritesLeftmost.append_left`\n`+ RewritesLeftmost.append_right`\n`+ RewritesLeftmost.exists_parts`\n`+ RewritesLeftmost.rewrite_terminal`\n`+ RewritesLeftmost.rewritesLeftmost_iff`\n`+ RewritesLeftmost.rewritesLeftmost_of_exists_parts`\n`+ derivesLeftmost_append`\n`+ derivesLeftmost_cons`\n`+ derivesLeftmost_iff`\n`+ derives_cons`\n`+ derives_of_derivesLeftmost`\n`+ produces_of_produces_leftmost`\n`+ rewritesLeftmost_append`\n`+ rewritesLeftmost_cons`\n`+ rewrites_append`\n`+ rewrites_cons`\n`+ rewrites_of_rewritesLeftmost`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>\n\n---\n\n<details><summary>No changes to technical debt.</summary>\n\nYou can run this locally as\n```\n./scripts/technical-debt-metrics.sh pr_summary\n```\n* The `relative` value is the weighted *sum* of the differences with weight given by the *inverse* of the current value of the statistic.\n* The `absolute` value is the `relative` value divided by the total sum of the inverses of the current values (i.e. the weighted *average* of the differences).\n</details>\n",
              "createdAt": "2025-02-26T09:02:57Z",
              "author": {
                "login": "github-actions"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "2f92affdc0b2e4446b6f6ed5c1ffa504210d36a6",
                "additions": 404,
                "deletions": 0,
                "committedDate": "2025-02-26T08:58:11Z",
                "author": {
                  "name": "Stefan Hetzl",
                  "email": "stefan.hetzl@tuwien.ac.at"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIz2Mfag",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13540113531/job/37839118186"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIz_j67Q",
                        "name": "Add ready-to-merge or delegated label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13543267942/job/37848939245"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIz_pxaQ",
                        "name": "Add ready-to-merge or delegated label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13543297676/job/37849035113"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIz2V7og",
                        "name": "Add topic label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13540165492/job/37839272866"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIz2V7yQ",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13540165496/job/37839272905"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIz_j2LA",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13543267936/job/37848938028"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIz_pyoQ",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13543297675/job/37849035425"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIz2V8eA",
                        "name": "post-or-update-summary-comment",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13540165476/job/37839273080"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIz_j0Ug",
                        "name": "Fix style issues from lint",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13543267937/job/37848937554"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIz_pxcg",
                        "name": "Fix style issues from lint",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13543297672/job/37849035122"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIz2Mdpw",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13540113545/job/37839117735"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIz2V7yA",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13540165479/job/37839272904"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIz2Md3A",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13540113531/job/37839117788"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIz2Me-A",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13540113545/job/37839118072"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIz2V9ug",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13540165479/job/37839273402"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIz2MhAA",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13540113531/job/37839118592"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIz2poWg",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13540113545/job/37839595610"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIz2WWOA",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/37839279672"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIz2XrfA",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=22314&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            }
          ]
        },
        "createdAt": "2025-02-26T09:01:50Z",
        "deletions": 0,
        "files": {
          "nodes": [
            {
              "path": "Mathlib.lean",
              "additions": 1,
              "deletions": 0
            },
            {
              "path": "Mathlib/Computability/LeftmostDerivation.lean",
              "additions": 403,
              "deletions": 0
            }
          ]
        },
        "headRefName": "shetzl_leftmost",
        "headRefOid": "2f92affdc0b2e4446b6f6ed5c1ffa504210d36a6",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c6MmXF5",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c8AAAABb5aSCQ",
              "color": "8BBA68",
              "name": "new-contributor"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABgS7AmA",
              "color": "33DBEC",
              "name": "t-computability"
            }
          ]
        },
        "latestReviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c6dm4e0",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "madvorak"
              },
              "submittedAt": "2025-02-26T11:56:16Z"
            }
          ]
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "BLOCKED",
        "mergeable": "MERGEABLE",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 22314,
        "potentialMergeCommit": {
          "oid": "27ac655af7152addf8519ce914609f1341a18021"
        },
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": null,
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c6dmmQf",
              "body": "This is very useful, thanks!\r\n\r\nIf it were up to me, I would avoid using standalone `h` and I would not use `α` for lists. Also `open Symbol` is something I would prefer not to have. However, these are just my personal opinions, no standards!\r\n\r\nFor somewhat less subjective comments, see in the code.",
              "state": "COMMENTED",
              "author": {
                "login": "madvorak"
              },
              "submittedAt": "2025-02-26T11:54:16Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6dm4e0",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "madvorak"
              },
              "submittedAt": "2025-02-26T11:56:16Z"
            }
          ]
        },
        "reviewThreads": {
          "nodes": [
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c51gYbO",
                    "body": "`T N : Type*`",
                    "createdAt": "2025-02-26T11:29:00Z",
                    "author": {
                      "login": "madvorak"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c51gY00",
                    "body": "The style seems to be a bit inconsistent here.",
                    "createdAt": "2025-02-26T11:30:21Z",
                    "author": {
                      "login": "madvorak"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c51gZgO",
                    "body": "I think `RewritesLeftmost.rewrites` could be a better name.",
                    "createdAt": "2025-02-26T11:32:32Z",
                    "author": {
                      "login": "madvorak"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c51gZ2m",
                    "body": "I suggest merging with the next line.",
                    "createdAt": "2025-02-26T11:33:42Z",
                    "author": {
                      "login": "madvorak"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c51gZ73",
                    "body": "```suggestion\r\n    obtain ⟨u₁, u₂, h⟩|⟨w₁, u₂, h⟩ := h\r\n```",
                    "createdAt": "2025-02-26T11:33:58Z",
                    "author": {
                      "login": "madvorak"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c51gaFd",
                    "body": "Not sure whether `|` should be surrounded by spaces.",
                    "createdAt": "2025-02-26T11:34:28Z",
                    "author": {
                      "login": "madvorak"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c51gaL5",
                    "body": "```suggestion\r\n        rw [← List.singleton_append, h.2.1]\r\n```",
                    "createdAt": "2025-02-26T11:34:50Z",
                    "author": {
                      "login": "madvorak"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c51gaU6",
                    "body": "I think it can be merged with the line above.",
                    "createdAt": "2025-02-26T11:35:17Z",
                    "author": {
                      "login": "madvorak"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c51ga3e",
                    "body": "```suggestion\r\n    obtain ⟨u₁, hu⟩|⟨w₁, u₂, hu⟩ := ih\r\n```",
                    "createdAt": "2025-02-26T11:37:09Z",
                    "author": {
                      "login": "madvorak"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c51ga9t",
                    "body": "Nice!",
                    "createdAt": "2025-02-26T11:37:29Z",
                    "author": {
                      "login": "madvorak"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c51gbLX",
                    "body": "Does it belong into this file?",
                    "createdAt": "2025-02-26T11:38:10Z",
                    "author": {
                      "login": "madvorak"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c51gbXB",
                    "body": "Again, it can be merged with the next line.",
                    "createdAt": "2025-02-26T11:38:44Z",
                    "author": {
                      "login": "madvorak"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c51gbwm",
                    "body": "I think `DerivesLeftmost.derives` could be a better name.",
                    "createdAt": "2025-02-26T11:39:59Z",
                    "author": {
                      "login": "madvorak"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c51gcGy",
                    "body": "`hderiv₁.append_left`",
                    "createdAt": "2025-02-26T11:41:03Z",
                    "author": {
                      "login": "madvorak"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c51gcSu",
                    "body": "`hu.2.append_right`",
                    "createdAt": "2025-02-26T11:41:32Z",
                    "author": {
                      "login": "madvorak"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c51gcWR",
                    "body": "`hderiv₃.trans`",
                    "createdAt": "2025-02-26T11:41:44Z",
                    "author": {
                      "login": "madvorak"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c51gclX",
                    "body": "Is `::` or `++` more convenient here?",
                    "createdAt": "2025-02-26T11:42:34Z",
                    "author": {
                      "login": "madvorak"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c51gcvF",
                    "body": "```suggestion\r\ntheorem rewrites_append {r : ContextFreeRule T N} {v₁ v₂ u : List (Symbol T N)}\r\n```",
                    "createdAt": "2025-02-26T11:43:05Z",
                    "author": {
                      "login": "madvorak"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c51gdAm",
                    "body": "```suggestion\r\n# Leftmost Deriviations in Context-Free Grammars\r\n```",
                    "createdAt": "2025-02-26T11:43:55Z",
                    "author": {
                      "login": "madvorak"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c51gdL-",
                    "body": "Would `cases` work?",
                    "createdAt": "2025-02-26T11:44:30Z",
                    "author": {
                      "login": "madvorak"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c51gdVj",
                    "body": "We do not indent when only one goal is emitted.",
                    "createdAt": "2025-02-26T11:45:03Z",
                    "author": {
                      "login": "madvorak"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c51gdd2",
                    "body": "```suggestion\r\n    obtain ⟨u₁, u₂, hu⟩ := h\r\n```",
                    "createdAt": "2025-02-26T11:45:27Z",
                    "author": {
                      "login": "madvorak"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c51gdhA",
                    "body": "Also try to merge it with the line above.",
                    "createdAt": "2025-02-26T11:45:36Z",
                    "author": {
                      "login": "madvorak"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c51geY2",
                    "body": "```suggestion\r\nwhere in each rewriting step the leftmost nonterminal instead of an arbitrary one is replaced.\r\n```",
                    "createdAt": "2025-02-26T11:48:28Z",
                    "author": {
                      "login": "madvorak"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c51ggyM",
                    "body": "```suggestion\r\nrespectively. -/\r\n```",
                    "createdAt": "2025-02-26T11:56:15Z",
                    "author": {
                      "login": "madvorak"
                    }
                  }
                ]
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjEwNzI2MDEz",
              "login": "shetzl"
            },
            {
              "id": "MDQ6VXNlcjY2NDMxMTY=",
              "login": "madvorak"
            }
          ]
        },
        "state": "OPEN",
        "statusCheckRollup": {
          "contexts": {
            "nodes": [
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIz2Mfag",
                "name": "Lint style (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13540113531/job/37839118186"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIz_j67Q",
                "name": "Add ready-to-merge or delegated label",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13543267942/job/37848939245"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIz_pxaQ",
                "name": "Add ready-to-merge or delegated label",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13543297676/job/37849035113"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIz2V7og",
                "name": "Add topic label",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13540165492/job/37839272866"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIz2V7yQ",
                "name": "label-and-report-new-contributor",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13540165496/job/37839272905"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIz_j2LA",
                "name": "Ping maintainers on Zulip",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13543267936/job/37848938028"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIz_pyoQ",
                "name": "Ping maintainers on Zulip",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13543297675/job/37849035425"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIz2V8eA",
                "name": "post-or-update-summary-comment",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13540165476/job/37839273080"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIz_j0Ug",
                "name": "Fix style issues from lint",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13543267937/job/37848937554"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIz_pxcg",
                "name": "Fix style issues from lint",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13543297672/job/37849035122"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIz2Mdpw",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13540113545/job/37839117735"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIz2V7yA",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13540165479/job/37839272904"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIz2Md3A",
                "name": "Build (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13540113531/job/37839117788"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIz2Me-A",
                "name": "Build",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13540113545/job/37839118072"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIz2V9ug",
                "name": "Check all files imported",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13540165479/job/37839273402"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIz2MhAA",
                "name": "Post-CI job (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13540113531/job/37839118592"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIz2poWg",
                "name": "Post-CI job",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13540113545/job/37839595610"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIz2WWOA",
                "name": "New Contributor Check",
                "conclusion": "NEUTRAL",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/37839279672"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIz2XrfA",
                "name": "Summary",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=22314&login=leanprover-community&repository=mathlib4"
              }
            ]
          }
        },
        "title": "feat: add leftmost derivations for context-free grammars",
        "updatedAt": "2025-02-26T11:56:16Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/22314",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "2f92affdc0b2e4446b6f6ed5c1ffa504210d36a6"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6rtWQwzwAAAAPWBaJj",
              "createdAt": "2025-02-26T09:02:03Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABb5aSCQ",
                "name": "new-contributor"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6f_9BY",
              "createdAt": "2025-02-26T09:02:57Z",
              "body": "### PR summary [2f92affdc0](https://github.com/leanprover-community/mathlib4/pull/22314/commits/2f92affdc0b2e4446b6f6ed5c1ffa504210d36a6)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n| `Mathlib.Computability.LeftmostDerivation` (new file)|545|\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ DerivesLeftmost`\n`+ DerivesLeftmost.append_left`\n`+ DerivesLeftmost.append_right`\n`+ DerivesLeftmost.eq_or_head`\n`+ DerivesLeftmost.eq_or_tail`\n`+ DerivesLeftmost.refl`\n`+ DerivesLeftmost.trans`\n`+ DerivesLeftmost.trans_produces`\n`+ ProducesLeftmost`\n`+ ProducesLeftmost.append_left`\n`+ ProducesLeftmost.append_right`\n`+ ProducesLeftmost.single`\n`+ ProducesLeftmost.trans_derivesLeftmost`\n`+ RewritesLeftmost`\n`+ RewritesLeftmost.append_left`\n`+ RewritesLeftmost.append_right`\n`+ RewritesLeftmost.exists_parts`\n`+ RewritesLeftmost.rewrite_terminal`\n`+ RewritesLeftmost.rewritesLeftmost_iff`\n`+ RewritesLeftmost.rewritesLeftmost_of_exists_parts`\n`+ derivesLeftmost_append`\n`+ derivesLeftmost_cons`\n`+ derivesLeftmost_iff`\n`+ derives_cons`\n`+ derives_of_derivesLeftmost`\n`+ produces_of_produces_leftmost`\n`+ rewritesLeftmost_append`\n`+ rewritesLeftmost_cons`\n`+ rewrites_append`\n`+ rewrites_cons`\n`+ rewrites_of_rewritesLeftmost`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>\n\n---\n\n<details><summary>No changes to technical debt.</summary>\n\nYou can run this locally as\n```\n./scripts/technical-debt-metrics.sh pr_summary\n```\n* The `relative` value is the weighted *sum* of the differences with weight given by the *inverse* of the current value of the statistic.\n* The `absolute` value is the `relative` value divided by the total sum of the inverses of the current values (i.e. the weighted *average* of the differences).\n</details>\n",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6rtWQwzwAAAAPWBdst",
              "createdAt": "2025-02-26T09:02:57Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABgS7AmA",
                "name": "t-computability"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6dmmQf",
              "createdAt": "2025-02-26T11:28:59Z",
              "body": "This is very useful, thanks!\r\n\r\nIf it were up to me, I would avoid using standalone `h` and I would not use `α` for lists. Also `open Symbol` is something I would prefer not to have. However, these are just my personal opinions, no standards!\r\n\r\nFor somewhat less subjective comments, see in the code.",
              "author": {
                "login": "madvorak"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6dm4e0",
              "createdAt": "2025-02-26T11:56:15Z",
              "body": "",
              "author": {
                "login": "madvorak"
              }
            }
          ]
        }
      }
    }
  }
}
