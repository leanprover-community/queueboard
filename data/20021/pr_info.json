{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 1092,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "ADedecker"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "---\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nFor details on the \"pull request lifecycle\" in mathlib, please see:\r\nhttps://leanprover-community.github.io/contribute/index.html\r\n\r\nIn particular, note that most reviewers will only notice your PR\r\nif it passes the continuous integration checks.\r\nPlease ask for help on https://leanprover.zulipchat.com if needed.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nIf you are moving or deleting declarations, please include these lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nMoves:\r\n- Vector.* -> List.Vector.*\r\n- ...\r\n\r\nDeletions:\r\n- Nat.bit1_add_bit1\r\n- ...\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n\r\n-->\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 2,
        "closed": false,
        "closedAt": null,
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c6X55Qi",
              "body": "### PR summary [2b6a0702e6](https://github.com/leanprover-community/mathlib4/pull/20021/commits/2b6a0702e651cab9980e33b517af9a5128cd4c11)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n| `Mathlib.Topology.Algebra.RestrictedProduct` (new file) `Mathlib.Topology.Algebra.RestrictedProductDraft` (new file)|954|\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ MulAction.continuous_of_continuousAt`\n`+ MulHom.continuous_of_continuousAt`\n`+ Pre.continuous_coe`\n`+ Pre.continuous_inclusion`\n`+ Pre.continuous_rng`\n`+ Pre.homeo_empty`\n`+ Pre.inclusion`\n`+ Pre.isInducing_coe`\n`+ Pre.isOpen_forall_mem`\n`+ Pre.isOpen_forall_mem'`\n`+ Pre.range_coe`\n`+ Pre.structureMap`\n`+ Pre.topologicalSpace`\n`+ PreRestrictedProduct`\n`+ PreRestrictedProduct.continuous_inclusion`\n`+ PreRestrictedProduct.continuous_rng`\n`+ PreRestrictedProduct.continuous_toPi`\n`+ PreRestrictedProduct.homeo_empty`\n`+ PreRestrictedProduct.inclusion`\n`+ PreRestrictedProduct.isInducing_toPi`\n`+ PreRestrictedProduct.isOpen_forall_mem_A`\n`+ PreRestrictedProduct.isOpen_forall_mem_A'`\n`+ PreRestrictedProduct.structureMap`\n`+ PreRestrictedProduct.toPi`\n`+ PreRestrictedProduct.topologicalSpace`\n`+ RestrPi`\n`+ RestrPi.Pre`\n`+ RestrictedProduct`\n`+ RestrictedProduct.continuousAdd`\n`+ RestrictedProduct.continuousConstVAdd`\n`+ RestrictedProduct.continuousNeg`\n`+ RestrictedProduct.continuous_dom`\n`+ RestrictedProduct.continuous_dom_prod`\n`+ RestrictedProduct.continuous_ofPre`\n`+ RestrictedProduct.continuous_of_commutes`\n`+ RestrictedProduct.continuous_toPi`\n`+ RestrictedProduct.eq_ofPre_of_forall`\n`+ RestrictedProduct.isInducing_ofPre`\n`+ RestrictedProduct.isInducing_structureMap`\n`+ RestrictedProduct.isOpenEmbedding_ofPre`\n`+ RestrictedProduct.isOpenEmbedding_structureMap`\n`+ RestrictedProduct.isOpen_forall_mem_A`\n`+ RestrictedProduct.isOpen_forall_mem_A'`\n`+ RestrictedProduct.nhds_eq_map_nhds_zero`\n`+ RestrictedProduct.nhds_eq_map_ofPre`\n`+ RestrictedProduct.nhds_zero_eq_map_ofPre`\n`+ RestrictedProduct.nhds_zero_eq_map_structureMap`\n`+ RestrictedProduct.ofPre`\n`+ RestrictedProduct.range_ofPre`\n`+ RestrictedProduct.range_structureMap`\n`+ RestrictedProduct.ringEquivProd`\n`+ RestrictedProduct.structureMap`\n`+ RestrictedProduct.toPi`\n`+ RestrictedProduct.topologicalAddGroup`\n`+ RestrictedProduct.topologicalRing`\n`+ RestrictedProduct.topologicalSpace`\n`+ RestrictedProduct.topology_eq_of_isOpenEmbedding`\n`+ _root_.RingFilterBasis.hasBasis_nhds_zero`\n`+ continuous_coe`\n`+ continuous_dom`\n`+ continuous_dom_prod`\n`+ continuous_dom_prod_left`\n`+ continuous_dom_prod_right`\n`+ continuous_ofPre`\n`+ continuous_prod_iff`\n`+ continuous_structureMap`\n`+ exists_ofPre_eq_of_forall`\n`+ exists_structureMap_eq_of_forall`\n`+ instance (R : ι → Type*) [∀ i, Ring (R i)] (A : (i : ι) → Subring (R i)) (S : Set ι) :`\n`+ instance (R : ι → Type*) [∀ i, Ring (R i)] (A : (i : ι) → Subring (R i)) :`\n`+ instance : DFunLike (RestrPi R A) ι R`\n`+ instance : Module (∀ i, A i) (RestrictedProduct R A)`\n`+ instance : TopologicalSpace (RestrictedProduct R A) := (ringFilterBasis R A).topology`\n`+ instance [hAopen : Fact (∀ i, IsOpen (A i))] [∀ i, WeaklyLocallyCompactSpace (R i)]`\n`+ instance [Π i, Group (R i)] [∀ i, SubgroupClass (S i) (R i)] [∀ i, TopologicalGroup (R i)]`\n`+ instance [Π i, Inv (R i)] [∀ i, InvMemClass (S i) (R i)] : Inv (Pre R (fun i ↦ A i) T)`\n`+ instance [Π i, Inv (R i)] [∀ i, InvMemClass (S i) (R i)] : Inv (RestrPi R (fun i ↦ A i))`\n`+ instance [Π i, Mul (R i)] [∀ i, MulMemClass (S i) (R i)] : Mul (Pre R (fun i ↦ A i) T)`\n`+ instance [Π i, Mul (R i)] [∀ i, MulMemClass (S i) (R i)] : Mul (RestrPi R (fun i ↦ A i))`\n`+ instance [Π i, One (R i)] [∀ i, OneMemClass (S i) (R i)] : One (Pre R (fun i ↦ A i) T)`\n`+ instance [Π i, One (R i)] [∀ i, OneMemClass (S i) (R i)] : One (RestrPi R (fun i ↦ A i))`\n`+ instance [∀ i, ContinuousAdd (R i)] (S : Set ι) :`\n`+ instance [∀ i, ContinuousNeg (R i)] (S : Set ι) :`\n`+ instance [∀ i, TopologicalAddGroup (R i)] (S : Set ι) :`\n`+ instance {S : Set ι} : DFunLike (Pre R A S) ι R`\n`+ instance {S : Set ι} [hS : Fact (S.Finite)]`\n`+ isEmbedding_ofPre`\n`+ isEmbedding_structureMap`\n`+ isInducing_ofPre`\n`+ isInducing_structureMap`\n`+ isOpenEmbedding_ofPre`\n`+ isOpenEmbedding_structureMap`\n`+ isOpenMap_structureMap`\n`+ isOpen_forall_mem`\n`+ isOpen_forall_mem'`\n`+ nhds_eq_map_ofPre`\n`+ nhds_eq_map_structureMap`\n`+ nhds_zero_eq_map_ofPre`\n`+ nhds_zero_eq_map_structureMap`\n`+ ofPre`\n`+ range_ofPre`\n`+ range_structureMap`\n`+ ringFilterBasis`\n`+ structureMap`\n`+ topologicalSpace`\n`++ RestrictedProduct.homeomorphProd`\n`++ instance [Π i, AddGroup (R i)] [∀ i, AddSubgroupClass (S i) (R i)] :`\n`++ instance [Π i, AddMonoidWithOne (R i)] [∀ i, AddSubmonoidWithOneClass (S i) (R i)] :`\n`++ instance [Π i, Group (R i)] [∀ i, SubgroupClass (S i) (R i)] :`\n`++ instance [Π i, Group (R i)] [∀ i, SubgroupClass (S i) (R i)] [∀ i, TopologicalGroup (R i)] :`\n`++ instance [Π i, Inv (R i)] [∀ i, InvMemClass (S i) (R i)] [∀ i, ContinuousInv (R i)] :`\n`++ instance [Π i, Monoid (R i)] [∀ i, SubmonoidClass (S i) (R i)] :`\n`++ instance [Π i, Mul (R i)] [∀ i, MulMemClass (S i) (R i)] [∀ i, ContinuousMul (R i)] :`\n`++ instance [Π i, Ring (R i)] [∀ i, SubringClass (S i) (R i)] [∀ i, TopologicalRing (R i)] :`\n`++ instance {G : Type*} [TopologicalSpace G] [Π i, SMul G (R i)] [∀ i, SMulMemClass (S i) G (R i)]`\n`++ instance {G : Type*} [Π i, SMul G (R i)] [∀ i, SMulMemClass (S i) G (R i)]`\n`++ instance {G : Type*} [Π i, SMul G (R i)] [∀ i, SMulMemClass (S i) G (R i)] :`\n`++++ instance [Π i, DivInvMonoid (R i)] [∀ i, SubgroupClass (S i) (R i)] :`\n`++++ instance [Π i, Ring (R i)] [∀ i, SubringClass (S i) (R i)] :`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>\n\n---\n\n<details><summary>No changes to technical debt.</summary>\n\nYou can run this locally as\n```\n./scripts/technical-debt-metrics.sh pr_summary\n```\n* The `relative` value is the weighted *sum* of the differences with weight given by the *inverse* of the current value of the statistic.\n* The `absolute` value is the `relative` value divided by the total sum of the inverses of the current values (i.e. the weighted *average* of the differences).\n</details>",
              "createdAt": "2024-12-17T13:59:44Z",
              "author": {
                "login": "github-actions"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "e9f35d503ce34b21837048a903efc4ceec0fc038",
                "additions": 1020,
                "deletions": 0,
                "committedDate": "2024-12-17T13:54:43Z",
                "author": {
                  "name": "ADedecker",
                  "email": "anatolededecker@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAICpHygg",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12374471095/job/34537075330"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAICpHzhA",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12374471097/job/34537075588"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAICpHzqQ",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12374471095/job/34537075625"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAICpHyHQ",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12374471097/job/34537075229"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAICpH09A",
                        "name": "Build",
                        "conclusion": "CANCELLED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12374471097/job/34537075956"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAICpH0-w",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12374471095/job/34537075963"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAICpdlEg",
                        "name": "Post-CI job",
                        "conclusion": "CANCELLED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12374471097/job/34537432338"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAICpH2tQ",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12374471095/job/34537076405"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "3d0a113828af4a1481a6775c6653360b7c1e7a6b",
                "additions": 10,
                "deletions": 0,
                "committedDate": "2024-12-17T13:56:56Z",
                "author": {
                  "name": "ADedecker",
                  "email": "anatolededecker@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAICpPYUA",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12374508615/job/34537199696"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAICpPZfA",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12374508619/job/34537199996"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAICpPaBQ",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12374508615/job/34537200133"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAICpPYJA",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12374508619/job/34537199652"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAICpPa4g",
                        "name": "Build",
                        "conclusion": "CANCELLED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12374508619/job/34537200354"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAICpPb1A",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12374508615/job/34537200596"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAICpmKZQ",
                        "name": "Post-CI job",
                        "conclusion": "CANCELLED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12374508619/job/34537572965"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAICpPdJQ",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12374508615/job/34537200933"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "09306c8ed7b1ec5e7e6cf0c5a3d42f6849140ed0",
                "additions": 2,
                "deletions": 1,
                "committedDate": "2024-12-17T13:58:30Z",
                "author": {
                  "name": "ADedecker",
                  "email": "anatolededecker@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAICpUuLQ",
                        "name": "Lint style",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12374534996/job/34537287213"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAICpUvHQ",
                        "name": "Add topic label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12374535007/job/34537287453"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAICpUt4w",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12374534985/job/34537287139"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAICpUt3Q",
                        "name": "post-or-update-summary-comment",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12374534992/job/34537287133"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAICpUYBQ",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12374533307/job/34537281541"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAICpUXwQ",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12374533303/job/34537281473"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAICpUbGQ",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12374533307/job/34537282329"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAICpUvqg",
                        "name": "Check all files imported",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12374534996/job/34537287594"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAICpUauQ",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12374533303/job/34537282233"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAICpUZTA",
                        "name": "Build",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12374533303/job/34537281868"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAICpUZiA",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12374533307/job/34537281928"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAICpUdFg",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12374533307/job/34537282838"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAICpunEg",
                        "name": "Post-CI job",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12374533303/job/34537711378"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAICpVIkg",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/34537293970"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAICpWOuQ",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=20021&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "2b6a0702e651cab9980e33b517af9a5128cd4c11",
                "additions": 62,
                "deletions": 1,
                "committedDate": "2024-12-18T10:41:11Z",
                "author": {
                  "name": "ADedecker",
                  "email": "anatolededecker@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIDZv8Ig",
                        "name": "Lint style",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12391288085/job/34588064802"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIDZv6dA",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12391288089/job/34588064372"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIDZv6sQ",
                        "name": "post-or-update-summary-comment",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12391288083/job/34588064433"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIDZv1Rg",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12391287569/job/34588063046"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIDZv0nA",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12391287563/job/34588062876"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIDZv3Fw",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12391287569/job/34588063511"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIDZv6eQ",
                        "name": "Check all files imported",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12391288085/job/34588064377"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIDZv3Vw",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12391287563/job/34588063575"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIDZv16A",
                        "name": "Build",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12391287563/job/34588063208"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIDZv4Ww",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12391287569/job/34588063835"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIDZv55A",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12391287569/job/34588064228"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIDaEACg",
                        "name": "Post-CI job",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12391287563/job/34588393482"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIDZwR_g",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/34588070398"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIDZxeEA",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=20021&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            }
          ]
        },
        "createdAt": "2024-12-17T13:58:40Z",
        "deletions": 0,
        "files": {
          "nodes": [
            {
              "path": "Mathlib/Topology/Algebra/RestrictedProduct.lean",
              "additions": 537,
              "deletions": 0
            },
            {
              "path": "Mathlib/Topology/Algebra/RestrictedProductDraft.lean",
              "additions": 555,
              "deletions": 0
            }
          ]
        },
        "headRefName": "AD_restricted_product",
        "headRefOid": "2b6a0702e651cab9980e33b517af9a5128cd4c11",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c6Ff4uq",
        "isCrossRepository": false,
        "isDraft": true,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c8AAAABViJbOw",
              "color": "33DBEC",
              "name": "t-topology"
            }
          ]
        },
        "latestReviews": {
          "nodes": []
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "BLOCKED",
        "mergeable": "MERGEABLE",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 20021,
        "potentialMergeCommit": {
          "oid": "541123efe80a2b4584bc429be1b5b3d2cc526421"
        },
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": null,
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": []
        },
        "reviewThreads": {
          "nodes": []
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjQ4NjU2Nzkz",
              "login": "ADedecker"
            }
          ]
        },
        "state": "OPEN",
        "statusCheckRollup": {
          "contexts": {
            "nodes": [
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIDZv8Ig",
                "name": "Lint style",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12391288085/job/34588064802"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIDZv6dA",
                "name": "label-and-report-new-contributor",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12391288089/job/34588064372"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIDZv6sQ",
                "name": "post-or-update-summary-comment",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12391288083/job/34588064433"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIDZv1Rg",
                "name": "Cancel Previous Runs (CI)",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12391287569/job/34588063046"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIDZv0nA",
                "name": "Cancel Previous Runs (CI)",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12391287563/job/34588062876"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIDZv3Fw",
                "name": "Lint style (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12391287569/job/34588063511"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIDZv6eQ",
                "name": "Check all files imported",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12391288085/job/34588064377"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIDZv3Vw",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12391287563/job/34588063575"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIDZv16A",
                "name": "Build",
                "conclusion": "FAILURE",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12391287563/job/34588063208"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIDZv4Ww",
                "name": "Build (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12391287569/job/34588063835"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIDZv55A",
                "name": "Post-CI job (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12391287569/job/34588064228"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIDaEACg",
                "name": "Post-CI job",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12391287563/job/34588393482"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIDZwR_g",
                "name": "New Contributor Check",
                "conclusion": "NEUTRAL",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/34588070398"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIDZxeEA",
                "name": "Summary",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=20021&login=leanprover-community&repository=mathlib4"
              }
            ]
          }
        },
        "title": "feat: restricted products and their topology",
        "updatedAt": "2024-12-18T10:42:05Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/20021",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6jnallzwAAAAOm_nWb",
              "createdAt": "2024-12-17T13:59:35Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABViJbOw",
                "name": "t-topology"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6X55Qi",
              "createdAt": "2024-12-17T13:59:44Z",
              "body": "### PR summary [2b6a0702e6](https://github.com/leanprover-community/mathlib4/pull/20021/commits/2b6a0702e651cab9980e33b517af9a5128cd4c11)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n| `Mathlib.Topology.Algebra.RestrictedProduct` (new file) `Mathlib.Topology.Algebra.RestrictedProductDraft` (new file)|954|\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ MulAction.continuous_of_continuousAt`\n`+ MulHom.continuous_of_continuousAt`\n`+ Pre.continuous_coe`\n`+ Pre.continuous_inclusion`\n`+ Pre.continuous_rng`\n`+ Pre.homeo_empty`\n`+ Pre.inclusion`\n`+ Pre.isInducing_coe`\n`+ Pre.isOpen_forall_mem`\n`+ Pre.isOpen_forall_mem'`\n`+ Pre.range_coe`\n`+ Pre.structureMap`\n`+ Pre.topologicalSpace`\n`+ PreRestrictedProduct`\n`+ PreRestrictedProduct.continuous_inclusion`\n`+ PreRestrictedProduct.continuous_rng`\n`+ PreRestrictedProduct.continuous_toPi`\n`+ PreRestrictedProduct.homeo_empty`\n`+ PreRestrictedProduct.inclusion`\n`+ PreRestrictedProduct.isInducing_toPi`\n`+ PreRestrictedProduct.isOpen_forall_mem_A`\n`+ PreRestrictedProduct.isOpen_forall_mem_A'`\n`+ PreRestrictedProduct.structureMap`\n`+ PreRestrictedProduct.toPi`\n`+ PreRestrictedProduct.topologicalSpace`\n`+ RestrPi`\n`+ RestrPi.Pre`\n`+ RestrictedProduct`\n`+ RestrictedProduct.continuousAdd`\n`+ RestrictedProduct.continuousConstVAdd`\n`+ RestrictedProduct.continuousNeg`\n`+ RestrictedProduct.continuous_dom`\n`+ RestrictedProduct.continuous_dom_prod`\n`+ RestrictedProduct.continuous_ofPre`\n`+ RestrictedProduct.continuous_of_commutes`\n`+ RestrictedProduct.continuous_toPi`\n`+ RestrictedProduct.eq_ofPre_of_forall`\n`+ RestrictedProduct.isInducing_ofPre`\n`+ RestrictedProduct.isInducing_structureMap`\n`+ RestrictedProduct.isOpenEmbedding_ofPre`\n`+ RestrictedProduct.isOpenEmbedding_structureMap`\n`+ RestrictedProduct.isOpen_forall_mem_A`\n`+ RestrictedProduct.isOpen_forall_mem_A'`\n`+ RestrictedProduct.nhds_eq_map_nhds_zero`\n`+ RestrictedProduct.nhds_eq_map_ofPre`\n`+ RestrictedProduct.nhds_zero_eq_map_ofPre`\n`+ RestrictedProduct.nhds_zero_eq_map_structureMap`\n`+ RestrictedProduct.ofPre`\n`+ RestrictedProduct.range_ofPre`\n`+ RestrictedProduct.range_structureMap`\n`+ RestrictedProduct.ringEquivProd`\n`+ RestrictedProduct.structureMap`\n`+ RestrictedProduct.toPi`\n`+ RestrictedProduct.topologicalAddGroup`\n`+ RestrictedProduct.topologicalRing`\n`+ RestrictedProduct.topologicalSpace`\n`+ RestrictedProduct.topology_eq_of_isOpenEmbedding`\n`+ _root_.RingFilterBasis.hasBasis_nhds_zero`\n`+ continuous_coe`\n`+ continuous_dom`\n`+ continuous_dom_prod`\n`+ continuous_dom_prod_left`\n`+ continuous_dom_prod_right`\n`+ continuous_ofPre`\n`+ continuous_prod_iff`\n`+ continuous_structureMap`\n`+ exists_ofPre_eq_of_forall`\n`+ exists_structureMap_eq_of_forall`\n`+ instance (R : ι → Type*) [∀ i, Ring (R i)] (A : (i : ι) → Subring (R i)) (S : Set ι) :`\n`+ instance (R : ι → Type*) [∀ i, Ring (R i)] (A : (i : ι) → Subring (R i)) :`\n`+ instance : DFunLike (RestrPi R A) ι R`\n`+ instance : Module (∀ i, A i) (RestrictedProduct R A)`\n`+ instance : TopologicalSpace (RestrictedProduct R A) := (ringFilterBasis R A).topology`\n`+ instance [hAopen : Fact (∀ i, IsOpen (A i))] [∀ i, WeaklyLocallyCompactSpace (R i)]`\n`+ instance [Π i, Group (R i)] [∀ i, SubgroupClass (S i) (R i)] [∀ i, TopologicalGroup (R i)]`\n`+ instance [Π i, Inv (R i)] [∀ i, InvMemClass (S i) (R i)] : Inv (Pre R (fun i ↦ A i) T)`\n`+ instance [Π i, Inv (R i)] [∀ i, InvMemClass (S i) (R i)] : Inv (RestrPi R (fun i ↦ A i))`\n`+ instance [Π i, Mul (R i)] [∀ i, MulMemClass (S i) (R i)] : Mul (Pre R (fun i ↦ A i) T)`\n`+ instance [Π i, Mul (R i)] [∀ i, MulMemClass (S i) (R i)] : Mul (RestrPi R (fun i ↦ A i))`\n`+ instance [Π i, One (R i)] [∀ i, OneMemClass (S i) (R i)] : One (Pre R (fun i ↦ A i) T)`\n`+ instance [Π i, One (R i)] [∀ i, OneMemClass (S i) (R i)] : One (RestrPi R (fun i ↦ A i))`\n`+ instance [∀ i, ContinuousAdd (R i)] (S : Set ι) :`\n`+ instance [∀ i, ContinuousNeg (R i)] (S : Set ι) :`\n`+ instance [∀ i, TopologicalAddGroup (R i)] (S : Set ι) :`\n`+ instance {S : Set ι} : DFunLike (Pre R A S) ι R`\n`+ instance {S : Set ι} [hS : Fact (S.Finite)]`\n`+ isEmbedding_ofPre`\n`+ isEmbedding_structureMap`\n`+ isInducing_ofPre`\n`+ isInducing_structureMap`\n`+ isOpenEmbedding_ofPre`\n`+ isOpenEmbedding_structureMap`\n`+ isOpenMap_structureMap`\n`+ isOpen_forall_mem`\n`+ isOpen_forall_mem'`\n`+ nhds_eq_map_ofPre`\n`+ nhds_eq_map_structureMap`\n`+ nhds_zero_eq_map_ofPre`\n`+ nhds_zero_eq_map_structureMap`\n`+ ofPre`\n`+ range_ofPre`\n`+ range_structureMap`\n`+ ringFilterBasis`\n`+ structureMap`\n`+ topologicalSpace`\n`++ RestrictedProduct.homeomorphProd`\n`++ instance [Π i, AddGroup (R i)] [∀ i, AddSubgroupClass (S i) (R i)] :`\n`++ instance [Π i, AddMonoidWithOne (R i)] [∀ i, AddSubmonoidWithOneClass (S i) (R i)] :`\n`++ instance [Π i, Group (R i)] [∀ i, SubgroupClass (S i) (R i)] :`\n`++ instance [Π i, Group (R i)] [∀ i, SubgroupClass (S i) (R i)] [∀ i, TopologicalGroup (R i)] :`\n`++ instance [Π i, Inv (R i)] [∀ i, InvMemClass (S i) (R i)] [∀ i, ContinuousInv (R i)] :`\n`++ instance [Π i, Monoid (R i)] [∀ i, SubmonoidClass (S i) (R i)] :`\n`++ instance [Π i, Mul (R i)] [∀ i, MulMemClass (S i) (R i)] [∀ i, ContinuousMul (R i)] :`\n`++ instance [Π i, Ring (R i)] [∀ i, SubringClass (S i) (R i)] [∀ i, TopologicalRing (R i)] :`\n`++ instance {G : Type*} [TopologicalSpace G] [Π i, SMul G (R i)] [∀ i, SMulMemClass (S i) G (R i)]`\n`++ instance {G : Type*} [Π i, SMul G (R i)] [∀ i, SMulMemClass (S i) G (R i)]`\n`++ instance {G : Type*} [Π i, SMul G (R i)] [∀ i, SMulMemClass (S i) G (R i)] :`\n`++++ instance [Π i, DivInvMonoid (R i)] [∀ i, SubgroupClass (S i) (R i)] :`\n`++++ instance [Π i, Ring (R i)] [∀ i, SubringClass (S i) (R i)] :`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>\n\n---\n\n<details><summary>No changes to technical debt.</summary>\n\nYou can run this locally as\n```\n./scripts/technical-debt-metrics.sh pr_summary\n```\n* The `relative` value is the weighted *sum* of the differences with weight given by the *inverse* of the current value of the statistic.\n* The `absolute` value is the `relative` value divided by the total sum of the inverses of the current values (i.e. the weighted *average* of the differences).\n</details>",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "PullRequestCommit"
            }
          ]
        }
      }
    }
  }
}
