{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 41,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "mo271"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "---\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n-->\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 1,
        "closed": true,
        "closedAt": "2023-09-12T23:49:57Z",
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c5mEqbc",
              "body": "I'm not super sure about the naming. \r\nI also considered if this was a good addition to std, but I think this is the better place for it.",
              "createdAt": "2023-09-09T12:18:49Z",
              "author": {
                "login": "mo271"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5mFqDB",
              "body": "What is the reason to introduce the lemmas that deal with subtraction *and then* switch the inputs to `gcd`?  I would have thought that there should be the `simp` lemma that removes the subtraction, but I am not sure about also swapping the arguments.",
              "createdAt": "2023-09-10T09:04:01Z",
              "author": {
                "login": "adomani"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5mFtDU",
              "body": "> What is the reason to introduce the lemmas that deal with subtraction _and then_ switch the inputs to `gcd`? I would have thought that there should be the `simp` lemma that removes the subtraction, but I am not sure about also swapping the arguments.\r\n\r\nThe reason I added both versions was to try to be in sync with what is done for the `add` lemmas above. Let's see:\r\n```\r\n1: gcd m (n + m) = gcd m n\r\n2: gcd (m + n) n = gcd m n\r\n3: gcd (m + n) m = gcd n m\r\n4: gcd m (m + n) = gcd m n\r\n```\r\nexchanging `m` and `n` on the righthand side to always be gcd m n, we then have\r\n```\r\n1: gcd m (n + m) \r\n2: gcd (m + n) n\r\n3: gcd (n + m) n\r\n4: gcd m (m + n) \r\n```\r\nby analogy we replace the `+` by the `-`\r\n```\r\n1: gcd m (n - m) \r\n2: gcd (m - n) n\r\n3: gcd (n - m) n\r\n4: gcd m (m - n) \r\n```\r\nI suppose you are right, there are only 4 lemmas needed. That's what I did now...\r\n",
              "createdAt": "2023-09-10T10:01:19Z",
              "author": {
                "login": "mo271"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5mFteO",
              "body": "Yes, my reasoning was: the argument that does not have `add/sub` stays what it is and does not swap places with the other.  The `simp` lemma just undoes one operation in one coordinate, but does not also swap coordinates.\r\n\r\nOf course, e.g. in the Euclidean algorithm, you alternate subtracting and swapping, but I think that the `simp` lemma should not be trying to do that.",
              "createdAt": "2023-09-10T10:09:54Z",
              "author": {
                "login": "adomani"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5mRWNm",
              "body": "Build failed (retrying...):\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/6160617263/job/16717992280)",
              "createdAt": "2023-09-12T14:21:18Z",
              "author": {
                "login": "bors"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5mUF7t",
              "body": "bors retry",
              "createdAt": "2023-09-12T21:58:03Z",
              "author": {
                "login": "ADedecker"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5mUwXn",
              "body": "Pull request successfully merged into master.\n\n  Build succeeded!\n\n  The publicly hosted instance of bors-ng is deprecated and will go away soon.\n\n  If you want to self-host your own instance, [instructions are here][instructions].\n  For more help, visit [the forum].\n\n  If you want to switch to GitHub's built-in merge queue, visit [their help page][gh].\n\n  [instructions]: https://github.com/bors-ng/bors-ng#how-to-set-up-your-own-real-instance\n  [the forum]: https://forum.bors.tech\n  [gh]: https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/configuring-pull-request-merges/managing-a-merge-queue\n\n\n\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/6165524863/job/16733457397)\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/6165524863/job/16733457677)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/6165524863/job/16733457862)",
              "createdAt": "2023-09-12T23:49:55Z",
              "author": {
                "login": "bors"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "82ccfd25453cf127cd49eaad073c13e76c8012cd",
                "additions": 36,
                "deletions": 0,
                "committedDate": "2023-09-09T12:16:30Z",
                "author": {
                  "name": "Moritz Firsching",
                  "email": "firsching@google.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "9cb9d53c5dca59eeb777046ac2f5b6602cafcb1e",
                "additions": 1,
                "deletions": 1,
                "committedDate": "2023-09-09T13:03:17Z",
                "author": {
                  "name": "Moritz Firsching",
                  "email": "firsching@google.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "c14c444f3b84a5e132c00a942a4cf23f1632b92a",
                "additions": 1,
                "deletions": 1,
                "committedDate": "2023-09-09T13:03:35Z",
                "author": {
                  "name": "Moritz Firsching",
                  "email": "firsching@google.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "e51429330ce256e3586c3f7bcf79149b5eb18f58",
                "additions": 39,
                "deletions": 15,
                "committedDate": "2023-09-09T18:30:58Z",
                "author": {
                  "name": "Moritz Firsching",
                  "email": "firsching@google.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "7a29666868978583af3394aea55bebc5dcaa4c32",
                "additions": 15,
                "deletions": 33,
                "committedDate": "2023-09-10T10:00:51Z",
                "author": {
                  "name": "Moritz Firsching",
                  "email": "firsching@google.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "d42bab116b97e4ec8ed401d89c926ee93c0d21b3",
                "additions": 0,
                "deletions": 5,
                "committedDate": "2023-09-10T10:04:08Z",
                "author": {
                  "name": "Moritz Firsching",
                  "email": "firsching@google.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "0a75bff43948ba2ed82ba45fc35fcbe06c73937b",
                "additions": 4,
                "deletions": 0,
                "committedDate": "2023-09-10T10:06:25Z",
                "author": {
                  "name": "Moritz Firsching",
                  "email": "firsching@google.com"
                },
                "statusCheckRollup": null
              }
            }
          ]
        },
        "createdAt": "2023-09-09T12:17:30Z",
        "deletions": 0,
        "files": {
          "nodes": [
            {
              "path": "Mathlib/Data/Nat/GCD/Basic.lean",
              "additions": 41,
              "deletions": 0
            }
          ]
        },
        "headRefName": "mo271/gcd_coprime_sub",
        "headRefOid": "0a75bff43948ba2ed82ba45fc35fcbe06c73937b",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c5Z7q9q",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
              "color": "06e039",
              "name": "ready-to-merge"
            }
          ]
        },
        "latestReviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5gexCi",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "alexjbest"
              },
              "submittedAt": "2023-09-09T17:58:41Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5gsK-q",
              "body": "Thanks :tada:\r\n\r\nbors merge",
              "state": "APPROVED",
              "author": {
                "login": "jcommelin"
              },
              "submittedAt": "2023-09-12T12:59:12Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5gfOUa",
              "body": "I personally find the naming strange, but it seems to be consistent with the `add` versions.  LGTM!",
              "state": "APPROVED",
              "author": {
                "login": "adomani"
              },
              "submittedAt": "2023-09-10T10:34:40Z"
            }
          ]
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "UNKNOWN",
        "mergeable": "UNKNOWN",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 7051,
        "potentialMergeCommit": null,
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": "APPROVED",
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5gel76",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "alexjbest"
              },
              "submittedAt": "2023-09-09T12:52:38Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5gel8K",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "alexjbest"
              },
              "submittedAt": "2023-09-09T12:52:46Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5gexCi",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "alexjbest"
              },
              "submittedAt": "2023-09-09T17:58:41Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5gex8M",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "mo271"
              },
              "submittedAt": "2023-09-09T18:34:16Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5gfJw3",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "adomani"
              },
              "submittedAt": "2023-09-10T09:01:53Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5gfKUO",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "adomani"
              },
              "submittedAt": "2023-09-10T09:07:34Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5gfNSw",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "mo271"
              },
              "submittedAt": "2023-09-10T10:02:08Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5gfNYj",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "mo271"
              },
              "submittedAt": "2023-09-10T10:05:05Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5gfNf0",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "mo271"
              },
              "submittedAt": "2023-09-10T10:08:45Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5gfOUa",
              "body": "I personally find the naming strange, but it seems to be consistent with the `add` versions.  LGTM!",
              "state": "APPROVED",
              "author": {
                "login": "adomani"
              },
              "submittedAt": "2023-09-10T10:34:40Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5gsK-q",
              "body": "Thanks :tada:\r\n\r\nbors merge",
              "state": "APPROVED",
              "author": {
                "login": "jcommelin"
              },
              "submittedAt": "2023-09-12T12:59:12Z"
            }
          ]
        },
        "reviewThreads": {
          "nodes": [
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5OtiFr",
                    "body": "```suggestion\r\ntheorem coprime_self_sub_left (m n : ℕ) (h : m ≤ n) : coprime (n - m) n ↔ coprime m n := by\r\n```",
                    "createdAt": "2023-09-09T12:52:38Z",
                    "author": {
                      "login": "alexjbest"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5OtiF9",
                    "body": "```suggestion\r\ntheorem coprime_self_sub_right (m n : ℕ) (h : m ≤ n) : coprime n (n - m) ↔ coprime m n := by\r\n```",
                    "createdAt": "2023-09-09T12:52:46Z",
                    "author": {
                      "login": "alexjbest"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5OtwoY",
                    "body": "I wonder if you can prove this more directly without the first two lemmas (which seem of limited utility once the others are established).\nVia `gcd n m = gcd (n - m + m) m = gcd (n - m) m`. This should be only two rewrites it seems (sorry I'm on a train and don't have lean available)",
                    "createdAt": "2023-09-09T17:55:28Z",
                    "author": {
                      "login": "alexjbest"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5OtyZK",
                    "body": "Yes, I agree that the `...symm` lemmas are not super useful on their own.\r\n\r\nNow you mention it: \r\nThe lemma you propose is different still from the lemmas I prove, but probably also useful.\r\nSo for the add version we have 4 theorems for all the combinations, but for the sub part we have eualities involving `gcd (n - m) n` and `gcd (n - m) m`, which are different. This leads to 8 theorems.\r\n\r\nI don't know what good names are, but I tried to keep it analogous to the corresponding `add`  names.",
                    "createdAt": "2023-09-09T18:34:11Z",
                    "author": {
                      "login": "mo271"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5OuOGW",
                    "body": "I'm happy with the naming now...",
                    "createdAt": "2023-09-10T10:08:45Z",
                    "author": {
                      "login": "mo271"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5OuLJz",
                    "body": "Is `simp` going to ever fire on the second one?  It seems that if it could fire on the second, it would have already fired on the first.",
                    "createdAt": "2023-09-10T09:01:52Z",
                    "author": {
                      "login": "adomani"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5OuN_7",
                    "body": "~~That makes sense. Since it is never quite clear what would be the better `simp`, perhaps it would be best to remove  both?! That is what I have done now.~~\r\n\r\nNow, I think we have few enough lemmas that`simp` will only fire on one (unless `n=m`, in which case both `simp`s will be identical)",
                    "createdAt": "2023-09-10T10:05:05Z",
                    "author": {
                      "login": "mo271"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5OuLix",
                    "body": "```suggestion\r\ntheorem coprime_sub_self (m n : ℕ) (h : m ≤ n) : coprime (n - m) m ↔ coprime m n := by\r\n```\r\nI would probably put `sub` first here, since it appears earlier in the goal.  If you like this change, the following lemmas can follow the same convention.\r\n\r\nMaybe also make the arguments `m n` implicit.",
                    "createdAt": "2023-09-10T09:07:21Z",
                    "author": {
                      "login": "adomani"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5OuN59",
                    "body": "I essentially followed your suggestion, except keeping the `left` with the name.\r\n\r\nAll arguements `m n` made implicit now, also above.",
                    "createdAt": "2023-09-10T10:02:08Z",
                    "author": {
                      "login": "mo271"
                    }
                  }
                ]
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjM0OTE2Mjc=",
              "login": "mo271"
            },
            {
              "id": "MDQ6VXNlcjI5NDY3NzQ1",
              "login": "adomani"
            },
            {
              "id": "MDQ6VXNlcjQ4NjU2Nzkz",
              "login": "ADedecker"
            },
            {
              "id": "MDQ6VXNlcjE2ODg1MzM=",
              "login": "alexjbest"
            },
            {
              "id": "MDQ6VXNlcjU2MzY3MDU=",
              "login": "jcommelin"
            },
            {
              "id": "U_kgDOB75MNQ",
              "login": "leanprover-community-mathlib4-bot"
            }
          ]
        },
        "state": "CLOSED",
        "statusCheckRollup": null,
        "title": "[Merged by Bors] - feat: gcd and coprime sub",
        "updatedAt": "2023-09-12T23:50:08Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/7051",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "82ccfd25453cf127cd49eaad073c13e76c8012cd"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5mEqbc",
              "createdAt": "2023-09-09T12:18:49Z",
              "body": "I'm not super sure about the naming. \r\nI also considered if this was a good addition to std, but I think this is the better place for it.",
              "author": {
                "login": "mo271"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5wk5pJzwAAAAJnXsWT",
              "createdAt": "2023-09-09T12:19:03Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5wk5pJzwAAAAJnXsWX",
              "createdAt": "2023-09-09T12:19:03Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKteTVQ",
                "name": "awaiting-CI"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5gel76",
              "createdAt": "2023-09-09T12:52:37Z",
              "body": "",
              "author": {
                "login": "alexjbest"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5gel8K",
              "createdAt": "2023-09-09T12:52:46Z",
              "body": "",
              "author": {
                "login": "alexjbest"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "9cb9d53c5dca59eeb777046ac2f5b6602cafcb1e"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "c14c444f3b84a5e132c00a942a4cf23f1632b92a"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5wk5pJzwAAAAJnYfyZ",
              "createdAt": "2023-09-09T14:23:51Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKteTVQ",
                "name": "awaiting-CI"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5gexCi",
              "createdAt": "2023-09-09T17:55:28Z",
              "body": "",
              "author": {
                "login": "alexjbest"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "e51429330ce256e3586c3f7bcf79149b5eb18f58"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5gfJw3",
              "createdAt": "2023-09-10T09:01:52Z",
              "body": "",
              "author": {
                "login": "adomani"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5mFqDB",
              "createdAt": "2023-09-10T09:04:01Z",
              "body": "What is the reason to introduce the lemmas that deal with subtraction *and then* switch the inputs to `gcd`?  I would have thought that there should be the `simp` lemma that removes the subtraction, but I am not sure about also swapping the arguments.",
              "author": {
                "login": "adomani"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5gfKUO",
              "createdAt": "2023-09-10T09:07:21Z",
              "body": "",
              "author": {
                "login": "adomani"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "7a29666868978583af3394aea55bebc5dcaa4c32"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5mFtDU",
              "createdAt": "2023-09-10T10:01:19Z",
              "body": "> What is the reason to introduce the lemmas that deal with subtraction _and then_ switch the inputs to `gcd`? I would have thought that there should be the `simp` lemma that removes the subtraction, but I am not sure about also swapping the arguments.\r\n\r\nThe reason I added both versions was to try to be in sync with what is done for the `add` lemmas above. Let's see:\r\n```\r\n1: gcd m (n + m) = gcd m n\r\n2: gcd (m + n) n = gcd m n\r\n3: gcd (m + n) m = gcd n m\r\n4: gcd m (m + n) = gcd m n\r\n```\r\nexchanging `m` and `n` on the righthand side to always be gcd m n, we then have\r\n```\r\n1: gcd m (n + m) \r\n2: gcd (m + n) n\r\n3: gcd (n + m) n\r\n4: gcd m (m + n) \r\n```\r\nby analogy we replace the `+` by the `-`\r\n```\r\n1: gcd m (n - m) \r\n2: gcd (m - n) n\r\n3: gcd (n - m) n\r\n4: gcd m (m - n) \r\n```\r\nI suppose you are right, there are only 4 lemmas needed. That's what I did now...\r\n",
              "author": {
                "login": "mo271"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "d42bab116b97e4ec8ed401d89c926ee93c0d21b3"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "0a75bff43948ba2ed82ba45fc35fcbe06c73937b"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5mFteO",
              "createdAt": "2023-09-10T10:09:54Z",
              "body": "Yes, my reasoning was: the argument that does not have `add/sub` stays what it is and does not swap places with the other.  The `simp` lemma just undoes one operation in one coordinate, but does not also swap coordinates.\r\n\r\nOf course, e.g. in the Euclidean algorithm, you alternate subtracting and swapping, but I think that the `simp` lemma should not be trying to do that.",
              "author": {
                "login": "adomani"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5gfOUa",
              "createdAt": "2023-09-10T10:34:40Z",
              "body": "I personally find the naming strange, but it seems to be consistent with the `add` versions.  LGTM!",
              "author": {
                "login": "adomani"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5gsK-q",
              "createdAt": "2023-09-12T12:59:12Z",
              "body": "Thanks :tada:\r\n\r\nbors merge",
              "author": {
                "login": "jcommelin"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5wk5pJzwAAAAJotFZm",
              "createdAt": "2023-09-12T12:59:24Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
                "name": "ready-to-merge"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5wk5pJzwAAAAJotFb1",
              "createdAt": "2023-09-12T12:59:25Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5mRWNm",
              "createdAt": "2023-09-12T14:21:18Z",
              "body": "Build failed (retrying...):\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/6160617263/job/16717992280)",
              "author": {
                "login": "bors"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5mUF7t",
              "createdAt": "2023-09-12T21:58:03Z",
              "body": "bors retry",
              "author": {
                "login": "ADedecker"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5mUwXn",
              "createdAt": "2023-09-12T23:49:55Z",
              "body": "Pull request successfully merged into master.\n\n  Build succeeded!\n\n  The publicly hosted instance of bors-ng is deprecated and will go away soon.\n\n  If you want to self-host your own instance, [instructions are here][instructions].\n  For more help, visit [the forum].\n\n  If you want to switch to GitHub's built-in merge queue, visit [their help page][gh].\n\n  [instructions]: https://github.com/bors-ng/bors-ng#how-to-set-up-your-own-real-instance\n  [the forum]: https://forum.bors.tech\n  [gh]: https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/configuring-pull-request-merges/managing-a-merge-queue\n\n\n\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/6165524863/job/16733457397)\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/6165524863/job/16733457677)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/6165524863/job/16733457862)",
              "author": {
                "login": "bors"
              }
            },
            {
              "__typename": "RenamedTitleEvent"
            },
            {
              "__typename": "ClosedEvent",
              "id": "CE_lADOFcwZ1c5wk5pJzwAAAAJpGCsB",
              "createdAt": "2023-09-12T23:49:57Z"
            },
            {
              "__typename": "HeadRefDeletedEvent",
              "id": "HRDE_lADOFcwZ1c5wk5pJzwAAAAJpGDWC",
              "createdAt": "2023-09-12T23:50:08Z"
            },
            {
              "__typename": "ReferencedEvent"
            }
          ]
        }
      }
    }
  }
}
