{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 224,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "kim-em"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "```\r\nexample (h : 1 < 0) : False := by hint\r\nexample {P Q : Prop} (p : P) (f : P → Q) : Q := by hint\r\nexample {P Q R: Prop} (x : P ∧ Q ∧ R ∧ R) : Q ∧ P ∧ R := by hint\r\nexample {a b : ℚ} (h : a < b) : ¬ b < a := by hint\r\nexample : 37^2 - 35^2 = 72 * 2 := by hint\r\nexample : Nat.Prime 37 := by hint\r\n```\r\n\r\nTries out any tactics registered using `register_hint tac`, and reports which ones succeed using the new \"Try these: \" multiple suggestion widgets. Tactics that close the goal are highlighted in green. Tactics that succeed but don't close the goal display the new subgoals in the widget. If `tac` produces a \"Try this: \" message, use that instead of `tac`.\r\n\r\nI haven't hooked up `aesop` yet, because of https://github.com/leanprover-community/aesop/issues/85. Similarly for `norm_num`.\r\n\r\nI would like to parallelize this, but I don't think that needs to happen right away.\r\n\r\n---\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n-->\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 10,
        "closed": true,
        "closedAt": "2023-11-16T02:42:47Z",
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c5rvQgb",
              "body": "How does this compare with #5363?",
              "createdAt": "2023-11-13T06:37:29Z",
              "author": {
                "login": "timotree3"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5rve8M",
              "body": "> How does this compare with #5363?\r\n\r\nOh! I had completely failed to notice that. Apologies in particular to @Komyyy.\r\n\r\nI'm impressed how parallel parts of the implementation are. :-) My version uses the new \"Try these:\" widget for providing multiple suggestions (edit: oh, so does @Komyyy's), and also does some additional post-processing to stop if it finds a tactic that closes the goal, and also shows the remaining subgoals for each suggestion in the widget.\r\n\r\n@Komyyy, how should we proceed? Can we combine these into something better than either?",
              "createdAt": "2023-11-13T07:42:04Z",
              "author": {
                "login": "kim-em"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5rvfQi",
              "body": "I will immediately steal the `let tac : Syntax.Tactic := ⟨tac.raw.copyHeadTailInfoFrom .missing⟩` trick, which I presume solves the unreachable tactic warning.\r\n\r\nEdit: nope. I wonder what it is for.",
              "createdAt": "2023-11-13T07:43:21Z",
              "author": {
                "login": "kim-em"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5r2tgG",
              "body": "I integrated my changes:\r\n1. Remove some placeholders for mathport\r\n2. Remove some comments for `add_hint_tactic`\r\n3. Align import\r\n4. Add an new process for `register_hint` to remove following comments\r\n5. Register the `register_hint` syntax as an exception of `UnreachableTactic` linter",
              "createdAt": "2023-11-14T03:50:37Z",
              "author": {
                "login": "Komyyy"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5r35Rv",
              "body": "Thank you, @Komyyy, and apologies again for missing your earlier PR.",
              "createdAt": "2023-11-14T09:12:23Z",
              "author": {
                "login": "kim-em"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5r5FdY",
              "body": "Okay, I have a modification to this that runs all the hint tactics in parallel, and it's lovely. I still need to move some lemmas around to get the imports to work out, so we should merge this in the meantime.",
              "createdAt": "2023-11-14T12:37:49Z",
              "author": {
                "login": "kim-em"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5sGUB8",
              "body": ":v: semorrison can now approve this pull request. To approve and merge a pull request, simply reply with `bors r+`. More detailed instructions are available [here](https://bors.tech/documentation/getting-started/#reviewing-pull-requests).",
              "createdAt": "2023-11-16T01:30:01Z",
              "author": {
                "login": "mathlib-bors"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5sGVka",
              "body": "bors merge",
              "createdAt": "2023-11-16T01:32:38Z",
              "author": {
                "login": "kim-em"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5sGueV",
              "body": "Pull request successfully merged into master.\n\nBuild succeeded:\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/6885135089/job/18728832992)\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/6885135089/job/18728832682)\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/6885135089/job/18728832517)",
              "createdAt": "2023-11-16T02:42:47Z",
              "author": {
                "login": "mathlib-bors"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "32e7f90c4a9d5f792fad0d54bd62beac2e51afd0",
                "additions": 154,
                "deletions": 0,
                "committedDate": "2023-11-12T07:58:32Z",
                "author": {
                  "name": "Scott Morrison",
                  "email": "scott.morrison@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "b00f84d08502e656011fe4da81c16a4ab81ef25f",
                "additions": 3,
                "deletions": 1,
                "committedDate": "2023-11-12T08:01:52Z",
                "author": {
                  "name": "Scott Morrison",
                  "email": "scott.morrison@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "446f17359ed81b6a7e6d5b3cba52d6d4c8248f13",
                "additions": 13,
                "deletions": 0,
                "committedDate": "2023-11-12T08:05:20Z",
                "author": {
                  "name": "Scott Morrison",
                  "email": "scott.morrison@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "a4c98a42f5e25b30b40deee6e1c5e0e850250558",
                "additions": 6,
                "deletions": 7,
                "committedDate": "2023-11-12T08:08:25Z",
                "author": {
                  "name": "Scott Morrison",
                  "email": "scott.morrison@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "f23ebb584d5e6e1e27e5654ca0d1f22031bb8335",
                "additions": 1,
                "deletions": 2,
                "committedDate": "2023-11-12T08:13:41Z",
                "author": {
                  "name": "Scott Morrison",
                  "email": "scott.morrison@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "3fa0c62c40cd1ae34473397cb7bcfce9d603221a",
                "additions": 5786,
                "deletions": 4450,
                "committedDate": "2023-11-14T01:39:55Z",
                "author": {
                  "name": "Komyyy",
                  "email": "pol_tta@outlook.jp"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "8f09de2d93350a842a3fc33fbb7f0c5ff5acaed8",
                "additions": 17,
                "deletions": 20,
                "committedDate": "2023-11-14T03:40:14Z",
                "author": {
                  "name": "Komyyy",
                  "email": "pol_tta@outlook.jp"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "90c6dfe48f62521c5fd18d0cab69b0b132483e9b",
                "additions": 871,
                "deletions": 800,
                "committedDate": "2023-11-14T10:01:26Z",
                "author": {
                  "name": "Scott Morrison",
                  "email": "scott.morrison@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "6dfdb9d984488b4ace66716033e1924f201a7f9c",
                "additions": 9,
                "deletions": 7,
                "committedDate": "2023-11-15T00:30:41Z",
                "author": {
                  "name": "Scott Morrison",
                  "email": "scott.morrison@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "ec48fd0d9bb906776ecb080d1f573d7ac132aaf1",
                "additions": 0,
                "deletions": 2,
                "committedDate": "2023-11-15T00:31:56Z",
                "author": {
                  "name": "Scott Morrison",
                  "email": "scott.morrison@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "d6a2989b6b750e88708fd058ee5cd08a2d047d18",
                "additions": 36,
                "deletions": 0,
                "committedDate": "2023-11-15T00:34:39Z",
                "author": {
                  "name": "Scott Morrison",
                  "email": "scott.morrison@gmail.com"
                },
                "statusCheckRollup": null
              }
            }
          ]
        },
        "createdAt": "2023-11-12T08:03:03Z",
        "deletions": 21,
        "files": {
          "nodes": [
            {
              "path": "Mathlib.lean",
              "additions": 1,
              "deletions": 0
            },
            {
              "path": "Mathlib/Mathport/Attributes.lean",
              "additions": 0,
              "deletions": 3
            },
            {
              "path": "Mathlib/Mathport/Syntax.lean",
              "additions": 1,
              "deletions": 2
            },
            {
              "path": "Mathlib/Tactic.lean",
              "additions": 1,
              "deletions": 0
            },
            {
              "path": "Mathlib/Tactic/Common.lean",
              "additions": 25,
              "deletions": 9
            },
            {
              "path": "Mathlib/Tactic/Hint.lean",
              "additions": 130,
              "deletions": 0
            },
            {
              "path": "Mathlib/Tactic/Linarith.lean",
              "additions": 12,
              "deletions": 0
            },
            {
              "path": "Mathlib/Tactic/Linarith/Frontend.lean",
              "additions": 0,
              "deletions": 6
            },
            {
              "path": "scripts/lint-style.py",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "test/hint.lean",
              "additions": 53,
              "deletions": 0
            }
          ]
        },
        "headRefName": "hint_tactic",
        "headRefOid": "d6a2989b6b750e88708fd058ee5cd08a2d047d18",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c5fOpP2",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
              "color": "06e039",
              "name": "ready-to-merge"
            }
          ]
        },
        "latestReviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5nTnNO",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "adomani"
              },
              "submittedAt": "2023-11-15T23:08:54Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5nTnLT",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "j-loreaux"
              },
              "submittedAt": "2023-11-15T23:04:46Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5nUJxR",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "kmill"
              },
              "submittedAt": "2023-11-16T01:29:59Z"
            }
          ]
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "UNKNOWN",
        "mergeable": "UNKNOWN",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 8363,
        "potentialMergeCommit": null,
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": null,
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5nLUsL",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "kmill"
              },
              "submittedAt": "2023-11-15T00:20:41Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5nLZMk",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "kim-em"
              },
              "submittedAt": "2023-11-15T00:26:48Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5nLZjO",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "kim-em"
              },
              "submittedAt": "2023-11-15T00:28:50Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5nLZ7G",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "kim-em"
              },
              "submittedAt": "2023-11-15T00:30:55Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5nLaD4",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "kim-em"
              },
              "submittedAt": "2023-11-15T00:31:41Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5nLaT6",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "kim-em"
              },
              "submittedAt": "2023-11-15T00:32:53Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5nLayV",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "kim-em"
              },
              "submittedAt": "2023-11-15T00:35:23Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5nLbFt",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "kim-em"
              },
              "submittedAt": "2023-11-15T00:37:06Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5nTnLT",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "j-loreaux"
              },
              "submittedAt": "2023-11-15T23:04:46Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5nTnNO",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "adomani"
              },
              "submittedAt": "2023-11-15T23:08:54Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5nUGDm",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "kim-em"
              },
              "submittedAt": "2023-11-16T01:08:07Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5nUGE8",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "kim-em"
              },
              "submittedAt": "2023-11-16T01:08:14Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5nUJxR",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "kmill"
              },
              "submittedAt": "2023-11-16T01:29:59Z"
            }
          ]
        },
        "reviewThreads": {
          "nodes": [
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5TDozV",
                    "body": "What's the reason for this change?\r\n\r\nCould you revert changing the block comment to line comments, and maybe switch to `/-!` so that it shows up in the generated docs?",
                    "createdAt": "2023-11-15T00:03:58Z",
                    "author": {
                      "login": "kmill"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5TDsnP",
                    "body": "Sorry, yes. The linter was complaining and I forgot to revert this after finding a better solution.",
                    "createdAt": "2023-11-15T00:26:48Z",
                    "author": {
                      "login": "kim-em"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5TDs6F",
                    "body": "It can't be `/-!` because it needs to come before the imports for readability.",
                    "createdAt": "2023-11-15T00:28:50Z",
                    "author": {
                      "login": "kim-em"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5TDtOo",
                    "body": "I think it's okay to just put it after the imports, after all.",
                    "createdAt": "2023-11-15T00:30:55Z",
                    "author": {
                      "login": "kim-em"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5TDo51",
                    "body": "I don't think we align tactic modules, right?",
                    "createdAt": "2023-11-15T00:04:34Z",
                    "author": {
                      "login": "kmill"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5TDtXd",
                    "body": "Yes, I agree. @Komyyy added this one, but I don't think will object to removing it.",
                    "createdAt": "2023-11-15T00:31:40Z",
                    "author": {
                      "login": "kim-em"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5TDp_c",
                    "body": "I'm curious if this is the right thing to do. I know there's `tac.raw.unsetTrailing` as well, which doesn't clear source position information.\r\n\r\nMaybe source position doesn't matter since it's not going to be used for any error reporting.",
                    "createdAt": "2023-11-15T00:11:09Z",
                    "author": {
                      "login": "kmill"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5TDuRx",
                    "body": "I'm not sure.\r\n\r\nIf anything, removing all source position here seems safer: it would be terribly wrong to use it!",
                    "createdAt": "2023-11-15T00:37:06Z",
                    "author": {
                      "login": "kim-em"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5TDraM",
                    "body": "Could we use `#guard_msgs` to see what these are testing?",
                    "createdAt": "2023-11-15T00:19:55Z",
                    "author": {
                      "login": "kmill"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5TDtk-",
                    "body": "Sure. I'm a little worried that once I parallelize the tactic execution the output will become nondeterministic, but we can cross that bridge later.",
                    "createdAt": "2023-11-15T00:32:53Z",
                    "author": {
                      "login": "kim-em"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5TDuAc",
                    "body": "There's also one that will change once `simp` stops calling `decide`, but again, I'll fix that later.",
                    "createdAt": "2023-11-15T00:35:23Z",
                    "author": {
                      "login": "kim-em"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5TJW0O",
                    "body": "Should `tauto` be included here?",
                    "createdAt": "2023-11-15T23:04:45Z",
                    "author": {
                      "login": "j-loreaux"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5TJo1-",
                    "body": "At present there is no way to remove a `register_hint` (without PRing to Mathlib), but it is easy to add.\r\n\r\nCan I suggest that intentionally undershoot on this PR, and then let people try it out and revise the list?",
                    "createdAt": "2023-11-16T01:08:07Z",
                    "author": {
                      "login": "kim-em"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5TJW1e",
                    "body": "```suggestion\r\nregister_hint exact?\r\nregister_hint constructor\r\n\r\n```\r\nI think that Lean 3 had it and in Lean 4 is maybe more useful.\r\nI wonder whether `split_ifs` is also an option.",
                    "createdAt": "2023-11-15T23:04:55Z",
                    "author": {
                      "login": "adomani"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5TJo21",
                    "body": "At present there is no way to remove a `register_hint` (without PRing to Mathlib), but it is easy to add.\r\n\r\nCan I suggest that intentionally undershoot on this PR, and then let people try it out and revise the list?",
                    "createdAt": "2023-11-16T01:08:14Z",
                    "author": {
                      "login": "kim-em"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5TJrpJ",
                    "body": "I'm not sure this should this be part of this PR, but if you think it's OK I'll let it slide.\r\n\r\nI think this is a good first version of the tactic, and I'm happy if you merged it.\r\n\r\nbors d+",
                    "createdAt": "2023-11-16T01:29:59Z",
                    "author": {
                      "login": "kmill"
                    }
                  }
                ]
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjQ3Nzk1Ng==",
              "login": "kim-em"
            },
            {
              "id": "MDQ6VXNlcjY0NzM0Mzg=",
              "login": "timotree3"
            },
            {
              "id": "MDQ6VXNlcjUyODQzODY4",
              "login": "Komyyy"
            },
            {
              "id": "MDQ6VXNlcjIzNTMwNw==",
              "login": "kmill"
            },
            {
              "id": "MDQ6VXNlcjg5MjA1OTg=",
              "login": "j-loreaux"
            },
            {
              "id": "MDQ6VXNlcjI5NDY3NzQ1",
              "login": "adomani"
            }
          ]
        },
        "state": "CLOSED",
        "statusCheckRollup": null,
        "title": "[Merged by Bors] - feat: the 'hint' tactic",
        "updatedAt": "2023-11-16T02:42:51Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/8363",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "32e7f90c4a9d5f792fad0d54bd62beac2e51afd0"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "b00f84d08502e656011fe4da81c16a4ab81ef25f"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c52kj8NzwAAAAKLt321",
              "createdAt": "2023-11-12T08:03:03Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c52kj8NzwAAAAKLt323",
              "createdAt": "2023-11-12T08:03:03Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKteTVQ",
                "name": "awaiting-CI"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "446f17359ed81b6a7e6d5b3cba52d6d4c8248f13"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "a4c98a42f5e25b30b40deee6e1c5e0e850250558"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "f23ebb584d5e6e1e27e5654ca0d1f22031bb8335"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c52kj8NzwAAAAKLuYkQ",
              "createdAt": "2023-11-12T09:29:13Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKteTVQ",
                "name": "awaiting-CI"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5rvQgb",
              "createdAt": "2023-11-13T06:37:29Z",
              "body": "How does this compare with #5363?",
              "author": {
                "login": "timotree3"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5rve8M",
              "createdAt": "2023-11-13T07:42:04Z",
              "body": "> How does this compare with #5363?\r\n\r\nOh! I had completely failed to notice that. Apologies in particular to @Komyyy.\r\n\r\nI'm impressed how parallel parts of the implementation are. :-) My version uses the new \"Try these:\" widget for providing multiple suggestions (edit: oh, so does @Komyyy's), and also does some additional post-processing to stop if it finds a tactic that closes the goal, and also shows the remaining subgoals for each suggestion in the widget.\r\n\r\n@Komyyy, how should we proceed? Can we combine these into something better than either?",
              "author": {
                "login": "kim-em"
              }
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5rvfQi",
              "createdAt": "2023-11-13T07:43:21Z",
              "body": "I will immediately steal the `let tac : Syntax.Tactic := ⟨tac.raw.copyHeadTailInfoFrom .missing⟩` trick, which I presume solves the unreachable tactic warning.\r\n\r\nEdit: nope. I wonder what it is for.",
              "author": {
                "login": "kim-em"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c52kj8NzwAAAAKMmcmB",
              "createdAt": "2023-11-14T01:39:30Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c52kj8NzwAAAAKMmcmF",
              "createdAt": "2023-11-14T01:39:30Z",
              "label": {
                "id": "MDU6TGFiZWwzMjcxMjQ0NzU5",
                "name": "WIP"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "3fa0c62c40cd1ae34473397cb7bcfce9d603221a"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "8f09de2d93350a842a3fc33fbb7f0c5ff5acaed8"
              }
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5PWpqz",
              "createdAt": "2023-11-14T03:41:02Z",
              "source": {
                "id": "PR_kwDOFcwZ1c5TnRJZ",
                "title": "feat: port tactic `hint`",
                "url": "https://github.com/leanprover-community/mathlib4/pull/5363"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c52kj8NzwAAAAKMotOJ",
              "createdAt": "2023-11-14T03:41:13Z",
              "label": {
                "id": "MDU6TGFiZWwzMjcxMjQ0NzU5",
                "name": "WIP"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c52kj8NzwAAAAKMotOK",
              "createdAt": "2023-11-14T03:41:13Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c52kj8NzwAAAAKMotOM",
              "createdAt": "2023-11-14T03:41:13Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKteTVQ",
                "name": "awaiting-CI"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5r2tgG",
              "createdAt": "2023-11-14T03:50:37Z",
              "body": "I integrated my changes:\r\n1. Remove some placeholders for mathport\r\n2. Remove some comments for `add_hint_tactic`\r\n3. Align import\r\n4. Add an new process for `register_hint` to remove following comments\r\n5. Register the `register_hint` syntax as an exception of `UnreachableTactic` linter",
              "author": {
                "login": "Komyyy"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c52kj8NzwAAAAKMp_VE",
              "createdAt": "2023-11-14T04:55:44Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKteTVQ",
                "name": "awaiting-CI"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5r35Rv",
              "createdAt": "2023-11-14T09:12:23Z",
              "body": "Thank you, @Komyyy, and apologies again for missing your earlier PR.",
              "author": {
                "login": "kim-em"
              }
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "90c6dfe48f62521c5fd18d0cab69b0b132483e9b"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5r5FdY",
              "createdAt": "2023-11-14T12:37:49Z",
              "body": "Okay, I have a modification to this that runs all the hint tactics in parallel, and it's lovely. I still need to move some lemmas around to get the imports to work out, so we should merge this in the meantime.",
              "author": {
                "login": "kim-em"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5nLUsL",
              "createdAt": "2023-11-15T00:03:58Z",
              "body": "",
              "author": {
                "login": "kmill"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "6dfdb9d984488b4ace66716033e1924f201a7f9c"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "ec48fd0d9bb906776ecb080d1f573d7ac132aaf1"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "d6a2989b6b750e88708fd058ee5cd08a2d047d18"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5nTnLT",
              "createdAt": "2023-11-15T23:04:45Z",
              "body": "",
              "author": {
                "login": "j-loreaux"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5nTnNO",
              "createdAt": "2023-11-15T23:04:54Z",
              "body": "",
              "author": {
                "login": "adomani"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5nUJxR",
              "createdAt": "2023-11-16T01:29:59Z",
              "body": "",
              "author": {
                "login": "kmill"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5sGUB8",
              "createdAt": "2023-11-16T01:30:01Z",
              "body": ":v: semorrison can now approve this pull request. To approve and merge a pull request, simply reply with `bors r+`. More detailed instructions are available [here](https://bors.tech/documentation/getting-started/#reviewing-pull-requests).",
              "author": {
                "login": "mathlib-bors"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5sGVka",
              "createdAt": "2023-11-16T01:32:38Z",
              "body": "bors merge",
              "author": {
                "login": "kim-em"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c52kj8NzwAAAAKOHfPt",
              "createdAt": "2023-11-16T01:32:49Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
                "name": "ready-to-merge"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c52kj8NzwAAAAKOHfRA",
              "createdAt": "2023-11-16T01:32:50Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5sGueV",
              "createdAt": "2023-11-16T02:42:47Z",
              "body": "Pull request successfully merged into master.\n\nBuild succeeded:\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/6885135089/job/18728832992)\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/6885135089/job/18728832682)\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/6885135089/job/18728832517)",
              "author": {
                "login": "mathlib-bors"
              }
            },
            {
              "__typename": "RenamedTitleEvent"
            },
            {
              "__typename": "ClosedEvent",
              "id": "CE_lADOFcwZ1c52kj8NzwAAAAKOJS14",
              "createdAt": "2023-11-16T02:42:48Z"
            },
            {
              "__typename": "HeadRefDeletedEvent",
              "id": "HRDE_lADOFcwZ1c52kj8NzwAAAAKOJS7T",
              "createdAt": "2023-11-16T02:42:51Z"
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5PanJC",
              "createdAt": "2023-11-17T02:12:04Z",
              "source": {
                "id": "I_kwDOFcwZ1c5SLg7U",
                "title": "tactic porting tracking issue",
                "url": "https://github.com/leanprover-community/mathlib4/issues/430"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "ReferencedEvent"
            }
          ]
        }
      }
    }
  }
}
