{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 107,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "lambda-fairy"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "I take a different approach to the [`lean-automata` version](https://github.com/atarnoam/lean-automata/blob/main/src/regular_languages.lean) by @atarnoam. Rather than taking a `Quotient` by the Nerode relation, I instead talk about the the function `leftQuotient := fun x => { y | x ++ y âˆˆ L }`. This is more direct as it avoids going through the `Quotient` API. The Nerode relation can be defined later (not in this PR) as the [kernel](https://leanprover-community.github.io/mathlib4_docs/Mathlib/Data/Setoid/Basic.html#Setoid.ker) of this function.\r\n\r\n---\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n-->\r\n\r\n- [x] depends on: #11372\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 3,
        "closed": true,
        "closedAt": "2025-01-20T16:09:21Z",
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c52sZWY",
              "body": "I had to meditate for about an hour about what `Set.range L.leftQuotient` means, but I get it now!\r\nI am wondering if there is a cognitive shortcut that could be used to build a mental model of what `Set.range L.leftQuotient` means. If you have one, it would be nice to add it as a comment, probably on the main theorem.\r\n\r\nNice PR, good job!\r\nI left some minor comments (no need to remind you, as you have already started answering them while I was still reviewing).",
              "createdAt": "2024-03-12T10:48:49Z",
              "author": {
                "login": "madvorak"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c524Ffd",
              "body": "Thanks YaÃ«l and Martin for the review!\r\n\r\nI think the main takeaway here is I should split this into separate PRs:\r\n\r\n1. Define `DFA.acceptsFrom`\r\n2. Define the equiv `DFA Î± Ïƒ â‰ƒ DFA Î±' Ïƒ'`\r\n3. Define `Language.IsRegular`\r\n4. Prove Myhillâ€“Nerode (this PR)\r\n\r\nwith dependencies 1 â†’ 4, 2 â†’ 3, 3 â†’ 4.\r\n\r\nSo I'll focus on landing those dependencies first.",
              "createdAt": "2024-03-13T13:31:13Z",
              "author": {
                "login": "lambda-fairy"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5241PQ",
              "body": "I think 1 and 2 can be made a single PR ",
              "createdAt": "2024-03-13T15:03:33Z",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c53BqRe",
              "body": "> Rather than taking a `Quotient` by the Nerode relation, I instead talk about the the function `fun x => { y | x ++ y âˆˆ L }`. This ends up simpler as we can avoid fiddling with the `Quotient` API.\r\n\r\nIt's not immediately clear to me that this is actually the case, but I can reevaluate once the dependencies land.",
              "createdAt": "2024-03-14T09:01:29Z",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6ExIrD",
              "body": "This PR/issue depends on:\n* ~~leanprover-community/mathlib4#11372~~\nBy **[Dependent Issues](https://github.com/z0al/dependent-issues)** (ðŸ¤–). Happy coding!\n<!-- By Dependent Issues (Action) - DO NOT REMOVE -->",
              "createdAt": "2024-07-14T20:21:22Z",
              "author": {
                "login": "leanprover-community-mathlib4-bot"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6F1nyL",
              "body": "Hi @lambda-fairy now that the dependent PR has been merged, could you please merge master and resolve the conflicts?",
              "createdAt": "2024-07-23T14:33:27Z",
              "author": {
                "login": "jcommelin"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6Xa3gN",
              "body": "Apologies for the delay. I'll take a look this weekend.\r\n\r\nNote to self: Since #13554 landed, we can reference that definition of `IsRegular`.",
              "createdAt": "2024-12-13T02:32:09Z",
              "author": {
                "login": "lambda-fairy"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6XbUzj",
              "body": "### PR summary [49c761161d](https://github.com/leanprover-community/mathlib4/pull/11311/commits/49c761161d8f1bf0625493abb889228454001b1f)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n| `Mathlib.Computability.MyhillNerode` (new file)|674|\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ IsRegular.finite_range_leftQuotient`\n`+ IsRegular.of_finite_range_leftQuotient`\n`+ accepts_toDFA`\n`+ isRegular_iff_finite_range_leftQuotient`\n`+ leftQuotient`\n`+ leftQuotient_accepts`\n`+ leftQuotient_accepts_apply`\n`+ leftQuotient_append`\n`+ leftQuotient_nil`\n`+ mem_accept_toDFA`\n`+ mem_leftQuotient`\n`+ start_toDFA`\n`+ step_toDFA`\n`+ toDFA`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>\n\n---\n\n<details><summary>No changes to technical debt.</summary>\n\nYou can run this locally as\n```\n./scripts/technical-debt-metrics.sh pr_summary\n```\n* The `relative` value is the weighted *sum* of the differences with weight given by the *inverse* of the current value of the statistic.\n* The `absolute` value is the `relative` value divided by the total sum of the inverses of the current values (i.e. the weighted *average* of the differences).\n</details>",
              "createdAt": "2024-12-13T04:23:48Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6Xkeqv",
              "body": "> > Rather than taking a `Quotient` by the Nerode relation, I instead talk about the the function `fun x => { y | x ++ y âˆˆ L }`. This ends up simpler as we can avoid fiddling with the `Quotient` API.\r\n> \r\n> It's not immediately clear to me that this is actually the case, but I can reevaluate once the dependencies land.\r\n\r\nNow I understand quotients better, I think it's overall a wash. But note that `leftQuotient` is the more primitive concept here, as the relation can be derived from it via [`Setoid.ker`](https://leanprover-community.github.io/mathlib4_docs/Mathlib/Data/Setoid/Basic.html#Setoid.ker) (and [`Setoid.quotientKerEquivRange`](https://leanprover-community.github.io/mathlib4_docs/Mathlib/Data/Setoid/Basic.html#Setoid.quotientKerEquivRange)). So if we do add the Nerode relation later, I think it would built on top of `leftQuotient`, so the concepts developed here will remain useful.",
              "createdAt": "2024-12-14T07:18:58Z",
              "author": {
                "login": "lambda-fairy"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6aijNn",
              "body": "ðŸš€ Pull request has been placed on the maintainer queue by YaelDillies.",
              "createdAt": "2025-01-15T12:44:49Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6bIWW1",
              "body": "Build failed (retrying...):\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/12869839601/job/35879553989)",
              "createdAt": "2025-01-20T15:05:50Z",
              "author": {
                "login": "mathlib-bors"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6bI5z1",
              "body": "Pull request successfully merged into master.\n\nBuild succeeded:\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/12871073063/job/35883559357)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/12871073063/job/35883558997)",
              "createdAt": "2025-01-20T16:09:20Z",
              "author": {
                "login": "mathlib-bors"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "7eee683cd93eb9a54dba95b59a17f2dac1effb2c",
                "additions": 144,
                "deletions": 1,
                "committedDate": "2025-01-12T05:17:22Z",
                "author": {
                  "name": "Chris Wong",
                  "email": "lambda.fairy@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "570f29e79459601c42d3bcd4bffecc65755b0dd0",
                "additions": 2,
                "deletions": 4,
                "committedDate": "2025-01-12T05:17:23Z",
                "author": {
                  "name": "Chris Wong",
                  "email": "lambda.fairy@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "b31086b5c8224713202427943564c0059c7c6ae8",
                "additions": 2,
                "deletions": 2,
                "committedDate": "2025-01-12T05:17:23Z",
                "author": {
                  "name": "Chris Wong",
                  "email": "lambda.fairy@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "98ef0cb4ccba9bb879389f8bbe6a4370fcf061b2",
                "additions": 1,
                "deletions": 1,
                "committedDate": "2025-01-12T05:17:23Z",
                "author": {
                  "name": "Chris Wong",
                  "email": "lambda.fairy@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "d1018d6e00aeb554cd831c3c5b3bdec72acf0ad9",
                "additions": 4,
                "deletions": 3,
                "committedDate": "2025-01-12T05:17:23Z",
                "author": {
                  "name": "Chris Wong",
                  "email": "lambda.fairy@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "5b43be90f429b0a3417035a2ffad27e87ea20b76",
                "additions": 1,
                "deletions": 0,
                "committedDate": "2025-01-12T05:17:23Z",
                "author": {
                  "name": "Chris Wong",
                  "email": "lambda.fairy@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "82c9926cf8da6a6df509aa4daad1bd74164791fd",
                "additions": 1,
                "deletions": 36,
                "committedDate": "2025-01-12T05:17:23Z",
                "author": {
                  "name": "Chris Wong",
                  "email": "lambda.fairy@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "6561cc515cf043acc130a09ed1320515c9d488b9",
                "additions": 1,
                "deletions": 1,
                "committedDate": "2025-01-12T05:17:23Z",
                "author": {
                  "name": "Chris Wong",
                  "email": "lambda.fairy@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "96911fb76346e64b3f4b4bab277b27f178d9b68b",
                "additions": 12,
                "deletions": 18,
                "committedDate": "2025-01-12T05:17:23Z",
                "author": {
                  "name": "Chris Wong",
                  "email": "lambda.fairy@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "a55769fe5191648a97ba6685dff9d7b3b521bfbf",
                "additions": 5,
                "deletions": 5,
                "committedDate": "2025-01-12T05:17:23Z",
                "author": {
                  "name": "Chris Wong",
                  "email": "lambda.fairy@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "6e66a6eddb81d129d94831d787f1f84ea12914cd",
                "additions": 1,
                "deletions": 2,
                "committedDate": "2025-01-12T05:17:23Z",
                "author": {
                  "name": "Chris Wong",
                  "email": "lambda.fairy@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "d87235bdd2656d7bcf8fc8b326fbcf4c275a8efb",
                "additions": 1,
                "deletions": 2,
                "committedDate": "2025-01-12T05:17:23Z",
                "author": {
                  "name": "Chris Wong",
                  "email": "lambda.fairy@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "7170a42ae0ca5c2a3a92f6009c4f5dc75017000e",
                "additions": 1,
                "deletions": 1,
                "committedDate": "2025-01-12T05:17:23Z",
                "author": {
                  "name": "Chris Wong",
                  "email": "lambda.fairy@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "6b3f47f908536f542121c8e92a6e7cd53ebdb2ef",
                "additions": 1,
                "deletions": 2,
                "committedDate": "2025-01-12T05:17:24Z",
                "author": {
                  "name": "Chris Wong",
                  "email": "lambda.fairy@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "ee77e7b6ba37b5d9def9a2b34fbf4548b3904fc5",
                "additions": 2,
                "deletions": 2,
                "committedDate": "2025-01-12T05:17:24Z",
                "author": {
                  "name": "Chris Wong",
                  "email": "lambda.fairy@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "acee463954c4de6e2cfd021bcc4dbe5c0adfc97c",
                "additions": 13,
                "deletions": 13,
                "committedDate": "2025-01-12T05:17:24Z",
                "author": {
                  "name": "Chris Wong",
                  "email": "lambda.fairy@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "11a76a53b3d4b03f1d39d4c884d7dec563e1d3b6",
                "additions": 5,
                "deletions": 3,
                "committedDate": "2025-01-12T05:17:24Z",
                "author": {
                  "name": "Chris Wong",
                  "email": "lambda.fairy@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "67004031c228b7f19f3e3abff7c4aaaf396a458d",
                "additions": 1,
                "deletions": 1,
                "committedDate": "2025-01-12T05:17:24Z",
                "author": {
                  "name": "Chris Wong",
                  "email": "lambda.fairy@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "89d701b0f831f93977f0331722651265f7429af2",
                "additions": 2,
                "deletions": 3,
                "committedDate": "2025-01-12T05:17:24Z",
                "author": {
                  "name": "Chris Wong",
                  "email": "lambda.fairy@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIQwL7nw",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12730734589/job/35484007327"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIQwe5MA",
                        "name": "set_pr_emoji",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12730899169/job/35484318000"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIQwL9DA",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12730734883/job/35484007692"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIQwL9GQ",
                        "name": "post-or-update-summary-comment",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12730734890/job/35484007705"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIQwL7CA",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12730734591/job/35484007176"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIQwL9lQ",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12730734895/job/35484007829"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIQwL7Kg",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12730734589/job/35484007210"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIQwL7Yw",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12730734591/job/35484007267"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIQwL9RQ",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12730734895/job/35484007749"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIQwL79w",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12730734589/job/35484007415"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIQwSJkg",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12730734591/job/35484109202"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIQwMDXg",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/35484009310"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIQwMVrg",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=11311&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "b96fb503b7339a4930a0cff51c383e5039f49548",
                "additions": 1,
                "deletions": 2,
                "committedDate": "2025-01-12T05:44:44Z",
                "author": {
                  "name": "Chris Wong",
                  "email": "lambda.fairy@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIQwfaSQ",
                        "name": "Lint style",
                        "conclusion": "CANCELLED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12730903068/job/35484326473"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIQwfaaQ",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12730903070/job/35484326505"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIQwfa0g",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12730903231/job/35484326610"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIQwfa8g",
                        "name": "post-or-update-summary-comment",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12730903238/job/35484326642"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIQwfbMw",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12730903233/job/35484326707"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIQwfZ7A",
                        "name": "Build",
                        "conclusion": "CANCELLED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12730903068/job/35484326380"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIQwfaAQ",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12730903070/job/35484326401"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIQwfa5w",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12730903233/job/35484326631"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIQwf8Lg",
                        "name": "Post-CI job",
                        "conclusion": "CANCELLED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12730903068/job/35484335150"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIQwfazw",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12730903070/job/35484326607"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIQwfgIw",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/35484327971"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIQwfw-Q",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=11311&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "44135f2c4ef2227ab0f7bc627373144fe94f7e28",
                "additions": 1,
                "deletions": 0,
                "committedDate": "2025-01-12T05:45:35Z",
                "author": {
                  "name": "Chris Wong",
                  "email": "lambda.fairy@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIQwqU6Q",
                        "name": "Fix style issues from lint",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12730989011/job/35484505321"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIQwfzhA",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12730906360/job/35484332932"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIQwqUsQ",
                        "name": "Add ready-to-merge or delegated label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12730989008/job/35484505265"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIQwfzKw",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12730906362/job/35484332843"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIQwqUkQ",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12730989006/job/35484505233"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIQwfzEA",
                        "name": "post-or-update-summary-comment",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12730906355/job/35484332816"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIQwf8kg",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12730906366/job/35484335250"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIQwfzGg",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12730906357/job/35484332826"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIQwfzyA",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12730906360/job/35484333000"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIQwf8zg",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12730906366/job/35484335310"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIQwfzaA",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12730906357/job/35484332904"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIQwf0Dg",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12730906360/job/35484333070"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIQwk-UQ",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12730906366/job/35484417617"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIQwf4NA",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/35484334132"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIQwgEBA",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=11311&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "49c761161d8f1bf0625493abb889228454001b1f",
                "additions": 4,
                "deletions": 0,
                "committedDate": "2025-01-15T12:04:41Z",
                "author": {
                  "name": "Chris Wong",
                  "email": "lambda.fairy@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIWna63g",
                        "name": "set_pr_emoji",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12869202601/job/35877468894"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAITM2LjA",
                        "name": "Fix style issues from lint",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12787966682/job/35648277388"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAITOq6ZA",
                        "name": "Fix style issues from lint",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12788592922/job/35650189924"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAITMtRBQ",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12787920199/job/35648131333"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAITM35dw",
                        "name": "set_pr_emoji",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12787975944/job/35648305527"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAITM2Leg",
                        "name": "Add ready-to-merge or delegated label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12787966675/job/35648277370"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAITOq5KQ",
                        "name": "Add ready-to-merge or delegated label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12788592926/job/35650189609"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIWnaUcQ",
                        "name": "Add ready-to-merge or delegated label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12869199669/job/35877459057"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAITMtZXg",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12787921029/job/35648133470"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAITM2Lkg",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12787966684/job/35648277394"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAITOq5Kw",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12788592920/job/35650189611"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIWnaUqA",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12869199659/job/35877459112"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAITMtZuQ",
                        "name": "post-or-update-summary-comment",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12787921023/job/35648133561"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIWnaUsA",
                        "name": "Fix style issues from lint",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12869199666/job/35877459120"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAITMtRAA",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12787920204/job/35648131328"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAITMtbnA",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12787921052/job/35648134044"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAITMtS_g",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12787920199/job/35648131838"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAITMtSfQ",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12787920204/job/35648131709"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAITMtaJA",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12787921052/job/35648133668"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAITMtUdg",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12787920199/job/35648132214"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAITNIt-A",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12787920204/job/35648581112"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAITMt2KQ",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/35648140841"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAITMvWVw",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=11311&login=leanprover-community&repository=mathlib4"
                      },
                      {
                        "__typename": "StatusContext",
                        "id": "SC_kwDOFcwZ1c8AAAAH2pRtFw",
                        "context": "bors",
                        "state": "SUCCESS",
                        "targetUrl": "https://mathlib-bors-ca18eefec4cb.herokuapp.com/batches/8700",
                        "description": "Build succeeded"
                      }
                    ]
                  }
                }
              }
            }
          ]
        },
        "createdAt": "2024-03-12T07:17:04Z",
        "deletions": 3,
        "files": {
          "nodes": [
            {
              "path": "Mathlib.lean",
              "additions": 1,
              "deletions": 0
            },
            {
              "path": "Mathlib/Computability/MyhillNerode.lean",
              "additions": 103,
              "deletions": 0
            },
            {
              "path": "docs/1000.yaml",
              "additions": 3,
              "deletions": 3
            }
          ]
        },
        "headRefName": "lambda-fairy/nerode",
        "headRefOid": "49c761161d8f1bf0625493abb889228454001b1f",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c5pVsG0",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
              "color": "06e039",
              "name": "ready-to-merge"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABb5aSCQ",
              "color": "8BBA68",
              "name": "new-contributor"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABgS7AmA",
              "color": "33DBEC",
              "name": "t-computability"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABh1mAHA",
              "color": "6BEB7E",
              "name": "maintainer-merge"
            }
          ]
        },
        "latestReviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c6XD8BQ",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "grunweg"
              },
              "submittedAt": "2025-01-07T13:51:31Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6Yu0aC",
              "body": "Thanks :tada:\r\n\r\nbors merge",
              "state": "COMMENTED",
              "author": {
                "login": "jcommelin"
              },
              "submittedAt": "2025-01-20T13:34:34Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6YJg6r",
              "body": "Thanks! ðŸš€\r\n\r\nmaintainer merge",
              "state": "APPROVED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2025-01-15T12:44:28Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6VJ8uv",
              "body": "",
              "state": "APPROVED",
              "author": {
                "login": "madvorak"
              },
              "submittedAt": "2024-12-13T14:31:12Z"
            }
          ]
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "UNKNOWN",
        "mergeable": "UNKNOWN",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 11311,
        "potentialMergeCommit": null,
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": [
                {
                  "login": "atarnoam"
                },
                {
                  "login": "lambda-fairy"
                }
              ]
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": "APPROVED",
        "reviewRequests": {
          "nodes": [
            {
              "requestedReviewer": {
                "id": "MDQ6VXNlcjQyNTI2MA==",
                "login": "eric-wieser"
              }
            }
          ]
        },
        "reviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5zENth",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2024-03-12T09:14:34Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5zEjZ0",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "madvorak"
              },
              "submittedAt": "2024-03-12T09:47:35Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5zEkwJ",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "madvorak"
              },
              "submittedAt": "2024-03-12T09:49:47Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5zEmC3",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "madvorak"
              },
              "submittedAt": "2024-03-12T09:52:09Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5zEnp7",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "madvorak"
              },
              "submittedAt": "2024-03-12T09:54:59Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5zEsX7",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "madvorak"
              },
              "submittedAt": "2024-03-12T10:03:03Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5zEtbH",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "madvorak"
              },
              "submittedAt": "2024-03-12T10:05:04Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5zE65y",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "lambda-fairy"
              },
              "submittedAt": "2024-03-12T10:30:52Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5zE9Ju",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "lambda-fairy"
              },
              "submittedAt": "2024-03-12T10:35:28Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5zE-UP",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "madvorak"
              },
              "submittedAt": "2024-03-12T10:37:45Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5zE_CD",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "madvorak"
              },
              "submittedAt": "2024-03-12T10:38:59Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5zFLhL",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "lambda-fairy"
              },
              "submittedAt": "2024-03-12T11:00:21Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5zFUiA",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2024-03-12T11:19:43Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5zF2Au",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "madvorak"
              },
              "submittedAt": "2024-03-12T12:25:15Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5zSQ7X",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "lambda-fairy"
              },
              "submittedAt": "2024-03-13T13:21:34Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5zSSTz",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "lambda-fairy"
              },
              "submittedAt": "2024-03-13T13:23:53Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5zSZ_X",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "madvorak"
              },
              "submittedAt": "2024-03-13T13:36:28Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5zSbvG",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "lambda-fairy"
              },
              "submittedAt": "2024-03-13T13:39:19Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6CyIdM",
              "body": "I'm excited to see this in Mathlib. Please merge the conflicts and address the comments and hopefully we get it merged soon after that!",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2024-07-23T14:58:01Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6VFq6n",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "lambda-fairy"
              },
              "submittedAt": "2024-12-13T04:48:44Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6VF8OE",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "lambda-fairy"
              },
              "submittedAt": "2024-12-13T05:57:15Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6VJoiw",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "lambda-fairy"
              },
              "submittedAt": "2024-12-13T13:43:27Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6VJsQ2",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "lambda-fairy"
              },
              "submittedAt": "2024-12-13T13:50:44Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6VJykX",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "lambda-fairy"
              },
              "submittedAt": "2024-12-13T14:02:57Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6VJ8uv",
              "body": "",
              "state": "APPROVED",
              "author": {
                "login": "madvorak"
              },
              "submittedAt": "2024-12-13T14:31:12Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6VKDNK",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "lambda-fairy"
              },
              "submittedAt": "2024-12-13T14:34:10Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6W173u",
              "body": "Sorry for the delay. Very nice PR!\r\n\r\nCould you please add your name and the name of the declaration in Q422187 in `docs/1000.yaml`? ",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2025-01-04T11:07:37Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6XDDkh",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "lambda-fairy"
              },
              "submittedAt": "2025-01-07T11:59:43Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6XDQjg",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2025-01-07T12:27:41Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6XD8BQ",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "grunweg"
              },
              "submittedAt": "2025-01-07T13:51:31Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6Xtw2p",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "lambda-fairy"
              },
              "submittedAt": "2025-01-12T06:02:36Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6YItSN",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "lambda-fairy"
              },
              "submittedAt": "2025-01-15T12:07:49Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6YJg6r",
              "body": "Thanks! ðŸš€\r\n\r\nmaintainer merge",
              "state": "APPROVED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2025-01-15T12:44:28Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6Yu0aC",
              "body": "Thanks :tada:\r\n\r\nbors merge",
              "state": "COMMENTED",
              "author": {
                "login": "jcommelin"
              },
              "submittedAt": "2025-01-20T13:34:34Z"
            }
          ]
        },
        "reviewThreads": {
          "nodes": [
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5aqjJA",
                    "body": "Can you make sure your new definition is defeq to the previous?\r\n```suggestion\r\ntheorem mem_accepts (x : List Î±) : x âˆˆ M.accepts â†” M.eval x âˆˆ M.accept := by rfl\r\n```",
                    "createdAt": "2024-03-12T09:10:12Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5aqkgN",
                    "body": "```suggestion\r\ndef congr : DFA Î± Ïƒ â‰ƒ DFA Î±' Ïƒ' where\r\n```\r\nor something like that. Can you also define `map : DFA Î± Ïƒ â†’ DFA Î±' Ïƒ'`?",
                    "createdAt": "2024-03-12T09:13:50Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5ay2w9",
                    "body": "That's interesting because `Ïƒ` is both an input and output, but `Î±` is an input only. So I guess we only need `Î±' â†ªï¸Ž Î±`?",
                    "createdAt": "2024-03-13T13:39:19Z",
                    "author": {
                      "login": "lambda-fairy"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5aqkqv",
                    "body": "Do you mind splitting all the changes to this file to a new PR?",
                    "createdAt": "2024-03-12T09:14:19Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5aqxRw",
                    "body": "```suggestion\r\n  simp [leftQuotient, Language, List.append_assoc]\r\n```",
                    "createdAt": "2024-03-12T09:47:34Z",
                    "author": {
                      "login": "madvorak"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5aqyKq",
                    "body": "This name doesn't sound right to me.",
                    "createdAt": "2024-03-12T09:49:47Z",
                    "author": {
                      "login": "madvorak"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5wQYJC",
                    "body": "This lemma is now written in terms of `IsRegular`, so it should make more sense.",
                    "createdAt": "2024-12-13T05:57:15Z",
                    "author": {
                      "login": "lambda-fairy"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5aqy-o",
                    "body": "```suggestion\r\n  âŸ¨n, DFA.equivOfStates f L.toDFA, by simpâŸ©\r\n```",
                    "createdAt": "2024-03-12T09:52:09Z",
                    "author": {
                      "login": "madvorak"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5aqz_Y",
                    "body": "I wish `âˆƒ n, âˆƒ M : DFA Î± (Fin n), M.accepts = L` was a named proposition of `L` as its single argument. Dtto above.",
                    "createdAt": "2024-03-12T09:54:59Z",
                    "author": {
                      "login": "madvorak"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5arAC5",
                    "body": "I guess the most appropriate name for that proposition would be `IsRegular` ðŸ˜… \r\n\r\nHow do you feel about adding `def IsRegular := âˆƒ n, âˆƒ M : DFA Î± (Fin n), M.accepts = L` in its own module? My concern is that if I do that, people will start asking is this the right definition, how about closure lemmas, etc. I'd rather not block this PR on that discussion. But maybe we have to.",
                    "createdAt": "2024-03-12T10:30:52Z",
                    "author": {
                      "login": "lambda-fairy"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5arCni",
                    "body": "Yeah, I was afraid to say that directly, because `Language.IsRegular` should probably be defined via a general finite type, not necessarily `Fin n`.",
                    "createdAt": "2024-03-12T10:38:59Z",
                    "author": {
                      "login": "madvorak"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5arKNG",
                    "body": "> because `Language.IsRegular` should probably be defined via a general finite type, not necessarily `Fin n`.\r\n\r\n(I assume that's so we can prove `IsRegular` from a DFA directly, without having to go through `DFA Î± Ïƒ â‰ƒ DFA Î± (Fin n)` first?)",
                    "createdAt": "2024-03-12T11:00:21Z",
                    "author": {
                      "login": "lambda-fairy"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5arQHQ",
                    "body": "I mean it's not hard to show that wanting a fintype is the same as wanting specifically `Fin n` for some `n`, right? But it's hard enough that it should be in an API, and it could be the API for `IsRegular`.",
                    "createdAt": "2024-03-12T11:19:43Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5aywTf",
                    "body": "Thinking about this, I prefer the definition using `Fin n`, to avoid introducing an extra universe parameter for the states. (Of course we can have lemmas that convert to either.)\r\n\r\nBut we can discuss that in the PR that introduces the definition.",
                    "createdAt": "2024-03-13T13:23:53Z",
                    "author": {
                      "login": "lambda-fairy"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5ay1kr",
                    "body": "I prefer to avoid extra universe parameters as well. There is a middle ground â€” define it for `{T : Type} [Fintype T]`.",
                    "createdAt": "2024-03-13T13:36:28Z",
                    "author": {
                      "login": "madvorak"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5wQKrw",
                    "body": "We introduced `IsRegular` in #13554, so I think the goal now is to rewrite this to reference the new definition.",
                    "createdAt": "2024-12-13T04:48:44Z",
                    "author": {
                      "login": "lambda-fairy"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5aq259",
                    "body": "I wouldn't say \"via\".",
                    "createdAt": "2024-03-12T10:03:03Z",
                    "author": {
                      "login": "madvorak"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5ark6h",
                    "body": "What I mean is that left quotients specify the \"version\" of the Myhillâ€“Nerode theorem you proved, not a method you used to prove given theorem (which \"via\" would allude to).",
                    "createdAt": "2024-03-12T12:25:15Z",
                    "author": {
                      "login": "madvorak"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5ayvYs",
                    "body": "Makes sense. How about \"using\"? Or \"with\".",
                    "createdAt": "2024-03-13T13:21:34Z",
                    "author": {
                      "login": "lambda-fairy"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5aq3hk",
                    "body": "Why Google?",
                    "createdAt": "2024-03-12T10:05:04Z",
                    "author": {
                      "login": "madvorak"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5arBbq",
                    "body": "It's company policy. There's a process I can follow that will let me use my own name there, but it's complicated and not really worth fighting for. Note that this is still in my personal time (not work).",
                    "createdAt": "2024-03-12T10:35:28Z",
                    "author": {
                      "login": "lambda-fairy"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5arCHI",
                    "body": "Ah, cool! I just wanted to make sure it was intentional that Google is written there.",
                    "createdAt": "2024-03-12T10:37:45Z",
                    "author": {
                      "login": "madvorak"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5kn5E4",
                    "body": "```suggestion\r\nGiven a language `L` and a word `x`, the *left quotient* of `L` by `x` is the set of suffixes `y` such that\r\n```\r\nor something like that?",
                    "createdAt": "2024-07-23T14:33:36Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5kn5cU",
                    "body": "I doubt this is a good idea as a simp lemma",
                    "createdAt": "2024-07-23T14:34:32Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5wSubq",
                    "body": "I don't have a strong opinion on this. Removing `@[simp]` here does mean we have to add it manually to the proof of `toDFA_accepts` below.",
                    "createdAt": "2024-12-13T13:43:27Z",
                    "author": {
                      "login": "lambda-fairy"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5wSw1V",
                    "body": "I guess if we want to make this simp, then `evalFrom_of_append` must be simp too.",
                    "createdAt": "2024-12-13T13:50:43Z",
                    "author": {
                      "login": "lambda-fairy"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5wS02c",
                    "body": "(I removed the `@[simp]` for now.)",
                    "createdAt": "2024-12-13T14:02:57Z",
                    "author": {
                      "login": "lambda-fairy"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5kn8_c",
                    "body": "```suggestion\r\ntheorem mem_leftQuotient (x y : List Î±) : y âˆˆ L.leftQuotient x â†” x ++ y âˆˆ L := Iff.rfl\r\n```",
                    "createdAt": "2024-07-23T14:43:05Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5wS7SN",
                    "body": "More `:` to the previous line.",
                    "createdAt": "2024-12-13T14:22:09Z",
                    "author": {
                      "login": "madvorak"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5wS_ho",
                    "body": "Whoops, fixed. I wonder if the linter should catch this... ðŸ˜† ",
                    "createdAt": "2024-12-13T14:34:09Z",
                    "author": {
                      "login": "lambda-fairy"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5xbrSG",
                    "body": "Usually we differentiate between the applied and unapplied versions by suffixing `_apply`, eg\r\n```suggestion\r\ntheorem leftQuotient_accepts_apply (M : DFA Î± Ïƒ) (x : List Î±) :\r\n    leftQuotient M.accepts x = M.acceptsFrom (M.eval x) := by\r\n  ext y\r\n  simp [DFA.mem_accepts, DFA.mem_acceptsFrom, DFA.eval, DFA.evalFrom_of_append]\r\n\r\ntheorem leftQuotient_accepts (M : DFA Î± Ïƒ) : leftQuotient M.accepts = M.acceptsFrom âˆ˜ M.eval :=\r\n```",
                    "createdAt": "2025-01-04T11:01:13Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5xbrSv",
                    "body": "```suggestion\r\n    (Set.range L.leftQuotient).Finite := by\r\n```",
                    "createdAt": "2025-01-04T11:01:29Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5xbrTG",
                    "body": "```suggestion\r\ntheorem IsRegular.finite_range_leftQuotient (h : L.IsRegular) :\r\n```",
                    "createdAt": "2025-01-04T11:01:34Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5xbrVp",
                    "body": "```suggestion\r\ntheorem mem_accept_toDFA (s : Set.range L.leftQuotient) : s âˆˆ L.toDFA.accept â†” [] âˆˆ s.val := Iff.rfl\r\n```",
                    "createdAt": "2025-01-04T11:02:41Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5xbrWN",
                    "body": "```suggestion\r\ntheorem IsRegular.of_finite_range_leftQuotient (h : Set.Finite (Set.range L.leftQuotient)) :\r\n```",
                    "createdAt": "2025-01-04T11:03:03Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5xbrW8",
                    "body": "```suggestion\r\ntheorem isRegular_iff_finite_range_leftQuotient :\r\n    L.IsRegular â†” Set.Finite (Set.range L.leftQuotient) :=\r\n```",
                    "createdAt": "2025-01-04T11:03:13Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5xbrZu",
                    "body": "```suggestion\r\nvariable {Î± : Type u} {Ïƒ : Type v} {L : Language Î±}\r\n```\r\nand can you make it explicit where necessary using `variable (L) in`?",
                    "createdAt": "2025-01-04T11:04:24Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5xkWGU",
                    "body": "Sounds good.\r\n\r\nDo we have a convention for when to make the `L` explicit?\r\n\r\nSo far I've only made it explicit for definitions. I'm ok with that, but I wonder if you have an opinion too.",
                    "createdAt": "2025-01-07T11:59:43Z",
                    "author": {
                      "login": "lambda-fairy"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5xkddv",
                    "body": "Guideline is:\r\n* implicit for iffs\r\n* explicit for definitions\r\n* explicit for rewriting lemmas other than iffs\r\n* implicit for non-rewriting lemmas \r\n\r\nwith some leeway in each case",
                    "createdAt": "2025-01-07T12:27:41Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5yOx94",
                    "body": "Ok, I made it explicit in all the equality lemmas where the `L` isn't already fixed by something else. PTAL!",
                    "createdAt": "2025-01-15T12:07:49Z",
                    "author": {
                      "login": "lambda-fairy"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5xbrbZ",
                    "body": "```suggestion\r\n  âŸ¨IsRegular.finite_range_leftQuotient, .of_finite_leftQuotientâŸ©\r\n```",
                    "createdAt": "2025-01-04T11:05:47Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5xbrcE",
                    "body": "```suggestion\r\ntheorem start_toDFA : L.toDFA.start.val = L := rfl\r\n```",
                    "createdAt": "2025-01-04T11:06:28Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5xbrcO",
                    "body": "```suggestion\r\ntheorem step_toDFA (s : Set.range L.leftQuotient) (a : Î±) :\r\n```",
                    "createdAt": "2025-01-04T11:06:35Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5xbrcc",
                    "body": "```suggestion\r\ntheorem accepts_toDFA : L.toDFA.accepts = L := by\r\n```",
                    "createdAt": "2025-01-04T11:06:44Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5xk2m3",
                    "body": "If you like, you can also include a date (such as, when you opened this PR), e.g.\r\n```suggestion\r\n  author: Chris Wong\r\n  date: 2024-03-24",
                    "createdAt": "2025-01-07T13:51:31Z",
                    "author": {
                      "login": "grunweg"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5x_IUr",
                    "body": "Thanks!",
                    "createdAt": "2025-01-12T06:02:36Z",
                    "author": {
                      "login": "lambda-fairy"
                    }
                  }
                ]
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjE1NzIzMjM=",
              "login": "lambda-fairy"
            },
            {
              "id": "MDQ6VXNlcjY2NDMxMTY=",
              "login": "madvorak"
            },
            {
              "id": "MDQ6VXNlcjE0MDkwNTkz",
              "login": "YaelDillies"
            },
            {
              "id": "MDQ6VXNlcjQyNTI2MA==",
              "login": "eric-wieser"
            },
            {
              "id": "U_kgDOB75MNQ",
              "login": "leanprover-community-mathlib4-bot"
            },
            {
              "id": "MDQ6VXNlcjU2MzY3MDU=",
              "login": "jcommelin"
            },
            {
              "id": "MDQ6VXNlcjEwMTA1MDE2",
              "login": "grunweg"
            },
            {
              "id": "U_kgDOBcsTTQ",
              "login": "leanprover-community-bot-assistant"
            }
          ]
        },
        "state": "CLOSED",
        "statusCheckRollup": {
          "contexts": {
            "nodes": [
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIWna63g",
                "name": "set_pr_emoji",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12869202601/job/35877468894"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAITM2LjA",
                "name": "Fix style issues from lint",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12787966682/job/35648277388"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAITOq6ZA",
                "name": "Fix style issues from lint",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12788592922/job/35650189924"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAITMtRBQ",
                "name": "Lint style (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12787920199/job/35648131333"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAITM35dw",
                "name": "set_pr_emoji",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12787975944/job/35648305527"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAITM2Leg",
                "name": "Add ready-to-merge or delegated label",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12787966675/job/35648277370"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAITOq5KQ",
                "name": "Add ready-to-merge or delegated label",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12788592926/job/35650189609"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIWnaUcQ",
                "name": "Add ready-to-merge or delegated label",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12869199669/job/35877459057"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAITMtZXg",
                "name": "label-and-report-new-contributor",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12787921029/job/35648133470"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAITM2Lkg",
                "name": "Ping maintainers on Zulip",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12787966684/job/35648277394"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAITOq5Kw",
                "name": "Ping maintainers on Zulip",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12788592920/job/35650189611"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIWnaUqA",
                "name": "Ping maintainers on Zulip",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12869199659/job/35877459112"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAITMtZuQ",
                "name": "post-or-update-summary-comment",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12787921023/job/35648133561"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIWnaUsA",
                "name": "Fix style issues from lint",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12869199666/job/35877459120"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAITMtRAA",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12787920204/job/35648131328"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAITMtbnA",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12787921052/job/35648134044"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAITMtS_g",
                "name": "Build (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12787920199/job/35648131838"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAITMtSfQ",
                "name": "Build",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12787920204/job/35648131709"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAITMtaJA",
                "name": "Check all files imported",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12787921052/job/35648133668"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAITMtUdg",
                "name": "Post-CI job (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12787920199/job/35648132214"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAITNIt-A",
                "name": "Post-CI job",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12787920204/job/35648581112"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAITMt2KQ",
                "name": "New Contributor Check",
                "conclusion": "NEUTRAL",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/35648140841"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAITMvWVw",
                "name": "Summary",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=11311&login=leanprover-community&repository=mathlib4"
              },
              {
                "__typename": "StatusContext",
                "id": "SC_kwDOFcwZ1c8AAAAH2pRtFw",
                "context": "bors",
                "state": "SUCCESS",
                "targetUrl": "https://mathlib-bors-ca18eefec4cb.herokuapp.com/batches/8700",
                "description": "Build succeeded"
              }
            ]
          }
        },
        "title": "[Merged by Bors] - feat: Myhillâ€“Nerode theorem",
        "updatedAt": "2025-01-20T16:09:28Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/11311",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "ReviewRequestedEvent",
              "id": "RRE_lADOFcwZ1c6B_edxzwAAAALQRt6l",
              "createdAt": "2024-03-12T07:17:04Z",
              "requestedReviewer": {
                "id": "MDQ6VXNlcjQyNTI2MA==",
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "ReviewRequestedEvent",
              "id": "RRE_lADOFcwZ1c6B_edxzwAAAALQRt6y",
              "createdAt": "2024-03-12T07:17:05Z",
              "requestedReviewer": {
                "id": "MDQ6VXNlcjY2NDMxMTY=",
                "login": "madvorak"
              }
            },
            {
              "__typename": "ReviewRequestedEvent",
              "id": "RRE_lADOFcwZ1c6B_edxzwAAAALQRt6_",
              "createdAt": "2024-03-12T07:17:05Z",
              "requestedReviewer": {
                "id": "MDQ6VXNlcjE0MDkwNTkz",
                "login": "YaelDillies"
              }
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6B_edxzwAAAALQRzfJ",
              "createdAt": "2024-03-12T07:19:06Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6B_edxzwAAAALQR0h2",
              "createdAt": "2024-03-12T07:19:29Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABgS7AmA",
                "name": "t-computability"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5zENth",
              "createdAt": "2024-03-12T09:10:12Z",
              "body": "",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5zEjZ0",
              "createdAt": "2024-03-12T09:47:34Z",
              "body": "",
              "author": {
                "login": "madvorak"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5zEkwJ",
              "createdAt": "2024-03-12T09:49:47Z",
              "body": "",
              "author": {
                "login": "madvorak"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5zEmC3",
              "createdAt": "2024-03-12T09:52:09Z",
              "body": "",
              "author": {
                "login": "madvorak"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5zEnp7",
              "createdAt": "2024-03-12T09:54:59Z",
              "body": "",
              "author": {
                "login": "madvorak"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5zEsX7",
              "createdAt": "2024-03-12T10:03:03Z",
              "body": "",
              "author": {
                "login": "madvorak"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5zEtbH",
              "createdAt": "2024-03-12T10:05:04Z",
              "body": "",
              "author": {
                "login": "madvorak"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c52sZWY",
              "createdAt": "2024-03-12T10:48:49Z",
              "body": "I had to meditate for about an hour about what `Set.range L.leftQuotient` means, but I get it now!\r\nI am wondering if there is a cognitive shortcut that could be used to build a mental model of what `Set.range L.leftQuotient` means. If you have one, it would be nice to add it as a comment, probably on the main theorem.\r\n\r\nNice PR, good job!\r\nI left some minor comments (no need to remind you, as you have already started answering them while I was still reviewing).",
              "author": {
                "login": "madvorak"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6B_edxzwAAAALQ1AnF",
              "createdAt": "2024-03-12T18:31:25Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6B_edxzwAAAALQ1AnO",
              "createdAt": "2024-03-12T18:31:25Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c524Ffd",
              "createdAt": "2024-03-13T13:31:13Z",
              "body": "Thanks YaÃ«l and Martin for the review!\r\n\r\nI think the main takeaway here is I should split this into separate PRs:\r\n\r\n1. Define `DFA.acceptsFrom`\r\n2. Define the equiv `DFA Î± Ïƒ â‰ƒ DFA Î±' Ïƒ'`\r\n3. Define `Language.IsRegular`\r\n4. Prove Myhillâ€“Nerode (this PR)\r\n\r\nwith dependencies 1 â†’ 4, 2 â†’ 3, 3 â†’ 4.\r\n\r\nSo I'll focus on landing those dependencies first.",
              "author": {
                "login": "lambda-fairy"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5241PQ",
              "createdAt": "2024-03-13T15:03:33Z",
              "body": "I think 1 and 2 can be made a single PR ",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c53BqRe",
              "createdAt": "2024-03-14T09:01:29Z",
              "body": "> Rather than taking a `Quotient` by the Nerode relation, I instead talk about the the function `fun x => { y | x ++ y âˆˆ L }`. This ends up simpler as we can avoid fiddling with the `Quotient` API.\r\n\r\nIt's not immediately clear to me that this is actually the case, but I can reevaluate once the dependencies land.",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6B_edxzwAAAALST3Le",
              "createdAt": "2024-03-14T13:29:01Z",
              "label": {
                "id": "MDU6TGFiZWwzMjg4OTQyMDg2",
                "name": "blocked-by-other-PR"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6B_edxzwAAAALSUA8n",
              "createdAt": "2024-03-14T13:31:44Z",
              "label": {
                "id": "MDU6TGFiZWwzMjg4OTQyMDg2",
                "name": "blocked-by-other-PR"
              }
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5Ra2CR",
              "createdAt": "2024-03-14T13:36:09Z",
              "source": {
                "id": "PR_kwDOFcwZ1c5poiwu",
                "title": "[Merged by Bors] - feat: DFA.acceptsFrom, DFA.map, DFA.equiv",
                "url": "https://github.com/leanprover-community/mathlib4/pull/11372"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6B_edxzwAAAALSU4nu",
              "createdAt": "2024-03-14T13:46:40Z",
              "label": {
                "id": "MDU6TGFiZWwzMjg4OTQyMDg2",
                "name": "blocked-by-other-PR"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6B_edxzwAAAALZjZne",
              "createdAt": "2024-03-25T19:44:31Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABb5aSCQ",
                "name": "new-contributor"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6B_edxzwAAAAMD3GG5",
              "createdAt": "2024-05-27T21:21:41Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABoZOzhg",
                "name": "blocked-by-other-PR"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6B_edxzwAAAAMEB_oS",
              "createdAt": "2024-05-28T06:46:16Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABoZOzhg",
                "name": "blocked-by-other-PR"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6B_edxzwAAAAMECFFz",
              "createdAt": "2024-05-28T06:48:46Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABoakDog",
                "name": "blocked-by-other-PR"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6B_edxzwAAAAMEDcRL",
              "createdAt": "2024-05-28T07:20:19Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABoakDog",
                "name": "blocked-by-other-PR"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6B_edxzwAAAAMklW9a",
              "createdAt": "2024-07-14T20:21:21Z",
              "label": {
                "id": "MDU6TGFiZWwzMjg4OTQyMDg2",
                "name": "blocked-by-other-PR"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6ExIrD",
              "createdAt": "2024-07-14T20:21:22Z",
              "body": "This PR/issue depends on:\n* ~~leanprover-community/mathlib4#11372~~\nBy **[Dependent Issues](https://github.com/z0al/dependent-issues)** (ðŸ¤–). Happy coding!\n<!-- By Dependent Issues (Action) - DO NOT REMOVE -->",
              "author": {
                "login": "leanprover-community-mathlib4-bot"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6B_edxzwAAAAMklb9d",
              "createdAt": "2024-07-14T20:36:16Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6F1nyL",
              "createdAt": "2024-07-23T14:33:27Z",
              "body": "Hi @lambda-fairy now that the dependent PR has been merged, could you please merge master and resolve the conflicts?",
              "author": {
                "login": "jcommelin"
              }
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6B_edxzwAAAAMroXSI",
              "createdAt": "2024-07-23T14:33:33Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABb5aSCQ",
                "name": "new-contributor"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6CyIdM",
              "createdAt": "2024-07-23T14:33:36Z",
              "body": "I'm excited to see this in Mathlib. Please merge the conflicts and address the comments and hopefully we get it merged soon after that!",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6Xa3gN",
              "createdAt": "2024-12-13T02:32:09Z",
              "body": "Apologies for the delay. I'll take a look this weekend.\r\n\r\nNote to self: Since #13554 landed, we can reference that definition of `IsRegular`.",
              "author": {
                "login": "lambda-fairy"
              }
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6B_edxzwAAAAOkbOIm",
              "createdAt": "2024-12-13T04:22:46Z"
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6B_edxzwAAAAOkbOal",
              "createdAt": "2024-12-13T04:22:59Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABb5aSCQ",
                "name": "new-contributor"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6XbUzj",
              "createdAt": "2024-12-13T04:23:48Z",
              "body": "### PR summary [49c761161d](https://github.com/leanprover-community/mathlib4/pull/11311/commits/49c761161d8f1bf0625493abb889228454001b1f)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n| `Mathlib.Computability.MyhillNerode` (new file)|674|\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ IsRegular.finite_range_leftQuotient`\n`+ IsRegular.of_finite_range_leftQuotient`\n`+ accepts_toDFA`\n`+ isRegular_iff_finite_range_leftQuotient`\n`+ leftQuotient`\n`+ leftQuotient_accepts`\n`+ leftQuotient_accepts_apply`\n`+ leftQuotient_append`\n`+ leftQuotient_nil`\n`+ mem_accept_toDFA`\n`+ mem_leftQuotient`\n`+ start_toDFA`\n`+ step_toDFA`\n`+ toDFA`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>\n\n---\n\n<details><summary>No changes to technical debt.</summary>\n\nYou can run this locally as\n```\n./scripts/technical-debt-metrics.sh pr_summary\n```\n* The `relative` value is the weighted *sum* of the differences with weight given by the *inverse* of the current value of the statistic.\n* The `absolute` value is the `relative` value divided by the total sum of the inverses of the current values (i.e. the weighted *average* of the differences).\n</details>",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6B_edxzwAAAAOkbR1A",
              "createdAt": "2024-12-13T04:25:06Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6B_edxzwAAAAOkxx4N",
              "createdAt": "2024-12-13T14:18:09Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "ReviewRequestedEvent",
              "id": "RRE_lADOFcwZ1c6B_edxzwAAAAOkx00w",
              "createdAt": "2024-12-13T14:19:11Z",
              "requestedReviewer": {
                "id": "MDQ6VXNlcjE0MDkwNTkz",
                "login": "YaelDillies"
              }
            },
            {
              "__typename": "ReviewRequestedEvent",
              "id": "RRE_lADOFcwZ1c6B_edxzwAAAAOkx1AP",
              "createdAt": "2024-12-13T14:19:15Z",
              "requestedReviewer": {
                "id": "MDQ6VXNlcjY2NDMxMTY=",
                "login": "madvorak"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6VJ8uv",
              "createdAt": "2024-12-13T14:22:09Z",
              "body": "",
              "author": {
                "login": "madvorak"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6Xkeqv",
              "createdAt": "2024-12-14T07:18:58Z",
              "body": "> > Rather than taking a `Quotient` by the Nerode relation, I instead talk about the the function `fun x => { y | x ++ y âˆˆ L }`. This ends up simpler as we can avoid fiddling with the `Quotient` API.\r\n> \r\n> It's not immediately clear to me that this is actually the case, but I can reevaluate once the dependencies land.\r\n\r\nNow I understand quotients better, I think it's overall a wash. But note that `leftQuotient` is the more primitive concept here, as the relation can be derived from it via [`Setoid.ker`](https://leanprover-community.github.io/mathlib4_docs/Mathlib/Data/Setoid/Basic.html#Setoid.ker) (and [`Setoid.quotientKerEquivRange`](https://leanprover-community.github.io/mathlib4_docs/Mathlib/Data/Setoid/Basic.html#Setoid.quotientKerEquivRange)). So if we do add the Nerode relation later, I think it would built on top of `leftQuotient`, so the concepts developed here will remain useful.",
              "author": {
                "login": "lambda-fairy"
              }
            },
            {
              "__typename": "ReviewRequestRemovedEvent",
              "id": "RRRE_lADOFcwZ1c6B_edxzwAAAAOl9Myd",
              "createdAt": "2024-12-16T11:47:56Z",
              "requestedReviewer": {
                "id": "MDQ6VXNlcjE0MDkwNTkz",
                "login": "YaelDillies"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6W173u",
              "createdAt": "2025-01-04T11:01:13Z",
              "body": "Sorry for the delay. Very nice PR!\r\n\r\nCould you please add your name and the name of the declaration in Q422187 in `docs/1000.yaml`? ",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6B_edxzwAAAAOuqjrJ",
              "createdAt": "2025-01-04T11:07:50Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6B_edxzwAAAAOv_4re",
              "createdAt": "2025-01-07T11:36:35Z"
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6B_edxzwAAAAOwCFSs",
              "createdAt": "2025-01-07T12:28:33Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6XD8BQ",
              "createdAt": "2025-01-07T13:51:30Z",
              "body": "",
              "author": {
                "login": "grunweg"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "7eee683cd93eb9a54dba95b59a17f2dac1effb2c"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "570f29e79459601c42d3bcd4bffecc65755b0dd0"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "b31086b5c8224713202427943564c0059c7c6ae8"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "98ef0cb4ccba9bb879389f8bbe6a4370fcf061b2"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "d1018d6e00aeb554cd831c3c5b3bdec72acf0ad9"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "5b43be90f429b0a3417035a2ffad27e87ea20b76"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "82c9926cf8da6a6df509aa4daad1bd74164791fd"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "6561cc515cf043acc130a09ed1320515c9d488b9"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "96911fb76346e64b3f4b4bab277b27f178d9b68b"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "a55769fe5191648a97ba6685dff9d7b3b521bfbf"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "6e66a6eddb81d129d94831d787f1f84ea12914cd"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "d87235bdd2656d7bcf8fc8b326fbcf4c275a8efb"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "7170a42ae0ca5c2a3a92f6009c4f5dc75017000e"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "6b3f47f908536f542121c8e92a6e7cd53ebdb2ef"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "ee77e7b6ba37b5d9def9a2b34fbf4548b3904fc5"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "acee463954c4de6e2cfd021bcc4dbe5c0adfc97c"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "11a76a53b3d4b03f1d39d4c884d7dec563e1d3b6"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "67004031c228b7f19f3e3abff7c4aaaf396a458d"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "89d701b0f831f93977f0331722651265f7429af2"
              }
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6B_edxzwAAAAOzacLM",
              "createdAt": "2025-01-12T05:17:38Z"
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6B_edxzwAAAAOzapV4",
              "createdAt": "2025-01-12T05:43:57Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "b96fb503b7339a4930a0cff51c383e5039f49548"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "44135f2c4ef2227ab0f7bc627373144fe94f7e28"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "49c761161d8f1bf0625493abb889228454001b1f"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6B_edxzwAAAAO2EjCH",
              "createdAt": "2025-01-15T12:08:18Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "ReviewRequestedEvent",
              "id": "RRE_lADOFcwZ1c6B_edxzwAAAAO2Ejm7",
              "createdAt": "2025-01-15T12:08:27Z",
              "requestedReviewer": {
                "id": "MDQ6VXNlcjE0MDkwNTkz",
                "login": "YaelDillies"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6YJg6r",
              "createdAt": "2025-01-15T12:44:28Z",
              "body": "Thanks! ðŸš€\r\n\r\nmaintainer merge",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6aijNn",
              "createdAt": "2025-01-15T12:44:49Z",
              "body": "ðŸš€ Pull request has been placed on the maintainer queue by YaelDillies.",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6B_edxzwAAAAO2IDMI",
              "createdAt": "2025-01-15T12:44:50Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABh1mAHA",
                "name": "maintainer-merge"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6Yu0aC",
              "createdAt": "2025-01-20T13:34:34Z",
              "body": "Thanks :tada:\r\n\r\nbors merge",
              "author": {
                "login": "jcommelin"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6B_edxzwAAAAO5nime",
              "createdAt": "2025-01-20T13:34:45Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
                "name": "ready-to-merge"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6bIWW1",
              "createdAt": "2025-01-20T15:05:50Z",
              "body": "Build failed (retrying...):\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/12869839601/job/35879553989)",
              "author": {
                "login": "mathlib-bors"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5z7A0u",
              "createdAt": "2025-01-20T15:46:20Z",
              "source": {
                "id": "PR_kwDOFcwZ1c6IW0H5",
                "title": "[Merged by Bors] - chore(100,1000.yaml): name the authors field 'authors'",
                "url": "https://github.com/leanprover-community/mathlib4/pull/20875"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6bI5z1",
              "createdAt": "2025-01-20T16:09:20Z",
              "body": "Pull request successfully merged into master.\n\nBuild succeeded:\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/12871073063/job/35883559357)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/12871073063/job/35883558997)",
              "author": {
                "login": "mathlib-bors"
              }
            },
            {
              "__typename": "RenamedTitleEvent"
            },
            {
              "__typename": "ClosedEvent",
              "id": "CE_lADOFcwZ1c6B_edxzwAAAAO5woFr",
              "createdAt": "2025-01-20T16:09:21Z"
            },
            {
              "__typename": "HeadRefDeletedEvent",
              "id": "HRDE_lADOFcwZ1c6B_edxzwAAAAO5woyD",
              "createdAt": "2025-01-20T16:09:28Z"
            }
          ]
        }
      }
    }
  }
}
