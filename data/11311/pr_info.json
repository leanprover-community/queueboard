{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 142,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "lambda-fairy"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "I take a different approach to the [`lean-automata` version](https://github.com/atarnoam/lean-automata/blob/main/src/regular_languages.lean) by @atarnoam. Rather than taking a `Quotient` by the Nerode relation, I instead talk about the the function `fun x => { y | x ++ y âˆˆ L }`. This ends up simpler as we can avoid fiddling with the `Quotient` API.\r\n\r\nI also introduce `equivOfStates (f : Ïƒ â‰ƒ Ïƒ') : DFA Î± Ïƒ â‰ƒ DFA Î± Ïƒ'`, which might be useful when we define regular languages later.\r\n\r\n---\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n-->\r\n\r\n- [x] depends on: #11372\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 3,
        "closed": false,
        "closedAt": null,
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c52sZWY",
              "body": "I had to meditate for about an hour about what `Set.range L.leftQuotient` means, but I get it now!\r\nI am wondering if there is a cognitive shortcut that could be used to build a mental model of what `Set.range L.leftQuotient` means. If you have one, it would be nice to add it as a comment, probably on the main theorem.\r\n\r\nNice PR, good job!\r\nI left some minor comments (no need to remind you, as you have already started answering them while I was still reviewing).",
              "createdAt": "2024-03-12T10:48:49Z",
              "author": {
                "login": "madvorak"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c524Ffd",
              "body": "Thanks YaÃ«l and Martin for the review!\r\n\r\nI think the main takeaway here is I should split this into separate PRs:\r\n\r\n1. Define `DFA.acceptsFrom`\r\n2. Define the equiv `DFA Î± Ïƒ â‰ƒ DFA Î±' Ïƒ'`\r\n3. Define `Language.IsRegular`\r\n4. Prove Myhillâ€“Nerode (this PR)\r\n\r\nwith dependencies 1 â†’ 4, 2 â†’ 3, 3 â†’ 4.\r\n\r\nSo I'll focus on landing those dependencies first.",
              "createdAt": "2024-03-13T13:31:13Z",
              "author": {
                "login": "lambda-fairy"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5241PQ",
              "body": "I think 1 and 2 can be made a single PR ",
              "createdAt": "2024-03-13T15:03:33Z",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c53BqRe",
              "body": "> Rather than taking a `Quotient` by the Nerode relation, I instead talk about the the function `fun x => { y | x ++ y âˆˆ L }`. This ends up simpler as we can avoid fiddling with the `Quotient` API.\r\n\r\nIt's not immediately clear to me that this is actually the case, but I can reevaluate once the dependencies land.",
              "createdAt": "2024-03-14T09:01:29Z",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6ExIrD",
              "body": "This PR/issue depends on:\n* ~~leanprover-community/mathlib4#11372~~\nBy **[Dependent Issues](https://github.com/z0al/dependent-issues)** (ðŸ¤–). Happy coding!\n<!-- By Dependent Issues (Action) - DO NOT REMOVE -->",
              "createdAt": "2024-07-14T20:21:22Z",
              "author": {
                "login": "leanprover-community-mathlib4-bot"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6F1nyL",
              "body": "Hi @lambda-fairy now that the dependent PR has been merged, could you please merge master and resolve the conflicts?",
              "createdAt": "2024-07-23T14:33:27Z",
              "author": {
                "login": "jcommelin"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6Xa3gN",
              "body": "Apologies for the delay. I'll take a look this weekend.\r\n\r\nNote to self: Since #13554 landed, we can reference that definition of `IsRegular`.",
              "createdAt": "2024-12-13T02:32:09Z",
              "author": {
                "login": "lambda-fairy"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6XbUzj",
              "body": "### PR summary [f8d92b1309](https://github.com/leanprover-community/mathlib4/pull/11311/commits/f8d92b1309310486ade18704336bd597fca22b24)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n| `Mathlib.Computability.MyhillNerode` (new file)|663|\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ equivOfStates`\n`+ equivOfStates_accept`\n`+ equivOfStates_accepts`\n`+ equivOfStates_evalFrom`\n`+ equivOfStates_start`\n`+ equivOfStates_step`\n`+ exists_dfa_iff_finite_leftQuotient`\n`+ exists_dfa_of_finite_leftQuotient`\n`+ finite_leftQuotient_of_dfa`\n`+ leftQuotient`\n`+ leftQuotient_accepts`\n`+ leftQuotient_accepts'`\n`+ leftQuotient_append`\n`+ leftQuotient_mem`\n`+ leftQuotient_nil`\n`+ mem_toDFA_accept`\n`+ toDFA`\n`+ toDFA_accepts`\n`+ toDFA_start`\n`+ toDFA_step`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>\n\n---\n\n<details><summary>No changes to technical debt.</summary>\n\nYou can run this locally as\n```\n./scripts/technical-debt-metrics.sh pr_summary\n```\n* The `relative` value is the weighted *sum* of the differences with weight given by the *inverse* of the current value of the statistic.\n* The `absolute` value is the `relative` value divided by the total sum of the inverses of the current values (i.e. the weighted *average* of the differences).\n</details>",
              "createdAt": "2024-12-13T04:23:48Z",
              "author": {
                "login": "github-actions"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "a5db0ec9415c6ca22e157e0782c35453d31ecf83",
                "additions": 144,
                "deletions": 1,
                "committedDate": "2024-12-13T04:21:57Z",
                "author": {
                  "name": "Chris Wong",
                  "email": "lambda.fairy@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "655095af9d0a822136035bcbffb6c2636deb96ce",
                "additions": 2,
                "deletions": 4,
                "committedDate": "2024-12-13T04:21:57Z",
                "author": {
                  "name": "Chris Wong",
                  "email": "lambda.fairy@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "2156f58ed06be5d22a4eac6b82cadb249b1a4d3f",
                "additions": 2,
                "deletions": 2,
                "committedDate": "2024-12-13T04:21:57Z",
                "author": {
                  "name": "Chris Wong",
                  "email": "lambda.fairy@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "f8d92b1309310486ade18704336bd597fca22b24",
                "additions": 1,
                "deletions": 1,
                "committedDate": "2024-12-13T04:21:57Z",
                "author": {
                  "name": "Chris Wong",
                  "email": "lambda.fairy@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH_9L-iw",
                        "name": "set_pr_emoji",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12309571453/job/34356788875"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH_9I2zA",
                        "name": "Add topic label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12309550737/job/34356737740"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH_9I39w",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12309550844/job/34356738039"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH_9I35Q",
                        "name": "post-or-update-summary-comment",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12309550852/job/34356738021"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH_9I31A",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12309550730/job/34356738004"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH_9I5Gg",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12309550734/job/34356738330"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH_9I3ag",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12309550841/job/34356737898"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH_9I4lA",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12309550730/job/34356738196"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH_9I27g",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12309550734/job/34356737774"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH_9I4gw",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12309550841/job/34356738179"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH_9I4XA",
                        "name": "Build",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12309550734/job/34356738140"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH_9I21A",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12309550730/job/34356737748"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH_9I5Mg",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12309550730/job/34356738354"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH_9Kd8Q",
                        "name": "Post-CI job",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12309550734/job/34356764145"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH_9JG3Q",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/34356741853"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH_9Ix5Q",
                        "name": ".github/dependabot.yml",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dependabot-api.githubapp.com"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH_9Jlxg",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=11311&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            }
          ]
        },
        "createdAt": "2024-03-12T07:17:04Z",
        "deletions": 1,
        "files": {
          "nodes": [
            {
              "path": "Mathlib.lean",
              "additions": 1,
              "deletions": 0
            },
            {
              "path": "Mathlib/Computability/DFA.lean",
              "additions": 36,
              "deletions": 1
            },
            {
              "path": "Mathlib/Computability/MyhillNerode.lean",
              "additions": 105,
              "deletions": 0
            }
          ]
        },
        "headRefName": "lambda-fairy/nerode",
        "headRefOid": "f8d92b1309310486ade18704336bd597fca22b24",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c5pVsG0",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c7P265b",
              "color": "f9d0c4",
              "name": "awaiting-author"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABb5aSCQ",
              "color": "8BBA68",
              "name": "new-contributor"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABgS7AmA",
              "color": "33DBEC",
              "name": "t-computability"
            }
          ]
        },
        "latestReviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c6CyIdM",
              "body": "I'm excited to see this in Mathlib. Please merge the conflicts and address the comments and hopefully we get it merged soon after that!",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2024-07-23T14:58:01Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5zSZ_X",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "madvorak"
              },
              "submittedAt": "2024-03-13T13:36:28Z"
            }
          ]
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "BLOCKED",
        "mergeable": "MERGEABLE",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 11311,
        "potentialMergeCommit": {
          "oid": "0bee796fc449597a479b5577ba0e622b094a6b28"
        },
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": [
                {
                  "login": "atarnoam"
                }
              ]
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": null,
        "reviewRequests": {
          "nodes": [
            {
              "requestedReviewer": {
                "id": "MDQ6VXNlcjQyNTI2MA==",
                "login": "eric-wieser"
              }
            }
          ]
        },
        "reviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5zENth",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2024-03-12T09:14:34Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5zEjZ0",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "madvorak"
              },
              "submittedAt": "2024-03-12T09:47:35Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5zEkwJ",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "madvorak"
              },
              "submittedAt": "2024-03-12T09:49:47Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5zEmC3",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "madvorak"
              },
              "submittedAt": "2024-03-12T09:52:09Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5zEnp7",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "madvorak"
              },
              "submittedAt": "2024-03-12T09:54:59Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5zEsX7",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "madvorak"
              },
              "submittedAt": "2024-03-12T10:03:03Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5zEtbH",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "madvorak"
              },
              "submittedAt": "2024-03-12T10:05:04Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5zE65y",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "lambda-fairy"
              },
              "submittedAt": "2024-03-12T10:30:52Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5zE9Ju",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "lambda-fairy"
              },
              "submittedAt": "2024-03-12T10:35:28Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5zE-UP",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "madvorak"
              },
              "submittedAt": "2024-03-12T10:37:45Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5zE_CD",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "madvorak"
              },
              "submittedAt": "2024-03-12T10:38:59Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5zFLhL",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "lambda-fairy"
              },
              "submittedAt": "2024-03-12T11:00:21Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5zFUiA",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2024-03-12T11:19:43Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5zF2Au",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "madvorak"
              },
              "submittedAt": "2024-03-12T12:25:15Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5zSQ7X",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "lambda-fairy"
              },
              "submittedAt": "2024-03-13T13:21:34Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5zSSTz",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "lambda-fairy"
              },
              "submittedAt": "2024-03-13T13:23:53Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5zSZ_X",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "madvorak"
              },
              "submittedAt": "2024-03-13T13:36:28Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5zSbvG",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "lambda-fairy"
              },
              "submittedAt": "2024-03-13T13:39:19Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6CyIdM",
              "body": "I'm excited to see this in Mathlib. Please merge the conflicts and address the comments and hopefully we get it merged soon after that!",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2024-07-23T14:58:01Z"
            }
          ]
        },
        "reviewThreads": {
          "nodes": [
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5aqjJA",
                    "body": "Can you make sure your new definition is defeq to the previous?\r\n```suggestion\r\ntheorem mem_accepts (x : List Î±) : x âˆˆ M.accepts â†” M.eval x âˆˆ M.accept := by rfl\r\n```",
                    "createdAt": "2024-03-12T09:10:12Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5aqkgN",
                    "body": "```suggestion\r\ndef congr : DFA Î± Ïƒ â‰ƒ DFA Î±' Ïƒ' where\r\n```\r\nor something like that. Can you also define `map : DFA Î± Ïƒ â†’ DFA Î±' Ïƒ'`?",
                    "createdAt": "2024-03-12T09:13:50Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5ay2w9",
                    "body": "That's interesting because `Ïƒ` is both an input and output, but `Î±` is an input only. So I guess we only need `Î±' â†ªï¸Ž Î±`?",
                    "createdAt": "2024-03-13T13:39:19Z",
                    "author": {
                      "login": "lambda-fairy"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5aqkqv",
                    "body": "Do you mind splitting all the changes to this file to a new PR?",
                    "createdAt": "2024-03-12T09:14:19Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5aqxRw",
                    "body": "```suggestion\r\n  simp [leftQuotient, Language, List.append_assoc]\r\n```",
                    "createdAt": "2024-03-12T09:47:34Z",
                    "author": {
                      "login": "madvorak"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5aqyKq",
                    "body": "This name doesn't sound right to me.",
                    "createdAt": "2024-03-12T09:49:47Z",
                    "author": {
                      "login": "madvorak"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5aqy-o",
                    "body": "```suggestion\r\n  âŸ¨n, DFA.equivOfStates f L.toDFA, by simpâŸ©\r\n```",
                    "createdAt": "2024-03-12T09:52:09Z",
                    "author": {
                      "login": "madvorak"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5aqz_Y",
                    "body": "I wish `âˆƒ n, âˆƒ M : DFA Î± (Fin n), M.accepts = L` was a named proposition of `L` as its single argument. Dtto above.",
                    "createdAt": "2024-03-12T09:54:59Z",
                    "author": {
                      "login": "madvorak"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5arAC5",
                    "body": "I guess the most appropriate name for that proposition would be `IsRegular` ðŸ˜… \r\n\r\nHow do you feel about adding `def IsRegular := âˆƒ n, âˆƒ M : DFA Î± (Fin n), M.accepts = L` in its own module? My concern is that if I do that, people will start asking is this the right definition, how about closure lemmas, etc. I'd rather not block this PR on that discussion. But maybe we have to.",
                    "createdAt": "2024-03-12T10:30:52Z",
                    "author": {
                      "login": "lambda-fairy"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5arCni",
                    "body": "Yeah, I was afraid to say that directly, because `Language.IsRegular` should probably be defined via a general finite type, not necessarily `Fin n`.",
                    "createdAt": "2024-03-12T10:38:59Z",
                    "author": {
                      "login": "madvorak"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5arKNG",
                    "body": "> because `Language.IsRegular` should probably be defined via a general finite type, not necessarily `Fin n`.\r\n\r\n(I assume that's so we can prove `IsRegular` from a DFA directly, without having to go through `DFA Î± Ïƒ â‰ƒ DFA Î± (Fin n)` first?)",
                    "createdAt": "2024-03-12T11:00:21Z",
                    "author": {
                      "login": "lambda-fairy"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5arQHQ",
                    "body": "I mean it's not hard to show that wanting a fintype is the same as wanting specifically `Fin n` for some `n`, right? But it's hard enough that it should be in an API, and it could be the API for `IsRegular`.",
                    "createdAt": "2024-03-12T11:19:43Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5aywTf",
                    "body": "Thinking about this, I prefer the definition using `Fin n`, to avoid introducing an extra universe parameter for the states. (Of course we can have lemmas that convert to either.)\r\n\r\nBut we can discuss that in the PR that introduces the definition.",
                    "createdAt": "2024-03-13T13:23:53Z",
                    "author": {
                      "login": "lambda-fairy"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5ay1kr",
                    "body": "I prefer to avoid extra universe parameters as well. There is a middle ground â€” define it for `{T : Type} [Fintype T]`.",
                    "createdAt": "2024-03-13T13:36:28Z",
                    "author": {
                      "login": "madvorak"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5aq259",
                    "body": "I wouldn't say \"via\".",
                    "createdAt": "2024-03-12T10:03:03Z",
                    "author": {
                      "login": "madvorak"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5ark6h",
                    "body": "What I mean is that left quotients specify the \"version\" of the Myhillâ€“Nerode theorem you proved, not a method you used to prove given theorem (which \"via\" would allude to).",
                    "createdAt": "2024-03-12T12:25:15Z",
                    "author": {
                      "login": "madvorak"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5ayvYs",
                    "body": "Makes sense. How about \"using\"? Or \"with\".",
                    "createdAt": "2024-03-13T13:21:34Z",
                    "author": {
                      "login": "lambda-fairy"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5aq3hk",
                    "body": "Why Google?",
                    "createdAt": "2024-03-12T10:05:04Z",
                    "author": {
                      "login": "madvorak"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5arBbq",
                    "body": "It's company policy. There's a process I can follow that will let me use my own name there, but it's complicated and not really worth fighting for. Note that this is still in my personal time (not work).",
                    "createdAt": "2024-03-12T10:35:28Z",
                    "author": {
                      "login": "lambda-fairy"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5arCHI",
                    "body": "Ah, cool! I just wanted to make sure it was intentional that Google is written there.",
                    "createdAt": "2024-03-12T10:37:45Z",
                    "author": {
                      "login": "madvorak"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5kn5E4",
                    "body": "```suggestion\r\nGiven a language `L` and a word `x`, the *left quotient* of `L` by `x` is the set of suffixes `y` such that\r\n```\r\nor something like that?",
                    "createdAt": "2024-07-23T14:33:36Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5kn5cU",
                    "body": "I doubt this is a good idea as a simp lemma",
                    "createdAt": "2024-07-23T14:34:32Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5kn8_c",
                    "body": "```suggestion\r\ntheorem mem_leftQuotient (x y : List Î±) : y âˆˆ L.leftQuotient x â†” x ++ y âˆˆ L := Iff.rfl\r\n```",
                    "createdAt": "2024-07-23T14:43:05Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  }
                ]
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjE1NzIzMjM=",
              "login": "lambda-fairy"
            },
            {
              "id": "MDQ6VXNlcjY2NDMxMTY=",
              "login": "madvorak"
            },
            {
              "id": "MDQ6VXNlcjE0MDkwNTkz",
              "login": "YaelDillies"
            },
            {
              "id": "MDQ6VXNlcjQyNTI2MA==",
              "login": "eric-wieser"
            },
            {
              "id": "U_kgDOB75MNQ",
              "login": "leanprover-community-mathlib4-bot"
            },
            {
              "id": "MDQ6VXNlcjU2MzY3MDU=",
              "login": "jcommelin"
            },
            {
              "id": "MDQ6VXNlcjEwMTA1MDE2",
              "login": "grunweg"
            },
            {
              "id": "U_kgDOBcsTTQ",
              "login": "leanprover-community-bot-assistant"
            }
          ]
        },
        "state": "OPEN",
        "statusCheckRollup": {
          "contexts": {
            "nodes": [
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAH_9L-iw",
                "name": "set_pr_emoji",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12309571453/job/34356788875"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAH_9I2zA",
                "name": "Add topic label",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12309550737/job/34356737740"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAH_9I39w",
                "name": "label-and-report-new-contributor",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12309550844/job/34356738039"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAH_9I35Q",
                "name": "post-or-update-summary-comment",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12309550852/job/34356738021"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAH_9I31A",
                "name": "Cancel Previous Runs (CI)",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12309550730/job/34356738004"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAH_9I5Gg",
                "name": "Cancel Previous Runs (CI)",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12309550734/job/34356738330"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAH_9I3ag",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12309550841/job/34356737898"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAH_9I4lA",
                "name": "Lint style (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12309550730/job/34356738196"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAH_9I27g",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12309550734/job/34356737774"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAH_9I4gw",
                "name": "Check all files imported",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12309550841/job/34356738179"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAH_9I4XA",
                "name": "Build",
                "conclusion": "FAILURE",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12309550734/job/34356738140"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAH_9I21A",
                "name": "Build (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12309550730/job/34356737748"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAH_9I5Mg",
                "name": "Post-CI job (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12309550730/job/34356738354"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAH_9Kd8Q",
                "name": "Post-CI job",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12309550734/job/34356764145"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAH_9JG3Q",
                "name": "New Contributor Check",
                "conclusion": "NEUTRAL",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/34356741853"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAH_9Ix5Q",
                "name": ".github/dependabot.yml",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://dependabot-api.githubapp.com"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAH_9Jlxg",
                "name": "Summary",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=11311&login=leanprover-community&repository=mathlib4"
              }
            ]
          }
        },
        "title": "feat: Myhillâ€“Nerode theorem",
        "updatedAt": "2024-12-13T04:25:06Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/11311",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "ReviewRequestedEvent",
              "id": "RRE_lADOFcwZ1c6B_edxzwAAAALQRt6l",
              "createdAt": "2024-03-12T07:17:04Z",
              "requestedReviewer": {
                "id": "MDQ6VXNlcjQyNTI2MA==",
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "ReviewRequestedEvent",
              "id": "RRE_lADOFcwZ1c6B_edxzwAAAALQRt6y",
              "createdAt": "2024-03-12T07:17:05Z",
              "requestedReviewer": {
                "id": "MDQ6VXNlcjY2NDMxMTY=",
                "login": "madvorak"
              }
            },
            {
              "__typename": "ReviewRequestedEvent",
              "id": "RRE_lADOFcwZ1c6B_edxzwAAAALQRt6_",
              "createdAt": "2024-03-12T07:17:05Z",
              "requestedReviewer": {
                "id": "MDQ6VXNlcjE0MDkwNTkz",
                "login": "YaelDillies"
              }
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6B_edxzwAAAALQRzfJ",
              "createdAt": "2024-03-12T07:19:06Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6B_edxzwAAAALQR0h2",
              "createdAt": "2024-03-12T07:19:29Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABgS7AmA",
                "name": "t-computability"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5zENth",
              "createdAt": "2024-03-12T09:10:12Z",
              "body": "",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5zEjZ0",
              "createdAt": "2024-03-12T09:47:34Z",
              "body": "",
              "author": {
                "login": "madvorak"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5zEkwJ",
              "createdAt": "2024-03-12T09:49:47Z",
              "body": "",
              "author": {
                "login": "madvorak"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5zEmC3",
              "createdAt": "2024-03-12T09:52:09Z",
              "body": "",
              "author": {
                "login": "madvorak"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5zEnp7",
              "createdAt": "2024-03-12T09:54:59Z",
              "body": "",
              "author": {
                "login": "madvorak"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5zEsX7",
              "createdAt": "2024-03-12T10:03:03Z",
              "body": "",
              "author": {
                "login": "madvorak"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5zEtbH",
              "createdAt": "2024-03-12T10:05:04Z",
              "body": "",
              "author": {
                "login": "madvorak"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c52sZWY",
              "createdAt": "2024-03-12T10:48:49Z",
              "body": "I had to meditate for about an hour about what `Set.range L.leftQuotient` means, but I get it now!\r\nI am wondering if there is a cognitive shortcut that could be used to build a mental model of what `Set.range L.leftQuotient` means. If you have one, it would be nice to add it as a comment, probably on the main theorem.\r\n\r\nNice PR, good job!\r\nI left some minor comments (no need to remind you, as you have already started answering them while I was still reviewing).",
              "author": {
                "login": "madvorak"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6B_edxzwAAAALQ1AnF",
              "createdAt": "2024-03-12T18:31:25Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6B_edxzwAAAALQ1AnO",
              "createdAt": "2024-03-12T18:31:25Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c524Ffd",
              "createdAt": "2024-03-13T13:31:13Z",
              "body": "Thanks YaÃ«l and Martin for the review!\r\n\r\nI think the main takeaway here is I should split this into separate PRs:\r\n\r\n1. Define `DFA.acceptsFrom`\r\n2. Define the equiv `DFA Î± Ïƒ â‰ƒ DFA Î±' Ïƒ'`\r\n3. Define `Language.IsRegular`\r\n4. Prove Myhillâ€“Nerode (this PR)\r\n\r\nwith dependencies 1 â†’ 4, 2 â†’ 3, 3 â†’ 4.\r\n\r\nSo I'll focus on landing those dependencies first.",
              "author": {
                "login": "lambda-fairy"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5241PQ",
              "createdAt": "2024-03-13T15:03:33Z",
              "body": "I think 1 and 2 can be made a single PR ",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c53BqRe",
              "createdAt": "2024-03-14T09:01:29Z",
              "body": "> Rather than taking a `Quotient` by the Nerode relation, I instead talk about the the function `fun x => { y | x ++ y âˆˆ L }`. This ends up simpler as we can avoid fiddling with the `Quotient` API.\r\n\r\nIt's not immediately clear to me that this is actually the case, but I can reevaluate once the dependencies land.",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6B_edxzwAAAALST3Le",
              "createdAt": "2024-03-14T13:29:01Z",
              "label": {
                "id": "MDU6TGFiZWwzMjg4OTQyMDg2",
                "name": "blocked-by-other-PR"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6B_edxzwAAAALSUA8n",
              "createdAt": "2024-03-14T13:31:44Z",
              "label": {
                "id": "MDU6TGFiZWwzMjg4OTQyMDg2",
                "name": "blocked-by-other-PR"
              }
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5Ra2CR",
              "createdAt": "2024-03-14T13:36:09Z",
              "source": {
                "id": "PR_kwDOFcwZ1c5poiwu",
                "title": "[Merged by Bors] - feat: DFA.acceptsFrom, DFA.map, DFA.equiv",
                "url": "https://github.com/leanprover-community/mathlib4/pull/11372"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6B_edxzwAAAALSU4nu",
              "createdAt": "2024-03-14T13:46:40Z",
              "label": {
                "id": "MDU6TGFiZWwzMjg4OTQyMDg2",
                "name": "blocked-by-other-PR"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6B_edxzwAAAALZjZne",
              "createdAt": "2024-03-25T19:44:31Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABb5aSCQ",
                "name": "new-contributor"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6B_edxzwAAAAMD3GG5",
              "createdAt": "2024-05-27T21:21:41Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABoZOzhg",
                "name": "blocked-by-other-PR"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6B_edxzwAAAAMEB_oS",
              "createdAt": "2024-05-28T06:46:16Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABoZOzhg",
                "name": "blocked-by-other-PR"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6B_edxzwAAAAMECFFz",
              "createdAt": "2024-05-28T06:48:46Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABoakDog",
                "name": "blocked-by-other-PR"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6B_edxzwAAAAMEDcRL",
              "createdAt": "2024-05-28T07:20:19Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABoakDog",
                "name": "blocked-by-other-PR"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6B_edxzwAAAAMklW9a",
              "createdAt": "2024-07-14T20:21:21Z",
              "label": {
                "id": "MDU6TGFiZWwzMjg4OTQyMDg2",
                "name": "blocked-by-other-PR"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6ExIrD",
              "createdAt": "2024-07-14T20:21:22Z",
              "body": "This PR/issue depends on:\n* ~~leanprover-community/mathlib4#11372~~\nBy **[Dependent Issues](https://github.com/z0al/dependent-issues)** (ðŸ¤–). Happy coding!\n<!-- By Dependent Issues (Action) - DO NOT REMOVE -->",
              "author": {
                "login": "leanprover-community-mathlib4-bot"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6B_edxzwAAAAMklb9d",
              "createdAt": "2024-07-14T20:36:16Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6F1nyL",
              "createdAt": "2024-07-23T14:33:27Z",
              "body": "Hi @lambda-fairy now that the dependent PR has been merged, could you please merge master and resolve the conflicts?",
              "author": {
                "login": "jcommelin"
              }
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6B_edxzwAAAAMroXSI",
              "createdAt": "2024-07-23T14:33:33Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABb5aSCQ",
                "name": "new-contributor"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6CyIdM",
              "createdAt": "2024-07-23T14:33:36Z",
              "body": "I'm excited to see this in Mathlib. Please merge the conflicts and address the comments and hopefully we get it merged soon after that!",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6Xa3gN",
              "createdAt": "2024-12-13T02:32:09Z",
              "body": "Apologies for the delay. I'll take a look this weekend.\r\n\r\nNote to self: Since #13554 landed, we can reference that definition of `IsRegular`.",
              "author": {
                "login": "lambda-fairy"
              }
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6B_edxzwAAAAOkbOIm",
              "createdAt": "2024-12-13T04:22:46Z"
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6B_edxzwAAAAOkbOal",
              "createdAt": "2024-12-13T04:22:59Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABb5aSCQ",
                "name": "new-contributor"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6XbUzj",
              "createdAt": "2024-12-13T04:23:48Z",
              "body": "### PR summary [f8d92b1309](https://github.com/leanprover-community/mathlib4/pull/11311/commits/f8d92b1309310486ade18704336bd597fca22b24)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n| `Mathlib.Computability.MyhillNerode` (new file)|663|\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ equivOfStates`\n`+ equivOfStates_accept`\n`+ equivOfStates_accepts`\n`+ equivOfStates_evalFrom`\n`+ equivOfStates_start`\n`+ equivOfStates_step`\n`+ exists_dfa_iff_finite_leftQuotient`\n`+ exists_dfa_of_finite_leftQuotient`\n`+ finite_leftQuotient_of_dfa`\n`+ leftQuotient`\n`+ leftQuotient_accepts`\n`+ leftQuotient_accepts'`\n`+ leftQuotient_append`\n`+ leftQuotient_mem`\n`+ leftQuotient_nil`\n`+ mem_toDFA_accept`\n`+ toDFA`\n`+ toDFA_accepts`\n`+ toDFA_start`\n`+ toDFA_step`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>\n\n---\n\n<details><summary>No changes to technical debt.</summary>\n\nYou can run this locally as\n```\n./scripts/technical-debt-metrics.sh pr_summary\n```\n* The `relative` value is the weighted *sum* of the differences with weight given by the *inverse* of the current value of the statistic.\n* The `absolute` value is the `relative` value divided by the total sum of the inverses of the current values (i.e. the weighted *average* of the differences).\n</details>",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6B_edxzwAAAAOkbR1A",
              "createdAt": "2024-12-13T04:25:06Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            }
          ]
        }
      }
    }
  }
}
