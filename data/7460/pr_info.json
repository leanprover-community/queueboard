{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 24,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "jjaassoonn"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "---\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n-->\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 1,
        "closed": true,
        "closedAt": "2023-11-20T12:27:07Z",
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c5sa1Gh",
              "body": "Pull request successfully merged into master.\n\nBuild succeeded:\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/6929481024/job/18847272228)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/6929481024/job/18847273259)\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/6929481024/job/18847272775)",
              "createdAt": "2023-11-20T12:27:06Z",
              "author": {
                "login": "mathlib-bors"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "0467f4aece30863e283f1bab5ed79633983a1bdd",
                "additions": 30,
                "deletions": 0,
                "committedDate": "2023-10-02T16:44:15Z",
                "author": {
                  "name": "Jujian Zhang",
                  "email": "jujian.zhang1998@outlook.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "e21840bb070b1e314e91a3df9eaf5d34a8b4dca0",
                "additions": 2,
                "deletions": 2,
                "committedDate": "2023-10-02T16:44:56Z",
                "author": {
                  "name": "Jujian Zhang",
                  "email": "jujian.zhang1998@outlook.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "48de70a4ffb2e046fcaa796e7c91c5880f74ba84",
                "additions": 69273,
                "deletions": 31863,
                "committedDate": "2023-11-15T10:51:40Z",
                "author": {
                  "name": "Jujian Zhang",
                  "email": "jujian.zhang1998@outlook.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEWrOr1g",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6876293488/job/18701593558"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEWrOsJA",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6876293487/job/18701593636"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEWrOvEg",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6876293488/job/18701594386"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEWrOtTg",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6876293487/job/18701593934"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEWrOt6Q",
                        "name": "Check all files imported (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6876293488/job/18701594089"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEWrOvfg",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6876293487/job/18701594494"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEWrOs7A",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6876293488/job/18701593836"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEWrOwgg",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6876293487/job/18701594754"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEWrOuPA",
                        "name": "Build",
                        "conclusion": "CANCELLED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6876293487/job/18701594172"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEWrOwKQ",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6876293488/job/18701594665"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEWrSAXQ",
                        "name": "Post-CI job",
                        "conclusion": "CANCELLED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6876293487/job/18701647965"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEWrOxMg",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6876293488/job/18701594930"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "ee28f6c5cd88a0f223d3f25de77f7e2ee51b6c41",
                "additions": 16,
                "deletions": 23,
                "committedDate": "2023-11-15T10:52:59Z",
                "author": {
                  "name": "Jujian Zhang",
                  "email": "jujian.zhang1998@outlook.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEWrRJww",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6876306603/job/18701633987"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEWrRJSQ",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6876306602/job/18701633865"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEWrROqQ",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6876306603/job/18701635241"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEWrRKUg",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6876306602/job/18701634130"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEWrRNwg",
                        "name": "Check all files imported (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6876306603/job/18701635010"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEWrRLFQ",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6876306602/job/18701634325"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEWrRM8w",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6876306603/job/18701634803"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEWrRL5g",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6876306602/job/18701634534"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEWrRMtw",
                        "name": "Build",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6876306602/job/18701634743"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEWrRLZA",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6876306603/job/18701634404"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEWrRPoQ",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6876306603/job/18701635489"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEWrVvCg",
                        "name": "Post-CI job",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6876306602/job/18701709066"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "a44d47b11247073cada005839dc5c2fc1452e9c4",
                "additions": 3,
                "deletions": 2,
                "committedDate": "2023-11-15T10:55:54Z",
                "author": {
                  "name": "Jujian Zhang",
                  "email": "jujian.zhang1998@outlook.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEY1MA6A",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6929131915/job/18846253288"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEY1MAqA",
                        "name": "Add ready-to-merge label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6929131914/job/18846253224"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEWtMJ3Q",
                        "name": "Add annotations",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6876381735/job/18703649245"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEWrWTJA",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6876332604/job/18701718308"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEWrWSxA",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6876332602/job/18701718212"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEWrf-bw",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6876381728/job/18701876847"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEY1MBrA",
                        "name": "Add delegated label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6929131914/job/18846253484"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEWrWU5w",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6876332604/job/18701718759"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEWrWR-A",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6876332602/job/18701718008"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEWrf_tg",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6876381728/job/18701877174"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEWrWT-A",
                        "name": "Check all files imported (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6876332604/job/18701718520"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEWrWTgA",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6876332602/job/18701718400"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEWrWSIw",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6876332604/job/18701718051"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEWrWUVQ",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6876332602/job/18701718613"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEWrWVtA",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6876332604/job/18701718964"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEWrWVJg",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6876332602/job/18701718822"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEWrWW9w",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6876332604/job/18701719287"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEWs9O0g",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6876332602/job/18703404754"
                      }
                    ]
                  }
                }
              }
            }
          ]
        },
        "createdAt": "2023-10-02T16:46:25Z",
        "deletions": 0,
        "files": {
          "nodes": [
            {
              "path": "Mathlib/RingTheory/Ideal/Basic.lean",
              "additions": 24,
              "deletions": 0
            }
          ]
        },
        "headRefName": "zjj/isPrime_of_maximally_disjoint",
        "headRefOid": "a44d47b11247073cada005839dc5c2fc1452e9c4",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c5bsRqJ",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
              "color": "06e039",
              "name": "ready-to-merge"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABViJjTQ",
              "color": "33DBEC",
              "name": "t-algebra"
            }
          ]
        },
        "latestReviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5jQwpE",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2023-10-09T21:49:01Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5k5I3n",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "alreadydone"
              },
              "submittedAt": "2023-10-23T14:19:31Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5jKN5x",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-10-08T23:51:31Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5nrxZn",
              "body": "Thanks!\r\n\r\nbors r+",
              "state": "APPROVED",
              "author": {
                "login": "Vierkantor"
              },
              "submittedAt": "2023-11-20T11:01:18Z"
            }
          ]
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "UNKNOWN",
        "mergeable": "UNKNOWN",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 7460,
        "potentialMergeCommit": null,
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": "APPROVED",
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5jKNmL",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-10-08T23:43:08Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5jKN5x",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-10-08T23:51:31Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5jPsMJ",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2023-10-09T18:24:01Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5jQvcG",
              "body": "",
              "state": "APPROVED",
              "author": {
                "login": "alreadydone"
              },
              "submittedAt": "2023-10-09T21:43:52Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5jQwpE",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2023-10-09T21:49:01Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5k4UPt",
              "body": "`Disjoint` really isn't bad to work with IMO, so we should standardise on that.",
              "state": "APPROVED",
              "author": {
                "login": "Vierkantor"
              },
              "submittedAt": "2023-10-23T13:39:48Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5k5I3n",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "alreadydone"
              },
              "submittedAt": "2023-10-23T14:19:31Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5nrxZn",
              "body": "Thanks!\r\n\r\nbors r+",
              "state": "APPROVED",
              "author": {
                "login": "Vierkantor"
              },
              "submittedAt": "2023-11-20T11:01:18Z"
            }
          ]
        },
        "reviewThreads": {
          "nodes": [
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5QdEbM",
                    "body": "What do you think of\r\n```suggestion\r\n    (S : Submonoid α) (disjoint : Disjoint (I : Set α) S)\r\n```\r\nand similarly for `maximally_disjoint`?",
                    "createdAt": "2023-10-08T23:43:08Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5Qg7OT",
                    "body": "I think `Disjoint` isn't very nice definitionally (requires [disjoint_iff](https://leanprover-community.github.io/mathlib4_docs/Mathlib/Order/Disjoint.html#disjoint_iff) to convert to the current form), and `¬ Disjoint` would be a bit awkward (`((I : Set α) ∩ S).Nonempty` is probably definitionally most convenient), so I'm happy with the current statement. Note that `∩` should be used instead of `⊓` since these are sets.\r\n ",
                    "createdAt": "2023-10-09T21:42:27Z",
                    "author": {
                      "login": "alreadydone"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5Qg8Ca",
                    "body": "The point of `Disjoint` is precisely to normalise alll those context-specific uses to a single canonical spelling, though.\r\nYou will remark that `(I : Set α) ⊓ S = ∅` is actually very bad definitionally. You can't apply it nor have dot notation on it!\r\n\r\nI am strongly in favour of Eric's suggestion.",
                    "createdAt": "2023-10-09T21:49:01Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5Rk59D",
                    "body": "I agree, we should consistently use `Disjoint` here. See also this analogous Zulip discussion on `IsCoprime`: https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/coprime.20ideal/near/395055642.",
                    "createdAt": "2023-10-23T13:04:02Z",
                    "author": {
                      "login": "Vierkantor"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5QdEt7",
                    "body": "@YaelDillies, do we have some predicate that combines these two, as the more general\r\n```lean\r\n    (p : P I)\r\n    (maximally_p : ∀ (J : Ideal α), P J → I < J → False) :\r\n```",
                    "createdAt": "2023-10-08T23:51:31Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5QgWjC",
                    "body": "There's `IsMaxOn`, but weirdly it uses `Filter` 🤔 ",
                    "createdAt": "2023-10-09T18:24:01Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5RlCkN",
                    "body": "I tried using `IsMaxOn` here but the API is very much lacking. For example, you cannot easily get Eric's `maximally_p` out of it. So I think the current spelling of `maximally_disjoint` is okay, if we switch to `Disjoint`:\r\n```suggestion\r\n    (S : Submonoid α) (disjoint : Disjoint (I : Set α) S)\r\n    (maximally_disjoint : ∀ (J : Ideal α), I < J → ¬ Disjoint (J : Set α) S) :\r\n```",
                    "createdAt": "2023-10-23T13:23:31Z",
                    "author": {
                      "login": "Vierkantor"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5Qg7Zc",
                    "body": "a bit of golf\r\n```\r\nlemma isPrime_of_maximally_disjoint (I : Ideal α)\r\n    (S : Submonoid α) (disjoint : (I : Set α) ∩ S = ∅)\r\n    (maximally_disjoint : ∀ (J : Ideal α), I < J → (J : Set α) ∩ S ≠ ∅) :\r\n    I.IsPrime where\r\n  ne_top' := by rintro rfl; exact disjoint.subset ⟨trivial, S.one_mem⟩\r\n  mem_or_mem' {x y} hxy := by\r\n    by_contra' rid\r\n    have hx := maximally_disjoint (I ⊔ span {x}) (Submodule.lt_sup_iff_not_mem.mpr rid.1)\r\n    have hy := maximally_disjoint (I ⊔ span {y}) (Submodule.lt_sup_iff_not_mem.mpr rid.2)\r\n    simp_rw [← nonempty_iff_ne_empty, nonempty_def, mem_inter_iff,\r\n      SetLike.mem_coe, Submodule.mem_sup, mem_span_singleton] at hx hy\r\n    obtain ⟨s₁, ⟨i₁, hi₁, ⟨_, ⟨r₁, rfl⟩, hr₁⟩⟩, hs₁⟩ := hx\r\n    obtain ⟨s₂, ⟨i₂, hi₂, ⟨_, ⟨r₂, rfl⟩, hr₂⟩⟩, hs₂⟩ := hy\r\n    refine eq_empty_iff_forall_not_mem.mp disjoint (s₁ * s₂) ⟨hr₁ ▸ hr₂ ▸ ?_, S.mul_mem hs₁ hs₂⟩\r\n    ring_nf\r\n    rw [show x * r₁ * y * r₂ = (x * y) * (r₁ * r₂) by ring]\r\n    exact I.add_mem (I.add_mem (I.add_mem (I.mul_mem_left _ hi₂) <| I.mul_mem_right _ <|\r\n      I.mul_mem_right _ hi₁) <| I.mul_mem_left _ hi₂) (I.mul_mem_right _ hxy)\r\n```",
                    "createdAt": "2023-10-09T21:43:48Z",
                    "author": {
                      "login": "alreadydone"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5Rk_CU",
                    "body": "Here's an alternative proof if you use `Disjoint` above:\r\n```suggestion\r\n    have : 1 ∈ (S : Set α) := S.one_mem\r\n    aesop\r\n```",
                    "createdAt": "2023-10-23T13:17:33Z",
                    "author": {
                      "login": "Vierkantor"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5RlJQB",
                    "body": "Further golfing using `Disjoint`:\r\n```suggestion\r\n    by_contra' rid\r\n    have hx := maximally_disjoint (I ⊔ span {x}) (Submodule.lt_sup_iff_not_mem.mpr rid.1)\r\n    have hy := maximally_disjoint (I ⊔ span {y}) (Submodule.lt_sup_iff_not_mem.mpr rid.2)\r\n    simp only [Set.not_disjoint_iff, mem_inter_iff, SetLike.mem_coe, Submodule.mem_sup,\r\n      mem_span_singleton] at hx hy\r\n    obtain ⟨s₁, ⟨i₁, hi₁, ⟨_, ⟨r₁, rfl⟩, hr₁⟩⟩, hs₁⟩ := hx\r\n    obtain ⟨s₂, ⟨i₂, hi₂, ⟨_, ⟨r₂, rfl⟩, hr₂⟩⟩, hs₂⟩ := hy\r\n    refine disjoint.ne_of_mem\r\n      (I.add_mem (I.mul_mem_left (i₁ + x * r₁) hi₂) <| I.add_mem (I.mul_mem_right (y * r₂) hi₁) <|\r\n        I.mul_mem_right (r₁ * r₂) hxy)\r\n      (S.mul_mem hs₁ hs₂) ?_\r\n    rw [← hr₁, ← hr₂]\r\n    ring\r\n```",
                    "createdAt": "2023-10-23T13:39:17Z",
                    "author": {
                      "login": "Vierkantor"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5RlZm2",
                    "body": "Thanks and sorry for forgetting about the PR. I can now agree that using `Disjoint` API is good practice, having worked with it a bit in other contexts.",
                    "createdAt": "2023-10-23T14:19:31Z",
                    "author": {
                      "login": "alreadydone"
                    }
                  }
                ]
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjEzMjAzNDg4",
              "login": "jjaassoonn"
            },
            {
              "id": "MDQ6VXNlcjQyNTI2MA==",
              "login": "eric-wieser"
            },
            {
              "id": "MDQ6VXNlcjIxMTY1NzA=",
              "login": "Vierkantor"
            },
            {
              "id": "MDQ6VXNlcjMwNjQxNDU=",
              "login": "alreadydone"
            },
            {
              "id": "MDQ6VXNlcjE0MDkwNTkz",
              "login": "YaelDillies"
            },
            {
              "id": "U_kgDOB75MNQ",
              "login": "leanprover-community-mathlib4-bot"
            }
          ]
        },
        "state": "CLOSED",
        "statusCheckRollup": {
          "contexts": {
            "nodes": [
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAEY1MA6A",
                "name": "Ping maintainers on Zulip",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6929131915/job/18846253288"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAEY1MAqA",
                "name": "Add ready-to-merge label",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6929131914/job/18846253224"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAEWtMJ3Q",
                "name": "Add annotations",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6876381735/job/18703649245"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAEWrWTJA",
                "name": "Cancel Previous Runs (CI)",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6876332604/job/18701718308"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAEWrWSxA",
                "name": "Cancel Previous Runs (CI)",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6876332602/job/18701718212"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAEWrf-bw",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6876381728/job/18701876847"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAEY1MBrA",
                "name": "Add delegated label",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6929131914/job/18846253484"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAEWrWU5w",
                "name": "Lint style (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6876332604/job/18701718759"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAEWrWR-A",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6876332602/job/18701718008"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAEWrf_tg",
                "name": "Check all files imported",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6876381728/job/18701877174"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAEWrWT-A",
                "name": "Check all files imported (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6876332604/job/18701718520"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAEWrWTgA",
                "name": "Check all files imported",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6876332602/job/18701718400"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAEWrWSIw",
                "name": "check workflows (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6876332604/job/18701718051"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAEWrWUVQ",
                "name": "check workflows",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6876332602/job/18701718613"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAEWrWVtA",
                "name": "Build (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6876332604/job/18701718964"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAEWrWVJg",
                "name": "Build",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6876332602/job/18701718822"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAEWrWW9w",
                "name": "Post-CI job (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6876332604/job/18701719287"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAEWs9O0g",
                "name": "Post-CI job",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6876332602/job/18703404754"
              }
            ]
          }
        },
        "title": "[Merged by Bors] - feat(RingTheory/Ideal/Basic): an ideal is prime if it is maximally disjoint from a submonoid",
        "updatedAt": "2023-11-20T12:27:11Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/7460",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "0467f4aece30863e283f1bab5ed79633983a1bdd"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "e21840bb070b1e314e91a3df9eaf5d34a8b4dca0"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5yk5aLzwAAAAJzidZO",
              "createdAt": "2023-10-02T16:46:49Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5yk5aLzwAAAAJzidZY",
              "createdAt": "2023-10-02T16:46:49Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKteTVQ",
                "name": "awaiting-CI"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5yk5aLzwAAAAJzidZg",
              "createdAt": "2023-10-02T16:46:49Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABViJjTQ",
                "name": "t-algebra"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5yk5aLzwAAAAJzkgUi",
              "createdAt": "2023-10-02T17:50:36Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKteTVQ",
                "name": "awaiting-CI"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5jKNmL",
              "createdAt": "2023-10-08T23:43:08Z",
              "body": "",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5jKN5x",
              "createdAt": "2023-10-08T23:51:30Z",
              "body": "",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5jQvcG",
              "createdAt": "2023-10-09T21:42:27Z",
              "body": "",
              "author": {
                "login": "alreadydone"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5k4UPt",
              "createdAt": "2023-10-23T13:04:02Z",
              "body": "`Disjoint` really isn't bad to work with IMO, so we should standardise on that.",
              "author": {
                "login": "Vierkantor"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5yk5aLzwAAAAKANygW",
              "createdAt": "2023-10-23T13:40:37Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5yk5aLzwAAAAKANygm",
              "createdAt": "2023-10-23T13:40:37Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "48de70a4ffb2e046fcaa796e7c91c5880f74ba84"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "ee28f6c5cd88a0f223d3f25de77f7e2ee51b6c41"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "a44d47b11247073cada005839dc5c2fc1452e9c4"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5yk5aLzwAAAAKNnz4m",
              "createdAt": "2023-11-15T10:57:29Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5yk5aLzwAAAAKNnz4z",
              "createdAt": "2023-11-15T10:57:29Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5yk5aLzwAAAAKNnz5D",
              "createdAt": "2023-11-15T10:57:29Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKteTVQ",
                "name": "awaiting-CI"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5yk5aLzwAAAAKNpwYD",
              "createdAt": "2023-11-15T11:51:57Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKteTVQ",
                "name": "awaiting-CI"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5nrxZn",
              "createdAt": "2023-11-20T11:01:18Z",
              "body": "Thanks!\r\n\r\nbors r+",
              "author": {
                "login": "Vierkantor"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5yk5aLzwAAAAKQQ6P4",
              "createdAt": "2023-11-20T11:01:31Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
                "name": "ready-to-merge"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5yk5aLzwAAAAKQQ6S3",
              "createdAt": "2023-11-20T11:01:32Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5sa1Gh",
              "createdAt": "2023-11-20T12:27:06Z",
              "body": "Pull request successfully merged into master.\n\nBuild succeeded:\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/6929481024/job/18847272228)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/6929481024/job/18847273259)\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/6929481024/job/18847272775)",
              "author": {
                "login": "mathlib-bors"
              }
            },
            {
              "__typename": "RenamedTitleEvent"
            },
            {
              "__typename": "ClosedEvent",
              "id": "CE_lADOFcwZ1c5yk5aLzwAAAAKQUicq",
              "createdAt": "2023-11-20T12:27:07Z"
            },
            {
              "__typename": "HeadRefDeletedEvent",
              "id": "HRDE_lADOFcwZ1c5yk5aLzwAAAAKQUina",
              "createdAt": "2023-11-20T12:27:11Z"
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "ReferencedEvent"
            }
          ]
        }
      }
    }
  }
}
