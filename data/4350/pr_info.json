{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 442,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "Vierkantor"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "I wrote a basic implementation for a `norm_num` plugin evaluating `Finset.sum` and `Finset.prod`. It does not yet support as many `Finset` expressions as the Mathlib 3 implementation, and it cannot deal with variables appearing in the sum. I believe it's valuable to have this implementation since we do use this plugin in various parts of mathlib.\r\n\r\n---\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n-->\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 4,
        "closed": true,
        "closedAt": "2023-07-11T08:45:30Z",
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c5hI8U-",
              "body": ":v: Vierkantor can now approve this pull request. To approve and merge a pull request, simply reply with `bors r+`. More detailed instructions are available [here](https://bors.tech/documentation/getting-started/#reviewing-pull-requests).",
              "createdAt": "2023-07-10T21:08:00Z",
              "author": {
                "login": "bors"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5hLbf1",
              "body": "Bors is idle and I only touched comments so:\r\n\r\nbors r+",
              "createdAt": "2023-07-11T08:30:47Z",
              "author": {
                "login": "Vierkantor"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5hLgyF",
              "body": "Pull request successfully merged into master.\n\n  Build succeeded!\n\n  The publicly hosted instance of bors-ng is deprecated and will go away soon.\n\n  If you want to self-host your own instance, [instructions are here][instructions].\n  For more help, visit [the forum].\n\n  If you want to switch to GitHub's built-in merge queue, visit [their help page][gh].\n\n  [instructions]: https://github.com/bors-ng/bors-ng#how-to-set-up-your-own-real-instance\n  [the forum]: https://forum.bors.tech\n  [gh]: https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/configuring-pull-request-merges/managing-a-merge-queue\n\n\n\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/5517641109/jobs/10060526174)\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/5517641109/jobs/10060526400)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/5517641109/jobs/10060526799)",
              "createdAt": "2023-07-11T08:45:29Z",
              "author": {
                "login": "bors"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "753a8f0818b51d459c675805ef9a836dcfb50b82",
                "additions": 102,
                "deletions": 0,
                "committedDate": "2023-05-25T17:02:20Z",
                "author": {
                  "name": "Vierkantor",
                  "email": "vierkantor@vierkantor.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "9a20454bebc8b9cd7d0f5fb0ad06aaaabdaae8fc",
                "additions": 91,
                "deletions": 11,
                "committedDate": "2023-05-25T17:02:20Z",
                "author": {
                  "name": "Vierkantor",
                  "email": "vierkantor@vierkantor.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "dc3e8e9001b17ccd1edd90a52bb0ac5ab1d9b07a",
                "additions": 88,
                "deletions": 39,
                "committedDate": "2023-05-25T17:02:20Z",
                "author": {
                  "name": "Vierkantor",
                  "email": "vierkantor@vierkantor.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "0cab37bed582eeb41a36f29d51c63dfac12ebfac",
                "additions": 57,
                "deletions": 8,
                "committedDate": "2023-05-25T17:02:20Z",
                "author": {
                  "name": "Vierkantor",
                  "email": "vierkantor@vierkantor.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "555ae0669af18ae631a9ffd2bf86f4be90fda574",
                "additions": 127,
                "deletions": 2,
                "committedDate": "2023-05-25T17:02:20Z",
                "author": {
                  "name": "Vierkantor",
                  "email": "vierkantor@vierkantor.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "59030ba32d63444443073bc8b85ea7f865c3ce81",
                "additions": 81,
                "deletions": 102,
                "committedDate": "2023-05-25T17:30:20Z",
                "author": {
                  "name": "Vierkantor",
                  "email": "vierkantor@vierkantor.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "0fbb5fd6b397cfe59ed69f91ea8d3773c359e354",
                "additions": 1,
                "deletions": 0,
                "committedDate": "2023-05-25T17:37:55Z",
                "author": {
                  "name": "Vierkantor",
                  "email": "vierkantor@vierkantor.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "ef3430dba372e118b3ae1895720cbd083fb4819f",
                "additions": 1,
                "deletions": 0,
                "committedDate": "2023-05-25T20:35:32Z",
                "author": {
                  "name": "Vierkantor",
                  "email": "vierkantor@vierkantor.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "b22ea44cf4b7f4673eb9898b9368cf242d4e0841",
                "additions": 2,
                "deletions": 2,
                "committedDate": "2023-06-28T10:23:26Z",
                "author": {
                  "name": "Anne Baanen",
                  "email": "Vierkantor@users.noreply.github.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "ce6ec4dda832c9ea83ee08a8626070e209514ab0",
                "additions": 156,
                "deletions": 156,
                "committedDate": "2023-06-28T10:26:15Z",
                "author": {
                  "name": "Anne Baanen",
                  "email": "t.baanen@vu.nl"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "4141cbd59fdcc223c13538415a1768f32d94bde1",
                "additions": 5,
                "deletions": 0,
                "committedDate": "2023-06-28T10:41:39Z",
                "author": {
                  "name": "Anne Baanen",
                  "email": "t.baanen@vu.nl"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "e30759b82b4c9798f9cd7a3f9a3a6685db71faf9",
                "additions": 4,
                "deletions": 0,
                "committedDate": "2023-06-28T10:41:58Z",
                "author": {
                  "name": "Anne Baanen",
                  "email": "t.baanen@vu.nl"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "ecce8198f4fd40b9be8fd2cc8da56bb163106e2c",
                "additions": 4,
                "deletions": 2,
                "committedDate": "2023-06-28T10:42:36Z",
                "author": {
                  "name": "Anne Baanen",
                  "email": "t.baanen@vu.nl"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "fedccdfbff976b3558a91aa7f2e39a019a621188",
                "additions": 303681,
                "deletions": 13918,
                "committedDate": "2023-06-28T10:47:50Z",
                "author": {
                  "name": "Anne Baanen",
                  "email": "t.baanen@vu.nl"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "382b9e147bb888757a5611b8ebf3649dd70ef6a3",
                "additions": 3,
                "deletions": 2,
                "committedDate": "2023-06-28T12:30:04Z",
                "author": {
                  "name": "Anne Baanen",
                  "email": "t.baanen@vu.nl"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "aeb225dcc5828fb978d57af2a82e25c7f25af164",
                "additions": 16620,
                "deletions": 2533,
                "committedDate": "2023-07-01T02:53:47Z",
                "author": {
                  "name": "Jeremy Tan Jie Rui",
                  "email": "reddeloostw@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "024e96f3fd2ae949d0008880e143a64898f9184f",
                "additions": 30402,
                "deletions": 5992,
                "committedDate": "2023-07-10T11:24:17Z",
                "author": {
                  "name": "Vierkantor",
                  "email": "vierkantor@vierkantor.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "859e8755f96f474e1a50d3637a5970279cd54fb0",
                "additions": 1,
                "deletions": 2,
                "committedDate": "2023-07-10T11:34:34Z",
                "author": {
                  "name": "Vierkantor",
                  "email": "vierkantor@vierkantor.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "51dfa01ff5952d717c353c746eed208022122814",
                "additions": 58,
                "deletions": 26,
                "committedDate": "2023-07-10T13:27:46Z",
                "author": {
                  "name": "Vierkantor",
                  "email": "vierkantor@vierkantor.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "f6b823472f6da0a7b5ffd56de9fc60d2e2d2d0f4",
                "additions": 4,
                "deletions": 1,
                "committedDate": "2023-07-11T08:29:33Z",
                "author": {
                  "name": "Vierkantor",
                  "email": "vierkantor@vierkantor.com"
                },
                "statusCheckRollup": null
              }
            }
          ]
        },
        "createdAt": "2023-05-25T17:33:14Z",
        "deletions": 9,
        "files": {
          "nodes": [
            {
              "path": "Mathlib.lean",
              "additions": 1,
              "deletions": 0
            },
            {
              "path": "Mathlib/Tactic.lean",
              "additions": 1,
              "deletions": 0
            },
            {
              "path": "Mathlib/Tactic/NormNum/BigOperators.lean",
              "additions": 418,
              "deletions": 0
            },
            {
              "path": "test/norm_num_ext.lean",
              "additions": 22,
              "deletions": 9
            }
          ]
        },
        "headRefName": "norm_num-bigop",
        "headRefOid": "f6b823472f6da0a7b5ffd56de9fc60d2e2d2d0f4",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c5RXcNb",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c8AAAABAt13Ow",
              "color": "bfd4f2",
              "name": "delegated"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
              "color": "06e039",
              "name": "ready-to-merge"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABKAKYew",
              "color": "33DBEC",
              "name": "t-meta"
            }
          ]
        },
        "latestReviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5ZZN5O",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "kim-em"
              },
              "submittedAt": "2023-06-27T01:09:34Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5ax-ea",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "fpvandoorn"
              },
              "submittedAt": "2023-07-10T21:07:59Z"
            }
          ]
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "UNKNOWN",
        "mergeable": "UNKNOWN",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 4350,
        "potentialMergeCommit": null,
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": null,
        "reviewRequests": {
          "nodes": [
            {
              "requestedReviewer": {
                "id": "MDQ6VXNlcjg2ODU4OA==",
                "login": "digama0"
              }
            }
          ]
        },
        "reviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5ZZKyW",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "kim-em"
              },
              "submittedAt": "2023-06-27T00:52:09Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5ZZLNm",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "kim-em"
              },
              "submittedAt": "2023-06-27T00:55:26Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5ZZLOq",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "kim-em"
              },
              "submittedAt": "2023-06-27T00:55:33Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5ZZLVp",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "kim-em"
              },
              "submittedAt": "2023-06-27T00:56:20Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5ZZLev",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "kim-em"
              },
              "submittedAt": "2023-06-27T00:57:15Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5ZZN0L",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "kim-em"
              },
              "submittedAt": "2023-06-27T01:09:03Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5ZZN5O",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "kim-em"
              },
              "submittedAt": "2023-06-27T01:09:34Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5ZkxJI",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "Vierkantor"
              },
              "submittedAt": "2023-06-28T10:44:18Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5ZkyTA",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "Vierkantor"
              },
              "submittedAt": "2023-06-28T10:47:24Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5aJ5WP",
              "body": "Sorry for not reviewing this for so long!\r\n\r\nThis `norm_num` extension looks quite different than most other extensions. This is of course very related to the fact that the current `norm_num` design doesn't support normalizing lists, multisets or finsets at all. I think eventually it will be nice to extend the support for `norm_num` to also be able to normalize those objects (so adding more constructors to `Result'` for `isList`, `isMultiset` etc.), and having `IsList` structures similar to `isNat`/`isInt` etc. But doing this is nontrivial, and maybe you've tried and noticed obstacles?\r\n\r\nI think it's good to have this version in mathlib (at least in the meantime). Please incorporate the comments I made, or add some additional \"todo's\" for the items you don't do.",
              "state": "COMMENTED",
              "author": {
                "login": "fpvandoorn"
              },
              "submittedAt": "2023-07-04T13:13:15Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5atgH-",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "Vierkantor"
              },
              "submittedAt": "2023-07-10T11:35:55Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5atjMR",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "Vierkantor"
              },
              "submittedAt": "2023-07-10T11:44:40Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5ax-ea",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "fpvandoorn"
              },
              "submittedAt": "2023-07-10T21:07:59Z"
            }
          ]
        },
        "reviewThreads": {
          "nodes": [
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5KFrGO",
                    "body": "Could you add a header here so the porting dashboard marks off `algebra.big_operators.norm_num` as done on account of this PR?",
                    "createdAt": "2023-06-27T00:52:09Z",
                    "author": {
                      "login": "kim-em"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5KFrkr",
                    "body": "We now indent the body of `inductive`.",
                    "createdAt": "2023-06-27T00:55:25Z",
                    "author": {
                      "login": "kim-em"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5KFrmD",
                    "body": "and `do` blocks.",
                    "createdAt": "2023-06-27T00:55:33Z",
                    "author": {
                      "login": "kim-em"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5KFrty",
                    "body": "```suggestion\r\n    insert a s = Multiset.cons a s := by \r\n  ext; simp\r\n```\r\n",
                    "createdAt": "2023-06-27T00:56:20Z",
                    "author": {
                      "login": "kim-em"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5KFr21",
                    "body": "Does this work via `to_additive`?",
                    "createdAt": "2023-06-27T00:57:15Z",
                    "author": {
                      "login": "kim-em"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5KNbMc",
                    "body": "I get the following error:\r\n```\r\napplication type mismatch\r\n  Finset.sum\r\nargument has type\r\n  CommMonoid β\r\nbut function has type\r\n  [inst : AddCommMonoid β] → Finset α → (α → β) → β\r\n```\r\nI think it's because the `CommSemiring` argument, that `CommSemiring.toCommMonoid` does not get `to_additive`ised to `CommSemiring.toAddCommMonoid`.",
                    "createdAt": "2023-06-28T10:44:18Z",
                    "author": {
                      "login": "Vierkantor"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5KnQS4",
                    "body": "Yeah, `to_additive` cannot deal with anything Semiring-related.",
                    "createdAt": "2023-07-04T09:59:26Z",
                    "author": {
                      "login": "fpvandoorn"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5KFt9V",
                    "body": "Just thinking out loud here, not necessarily a request for this implementation:\r\n\r\nCould we have functions like `List.proveEq` (perhaps the wrong name) that takes a `Q(List α)` and returns a `List (Q α)` and an appropriate proof? This (and similarly for Multiset/Finset) feel like they might be good building blocks for other tactics.",
                    "createdAt": "2023-06-27T01:09:03Z",
                    "author": {
                      "login": "kim-em"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5KNb7E",
                    "body": "This was my initial design for this tactic, and I think it would still work, however I could not figure out how to keep track of the proof that the `List (Q α)` indeed corresponds to the `Q(List α)` after we e.g. remove the first cons from the list.\r\n\r\nA small additional advantage to the `proveConsOrNil` pattern is that it is a bit more lazy, so it might help performance slightly.",
                    "createdAt": "2023-06-28T10:47:24Z",
                    "author": {
                      "login": "Vierkantor"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5KFuBw",
                    "body": "Could we have a cross-reference to the `fin_cases` tactic, which has related scope?",
                    "createdAt": "2023-06-27T01:09:34Z",
                    "author": {
                      "login": "kim-em"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5Kn1zG",
                    "body": "I don't actually get any error in this file or the test file when replacing this by `let n : Q(ℕ) := q(0)`",
                    "createdAt": "2023-07-04T12:21:57Z",
                    "author": {
                      "login": "fpvandoorn"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5K_Vnp",
                    "body": "Must have been fixed at some point. Nice!",
                    "createdAt": "2023-07-10T11:35:55Z",
                    "author": {
                      "login": "Vierkantor"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5KoDoQ",
                    "body": "The canonical way to do this in `norm_num` is to use `deriveNat` to get a numeral, and then you can do (quick) operations using numerals only. For example, if `\\<nn, pn\\>` is the result of `deriveNat`, then you can do something like\r\n```\r\nif nn = 0 then \r\n  return .zero pn \r\nelse \r\n  let n' := mkRawNatLit (nn - 1)\r\n  let pn' : Q($nn = Nat.succ $n') := (q(Eq.refl $nn) : Expr)\r\n  ...\r\n```\r\nand in the second branch you now easily get the equality `$n = $n'.succ` as well.\r\nThis has the advantage that after `deriveNat` once you only deal with numerals (and therefore you only have to call `deriveNat` once). With your approach I could imagine that `n'` will actually be an expression that is way more complicated than `n`, if Lean starts unfolding definitions.",
                    "createdAt": "2023-07-04T13:12:26Z",
                    "author": {
                      "login": "fpvandoorn"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5K_Xl8",
                    "body": "The reason I don't use `deriveNat` within the procedure is that we really want definitional equality on the `n` here, since it occurs in types (specifically `Fin n`). I'll try using your described approach for `Finset.range`...",
                    "createdAt": "2023-07-10T11:44:40Z",
                    "author": {
                      "login": "Vierkantor"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5LCYzC",
                    "body": "Ok, that's fair. Maybe you can add a comment why you do it this way to the docstring?\r\n\r\nbors d+",
                    "createdAt": "2023-07-10T21:07:59Z",
                    "author": {
                      "login": "fpvandoorn"
                    }
                  }
                ]
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjIxMTY1NzA=",
              "login": "Vierkantor"
            },
            {
              "id": "MDQ6VXNlcjQ3Nzk1Ng==",
              "login": "kim-em"
            },
            {
              "id": "MDQ6VXNlcjczNzYwMTI=",
              "login": "fpvandoorn"
            },
            {
              "id": "MDQ6VXNlcjU2MzY3MDU=",
              "login": "jcommelin"
            },
            {
              "id": "MDQ6VXNlcjU0MTc1NDYz",
              "login": "Parcly-Taxel"
            }
          ]
        },
        "state": "CLOSED",
        "statusCheckRollup": null,
        "title": "[Merged by Bors] - feat: basic big operator plugin for `norm_num`",
        "updatedAt": "2023-07-11T08:45:35Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/4350",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "753a8f0818b51d459c675805ef9a836dcfb50b82"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "9a20454bebc8b9cd7d0f5fb0ad06aaaabdaae8fc"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "dc3e8e9001b17ccd1edd90a52bb0ac5ab1d9b07a"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "0cab37bed582eeb41a36f29d51c63dfac12ebfac"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "555ae0669af18ae631a9ffd2bf86f4be90fda574"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "59030ba32d63444443073bc8b85ea7f865c3ce81"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5m5BKmzwAAAAIs35jU",
              "createdAt": "2023-05-25T17:33:14Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5m5BKmzwAAAAIs35jh",
              "createdAt": "2023-05-25T17:33:14Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKAKYew",
                "name": "t-meta"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5m5BKmzwAAAAIs35jm",
              "createdAt": "2023-05-25T17:33:14Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKteTVQ",
                "name": "awaiting-CI"
              }
            },
            {
              "__typename": "ReviewRequestedEvent",
              "id": "RRE_lADOFcwZ1c5m5BKmzwAAAAIs35jx",
              "createdAt": "2023-05-25T17:33:14Z",
              "requestedReviewer": {
                "id": "MDQ6VXNlcjczNzYwMTI=",
                "login": "fpvandoorn"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "0fbb5fd6b397cfe59ed69f91ea8d3773c359e354"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "ef3430dba372e118b3ae1895720cbd083fb4819f"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5m5BKmzwAAAAIs-mre",
              "createdAt": "2023-05-25T21:18:18Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKteTVQ",
                "name": "awaiting-CI"
              }
            },
            {
              "__typename": "ReviewRequestedEvent",
              "id": "RRE_lADOFcwZ1c5m5BKmzwAAAAIs_3qe",
              "createdAt": "2023-05-25T22:16:18Z",
              "requestedReviewer": {
                "id": "MDQ6VXNlcjg2ODU4OA==",
                "login": "digama0"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5ZZKyW",
              "createdAt": "2023-06-27T00:52:09Z",
              "body": "",
              "author": {
                "login": "kim-em"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5ZZLNm",
              "createdAt": "2023-06-27T00:55:25Z",
              "body": "",
              "author": {
                "login": "kim-em"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5ZZLOq",
              "createdAt": "2023-06-27T00:55:33Z",
              "body": "",
              "author": {
                "login": "kim-em"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5ZZLVp",
              "createdAt": "2023-06-27T00:56:20Z",
              "body": "",
              "author": {
                "login": "kim-em"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5ZZLev",
              "createdAt": "2023-06-27T00:57:14Z",
              "body": "",
              "author": {
                "login": "kim-em"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5ZZN0L",
              "createdAt": "2023-06-27T01:09:03Z",
              "body": "",
              "author": {
                "login": "kim-em"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5ZZN5O",
              "createdAt": "2023-06-27T01:09:34Z",
              "body": "",
              "author": {
                "login": "kim-em"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "b22ea44cf4b7f4673eb9898b9368cf242d4e0841"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "ce6ec4dda832c9ea83ee08a8626070e209514ab0"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "4141cbd59fdcc223c13538415a1768f32d94bde1"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "e30759b82b4c9798f9cd7a3f9a3a6685db71faf9"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "ecce8198f4fd40b9be8fd2cc8da56bb163106e2c"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "fedccdfbff976b3558a91aa7f2e39a019a621188"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5m5BKmzwAAAAI_91yY",
              "createdAt": "2023-06-28T10:48:02Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKteTVQ",
                "name": "awaiting-CI"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5m5BKmzwAAAAI_-jyP",
              "createdAt": "2023-06-28T11:08:37Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKteTVQ",
                "name": "awaiting-CI"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "382b9e147bb888757a5611b8ebf3649dd70ef6a3"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5m5BKmzwAAAAJAyrDL",
              "createdAt": "2023-06-29T13:28:01Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "aeb225dcc5828fb978d57af2a82e25c7f25af164"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5m5BKmzwAAAAJBwUfe",
              "createdAt": "2023-07-01T02:58:38Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5aJ5WP",
              "createdAt": "2023-07-04T09:59:26Z",
              "body": "Sorry for not reviewing this for so long!\r\n\r\nThis `norm_num` extension looks quite different than most other extensions. This is of course very related to the fact that the current `norm_num` design doesn't support normalizing lists, multisets or finsets at all. I think eventually it will be nice to extend the support for `norm_num` to also be able to normalize those objects (so adding more constructors to `Result'` for `isList`, `isMultiset` etc.), and having `IsList` structures similar to `isNat`/`isInt` etc. But doing this is nontrivial, and maybe you've tried and noticed obstacles?\r\n\r\nI think it's good to have this version in mathlib (at least in the meantime). Please incorporate the comments I made, or add some additional \"todo's\" for the items you don't do.",
              "author": {
                "login": "fpvandoorn"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5m5BKmzwAAAAJFXkEf",
              "createdAt": "2023-07-07T10:55:14Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5m5BKmzwAAAAJFXkEn",
              "createdAt": "2023-07-07T10:55:14Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "024e96f3fd2ae949d0008880e143a64898f9184f"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "859e8755f96f474e1a50d3637a5970279cd54fb0"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "51dfa01ff5952d717c353c746eed208022122814"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5m5BKmzwAAAAJGoSeA",
              "createdAt": "2023-07-10T13:30:24Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5m5BKmzwAAAAJGoSeN",
              "createdAt": "2023-07-10T13:30:24Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5hI8U-",
              "createdAt": "2023-07-10T21:08:00Z",
              "body": ":v: Vierkantor can now approve this pull request. To approve and merge a pull request, simply reply with `bors r+`. More detailed instructions are available [here](https://bors.tech/documentation/getting-started/#reviewing-pull-requests).",
              "author": {
                "login": "bors"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5m5BKmzwAAAAJHJkNl",
              "createdAt": "2023-07-11T07:27:25Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5m5BKmzwAAAAJHJkNz",
              "createdAt": "2023-07-11T07:27:25Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABAt13Ow",
                "name": "delegated"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "f6b823472f6da0a7b5ffd56de9fc60d2e2d2d0f4"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5hLbf1",
              "createdAt": "2023-07-11T08:30:47Z",
              "body": "Bors is idle and I only touched comments so:\r\n\r\nbors r+",
              "author": {
                "login": "Vierkantor"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5m5BKmzwAAAAJHMFhD",
              "createdAt": "2023-07-11T08:31:00Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
                "name": "ready-to-merge"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5hLgyF",
              "createdAt": "2023-07-11T08:45:29Z",
              "body": "Pull request successfully merged into master.\n\n  Build succeeded!\n\n  The publicly hosted instance of bors-ng is deprecated and will go away soon.\n\n  If you want to self-host your own instance, [instructions are here][instructions].\n  For more help, visit [the forum].\n\n  If you want to switch to GitHub's built-in merge queue, visit [their help page][gh].\n\n  [instructions]: https://github.com/bors-ng/bors-ng#how-to-set-up-your-own-real-instance\n  [the forum]: https://forum.bors.tech\n  [gh]: https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/configuring-pull-request-merges/managing-a-merge-queue\n\n\n\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/5517641109/jobs/10060526174)\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/5517641109/jobs/10060526400)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/5517641109/jobs/10060526799)",
              "author": {
                "login": "bors"
              }
            },
            {
              "__typename": "RenamedTitleEvent"
            },
            {
              "__typename": "ClosedEvent",
              "id": "CE_lADOFcwZ1c5m5BKmzwAAAAJHMsbh",
              "createdAt": "2023-07-11T08:45:31Z"
            },
            {
              "__typename": "HeadRefDeletedEvent",
              "id": "HRDE_lADOFcwZ1c5m5BKmzwAAAAJHMsnY",
              "createdAt": "2023-07-11T08:45:35Z"
            },
            {
              "__typename": "ReferencedEvent"
            }
          ]
        }
      }
    }
  }
}
