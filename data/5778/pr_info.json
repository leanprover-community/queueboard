{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 16,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "mo271"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "---\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n-->\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 1,
        "closed": true,
        "closedAt": "2023-07-18T13:11:17Z",
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c5hA72I",
              "body": "This is useful when proving another version of Legendre's Theorem, for context see:\r\n\r\nhttps://leanprover.zulipchat.com/#narrow/stream/217875-Is-there-code-for-X.3F/topic/padicValNat_factorial.3A.20another.20version.20of.20Legendre's.20theorem\r\n\r\n",
              "createdAt": "2023-07-09T07:37:33Z",
              "author": {
                "login": "mo271"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5hEAJp",
              "body": "Lgtm now thanks\n\nmaintainer merge",
              "createdAt": "2023-07-10T08:02:19Z",
              "author": {
                "login": "alexjbest"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5hwrOZ",
              "body": "Thanks!\r\n\r\nbors merge",
              "createdAt": "2023-07-18T12:47:14Z",
              "author": {
                "login": "ocfnash"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5hw4eI",
              "body": "Pull request successfully merged into master.\n\n  Build succeeded!\n\n  The publicly hosted instance of bors-ng is deprecated and will go away soon.\n\n  If you want to self-host your own instance, [instructions are here][instructions].\n  For more help, visit [the forum].\n\n  If you want to switch to GitHub's built-in merge queue, visit [their help page][gh].\n\n  [instructions]: https://github.com/bors-ng/bors-ng#how-to-set-up-your-own-real-instance\n  [the forum]: https://forum.bors.tech\n  [gh]: https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/configuring-pull-request-merges/managing-a-merge-queue\n\n\n\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/5587598027/jobs/10213170038)\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/5587598027/jobs/10213170358)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/5587598027/jobs/10213170190)",
              "createdAt": "2023-07-18T13:11:16Z",
              "author": {
                "login": "bors"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "14074a10c1f4932bd8f4859ccc32d1935c095fb5",
                "additions": 11,
                "deletions": 0,
                "committedDate": "2023-07-09T07:19:39Z",
                "author": {
                  "name": "Moritz Firsching",
                  "email": "firsching@google.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "6276f446cf89f66ea96524f70ef0b42a80f08733",
                "additions": 1,
                "deletions": 1,
                "committedDate": "2023-07-10T05:53:25Z",
                "author": {
                  "name": "Moritz Firsching",
                  "email": "firsching@google.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "02e239b8089f25aa4d3e46c22aaa91e05c3eda50",
                "additions": 1,
                "deletions": 0,
                "committedDate": "2023-07-10T05:59:34Z",
                "author": {
                  "name": "Moritz Firsching",
                  "email": "firsching@google.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "c1b83e0b892e849a5ed624041a53cefd7a902aa1",
                "additions": 8,
                "deletions": 4,
                "committedDate": "2023-07-10T07:05:21Z",
                "author": {
                  "name": "Moritz Firsching",
                  "email": "firsching@google.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "5dea06735efdadcd36faf5dc3a4e7fbd63668f30",
                "additions": 1,
                "deletions": 1,
                "committedDate": "2023-07-10T08:14:58Z",
                "author": {
                  "name": "Moritz Firsching",
                  "email": "firsching@google.com"
                },
                "statusCheckRollup": null
              }
            }
          ]
        },
        "createdAt": "2023-07-09T07:20:24Z",
        "deletions": 0,
        "files": {
          "nodes": [
            {
              "path": "Mathlib/Data/Nat/Digits.lean",
              "additions": 16,
              "deletions": 0
            }
          ]
        },
        "headRefName": "mo271/digit_lemmas",
        "headRefOid": "5dea06735efdadcd36faf5dc3a4e7fbd63668f30",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c5VAjJs",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
              "color": "06e039",
              "name": "ready-to-merge"
            }
          ]
        },
        "latestReviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5ardqU",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "alexjbest"
              },
              "submittedAt": "2023-07-10T06:39:15Z"
            }
          ]
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "UNKNOWN",
        "mergeable": "UNKNOWN",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 5778,
        "potentialMergeCommit": null,
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": null,
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5arEH-",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "alexjbest"
              },
              "submittedAt": "2023-07-10T05:30:01Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5arL8L",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "mo271"
              },
              "submittedAt": "2023-07-10T06:03:16Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5arczB",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "alexjbest"
              },
              "submittedAt": "2023-07-10T06:38:02Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5ardqU",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "alexjbest"
              },
              "submittedAt": "2023-07-10T06:39:15Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5arpc-",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "mo271"
              },
              "submittedAt": "2023-07-10T07:05:59Z"
            }
          ]
        },
        "reviewThreads": {
          "nodes": [
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5K92Wv",
                    "body": "```suggestion\ntheorem digit_sum_le (p n : ℕ) (h : 1 ≤ p) : List.sum (digits p n) ≤ n := by\n```\n",
                    "createdAt": "2023-07-10T05:27:56Z",
                    "author": {
                      "login": "alexjbest"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5K92iK",
                    "body": "Is there a mono attribute that we can add to this lemma so the monotonicity tactics apply it (I neither know if that is in mathlib4 yet, nor if it can handle monotonicity in anything other than the last argument of a function)",
                    "createdAt": "2023-07-10T05:29:25Z",
                    "author": {
                      "login": "alexjbest"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5K97T1",
                    "body": "I added it, seems like it makes sense. The monotonicity seems to have been ported by @hrmacbeth and written by @cipher1024. Perhaps either of them could confirm that 'mono' would potentially do something helpful in this situation.",
                    "createdAt": "2023-07-10T06:03:16Z",
                    "author": {
                      "login": "mo271"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5K-DjB",
                    "body": "I just read the code for mono and it looks like it should work fine based on the implementation (its using solve_by_elim which uses apply/refine which doesn't really care which arguments are missing I believe)",
                    "createdAt": "2023-07-10T06:39:15Z",
                    "author": {
                      "login": "alexjbest"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5K-DIW",
                    "body": "One last annoying remark, I think this should still be (trivially) true when `p = 0` as then `digits p n = [n]`, so it would be best to make this a proof by cases of the general statement and avoid propogating the `1 \\le p` hypothesis downstream",
                    "createdAt": "2023-07-10T06:38:01Z",
                    "author": {
                      "login": "alexjbest"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5K-LTp",
                    "body": "That's great! I removed the hypothesis `(h : 1 ≤ p)`.",
                    "createdAt": "2023-07-10T07:05:59Z",
                    "author": {
                      "login": "mo271"
                    }
                  }
                ]
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjM0OTE2Mjc=",
              "login": "mo271"
            },
            {
              "id": "MDQ6VXNlcjE2ODg1MzM=",
              "login": "alexjbest"
            },
            {
              "id": "MDQ6VXNlcjc3MzQzNjQ=",
              "login": "ocfnash"
            }
          ]
        },
        "state": "CLOSED",
        "statusCheckRollup": null,
        "title": "[Merged by Bors] - feat(Data/Nat/Digits): two lemmas",
        "updatedAt": "2023-07-18T13:11:21Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/5778",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "14074a10c1f4932bd8f4859ccc32d1935c095fb5"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5rAb4MzwAAAAJGI-xq",
              "createdAt": "2023-07-09T07:20:48Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5rAb4MzwAAAAJGI-xt",
              "createdAt": "2023-07-09T07:20:48Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKteTVQ",
                "name": "awaiting-CI"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5rAb4MzwAAAAJGJC6U",
              "createdAt": "2023-07-09T07:33:51Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKteTVQ",
                "name": "awaiting-CI"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5hA72I",
              "createdAt": "2023-07-09T07:37:33Z",
              "body": "This is useful when proving another version of Legendre's Theorem, for context see:\r\n\r\nhttps://leanprover.zulipchat.com/#narrow/stream/217875-Is-there-code-for-X.3F/topic/padicValNat_factorial.3A.20another.20version.20of.20Legendre's.20theorem\r\n\r\n",
              "author": {
                "login": "mo271"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5arEH-",
              "createdAt": "2023-07-10T05:27:56Z",
              "body": "",
              "author": {
                "login": "alexjbest"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "6276f446cf89f66ea96524f70ef0b42a80f08733"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "02e239b8089f25aa4d3e46c22aaa91e05c3eda50"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5arczB",
              "createdAt": "2023-07-10T06:38:01Z",
              "body": "",
              "author": {
                "login": "alexjbest"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "c1b83e0b892e849a5ed624041a53cefd7a902aa1"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5hEAJp",
              "createdAt": "2023-07-10T08:02:19Z",
              "body": "Lgtm now thanks\n\nmaintainer merge",
              "author": {
                "login": "alexjbest"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "5dea06735efdadcd36faf5dc3a4e7fbd63668f30"
              }
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5NdX8j",
              "createdAt": "2023-07-11T05:24:47Z",
              "source": {
                "id": "PR_kwDOFcwZ1c5VKLqu",
                "title": "[Merged by Bors] - feat(NumberTheory/Padics/PadicVal): padicValNat_factorial'",
                "url": "https://github.com/leanprover-community/mathlib4/pull/5803"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5rAb4MzwAAAAJH2J5m",
              "createdAt": "2023-07-12T07:05:57Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABMtntmA",
                "name": "new-feature"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5hwrOZ",
              "createdAt": "2023-07-18T12:47:14Z",
              "body": "Thanks!\r\n\r\nbors merge",
              "author": {
                "login": "ocfnash"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5rAb4MzwAAAAJLGrIJ",
              "createdAt": "2023-07-18T12:47:25Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
                "name": "ready-to-merge"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5rAb4MzwAAAAJLGrKT",
              "createdAt": "2023-07-18T12:47:25Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5hw4eI",
              "createdAt": "2023-07-18T13:11:16Z",
              "body": "Pull request successfully merged into master.\n\n  Build succeeded!\n\n  The publicly hosted instance of bors-ng is deprecated and will go away soon.\n\n  If you want to self-host your own instance, [instructions are here][instructions].\n  For more help, visit [the forum].\n\n  If you want to switch to GitHub's built-in merge queue, visit [their help page][gh].\n\n  [instructions]: https://github.com/bors-ng/bors-ng#how-to-set-up-your-own-real-instance\n  [the forum]: https://forum.bors.tech\n  [gh]: https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/configuring-pull-request-merges/managing-a-merge-queue\n\n\n\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/5587598027/jobs/10213170038)\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/5587598027/jobs/10213170358)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/5587598027/jobs/10213170190)",
              "author": {
                "login": "bors"
              }
            },
            {
              "__typename": "RenamedTitleEvent"
            },
            {
              "__typename": "ClosedEvent",
              "id": "CE_lADOFcwZ1c5rAb4MzwAAAAJLHwWs",
              "createdAt": "2023-07-18T13:11:17Z"
            },
            {
              "__typename": "HeadRefDeletedEvent",
              "id": "HRDE_lADOFcwZ1c5rAb4MzwAAAAJLHwg1",
              "createdAt": "2023-07-18T13:11:21Z"
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "ReferencedEvent"
            }
          ]
        }
      }
    }
  }
}
