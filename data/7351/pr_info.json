{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 59,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "shuxuezhuyi"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "Extend a strictly monotone function defined on an open interval.\r\n\r\n---\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n-->\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 3,
        "closed": false,
        "closedAt": null,
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c5qL2x5",
              "body": "I've looked at this and the PRs that depend on it. I think the approach of using `Function.update` is perhaps a bit strange and probably not what you want. Instead, I would take a function defined *on the subtype* `Set.Ioo` and if it is `StrictMono`, construct a function defined *on the subtype* `Set.Icc`. This function could be called `StrictMono.Ioo_Icc`. Then you prove that the resulting function is `StrictMono` and also that the original function, composed with the inclusion map from `Set.Ioo` to `Set.Icc` factors through this resulting function.",
              "createdAt": "2023-10-26T16:53:16Z",
              "author": {
                "login": "j-loreaux"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5zgura",
              "body": "> I think the approach of using `Function.update` is perhaps a bit strange and probably not what you want. Instead, I would take a function defined _on the subtype_ `Set.Ioo` and if it is `StrictMono`, construct a function defined _on the subtype_ `Set.Icc`. This function could be called `StrictMono.Ioo_Icc`. Then you prove that the resulting function is `StrictMono` and also that the original function, composed with the inclusion map from `Set.Ioo` to `Set.Icc` factors through this resulting function.\r\n\r\n@j-loreaux I do want to talk about functions between intervals but not the entire types. However, since `Ioo` is not a subtype of the subtype `Icc`, it is not natural to work directly with functions between intervals. Nevertheless, I could try to extend functions from `α → β`  to `WithTop (WithBot α) → WithTop (WithBot β)`.",
              "createdAt": "2024-02-12T01:23:19Z",
              "author": {
                "login": "shuxuezhuyi"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5zhDGo",
              "body": "Here is what I mean, spelled out in more detail. Instead, I think you want to do the following.\n\n1. Show that a bounded strictly monotone function on an open interval is uniformly continuous. You might be able to do it for any interval simultaneously by taking an `OrdConnected` hypothesis instead. I'm not sure how much harder that would be.\n2. Show that `Subtype.map id sorry : Set.Ioo a b -> Set.Icc a b` is `DenseInducing`.\n3. Use [DenseInducing.extend](https://leanprover-community.github.io/mathlib4_docs/Mathlib/Topology/DenseEmbedding.html#DenseInducing.extend) to get the desired extension.\n4. You can then conclude it is uniformly continuous with [uniformlyContinuous_uniformly_extend](https://leanprover-community.github.io/mathlib4_docs/Mathlib/Topology/UniformSpace/UniformEmbedding.html#uniformContinuous_uniformly_extend).\n5. You can conclude it is unique with [Dense inducing.extend_unique](https://leanprover-community.github.io/mathlib4_docs/Mathlib/Topology/DenseEmbedding.html#DenseInducing.extend_unique) and that it is an extension with [DensInducing.extend_eq](https://leanprover-community.github.io/mathlib4_docs/Mathlib/Topology/DenseEmbedding.html#DenseInducing.extend_eq).\n\nYou can use more of the API surrounding `DenseInducing.extend` to conclude the resulting function is `StrictMono` as well.",
              "createdAt": "2024-02-12T04:13:24Z",
              "author": {
                "login": "j-loreaux"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5zqZKc",
              "body": "@j-loreaux Thank you very much for your advice! Perhaps we should first introduce the uniform preordered space? I have opened the PR #10476 for this.",
              "createdAt": "2024-02-13T06:20:29Z",
              "author": {
                "login": "shuxuezhuyi"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5zqZ6Q",
              "body": "I'm not sure what that has to do with this PR.",
              "createdAt": "2024-02-13T06:24:05Z",
              "author": {
                "login": "j-loreaux"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5zqcH2",
              "body": "@j-loreaux What is the space on which I should work, to talk about monotonicity and uniform continuity at the same time?",
              "createdAt": "2024-02-13T06:34:54Z",
              "author": {
                "login": "shuxuezhuyi"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5zwW87",
              "body": "Sorry, for some reason I got it in my head that you were doing this for `ℝ` (or at least `[LinearOrder β] [TopologicalSpace β] [OrderTopology β]` or something like that), I think because I looked at the PRs which referenced this one\r\n\r\nThose are reasonable assumptions, and you can probably avoid the uniform continuity suggestion by using the other API surrounding `DenseInducing` (like [DenseInducing.extend_eq_of_tendsto](https://leanprover-community.github.io/mathlib4_docs/Mathlib/Topology/DenseEmbedding.html#DenseInducing.extend_eq_of_tendsto) or [DenseInducing.continuousAt_extend](https://leanprover-community.github.io/mathlib4_docs/Mathlib/Topology/DenseEmbedding.html#DenseInducing.continuousAt_extend)). Probably you will also need to assume `[DenselyOrdered β]`.",
              "createdAt": "2024-02-13T17:26:22Z",
              "author": {
                "login": "j-loreaux"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "5f62ac98d72d1fda092b485db9331b2ded4524be",
                "additions": 125,
                "deletions": 0,
                "committedDate": "2023-09-24T12:24:04Z",
                "author": {
                  "name": "Wen Yang",
                  "email": "yang-wen@139.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAD-eDDFg",
                        "name": "Add annotations",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6290059470/job/17077158678"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAD-d-rZQ",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6290021707/job/17077087077"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAD-d-rdw",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6290021709/job/17077087095"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAD-eDDLg",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6290059447/job/17077158702"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAD-d-r6Q",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6290021707/job/17077087209"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAD-d-r3g",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6290021709/job/17077087198"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAD-eDDBA",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6290059447/job/17077158660"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAD-d-rrw",
                        "name": "Check all files imported (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6290021707/job/17077087151"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAD-d-rrQ",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6290021709/job/17077087149"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAD-d-sLA",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6290021707/job/17077087276"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAD-d-sGA",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6290021709/job/17077087256"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAD-d-sYQ",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6290021707/job/17077087329"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAD-eKnHA",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6290021709/job/17077282588"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "f0ba9966d1cb516369eaf73decda976060f8998a",
                "additions": 1562,
                "deletions": 903,
                "committedDate": "2023-09-27T01:01:41Z",
                "author": {
                  "name": "Wen Yang",
                  "email": "yang-wen@139.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "c95f7e1d448f39ae0c262530af39f6ff013a5db5",
                "additions": 70,
                "deletions": 44,
                "committedDate": "2023-09-27T01:45:51Z",
                "author": {
                  "name": "Wen Yang",
                  "email": "yang-wen@139.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAD_vuZJQ",
                        "name": "Add annotations",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6320377264/job/17162803493"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAD_vuZZQ",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6320377041/job/17162803557"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAD_vuYgA",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6320377045/job/17162803328"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAD_vuZmw",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6320377269/job/17162803611"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAD_vuZtg",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6320377041/job/17162803638"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAD_vuXRQ",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6320377045/job/17162803013"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAD_vuZPQ",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6320377269/job/17162803517"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAD_vuXgg",
                        "name": "Check all files imported (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6320377041/job/17162803074"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAD_vuYJg",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6320377045/job/17162803238"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAD_vuYVQ",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6320377041/job/17162803285"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAD_vuXwA",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6320377045/job/17162803136"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAD_vuaCw",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6320377041/job/17162803723"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAD_wD_BQ",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6320377045/job/17163157253"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "3bf08916e185b370595c30b814aef95f5482abff",
                "additions": 8711,
                "deletions": 3146,
                "committedDate": "2023-10-06T13:31:25Z",
                "author": {
                  "name": "Wen Yang",
                  "email": "yang-wen@139.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "a2046250178730b3a683a9d971d07548a370f8c6",
                "additions": 0,
                "deletions": 75,
                "committedDate": "2023-10-07T11:03:25Z",
                "author": {
                  "name": "Wen Yang",
                  "email": "yang-wen@139.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEEnrguw",
                        "name": "Add annotations",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6440766286/job/17489911995"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEEnrf2Q",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6440766173/job/17489911769"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEEnrfVA",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6440766172/job/17489911636"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEEnrgxA",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6440766284/job/17489912004"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEEnrgXw",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6440766173/job/17489911903"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEEnrf4g",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6440766172/job/17489911778"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEEnrhCQ",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6440766284/job/17489912073"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEEnrgFA",
                        "name": "Check all files imported (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6440766173/job/17489911828"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEEnrgCg",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6440766172/job/17489911818"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEEnrfZA",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6440766173/job/17489911652"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEEnrfpQ",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6440766172/job/17489911717"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEEnrgtw",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6440766173/job/17489911991"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEEn803A",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6440766172/job/17490195676"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "f45562ec784f04fc56b5444f09ec36545bce122f",
                "additions": 111056,
                "deletions": 55351,
                "committedDate": "2023-12-12T10:08:32Z",
                "author": {
                  "name": "Yaël Dillies",
                  "email": "yael.dillies@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "47057a203c248268095ef13acd54158b2fc681c8",
                "additions": 16,
                "deletions": 33,
                "committedDate": "2023-12-12T10:27:39Z",
                "author": {
                  "name": "Yaël Dillies",
                  "email": "yael.dillies@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEjV-hJA",
                        "name": "Add annotations",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7180123762/job/19551723812"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEjV-f8Q",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7180123700/job/19551723505"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEjV-gKA",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7180123704/job/19551723560"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEjV-ibw",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7180123757/job/19551724143"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEjV-hTA",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7180123700/job/19551723852"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEjV-h2A",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7180123704/job/19551723992"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEjV-hNA",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7180123757/job/19551723828"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEjV-ilg",
                        "name": "Check all files imported (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7180123700/job/19551724182"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEjV-j5w",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7180123704/job/19551724519"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEjV-k3Q",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7180123700/job/19551724765"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEjV-k1g",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7180123704/job/19551724758"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEjV-j1Q",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7180123700/job/19551724501"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEjV-i4Q",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7180123704/job/19551724257"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEjV-l_w",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7180123700/job/19551725055"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAEjYW0Rg",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7180123704/job/19554219078"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAErF-dww",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/github/leanprover-community/repo/mathlib4/event-logs?pullRequestNumber=7351"
                      }
                    ]
                  }
                }
              }
            }
          ]
        },
        "createdAt": "2023-09-24T12:32:27Z",
        "deletions": 0,
        "files": {
          "nodes": [
            {
              "path": "Mathlib.lean",
              "additions": 1,
              "deletions": 0
            },
            {
              "path": "Mathlib/Data/Set/Function.lean",
              "additions": 3,
              "deletions": 0
            },
            {
              "path": "Mathlib/Topology/Algebra/Order/IccExtendFromIoo.lean",
              "additions": 55,
              "deletions": 0
            }
          ]
        },
        "headRefName": "WenYang/StrictMonoOn_Ioo2Icc",
        "headRefOid": "47057a203c248268095ef13acd54158b2fc681c8",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c5bDrm7",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c7P265b",
              "name": "awaiting-author"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
              "name": "merge-conflict"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABViJlpQ",
              "name": "t-order"
            }
          ]
        },
        "latestReviews": {
          "nodes": []
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "DIRTY",
        "mergeable": "CONFLICTING",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 7351,
        "potentialMergeCommit": null,
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": null,
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": []
        },
        "reviewThreads": {
          "nodes": []
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjg4MzI0NTY=",
              "login": "shuxuezhuyi"
            },
            {
              "id": "MDQ6VXNlcjg5MjA1OTg=",
              "login": "j-loreaux"
            },
            {
              "id": "U_kgDOB75MNQ",
              "login": "leanprover-community-mathlib4-bot"
            },
            {
              "id": "MDQ6VXNlcjE0MDkwNTkz",
              "login": "YaelDillies"
            }
          ]
        },
        "state": "OPEN",
        "statusCheckRollup": {
          "contexts": {
            "nodes": [
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAEjV-hJA",
                "name": "Add annotations",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7180123762/job/19551723812"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAEjV-f8Q",
                "name": "Cancel Previous Runs (CI)",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7180123700/job/19551723505"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAEjV-gKA",
                "name": "Cancel Previous Runs (CI)",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7180123704/job/19551723560"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAEjV-ibw",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7180123757/job/19551724143"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAEjV-hTA",
                "name": "Lint style (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7180123700/job/19551723852"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAEjV-h2A",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7180123704/job/19551723992"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAEjV-hNA",
                "name": "Check all files imported",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7180123757/job/19551723828"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAEjV-ilg",
                "name": "Check all files imported (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7180123700/job/19551724182"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAEjV-j5w",
                "name": "Check all files imported",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7180123704/job/19551724519"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAEjV-k3Q",
                "name": "check workflows (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7180123700/job/19551724765"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAEjV-k1g",
                "name": "check workflows",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7180123704/job/19551724758"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAEjV-j1Q",
                "name": "Build (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7180123700/job/19551724501"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAEjV-i4Q",
                "name": "Build",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7180123704/job/19551724257"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAEjV-l_w",
                "name": "Post-CI job (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7180123700/job/19551725055"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAEjYW0Rg",
                "name": "Post-CI job",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7180123704/job/19554219078"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAErF-dww",
                "name": "Summary",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://dashboard.mergify.com/github/leanprover-community/repo/mathlib4/event-logs?pullRequestNumber=7351"
              }
            ]
          }
        },
        "title": "feat(Topology/Algebra/Order): extend function on `Ioo` to `Icc`",
        "updatedAt": "2024-07-31T08:14:02Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/7351",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5x26DnzwAAAAJvLdQm",
              "createdAt": "2023-09-24T13:08:51Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5x26DnzwAAAAJvLdQo",
              "createdAt": "2023-09-24T13:08:51Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABViJlpQ",
                "name": "t-order"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5x26DnzwAAAAJv9rG_",
              "createdAt": "2023-09-25T23:27:11Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5x26DnzwAAAAJv9rHF",
              "createdAt": "2023-09-25T23:27:11Z",
              "label": {
                "id": "MDU6TGFiZWwzMjcxMjQ0NzU5",
                "name": "WIP"
              }
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5x26DnzwAAAAJwwkiS",
              "createdAt": "2023-09-27T02:11:37Z",
              "label": {
                "id": "MDU6TGFiZWwzMjcxMjQ0NzU5",
                "name": "WIP"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5x26DnzwAAAAJwwkiW",
              "createdAt": "2023-09-27T02:11:37Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5OmwIu",
              "createdAt": "2023-09-27T09:14:23Z",
              "source": {
                "id": "PR_kwDOFcwZ1c5bUF1Z",
                "title": "feat: extend function between `Ioo` to be homeomorphism between `Icc`",
                "url": "https://github.com/leanprover-community/mathlib4/pull/7398"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5x26DnzwAAAAJ2BSy-",
              "createdAt": "2023-10-06T01:46:17Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5x26DnzwAAAAJ2BSzD",
              "createdAt": "2023-10-06T01:46:17Z",
              "label": {
                "id": "MDU6TGFiZWwzMjcxMjQ0NzU5",
                "name": "WIP"
              }
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5x26DnzwAAAAJ2ZSzS",
              "createdAt": "2023-10-06T14:56:11Z",
              "label": {
                "id": "MDU6TGFiZWwzMjcxMjQ0NzU5",
                "name": "WIP"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5x26DnzwAAAAJ2ZSzf",
              "createdAt": "2023-10-06T14:56:11Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5x26DnzwAAAAJ2tOWL",
              "createdAt": "2023-10-07T08:18:38Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5x26DnzwAAAAJ2tOWO",
              "createdAt": "2023-10-07T08:18:38Z",
              "label": {
                "id": "MDU6TGFiZWwzMjcxMjQ0NzU5",
                "name": "WIP"
              }
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5OxHBP",
              "createdAt": "2023-10-07T11:38:54Z",
              "source": {
                "id": "PR_kwDOFcwZ1c5cK0rH",
                "title": "feat(Topology/Algebra/Order): extend strictly monotone function on `Ioo` to homeomorphism on `Icc`",
                "url": "https://github.com/leanprover-community/mathlib4/pull/7564"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5x26DnzwAAAAJ2uZgU",
              "createdAt": "2023-10-07T11:40:19Z",
              "label": {
                "id": "MDU6TGFiZWwzMjcxMjQ0NzU5",
                "name": "WIP"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5x26DnzwAAAAJ2uZgW",
              "createdAt": "2023-10-07T11:40:19Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5OxI6v",
              "createdAt": "2023-10-07T15:14:48Z",
              "source": {
                "id": "PR_kwDOFcwZ1c5cLCk6",
                "title": "feat(Topology/Algebra/Order): extend homeomorphism of `Ioo` to `Icc`",
                "url": "https://github.com/leanprover-community/mathlib4/pull/7565"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5qL2x5",
              "createdAt": "2023-10-26T16:53:16Z",
              "body": "I've looked at this and the PRs that depend on it. I think the approach of using `Function.update` is perhaps a bit strange and probably not what you want. Instead, I would take a function defined *on the subtype* `Set.Ioo` and if it is `StrictMono`, construct a function defined *on the subtype* `Set.Icc`. This function could be called `StrictMono.Ioo_Icc`. Then you prove that the resulting function is `StrictMono` and also that the original function, composed with the inclusion map from `Set.Ioo` to `Set.Icc` factors through this resulting function.",
              "author": {
                "login": "j-loreaux"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5x26DnzwAAAAKCr8_Q",
              "createdAt": "2023-10-26T16:53:34Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5x26DnzwAAAAKCr8_d",
              "createdAt": "2023-10-26T16:53:34Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5zgura",
              "createdAt": "2024-02-12T01:23:19Z",
              "body": "> I think the approach of using `Function.update` is perhaps a bit strange and probably not what you want. Instead, I would take a function defined _on the subtype_ `Set.Ioo` and if it is `StrictMono`, construct a function defined _on the subtype_ `Set.Icc`. This function could be called `StrictMono.Ioo_Icc`. Then you prove that the resulting function is `StrictMono` and also that the original function, composed with the inclusion map from `Set.Ioo` to `Set.Icc` factors through this resulting function.\r\n\r\n@j-loreaux I do want to talk about functions between intervals but not the entire types. However, since `Ioo` is not a subtype of the subtype `Icc`, it is not natural to work directly with functions between intervals. Nevertheless, I could try to extend functions from `α → β`  to `WithTop (WithBot α) → WithTop (WithBot β)`.",
              "author": {
                "login": "shuxuezhuyi"
              }
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5zhDGo",
              "createdAt": "2024-02-12T04:13:24Z",
              "body": "Here is what I mean, spelled out in more detail. Instead, I think you want to do the following.\n\n1. Show that a bounded strictly monotone function on an open interval is uniformly continuous. You might be able to do it for any interval simultaneously by taking an `OrdConnected` hypothesis instead. I'm not sure how much harder that would be.\n2. Show that `Subtype.map id sorry : Set.Ioo a b -> Set.Icc a b` is `DenseInducing`.\n3. Use [DenseInducing.extend](https://leanprover-community.github.io/mathlib4_docs/Mathlib/Topology/DenseEmbedding.html#DenseInducing.extend) to get the desired extension.\n4. You can then conclude it is uniformly continuous with [uniformlyContinuous_uniformly_extend](https://leanprover-community.github.io/mathlib4_docs/Mathlib/Topology/UniformSpace/UniformEmbedding.html#uniformContinuous_uniformly_extend).\n5. You can conclude it is unique with [Dense inducing.extend_unique](https://leanprover-community.github.io/mathlib4_docs/Mathlib/Topology/DenseEmbedding.html#DenseInducing.extend_unique) and that it is an extension with [DensInducing.extend_eq](https://leanprover-community.github.io/mathlib4_docs/Mathlib/Topology/DenseEmbedding.html#DenseInducing.extend_eq).\n\nYou can use more of the API surrounding `DenseInducing.extend` to conclude the resulting function is `StrictMono` as well.",
              "author": {
                "login": "j-loreaux"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5zqZKc",
              "createdAt": "2024-02-13T06:20:29Z",
              "body": "@j-loreaux Thank you very much for your advice! Perhaps we should first introduce the uniform preordered space? I have opened the PR #10476 for this.",
              "author": {
                "login": "shuxuezhuyi"
              }
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5zqZ6Q",
              "createdAt": "2024-02-13T06:24:05Z",
              "body": "I'm not sure what that has to do with this PR.",
              "author": {
                "login": "j-loreaux"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5zqcH2",
              "createdAt": "2024-02-13T06:34:54Z",
              "body": "@j-loreaux What is the space on which I should work, to talk about monotonicity and uniform continuity at the same time?",
              "author": {
                "login": "shuxuezhuyi"
              }
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5zwW87",
              "createdAt": "2024-02-13T17:26:22Z",
              "body": "Sorry, for some reason I got it in my head that you were doing this for `ℝ` (or at least `[LinearOrder β] [TopologicalSpace β] [OrderTopology β]` or something like that), I think because I looked at the PRs which referenced this one\r\n\r\nThose are reasonable assumptions, and you can probably avoid the uniform continuity suggestion by using the other API surrounding `DenseInducing` (like [DenseInducing.extend_eq_of_tendsto](https://leanprover-community.github.io/mathlib4_docs/Mathlib/Topology/DenseEmbedding.html#DenseInducing.extend_eq_of_tendsto) or [DenseInducing.continuousAt_extend](https://leanprover-community.github.io/mathlib4_docs/Mathlib/Topology/DenseEmbedding.html#DenseInducing.continuousAt_extend)). Probably you will also need to assume `[DenselyOrdered β]`.",
              "author": {
                "login": "j-loreaux"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5x26DnzwAAAALYqfPt",
              "createdAt": "2024-03-23T18:26:16Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            }
          ]
        }
      }
    }
  }
}
