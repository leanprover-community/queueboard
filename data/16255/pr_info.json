{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 97,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "dupuisf"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "This PR shows that `cfcₙ (fun r => ∫ x, f x r ∂μ) a = ∫ x, cfcₙ(f x) a ∂μ` under appropriate conditions.\r\n\r\nNote that #16013 (already merged) showed the corresponding result for the unital CFC.\r\n\r\n---\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nFor details on the \"pull request lifecycle\" in mathlib, please see:\r\nhttps://leanprover-community.github.io/contribute/index.html\r\n\r\nIn particular, note that most reviewers will only notice your PR\r\nif it passes the continuous integration checks.\r\nPlease ask for help on https://leanprover.zulipchat.com if needed.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nIf you are moving or deleting declarations, please include these lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nMoves:\r\n- Vector.* -> Mathlib.Vector.*\r\n- ...\r\n\r\nDeletions:\r\n- Nat.bit1_add_bit1\r\n- ...\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n\r\n-->\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 3,
        "closed": true,
        "closedAt": "2024-08-29T22:19:03Z",
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c6KJO14",
              "body": "### PR summary [8a9f94cd69](https://github.com/leanprover-community/mathlib4/pull/16255/commits/8a9f94cd69aabec2d44c96d610d0a6eb63bbc98d)\n\n<details><summary>\n\n#### Import changes for modified files\n\n</summary>\n\nDependency changes\n\n| File | Base Count | Head Count | Change |\n| --- | --- | --- | --- |\n| Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.Integral | 1934 | 1936 | +2 (+0.10%) |\n| Mathlib.MeasureTheory.Integral.SetIntegral | 1685 | 1686 | +1 (+0.06%) |\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n|<details><summary>203 files</summary> `Mathlib.Probability.Process.HittingTime` `Mathlib.Algebra.Module.Zlattice.Covolume` `Mathlib.NumberTheory.Cyclotomic.Rat` `Mathlib.Probability.BorelCantelli` `Mathlib.Analysis.SpecialFunctions.Gamma.Basic` `Mathlib.Probability.Variance` `Mathlib.Analysis.SpecialFunctions.Integrals` `Mathlib.Dynamics.Ergodic.AddCircle` `Mathlib.Analysis.Calculus.BumpFunction.Convolution` `Mathlib.NumberTheory.Cyclotomic.Discriminant` `Mathlib.MeasureTheory.Integral.IntervalAverage` `Mathlib.Analysis.Calculus.ParametricIntervalIntegral` `Mathlib.MeasureTheory.Measure.ProbabilityMeasure` `Mathlib.NumberTheory.GaussSum` `Mathlib.MeasureTheory.Integral.IntervalIntegral` `Mathlib.Analysis.Complex.AbsMax` `Mathlib.Probability.Kernel.Disintegration.CDFToKernel` `Mathlib.Analysis.CStarAlgebra.Spectrum` `Mathlib.Geometry.Manifold.Complex` `Mathlib.MeasureTheory.Integral.CircleIntegral` `Mathlib.Probability.StrongLaw` `Mathlib.MeasureTheory.Function.ConditionalExpectation.Unique` `Mathlib.Analysis.SpecialFunctions.Gaussian.GaussianIntegral` `Mathlib.Analysis.SpecialFunctions.Gamma.Beta` `Mathlib.MeasureTheory.Integral.TorusIntegral` `Mathlib.MeasureTheory.Function.L2Space` `Mathlib.MeasureTheory.Measure.LevyProkhorovMetric` `Mathlib.Analysis.Complex.TaylorSeries` `Mathlib.Analysis.Normed.Algebra.Spectrum` `Mathlib.Analysis.FunctionalSpaces.SobolevInequality` `Mathlib.Probability.Distributions.Exponential` `Mathlib.Analysis.SpecialFunctions.Complex.Arctan` `Mathlib.Probability.Kernel.Composition` `Mathlib.Probability.Martingale.Upcrossing` `Mathlib.Probability.Martingale.OptionalSampling` `Mathlib.MeasureTheory.Integral.DivergenceTheorem` `Mathlib.NumberTheory.NumberField.Discriminant` `Mathlib.NumberTheory.NumberField.EquivReindex` `Mathlib.MeasureTheory.Measure.LogLikelihoodRatio` `Mathlib.Analysis.SpecialFunctions.ImproperIntegrals` `Mathlib.Analysis.Fourier.ZMod` `Mathlib.Analysis.SpecialFunctions.Complex.LogBounds` `Mathlib.Analysis.SpecialFunctions.Gamma.Deligne` `Mathlib.Analysis.Complex.PhragmenLindelof` `Mathlib.MeasureTheory.Measure.Lebesgue.VolumeOfBalls` `Mathlib.MeasureTheory.Integral.FundThmCalculus` `Mathlib.NumberTheory.Cyclotomic.Three` `Mathlib.Probability.Kernel.Disintegration.Integral` `Mathlib.MeasureTheory.Measure.Portmanteau` `Mathlib.NumberTheory.LSeries.Deriv` `Mathlib.MeasureTheory.Measure.Haar.NormedSpace` `Mathlib.Analysis.Fourier.Inversion` `Mathlib.Probability.Kernel.WithDensity` `Mathlib.Analysis.SpecialFunctions.NonIntegrable` `Mathlib.MeasureTheory.Group.AddCircle` `Mathlib.Probability.Independence.ZeroOne` `Mathlib.Analysis.SpecialFunctions.Complex.Analytic` `Mathlib.NumberTheory.ModularForms.EisensteinSeries.Basic` `Mathlib.Probability.Kernel.Disintegration.StandardBorel` `Mathlib.Probability.Distributions.Gaussian` `Mathlib.Probability.Kernel.CondDistrib` `Mathlib.MeasureTheory.Measure.Haar.Unique` `Mathlib.Geometry.Manifold.BumpFunction` `Mathlib.Probability.Martingale.Basic` `Mathlib.MeasureTheory.Decomposition.RadonNikodym` `Mathlib.Probability.Kernel.RadonNikodym` `Mathlib.NumberTheory.Harmonic.GammaDeriv` `Mathlib.MeasureTheory.Decomposition.SignedLebesgue` `Mathlib.MeasureTheory.Measure.WithDensityFinite` `Mathlib.Analysis.Complex.CauchyIntegral` `Mathlib.MeasureTheory.Group.GeometryOfNumbers` `Mathlib.Analysis.SpecialFunctions.PolarCoord` `Mathlib.MeasureTheory.Covering.LiminfLimsup` `Mathlib.MeasureTheory.Order.UpperLower` `Mathlib.Analysis.Calculus.ParametricIntegral` `Mathlib.Probability.Martingale.Convergence` `Mathlib.Probability.Kernel.IntegralCompProd` `Mathlib.MeasureTheory.Function.AEEqOfIntegral` `Mathlib.Probability.Kernel.Disintegration.CondCDF` `Mathlib.Probability.Kernel.Disintegration.Density` `Mathlib.Analysis.Convex.Integral` `Mathlib.MeasureTheory.Covering.BesicovitchVectorSpace` `Mathlib.MeasureTheory.Constructions.Prod.Integral` `Mathlib.NumberTheory.Cyclotomic.Embeddings` `Mathlib.MeasureTheory.Integral.Layercake` `Mathlib.Analysis.Complex.Schwarz` `Mathlib.MeasureTheory.Covering.OneDim` `Mathlib.Data.Real.Pi.Leibniz` `Mathlib.NumberTheory.FLT.Three` `Mathlib.NumberTheory.NumberField.CanonicalEmbedding.ConvexBody` `Mathlib.NumberTheory.NumberField.Units.Basic` `Mathlib.Probability.Kernel.Invariance` `Mathlib.Probability.Distributions.Uniform` `Mathlib.MeasureTheory.Covering.DensityTheorem` `Mathlib.NumberTheory.DirichletCharacter.GaussSum` `Mathlib.MeasureTheory.Measure.FiniteMeasureProd` `Mathlib.Probability.Kernel.MeasurableIntegral` `Mathlib.NumberTheory.ModularForms.EisensteinSeries.MDifferentiable` `Mathlib.Algebra.Module.Zlattice.Basic` `Mathlib.MeasureTheory.Integral.Asymptotics` `Mathlib.Analysis.SpecialFunctions.ContinuousFunctionalCalculus.ExpLog` `Mathlib.Tactic.NormNum.LegendreSymbol` `Mathlib.Analysis.Fourier.RiemannLebesgueLemma` `Mathlib.Analysis.BoxIntegral.Integrability` `Mathlib.Analysis.Complex.Polynomial.Basic` `Mathlib.MeasureTheory.Integral.IntegralEqImproper` `Mathlib.MeasureTheory.Function.ConditionalExpectation.Basic` `Mathlib.Probability.Kernel.Disintegration.Basic` `Mathlib.Analysis.Complex.RemovableSingularity` `Mathlib.MeasureTheory.Measure.Tilted` `Mathlib.Analysis.Complex.Liouville` `Mathlib.NumberTheory.LegendreSymbol.QuadraticChar.GaussSum` `Mathlib.NumberTheory.LSeries.MellinEqDirichlet` `Mathlib.NumberTheory.LegendreSymbol.JacobiSymbol` `Mathlib.MeasureTheory.Function.Jacobian` `Mathlib.Analysis.Complex.LocallyUniformLimit` `Mathlib.Probability.Moments` `Mathlib.NumberTheory.LegendreSymbol.AddCharacter` `Mathlib.NumberTheory.Cyclotomic.PID` `Mathlib.Analysis.Distribution.AEEqOfIntegralContDiff` `Mathlib.MeasureTheory.Group.FundamentalDomain` `Mathlib.NumberTheory.LegendreSymbol.QuadraticReciprocity` `Mathlib.Analysis.SpecialFunctions.Gamma.BohrMollerup` `Mathlib.MeasureTheory.Decomposition.Lebesgue` `Mathlib.Probability.Process.Stopping` `Mathlib.MeasureTheory.Integral.PeakFunction` `Mathlib.MeasureTheory.Function.ConditionalExpectation.CondexpL1` `Mathlib.MeasureTheory.Function.ConditionalExpectation.CondexpL2` `Mathlib.NumberTheory.NumberField.Units.DirichletTheorem` `Mathlib.Analysis.Normed.Algebra.Basic` `Mathlib.MeasureTheory.Integral.ExpDecay` `Mathlib.NumberTheory.NumberField.Units.Regulator` `Mathlib.Analysis.SpecialFunctions.Stirling` `Mathlib.Analysis.ConstantSpeed` `Mathlib.Analysis.Calculus.Monotone` `Mathlib.RingTheory.Polynomial.Selmer` `Mathlib.Geometry.Manifold.IntegralCurve` `Mathlib.Analysis.SumIntegralComparisons` `Mathlib.MeasureTheory.Constructions.HaarToSphere` `Mathlib.Analysis.SpecialFunctions.JapaneseBracket` `Mathlib.MeasureTheory.Integral.CircleTransform` `Mathlib.MeasureTheory.Integral.DominatedConvergence` `Mathlib.Probability.Kernel.MeasureCompProd` `Mathlib.Analysis.Fourier.FourierTransform` `Mathlib.Probability.IdentDistrib` `Mathlib.Analysis.Convolution` `Mathlib.Analysis.MellinInversion` `Mathlib.Analysis.Complex.Polynomial.UnitTrinomial` `Mathlib.Geometry.Manifold.PartitionOfUnity` `Mathlib.MeasureTheory.Covering.Differentiation` `Mathlib.Analysis.Complex.Hadamard` `Mathlib.Analysis.Calculus.LineDeriv.IntegrationByParts` `Mathlib.Analysis.BoundedVariation` `Mathlib.NumberTheory.WellApproximable` `Mathlib.Probability.Process.Adapted` `Mathlib.MeasureTheory.Measure.Lebesgue.Integral` `Mathlib.Analysis.Calculus.Rademacher` `Mathlib.MeasureTheory.Integral.Pi` `Mathlib.NumberTheory.NumberField.House` `Mathlib.NumberTheory.NumberField.Embeddings` `Mathlib.MeasureTheory.Function.Intersectivity` `Mathlib.Probability.Process.Filtration` `Mathlib.MeasureTheory.Integral.Periodic` `Mathlib.NumberTheory.Harmonic.Bounds` `Mathlib.Analysis.MellinTransform` `Mathlib.Analysis.SpecialFunctions.Complex.CircleAddChar` `Mathlib.MeasureTheory.Integral.Gamma` `Mathlib.MeasureTheory.Measure.DiracProba` `Mathlib.Analysis.SpecialFunctions.Trigonometric.EulerSineProd` `Mathlib.Probability.Kernel.Condexp` `Mathlib.MeasureTheory.Function.ConditionalExpectation.Indicator` `Mathlib.MeasureTheory.Covering.Besicovitch` `Mathlib.Analysis.Calculus.BumpFunction.FiniteDimension` `Mathlib.Probability.Distributions.Gamma` `Mathlib.Probability.Martingale.OptionalStopping` `Mathlib.Probability.Martingale.BorelCantelli` `Mathlib.Probability.Density` `Mathlib.Analysis.Complex.OpenMapping` `Mathlib.Analysis.Calculus.BumpFunction.Normed` `Mathlib.Analysis.ODE.PicardLindelof` `Mathlib.NumberTheory.NumberField.ClassNumber` `Mathlib.Probability.ConditionalExpectation` `Mathlib.MeasureTheory.Integral.SetIntegral` `Mathlib.Tactic` `Mathlib.Analysis.SpecialFunctions.Gaussian.FourierTransform` `Mathlib.MeasureTheory.Measure.Haar.Disintegration` `Mathlib.Analysis.Distribution.SchwartzSpace` `Mathlib.Probability.Integration` `Mathlib.MeasureTheory.Measure.WithDensityVectorMeasure` `Mathlib.Analysis.SpecialFunctions.Pow.Integral` `Mathlib.Geometry.Manifold.WhitneyEmbedding` `Mathlib.NumberTheory.NumberField.CanonicalEmbedding.Basic` `Mathlib.MeasureTheory.Integral.Average` `Mathlib.Probability.Kernel.Disintegration.Unique` `Mathlib.Probability.Independence.Conditional` `Mathlib.MeasureTheory.Function.ConditionalExpectation.Real` `Mathlib.Data.Real.Pi.Wallis` `Mathlib.Probability.Process.PartitionFiltration` `Mathlib.Probability.Notation` `Mathlib.NumberTheory.LSeries.AbstractFuncEq` `Mathlib.Probability.CDF` `Mathlib.Probability.Martingale.Centering` `Mathlib.MeasureTheory.Measure.Haar.Quotient`</details>|1|\n| `Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.Integral`|2|\n\n</details>\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ ContinuousMap.integral_apply`\n`+ ContinuousMapZero.integral_apply`\n`+ cfcₙHom_integral`\n`+ cfcₙL`\n`+ cfcₙL_integral`\n`+ cfcₙ_integral`\n`+ cfcₙ_integral'`\n`- integral_apply`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>",
              "createdAt": "2024-08-29T13:34:03Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6KLSrq",
              "body": ":v: dupuisf can now approve this pull request. To approve and merge a pull request, simply reply with `bors r+`. More detailed instructions are available [here](https://bors.tech/documentation/getting-started/#reviewing-pull-requests).",
              "createdAt": "2024-08-29T15:54:19Z",
              "author": {
                "login": "mathlib-bors"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6KOQOT",
              "body": "bors r+",
              "createdAt": "2024-08-29T21:03:38Z",
              "author": {
                "login": "dupuisf"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6KO2eM",
              "body": "Pull request successfully merged into master.\n\nBuild succeeded:\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/10622805874/job/29447890493)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/10622805874/job/29447891414)",
              "createdAt": "2024-08-29T22:19:03Z",
              "author": {
                "login": "mathlib-bors"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "277ba94170f2f05b400ef2cef8fa163c17d52e88",
                "additions": 91,
                "deletions": 5,
                "committedDate": "2024-08-29T03:37:08Z",
                "author": {
                  "name": "Frédéric Dupuis",
                  "email": "dupuisf@iro.umontreal.ca"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG2IBNww",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10608276778/job/29402090947"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG2IBP4A",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10608276858/job/29402091488"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG2IBO8A",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10608276778/job/29402091248"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG2IBQ2g",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10608276858/job/29402091738"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG2IBORQ",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10608276778/job/29402091077"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG2IBQUw",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10608276858/job/29402091603"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG2IBPGw",
                        "name": "Build",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10608276858/job/29402091291"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG2IBPqA",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10608276778/job/29402091432"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG2IBQ_A",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10608276778/job/29402091772"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG2INM-Q",
                        "name": "Post-CI job",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10608276858/job/29402287353"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "4c7dabb78e52fc6c7067d474d9c47ba18c2110d9",
                "additions": 3,
                "deletions": 2,
                "committedDate": "2024-08-29T13:21:03Z",
                "author": {
                  "name": "Frédéric Dupuis",
                  "email": "dupuisf@iro.umontreal.ca"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG2mO87w",
                        "name": "Add ready-to-merge label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10618472826/job/29433773295"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG2mO8zQ",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10618472833/job/29433773261"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG2mO7fw",
                        "name": "Fix style issues from lint",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10618472834/job/29433772927"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG2emeDQ",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10616130292/job/29425769997"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG2emeYg",
                        "name": "build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10616130308/job/29425770082"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG2d74Sw",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10615916613/job/29425072203"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG2d74bQ",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10615916600/job/29425072237"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG2emeCQ",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10616130296/job/29425769993"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG2d757g",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10615916613/job/29425072622"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG2mO7pg",
                        "name": "Add delegated label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10618472826/job/29433772966"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG2d77IQ",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10615916600/job/29425072929"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG2emfkA",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10616130296/job/29425770384"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG2d78mw",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10615916613/job/29425073307"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG2d78Ng",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10615916600/job/29425073206"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG2d77Og",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10615916613/job/29425072954"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG2d752w",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10615916600/job/29425072603"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG2d7-Nw",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10615916613/job/29425073719"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG2eaUxA",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10615916600/job/29425571012"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG2em2mQ",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/29425776281"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG2eopHw",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=16255&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "8a9f94cd69aabec2d44c96d610d0a6eb63bbc98d",
                "additions": 16,
                "deletions": 16,
                "committedDate": "2024-08-29T20:44:16Z",
                "author": {
                  "name": "Frédéric Dupuis",
                  "email": "dupuisf@iro.umontreal.ca"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG2yZk6g",
                        "name": "Add ready-to-merge label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10622386185/job/29446530282"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG2yZmfA",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10622386203/job/29446530684"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG2yZlAQ",
                        "name": "Fix style issues from lint",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10622386186/job/29446530305"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG2yWFmw",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10622370067/job/29446473115"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG2yWEqw",
                        "name": "build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10622370030/job/29446472875"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG2yWCtA",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10622369734/job/29446472372"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG2yWC2g",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10622369735/job/29446472410"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG2yWE8Q",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10622370024/job/29446472945"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG2yZmvQ",
                        "name": "Add delegated label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10622386185/job/29446530749"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG2yWFVw",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10622369734/job/29446473047"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG2yWCFg",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10622369735/job/29446472214"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG2yWD-A",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10622370024/job/29446472696"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG2yWGUQ",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10622369734/job/29446473297"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG2yWDjQ",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10622369735/job/29446472589"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG2yWEaQ",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10622369734/job/29446472809"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG2yWBGw",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10622369735/job/29446471963"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG2yWHDQ",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10622369734/job/29446473485"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG2y48aA",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10622369735/job/29447044200"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG2yWUcg",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/29446476914"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG2yXPkA",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=16255&login=leanprover-community&repository=mathlib4"
                      },
                      {
                        "__typename": "StatusContext",
                        "id": "SC_kwDOFcwZ1c8AAAAHPT8w_A",
                        "context": "bors",
                        "state": "SUCCESS",
                        "targetUrl": "https://mathlib-bors-ca18eefec4cb.herokuapp.com/batches/5427",
                        "description": "Build succeeded"
                      }
                    ]
                  }
                }
              }
            }
          ]
        },
        "createdAt": "2024-08-29T13:33:07Z",
        "deletions": 10,
        "files": {
          "nodes": [
            {
              "path": "Mathlib/Analysis/CStarAlgebra/ContinuousFunctionalCalculus/Integral.lean",
              "additions": 70,
              "deletions": 5
            },
            {
              "path": "Mathlib/Analysis/CStarAlgebra/ContinuousFunctionalCalculus/NonUnital.lean",
              "additions": 11,
              "deletions": 0
            },
            {
              "path": "Mathlib/MeasureTheory/Integral/SetIntegral.lean",
              "additions": 16,
              "deletions": 5
            }
          ]
        },
        "headRefName": "dupuisf/cfcn_integral",
        "headRefOid": "8a9f94cd69aabec2d44c96d610d0a6eb63bbc98d",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c551aZ6",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c8AAAABAt13Ow",
              "color": "bfd4f2",
              "name": "delegated"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
              "color": "06e039",
              "name": "ready-to-merge"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABViJeVg",
              "color": "33DBEC",
              "name": "t-analysis"
            }
          ]
        },
        "latestReviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c6HQsCJ",
              "body": "LGTM modulo moving that. If moving it increases transitive imports too much, then you can just leave it here.\r\n\r\nbors d+",
              "state": "COMMENTED",
              "author": {
                "login": "j-loreaux"
              },
              "submittedAt": "2024-08-29T15:54:17Z"
            }
          ]
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "UNKNOWN",
        "mergeable": "UNKNOWN",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 16255,
        "potentialMergeCommit": null,
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": null,
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c6HQsCJ",
              "body": "LGTM modulo moving that. If moving it increases transitive imports too much, then you can just leave it here.\r\n\r\nbors d+",
              "state": "COMMENTED",
              "author": {
                "login": "j-loreaux"
              },
              "submittedAt": "2024-08-29T15:54:17Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6HT_6I",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "dupuisf"
              },
              "submittedAt": "2024-08-29T20:45:54Z"
            }
          ]
        },
        "reviewThreads": {
          "nodes": [
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5ngcHe",
                    "body": "I guess the point here is that `ContinuousMapZero` isn't imported by anything outside of the continuous functional calculus, so you can't put this earlier?\r\n\r\nI *think* I would be in favor instead importing that into the file where `ContinuousMap.integral_apply` appears, as I don't believe it will increase the imports there too substantially (but maybe I'm wrong).",
                    "createdAt": "2024-08-29T15:52:14Z",
                    "author": {
                      "login": "j-loreaux"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5nivov",
                    "body": "Indeed that's why I had left it there, but now I checked and the extra transitive imports are literally just that one `ContinuousMapZero` file, so I moved the lemma.",
                    "createdAt": "2024-08-29T20:45:54Z",
                    "author": {
                      "login": "dupuisf"
                    }
                  }
                ]
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjMxMTAxODkz",
              "login": "dupuisf"
            },
            {
              "id": "MDQ6VXNlcjg5MjA1OTg=",
              "login": "j-loreaux"
            },
            {
              "id": "U_kgDOB75MNQ",
              "login": "leanprover-community-mathlib4-bot"
            }
          ]
        },
        "state": "CLOSED",
        "statusCheckRollup": {
          "contexts": {
            "nodes": [
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAG2yZk6g",
                "name": "Add ready-to-merge label",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10622386185/job/29446530282"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAG2yZmfA",
                "name": "Ping maintainers on Zulip",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10622386203/job/29446530684"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAG2yZlAQ",
                "name": "Fix style issues from lint",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10622386186/job/29446530305"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAG2yWFmw",
                "name": "label-and-report-new-contributor",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10622370067/job/29446473115"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAG2yWEqw",
                "name": "build",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10622370030/job/29446472875"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAG2yWCtA",
                "name": "Cancel Previous Runs (CI)",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10622369734/job/29446472372"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAG2yWC2g",
                "name": "Cancel Previous Runs (CI)",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10622369735/job/29446472410"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAG2yWE8Q",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10622370024/job/29446472945"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAG2yZmvQ",
                "name": "Add delegated label",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10622386185/job/29446530749"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAG2yWFVw",
                "name": "Lint style (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10622369734/job/29446473047"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAG2yWCFg",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10622369735/job/29446472214"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAG2yWD-A",
                "name": "Check all files imported",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10622370024/job/29446472696"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAG2yWGUQ",
                "name": "check workflows (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10622369734/job/29446473297"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAG2yWDjQ",
                "name": "check workflows",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10622369735/job/29446472589"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAG2yWEaQ",
                "name": "Build (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10622369734/job/29446472809"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAG2yWBGw",
                "name": "Build",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10622369735/job/29446471963"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAG2yWHDQ",
                "name": "Post-CI job (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10622369734/job/29446473485"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAG2y48aA",
                "name": "Post-CI job",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10622369735/job/29447044200"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAG2yWUcg",
                "name": "New Contributor Check",
                "conclusion": "NEUTRAL",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/29446476914"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAG2yXPkA",
                "name": "Summary",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=16255&login=leanprover-community&repository=mathlib4"
              },
              {
                "__typename": "StatusContext",
                "id": "SC_kwDOFcwZ1c8AAAAHPT8w_A",
                "context": "bors",
                "state": "SUCCESS",
                "targetUrl": "https://mathlib-bors-ca18eefec4cb.herokuapp.com/batches/5427",
                "description": "Build succeeded"
              }
            ]
          }
        },
        "title": "[Merged by Bors] - feat(ContinuousFunctionalCalculus): show that the non-unital CFC commutes with integration",
        "updatedAt": "2024-08-29T22:19:07Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/16255",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6UroJuzwAAAANGKTq2",
              "createdAt": "2024-08-29T13:33:07Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABViJeVg",
                "name": "t-analysis"
              }
            },
            {
              "__typename": "ReviewRequestedEvent",
              "id": "RRE_lADOFcwZ1c6UroJuzwAAAANGKTrB",
              "createdAt": "2024-08-29T13:33:07Z",
              "requestedReviewer": {
                "id": "MDQ6VXNlcjg5MjA1OTg=",
                "login": "j-loreaux"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6KJO14",
              "createdAt": "2024-08-29T13:34:03Z",
              "body": "### PR summary [8a9f94cd69](https://github.com/leanprover-community/mathlib4/pull/16255/commits/8a9f94cd69aabec2d44c96d610d0a6eb63bbc98d)\n\n<details><summary>\n\n#### Import changes for modified files\n\n</summary>\n\nDependency changes\n\n| File | Base Count | Head Count | Change |\n| --- | --- | --- | --- |\n| Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.Integral | 1934 | 1936 | +2 (+0.10%) |\n| Mathlib.MeasureTheory.Integral.SetIntegral | 1685 | 1686 | +1 (+0.06%) |\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n|<details><summary>203 files</summary> `Mathlib.Probability.Process.HittingTime` `Mathlib.Algebra.Module.Zlattice.Covolume` `Mathlib.NumberTheory.Cyclotomic.Rat` `Mathlib.Probability.BorelCantelli` `Mathlib.Analysis.SpecialFunctions.Gamma.Basic` `Mathlib.Probability.Variance` `Mathlib.Analysis.SpecialFunctions.Integrals` `Mathlib.Dynamics.Ergodic.AddCircle` `Mathlib.Analysis.Calculus.BumpFunction.Convolution` `Mathlib.NumberTheory.Cyclotomic.Discriminant` `Mathlib.MeasureTheory.Integral.IntervalAverage` `Mathlib.Analysis.Calculus.ParametricIntervalIntegral` `Mathlib.MeasureTheory.Measure.ProbabilityMeasure` `Mathlib.NumberTheory.GaussSum` `Mathlib.MeasureTheory.Integral.IntervalIntegral` `Mathlib.Analysis.Complex.AbsMax` `Mathlib.Probability.Kernel.Disintegration.CDFToKernel` `Mathlib.Analysis.CStarAlgebra.Spectrum` `Mathlib.Geometry.Manifold.Complex` `Mathlib.MeasureTheory.Integral.CircleIntegral` `Mathlib.Probability.StrongLaw` `Mathlib.MeasureTheory.Function.ConditionalExpectation.Unique` `Mathlib.Analysis.SpecialFunctions.Gaussian.GaussianIntegral` `Mathlib.Analysis.SpecialFunctions.Gamma.Beta` `Mathlib.MeasureTheory.Integral.TorusIntegral` `Mathlib.MeasureTheory.Function.L2Space` `Mathlib.MeasureTheory.Measure.LevyProkhorovMetric` `Mathlib.Analysis.Complex.TaylorSeries` `Mathlib.Analysis.Normed.Algebra.Spectrum` `Mathlib.Analysis.FunctionalSpaces.SobolevInequality` `Mathlib.Probability.Distributions.Exponential` `Mathlib.Analysis.SpecialFunctions.Complex.Arctan` `Mathlib.Probability.Kernel.Composition` `Mathlib.Probability.Martingale.Upcrossing` `Mathlib.Probability.Martingale.OptionalSampling` `Mathlib.MeasureTheory.Integral.DivergenceTheorem` `Mathlib.NumberTheory.NumberField.Discriminant` `Mathlib.NumberTheory.NumberField.EquivReindex` `Mathlib.MeasureTheory.Measure.LogLikelihoodRatio` `Mathlib.Analysis.SpecialFunctions.ImproperIntegrals` `Mathlib.Analysis.Fourier.ZMod` `Mathlib.Analysis.SpecialFunctions.Complex.LogBounds` `Mathlib.Analysis.SpecialFunctions.Gamma.Deligne` `Mathlib.Analysis.Complex.PhragmenLindelof` `Mathlib.MeasureTheory.Measure.Lebesgue.VolumeOfBalls` `Mathlib.MeasureTheory.Integral.FundThmCalculus` `Mathlib.NumberTheory.Cyclotomic.Three` `Mathlib.Probability.Kernel.Disintegration.Integral` `Mathlib.MeasureTheory.Measure.Portmanteau` `Mathlib.NumberTheory.LSeries.Deriv` `Mathlib.MeasureTheory.Measure.Haar.NormedSpace` `Mathlib.Analysis.Fourier.Inversion` `Mathlib.Probability.Kernel.WithDensity` `Mathlib.Analysis.SpecialFunctions.NonIntegrable` `Mathlib.MeasureTheory.Group.AddCircle` `Mathlib.Probability.Independence.ZeroOne` `Mathlib.Analysis.SpecialFunctions.Complex.Analytic` `Mathlib.NumberTheory.ModularForms.EisensteinSeries.Basic` `Mathlib.Probability.Kernel.Disintegration.StandardBorel` `Mathlib.Probability.Distributions.Gaussian` `Mathlib.Probability.Kernel.CondDistrib` `Mathlib.MeasureTheory.Measure.Haar.Unique` `Mathlib.Geometry.Manifold.BumpFunction` `Mathlib.Probability.Martingale.Basic` `Mathlib.MeasureTheory.Decomposition.RadonNikodym` `Mathlib.Probability.Kernel.RadonNikodym` `Mathlib.NumberTheory.Harmonic.GammaDeriv` `Mathlib.MeasureTheory.Decomposition.SignedLebesgue` `Mathlib.MeasureTheory.Measure.WithDensityFinite` `Mathlib.Analysis.Complex.CauchyIntegral` `Mathlib.MeasureTheory.Group.GeometryOfNumbers` `Mathlib.Analysis.SpecialFunctions.PolarCoord` `Mathlib.MeasureTheory.Covering.LiminfLimsup` `Mathlib.MeasureTheory.Order.UpperLower` `Mathlib.Analysis.Calculus.ParametricIntegral` `Mathlib.Probability.Martingale.Convergence` `Mathlib.Probability.Kernel.IntegralCompProd` `Mathlib.MeasureTheory.Function.AEEqOfIntegral` `Mathlib.Probability.Kernel.Disintegration.CondCDF` `Mathlib.Probability.Kernel.Disintegration.Density` `Mathlib.Analysis.Convex.Integral` `Mathlib.MeasureTheory.Covering.BesicovitchVectorSpace` `Mathlib.MeasureTheory.Constructions.Prod.Integral` `Mathlib.NumberTheory.Cyclotomic.Embeddings` `Mathlib.MeasureTheory.Integral.Layercake` `Mathlib.Analysis.Complex.Schwarz` `Mathlib.MeasureTheory.Covering.OneDim` `Mathlib.Data.Real.Pi.Leibniz` `Mathlib.NumberTheory.FLT.Three` `Mathlib.NumberTheory.NumberField.CanonicalEmbedding.ConvexBody` `Mathlib.NumberTheory.NumberField.Units.Basic` `Mathlib.Probability.Kernel.Invariance` `Mathlib.Probability.Distributions.Uniform` `Mathlib.MeasureTheory.Covering.DensityTheorem` `Mathlib.NumberTheory.DirichletCharacter.GaussSum` `Mathlib.MeasureTheory.Measure.FiniteMeasureProd` `Mathlib.Probability.Kernel.MeasurableIntegral` `Mathlib.NumberTheory.ModularForms.EisensteinSeries.MDifferentiable` `Mathlib.Algebra.Module.Zlattice.Basic` `Mathlib.MeasureTheory.Integral.Asymptotics` `Mathlib.Analysis.SpecialFunctions.ContinuousFunctionalCalculus.ExpLog` `Mathlib.Tactic.NormNum.LegendreSymbol` `Mathlib.Analysis.Fourier.RiemannLebesgueLemma` `Mathlib.Analysis.BoxIntegral.Integrability` `Mathlib.Analysis.Complex.Polynomial.Basic` `Mathlib.MeasureTheory.Integral.IntegralEqImproper` `Mathlib.MeasureTheory.Function.ConditionalExpectation.Basic` `Mathlib.Probability.Kernel.Disintegration.Basic` `Mathlib.Analysis.Complex.RemovableSingularity` `Mathlib.MeasureTheory.Measure.Tilted` `Mathlib.Analysis.Complex.Liouville` `Mathlib.NumberTheory.LegendreSymbol.QuadraticChar.GaussSum` `Mathlib.NumberTheory.LSeries.MellinEqDirichlet` `Mathlib.NumberTheory.LegendreSymbol.JacobiSymbol` `Mathlib.MeasureTheory.Function.Jacobian` `Mathlib.Analysis.Complex.LocallyUniformLimit` `Mathlib.Probability.Moments` `Mathlib.NumberTheory.LegendreSymbol.AddCharacter` `Mathlib.NumberTheory.Cyclotomic.PID` `Mathlib.Analysis.Distribution.AEEqOfIntegralContDiff` `Mathlib.MeasureTheory.Group.FundamentalDomain` `Mathlib.NumberTheory.LegendreSymbol.QuadraticReciprocity` `Mathlib.Analysis.SpecialFunctions.Gamma.BohrMollerup` `Mathlib.MeasureTheory.Decomposition.Lebesgue` `Mathlib.Probability.Process.Stopping` `Mathlib.MeasureTheory.Integral.PeakFunction` `Mathlib.MeasureTheory.Function.ConditionalExpectation.CondexpL1` `Mathlib.MeasureTheory.Function.ConditionalExpectation.CondexpL2` `Mathlib.NumberTheory.NumberField.Units.DirichletTheorem` `Mathlib.Analysis.Normed.Algebra.Basic` `Mathlib.MeasureTheory.Integral.ExpDecay` `Mathlib.NumberTheory.NumberField.Units.Regulator` `Mathlib.Analysis.SpecialFunctions.Stirling` `Mathlib.Analysis.ConstantSpeed` `Mathlib.Analysis.Calculus.Monotone` `Mathlib.RingTheory.Polynomial.Selmer` `Mathlib.Geometry.Manifold.IntegralCurve` `Mathlib.Analysis.SumIntegralComparisons` `Mathlib.MeasureTheory.Constructions.HaarToSphere` `Mathlib.Analysis.SpecialFunctions.JapaneseBracket` `Mathlib.MeasureTheory.Integral.CircleTransform` `Mathlib.MeasureTheory.Integral.DominatedConvergence` `Mathlib.Probability.Kernel.MeasureCompProd` `Mathlib.Analysis.Fourier.FourierTransform` `Mathlib.Probability.IdentDistrib` `Mathlib.Analysis.Convolution` `Mathlib.Analysis.MellinInversion` `Mathlib.Analysis.Complex.Polynomial.UnitTrinomial` `Mathlib.Geometry.Manifold.PartitionOfUnity` `Mathlib.MeasureTheory.Covering.Differentiation` `Mathlib.Analysis.Complex.Hadamard` `Mathlib.Analysis.Calculus.LineDeriv.IntegrationByParts` `Mathlib.Analysis.BoundedVariation` `Mathlib.NumberTheory.WellApproximable` `Mathlib.Probability.Process.Adapted` `Mathlib.MeasureTheory.Measure.Lebesgue.Integral` `Mathlib.Analysis.Calculus.Rademacher` `Mathlib.MeasureTheory.Integral.Pi` `Mathlib.NumberTheory.NumberField.House` `Mathlib.NumberTheory.NumberField.Embeddings` `Mathlib.MeasureTheory.Function.Intersectivity` `Mathlib.Probability.Process.Filtration` `Mathlib.MeasureTheory.Integral.Periodic` `Mathlib.NumberTheory.Harmonic.Bounds` `Mathlib.Analysis.MellinTransform` `Mathlib.Analysis.SpecialFunctions.Complex.CircleAddChar` `Mathlib.MeasureTheory.Integral.Gamma` `Mathlib.MeasureTheory.Measure.DiracProba` `Mathlib.Analysis.SpecialFunctions.Trigonometric.EulerSineProd` `Mathlib.Probability.Kernel.Condexp` `Mathlib.MeasureTheory.Function.ConditionalExpectation.Indicator` `Mathlib.MeasureTheory.Covering.Besicovitch` `Mathlib.Analysis.Calculus.BumpFunction.FiniteDimension` `Mathlib.Probability.Distributions.Gamma` `Mathlib.Probability.Martingale.OptionalStopping` `Mathlib.Probability.Martingale.BorelCantelli` `Mathlib.Probability.Density` `Mathlib.Analysis.Complex.OpenMapping` `Mathlib.Analysis.Calculus.BumpFunction.Normed` `Mathlib.Analysis.ODE.PicardLindelof` `Mathlib.NumberTheory.NumberField.ClassNumber` `Mathlib.Probability.ConditionalExpectation` `Mathlib.MeasureTheory.Integral.SetIntegral` `Mathlib.Tactic` `Mathlib.Analysis.SpecialFunctions.Gaussian.FourierTransform` `Mathlib.MeasureTheory.Measure.Haar.Disintegration` `Mathlib.Analysis.Distribution.SchwartzSpace` `Mathlib.Probability.Integration` `Mathlib.MeasureTheory.Measure.WithDensityVectorMeasure` `Mathlib.Analysis.SpecialFunctions.Pow.Integral` `Mathlib.Geometry.Manifold.WhitneyEmbedding` `Mathlib.NumberTheory.NumberField.CanonicalEmbedding.Basic` `Mathlib.MeasureTheory.Integral.Average` `Mathlib.Probability.Kernel.Disintegration.Unique` `Mathlib.Probability.Independence.Conditional` `Mathlib.MeasureTheory.Function.ConditionalExpectation.Real` `Mathlib.Data.Real.Pi.Wallis` `Mathlib.Probability.Process.PartitionFiltration` `Mathlib.Probability.Notation` `Mathlib.NumberTheory.LSeries.AbstractFuncEq` `Mathlib.Probability.CDF` `Mathlib.Probability.Martingale.Centering` `Mathlib.MeasureTheory.Measure.Haar.Quotient`</details>|1|\n| `Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.Integral`|2|\n\n</details>\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ ContinuousMap.integral_apply`\n`+ ContinuousMapZero.integral_apply`\n`+ cfcₙHom_integral`\n`+ cfcₙL`\n`+ cfcₙL_integral`\n`+ cfcₙ_integral`\n`+ cfcₙ_integral'`\n`- integral_apply`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6HQsCJ",
              "createdAt": "2024-08-29T15:52:14Z",
              "body": "LGTM modulo moving that. If moving it increases transitive imports too much, then you can just leave it here.\r\n\r\nbors d+",
              "author": {
                "login": "j-loreaux"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6KLSrq",
              "createdAt": "2024-08-29T15:54:19Z",
              "body": ":v: dupuisf can now approve this pull request. To approve and merge a pull request, simply reply with `bors r+`. More detailed instructions are available [here](https://bors.tech/documentation/getting-started/#reviewing-pull-requests).",
              "author": {
                "login": "mathlib-bors"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6UroJuzwAAAANGYe8q",
              "createdAt": "2024-08-29T15:54:29Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABAt13Ow",
                "name": "delegated"
              }
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6KOQOT",
              "createdAt": "2024-08-29T21:03:38Z",
              "body": "bors r+",
              "author": {
                "login": "dupuisf"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6UroJuzwAAAANGqUCO",
              "createdAt": "2024-08-29T21:03:50Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
                "name": "ready-to-merge"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6KO2eM",
              "createdAt": "2024-08-29T22:19:03Z",
              "body": "Pull request successfully merged into master.\n\nBuild succeeded:\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/10622805874/job/29447890493)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/10622805874/job/29447891414)",
              "author": {
                "login": "mathlib-bors"
              }
            },
            {
              "__typename": "RenamedTitleEvent"
            },
            {
              "__typename": "ClosedEvent",
              "id": "CE_lADOFcwZ1c6UroJuzwAAAANGtAPB",
              "createdAt": "2024-08-29T22:19:03Z"
            },
            {
              "__typename": "HeadRefDeletedEvent",
              "id": "HRDE_lADOFcwZ1c6UroJuzwAAAANGtAUh",
              "createdAt": "2024-08-29T22:19:07Z"
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "ReferencedEvent"
            }
          ]
        }
      }
    }
  }
}
