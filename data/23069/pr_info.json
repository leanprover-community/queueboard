{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 5,
        "assignees": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjkxNDE1NjQ=",
              "login": "joneugster"
            }
          ]
        },
        "author": {
          "login": "JovanGerb"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "TODO: the same change for `abel_nf`.\r\n\r\nIn the current situation, ring normalization is tried again on each already normalized expression, because `simp` wants to be sure it doesn't simplify any further. `singlePass := true` bypasses this.\r\n\r\nBesides performance, there is another reason to use `singlePass := true`:\r\nwhen there are bound variables, and `simp` does multiple passes, then in the second pass, the bound variable is introduced as a different fresh variable, which confuses the `AtomM` equality of atoms used by `ring`. So I need this for #22956\r\n\r\nI also noticed that `Context.simp` only needs a `MetaM` monad and not a `SimpM` monad.\r\n\r\n---\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nFor details on the \"pull request lifecycle\" in mathlib, please see:\r\nhttps://leanprover-community.github.io/contribute/index.html\r\n\r\nIn particular, note that most reviewers will only notice your PR\r\nif it passes the continuous integration checks.\r\nPlease ask for help on https://leanprover.zulipchat.com if needed.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nIf you are moving or deleting declarations, please include these lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nMoves:\r\n- Vector.* -> List.Vector.*\r\n- ...\r\n\r\nDeletions:\r\n- Nat.bit1_add_bit1\r\n- ...\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n\r\n-->\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 1,
        "closed": false,
        "closedAt": null,
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c6i-seK",
              "body": "### PR summary [56c72ec289](https://github.com/leanprover-community/mathlib4/pull/23069/commits/56c72ec289c81ce856a11dbfccd4ac3ca7fc88a2)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n\n</details>\n\n---\n\n#### Declarations diff\n\nNo declarations were harmed in the making of this PR! üêô\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n---\n\n<details><summary>No changes to technical debt.</summary>\n\nYou can run this locally as\n```\n./scripts/technical-debt-metrics.sh pr_summary\n```\n* The `relative` value is the weighted *sum* of the differences with weight given by the *inverse* of the current value of the statistic.\n* The `absolute` value is the `relative` value divided by the total sum of the inverses of the current values (i.e. the weighted *average* of the differences).\n</details>\n",
              "createdAt": "2025-03-18T18:33:20Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6i-_sz",
              "body": "!bench",
              "createdAt": "2025-03-18T18:59:48Z",
              "author": {
                "login": "leanprover-community-mathlib4-bot"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6i_TkT",
              "body": "Here are the [benchmark results](https://speed.lean-lang.org/mathlib4/run-detail/4ddadab2-fb9b-4599-b682-f719e2d11423) for commit 56c72ec289c81ce856a11dbfccd4ac3ca7fc88a2.\nThere were [significant changes](https://speed.lean-lang.org/mathlib4/compare/d4561e4e-b203-406c-8a99-76deaf358982/to/4ddadab2-fb9b-4599-b682-f719e2d11423) against commit 4104be55c63d84e85c63560905e6a239416cfc60:\n```diff\n  Benchmark                                  Metric         Change\n  ================================================================\n+ ~Mathlib.LinearAlgebra.Reflection          instructions   -10.1%\n+ ~Mathlib.RingTheory.Polynomial.Chebyshev   instructions   -13.6%\n```",
              "createdAt": "2025-03-18T19:32:52Z",
              "author": {
                "login": "leanprover-bot"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6i_T0D",
              "body": "|File|Instructions|%|\n|-|-:|:-:|\n|`build`|-57.743‚¨ù10‚Åπ|(-0.03%)|\n<details><summary>2 files, Instructions -2.0‚¨ù10‚Åπ</summary>\n\n|File|Instructions|%|\n|-|-:|:-:|\n|`Mathlib.GroupTheory.SpecificGroups.Quaternion`|-1.60‚¨ù10‚Åπ|(-4.96%)|\n|`Mathlib.NumberTheory.ModularForms.JacobiTheta.TwoVariable`|-1.935‚¨ù10‚Åπ|(-2.31%)|\n</details>\n\n<details><summary>3 files, Instructions -3.0‚¨ù10‚Åπ</summary>\n\n|File|Instructions|%|\n|-|-:|:-:|\n|`Mathlib.NumberTheory.Multiplicity`|-2.224‚¨ù10‚Åπ|(-6.39%)|\n|`Mathlib.Analysis.SpecialFunctions.Gamma.Deligne`|-2.422‚¨ù10‚Åπ|(-7.28%)|\n|`Mathlib.Analysis.Convex.Slope`|-2.890‚¨ù10‚Åπ|(-3.61%)|\n</details>\n\n|File|Instructions|%|\n|-|-:|:-:|\n|`Mathlib.LinearAlgebra.Reflection`|-10.544‚¨ù10‚Åπ|(-10.08%)|\n|`Mathlib.RingTheory.Polynomial.Chebyshev`|-16.74‚¨ù10‚Åπ|(-13.62%)|\n[CI run](https://github.com/leanprover-community/mathlib4/actions/runs/13931935403)",
              "createdAt": "2025-03-18T19:33:18Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6kkFbj",
              "body": "The part about `singlePass` looks good to me, thanks!\r\n\r\nAbout the change of using `MetaM` vs `SimpM`: I've been wondering if it's just the current implementation of `simp : Simp.Result ‚Üí SimpM Simp.Result` which does not use anything beyond `MetaM` or whether implementing (a hypothetical alternative) cleanup routine would never want to use `SimpM`... Do you have any thoughts on this? ",
              "createdAt": "2025-03-28T10:38:40Z",
              "author": {
                "login": "joneugster"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6kkfHe",
              "body": "I think that the implementation should be in MetaM because it is running the SimpM monad by itself. This means that it uses a separate SimpM context from the main loop. This is good, because the main simp loop and this local simp are doing different simplifications, so they shouldn't try to share a SimpM cache.",
              "createdAt": "2025-03-28T11:04:23Z",
              "author": {
                "login": "JovanGerb"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6kkhIl",
              "body": "In fact it is quite confusing that the two different simps are given the same simp context. It is only the inner simp that uses the simp lemmas in the simp context. I think I should refactor it to clearly be two different simp contexts.",
              "createdAt": "2025-03-28T11:07:07Z",
              "author": {
                "login": "JovanGerb"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "56c72ec289c81ce856a11dbfccd4ac3ca7fc88a2",
                "additions": 5,
                "deletions": 5,
                "committedDate": "2025-03-18T18:27:14Z",
                "author": {
                  "name": "Jovan Gerbscheid",
                  "email": "jovan.gerbscheid@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJE9uuQg",
                        "name": "set_pr_emoji",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13931014236/job/38987869762"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJE88uDw",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13930763066/job/38987050511"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJNxLRRg",
                        "name": "set_pr_emoji",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14127150850/job/39578685766"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJE9Olag",
                        "name": "Add topic label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13930850100/job/38987343210"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJE9Ollw",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13930850056/job/38987343255"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJE9Olfw",
                        "name": "post-or-update-summary-comment",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13930850055/job/38987343231"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJE88r8g",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13930763065/job/38987049970"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJE9OnnA",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13930850084/job/38987343772"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJE88sPQ",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13930763066/job/38987050045"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJE88tzg",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13930763065/job/38987050446"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJE9OloA",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13930850084/job/38987343264"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJE88vrw",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13930763066/job/38987050927"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJE-xKsQ",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13930763065/job/38988958385"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJE9PDvA",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/38987350972"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJE9QhpA",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=23069&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            }
          ]
        },
        "createdAt": "2025-03-18T18:32:12Z",
        "deletions": 5,
        "files": {
          "nodes": [
            {
              "path": "Mathlib/Tactic/Ring/RingNF.lean",
              "additions": 5,
              "deletions": 5
            }
          ]
        },
        "headRefName": "ring_nf-singlePass",
        "headRefOid": "56c72ec289c81ce856a11dbfccd4ac3ca7fc88a2",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c6PKHSC",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c7P265b",
              "color": "f9d0c4",
              "name": "awaiting-author"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABKAKYew",
              "color": "33DBEC",
              "name": "t-meta"
            }
          ]
        },
        "latestReviews": {
          "nodes": []
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "BLOCKED",
        "mergeable": "MERGEABLE",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 23069,
        "potentialMergeCommit": {
          "oid": "2fe484706b9cf3c1e47e6f22d2519661cd1e5fc8"
        },
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": null,
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": []
        },
        "reviewThreads": {
          "nodes": []
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjU2MzU1MjQ4",
              "login": "JovanGerb"
            },
            {
              "id": "U_kgDOB75MNQ",
              "login": "leanprover-community-mathlib4-bot"
            },
            {
              "id": "MDQ6VXNlcjg1NjY4Mzk0",
              "login": "leanprover-bot"
            },
            {
              "id": "MDQ6VXNlcjkxNDE1NjQ=",
              "login": "joneugster"
            }
          ]
        },
        "state": "OPEN",
        "statusCheckRollup": {
          "contexts": {
            "nodes": [
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJE9uuQg",
                "name": "set_pr_emoji",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13931014236/job/38987869762"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJE88uDw",
                "name": "Lint style (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13930763066/job/38987050511"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJNxLRRg",
                "name": "set_pr_emoji",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14127150850/job/39578685766"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJE9Olag",
                "name": "Add topic label",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13930850100/job/38987343210"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJE9Ollw",
                "name": "label-and-report-new-contributor",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13930850056/job/38987343255"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJE9Olfw",
                "name": "post-or-update-summary-comment",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13930850055/job/38987343231"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJE88r8g",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13930763065/job/38987049970"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJE9OnnA",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13930850084/job/38987343772"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJE88sPQ",
                "name": "Build (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13930763066/job/38987050045"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJE88tzg",
                "name": "Build",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13930763065/job/38987050446"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJE9OloA",
                "name": "Check all files imported",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13930850084/job/38987343264"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJE88vrw",
                "name": "Post-CI job (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13930763066/job/38987050927"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJE-xKsQ",
                "name": "Post-CI job",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13930763065/job/38988958385"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJE9PDvA",
                "name": "New Contributor Check",
                "conclusion": "NEUTRAL",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/38987350972"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJE9QhpA",
                "name": "Summary",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=23069&login=leanprover-community&repository=mathlib4"
              }
            ]
          }
        },
        "title": "perf: use `singlePass := true` in main loop of `ring_nf`",
        "updatedAt": "2025-03-28T11:07:09Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/23069",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "56c72ec289c81ce856a11dbfccd4ac3ca7fc88a2"
              }
            },
            {
              "__typename": "ConvertToDraftEvent",
              "id": "CTDE_lADOFcwZ1c6unKHgzwAAAAPr6CDU",
              "createdAt": "2025-03-18T18:32:16Z"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6i-seK",
              "createdAt": "2025-03-18T18:33:20Z",
              "body": "### PR summary [56c72ec289](https://github.com/leanprover-community/mathlib4/pull/23069/commits/56c72ec289c81ce856a11dbfccd4ac3ca7fc88a2)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n\n</details>\n\n---\n\n#### Declarations diff\n\nNo declarations were harmed in the making of this PR! üêô\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n---\n\n<details><summary>No changes to technical debt.</summary>\n\nYou can run this locally as\n```\n./scripts/technical-debt-metrics.sh pr_summary\n```\n* The `relative` value is the weighted *sum* of the differences with weight given by the *inverse* of the current value of the statistic.\n* The `absolute` value is the `relative` value divided by the total sum of the inverses of the current values (i.e. the weighted *average* of the differences).\n</details>\n",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6unKHgzwAAAAPr6FkV",
              "createdAt": "2025-03-18T18:33:21Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKAKYew",
                "name": "t-meta"
              }
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c6Cn9fX",
              "createdAt": "2025-03-18T18:34:33Z",
              "source": {
                "id": "PR_kwDOFcwZ1c6OxdXH",
                "title": "fix: tactics like `ring_nf` can get confused with bound variables",
                "url": "https://github.com/leanprover-community/mathlib4/pull/22956"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6unKHgzwAAAAPr6keR",
              "createdAt": "2025-03-18T18:41:08Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAAB4rV5OQ",
                "name": "bench-after-CI"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6i-_sz",
              "createdAt": "2025-03-18T18:59:48Z",
              "body": "!bench",
              "author": {
                "login": "leanprover-community-mathlib4-bot"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6i_TkT",
              "createdAt": "2025-03-18T19:32:52Z",
              "body": "Here are the [benchmark results](https://speed.lean-lang.org/mathlib4/run-detail/4ddadab2-fb9b-4599-b682-f719e2d11423) for commit 56c72ec289c81ce856a11dbfccd4ac3ca7fc88a2.\nThere were [significant changes](https://speed.lean-lang.org/mathlib4/compare/d4561e4e-b203-406c-8a99-76deaf358982/to/4ddadab2-fb9b-4599-b682-f719e2d11423) against commit 4104be55c63d84e85c63560905e6a239416cfc60:\n```diff\n  Benchmark                                  Metric         Change\n  ================================================================\n+ ~Mathlib.LinearAlgebra.Reflection          instructions   -10.1%\n+ ~Mathlib.RingTheory.Polynomial.Chebyshev   instructions   -13.6%\n```",
              "author": {
                "login": "leanprover-bot"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6i_T0D",
              "createdAt": "2025-03-18T19:33:18Z",
              "body": "|File|Instructions|%|\n|-|-:|:-:|\n|`build`|-57.743‚¨ù10‚Åπ|(-0.03%)|\n<details><summary>2 files, Instructions -2.0‚¨ù10‚Åπ</summary>\n\n|File|Instructions|%|\n|-|-:|:-:|\n|`Mathlib.GroupTheory.SpecificGroups.Quaternion`|-1.60‚¨ù10‚Åπ|(-4.96%)|\n|`Mathlib.NumberTheory.ModularForms.JacobiTheta.TwoVariable`|-1.935‚¨ù10‚Åπ|(-2.31%)|\n</details>\n\n<details><summary>3 files, Instructions -3.0‚¨ù10‚Åπ</summary>\n\n|File|Instructions|%|\n|-|-:|:-:|\n|`Mathlib.NumberTheory.Multiplicity`|-2.224‚¨ù10‚Åπ|(-6.39%)|\n|`Mathlib.Analysis.SpecialFunctions.Gamma.Deligne`|-2.422‚¨ù10‚Åπ|(-7.28%)|\n|`Mathlib.Analysis.Convex.Slope`|-2.890‚¨ù10‚Åπ|(-3.61%)|\n</details>\n\n|File|Instructions|%|\n|-|-:|:-:|\n|`Mathlib.LinearAlgebra.Reflection`|-10.544‚¨ù10‚Åπ|(-10.08%)|\n|`Mathlib.RingTheory.Polynomial.Chebyshev`|-16.74‚¨ù10‚Åπ|(-13.62%)|\n[CI run](https://github.com/leanprover-community/mathlib4/actions/runs/13931935403)",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6unKHgzwAAAAPsC1Qx",
              "createdAt": "2025-03-18T19:33:19Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAAB4rV5OQ",
                "name": "bench-after-CI"
              }
            },
            {
              "__typename": "ReadyForReviewEvent",
              "id": "RFRE_lADOFcwZ1c6unKHgzwAAAAPsD1qi",
              "createdAt": "2025-03-18T19:52:00Z"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6kkFbj",
              "createdAt": "2025-03-28T10:38:40Z",
              "body": "The part about `singlePass` looks good to me, thanks!\r\n\r\nAbout the change of using `MetaM` vs `SimpM`: I've been wondering if it's just the current implementation of `simp : Simp.Result ‚Üí SimpM Simp.Result` which does not use anything beyond `MetaM` or whether implementing (a hypothetical alternative) cleanup routine would never want to use `SimpM`... Do you have any thoughts on this? ",
              "author": {
                "login": "joneugster"
              }
            },
            {
              "__typename": "AssignedEvent",
              "id": "AE_lADOFcwZ1c6unKHgzwAAAAP3EWUV",
              "createdAt": "2025-03-28T10:38:45Z",
              "assignee": {
                "id": "MDQ6VXNlcjkxNDE1NjQ=",
                "login": "joneugster"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6unKHgzwAAAAP3EbDB",
              "createdAt": "2025-03-28T10:39:40Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6kkfHe",
              "createdAt": "2025-03-28T11:04:23Z",
              "body": "I think that the implementation should be in MetaM because it is running the SimpM monad by itself. This means that it uses a separate SimpM context from the main loop. This is good, because the main simp loop and this local simp are doing different simplifications, so they shouldn't try to share a SimpM cache.",
              "author": {
                "login": "JovanGerb"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6kkhIl",
              "createdAt": "2025-03-28T11:07:07Z",
              "body": "In fact it is quite confusing that the two different simps are given the same simp context. It is only the inner simp that uses the simp lemmas in the simp context. I think I should refactor it to clearly be two different simp contexts.",
              "author": {
                "login": "JovanGerb"
              }
            }
          ]
        }
      }
    }
  }
}
