{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 1223,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "Vierkantor"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "This PR follows the approach of #19065 to solve painful definitional equalities problems by forbidding the identification of `A ⟶ B` and `A →ₗ[R] B`. These are not equal reducibly, so tactics get confused if one is replaced by the other.\r\n\r\nThere seem to be a few regressions caused by defeq abuse that we were able to get away with previously, but some subtle elaboration differences made it evident. Otherwise the cost is inserting many `.hom`s and `asHom`s.\r\n\r\nA few steps that might clean up the diff, but would be too much work to incorporate in this PR:\r\n * Make the `ext` tactic pick up `TensorProduct.ext` again.\r\n * Replace the defeq abuse between `(restrictScalars f).obj M` and `M` with explicit maps going back and forth.\r\n\r\nOverall quite a few proofs could be cleaned up at the cost of more bookkeeping.\r\n\r\n---\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nFor details on the \"pull request lifecycle\" in mathlib, please see:\r\nhttps://leanprover-community.github.io/contribute/index.html\r\n\r\nIn particular, note that most reviewers will only notice your PR\r\nif it passes the continuous integration checks.\r\nPlease ask for help on https://leanprover.zulipchat.com if needed.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nIf you are moving or deleting declarations, please include these lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nMoves:\r\n- Vector.* -> Mathlib.Vector.*\r\n- ...\r\n\r\nDeletions:\r\n- Nat.bit1_add_bit1\r\n- ...\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n\r\n-->\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 60,
        "closed": false,
        "closedAt": null,
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c6VEUNf",
              "body": "### PR summary [867bc8212c](https://github.com/leanprover-community/mathlib4/pull/19511/commits/867bc8212c6d6651ab13f5153cb4748e2e73bd3d)\n\nImport changes exceeding 2%\n\n| %      | File |\n| -      | -    |\n| +18.95% | `Mathlib.CategoryTheory.Limits.ConcreteCategory.WithAlgebraicStructures` |\n\n<details><summary>\n\n#### Import changes for modified files\n\n</summary>\n\nDependency changes\n\n| File | Base Count | Head Count | Change |\n| --- | --- | --- | --- |\n| Mathlib.CategoryTheory.Limits.ConcreteCategory.WithAlgebraicStructures | 612 | 728 | +116 (+18.95%) |\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n| `Mathlib.CategoryTheory.Limits.ConcreteCategory.WithAlgebraicStructures`|116|\n\n</details>\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ FGModuleCatEvaluation_apply'`\n`+ Hom`\n`+ Hom.hom₂`\n`+ Hom.hom₂_asHom₂`\n`+ Hom.instModule`\n`+ HomEquiv.fromRestriction_hom_apply_apply`\n`+ HomEquiv.toRestriction_hom_apply`\n`+ Iso.conj_hom_eq_conj`\n`+ asHom`\n`+ asHom_apply`\n`+ asHom_comp`\n`+ asHom_hom`\n`+ asHom_id`\n`+ asHom_ρ`\n`+ asHom₂`\n`+ asHom₂_compr₂`\n`+ comp_apply`\n`+ endMulEquiv`\n`+ endMulEquiv_comp_ρ`\n`+ endMulEquiv_symm_comp_ρ`\n`+ forget_obj`\n`+ homEquiv`\n`+ homLinearEquiv`\n`+ hom_action_ρ`\n`+ hom_add`\n`+ hom_asHom`\n`+ hom_bijective`\n`+ hom_comp`\n`+ hom_id`\n`+ hom_inv_apply`\n`+ hom_neg`\n`+ hom_nsmul`\n`+ hom_smul`\n`+ hom_sub`\n`+ hom_sum`\n`+ hom_zero`\n`+ hom_zsmul`\n`+ instance : Add (M ⟶ N)`\n`+ instance : AddCommGroup (M ⟶ N)`\n`+ instance : CoeFun (obj' f M) fun _ => S → M`\n`+ instance : Inhabited (ModuleCat R)`\n`+ instance : Neg (M ⟶ N)`\n`+ instance : SMul S (M ⟶ N)`\n`+ instance : SMul ℕ (M ⟶ N)`\n`+ instance : SMul ℤ (M ⟶ N)`\n`+ instance : Sub (M ⟶ N)`\n`+ instance : Zero (M ⟶ N)`\n`+ instance {M N : ModuleCat.{v} R} : CoeFun (M ⟶ N) (fun _ ↦ M → N)`\n`+ inv_hom_apply`\n`+ pushforward_map_app_apply'`\n`+ pushforward_obj_map_apply'`\n`+ toSheafify_app_apply'`\n`+ ρ_hom`\n`++ hom_ext`\n`++ ofHom`\n`++-- of`\n`- ModuleCat.asHom`\n`- ModuleCat.asHom_apply`\n`- ModuleCat.ofHom`\n`- coe_comp`\n`- comp_def`\n`- ext`\n`- instance : CoeFun (obj' f M) fun _ => S → M where coe g := g.toFun`\n`- instance {M N : FGModuleCat R} : FunLike (M ⟶ N) M N`\n`- instance {M N : FGModuleCat R} : LinearMapClass (M ⟶ N) R M N`\n`- instance {M N : ModuleCat.{v} R} : AddCommGroup (M ⟶ N) := LinearMap.addCommGroup`\n`- instance {M N : ModuleCat.{v} R} : FunLike (M ⟶ N) M N`\n`- instance {M N : ModuleCat.{v} R} : LinearMapClass (M ⟶ N) R M N`\n`- instance {R : Type u₁} {S : Type u₂} [Ring R] [Ring S] {f : R →+* S}`\n`- ofUnique`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>\n\n---\n\n<details><summary>Decrease in tech debt: (relative, absolute) = (5.46, 0.03)</summary>\n\n|Current number|Change|Type|\n|-:|:-:|:-|\n|5006|-29|porting notes|\n|198|-2|disabled simpNF lints|\n|1527|-25|erw|\n\nCurrent commit [867bc8212c](https://github.com/leanprover-community/mathlib4/commit/867bc8212c6d6651ab13f5153cb4748e2e73bd3d)\nReference commit [7f28d7f73f](https://github.com/leanprover-community/mathlib4/commit/7f28d7f73f74b31f72449bb9eb240db3ca68fe38)\n\nYou can run this locally as\n```\n./scripts/technical-debt-metrics.sh pr_summary\n```\n* The `relative` value is the weighted *sum* of the differences with weight given by the *inverse* of the current value of the statistic.\n* The `absolute` value is the `relative` value divided by the total sum of the inverses of the current values (i.e. the weighted *average* of the differences).\n</details>",
              "createdAt": "2024-11-26T14:23:31Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6Vi5G-",
              "body": "Overall this looks very good and a lot of proofs got cleaner! Did you run your magic `erw -> rw` tool? I could imagine there is some potential.\r\n\r\nI hope you don't mind that I pushed some small changes to get rid of some more `erw`s.",
              "createdAt": "2024-11-30T12:48:55Z",
              "author": {
                "login": "chrisflav"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6Vi5Qw",
              "body": "I tried to add a test file similar to the one for `AlgebraCat`, but I am running into this:\r\n```\r\nimport Mathlib\r\nopen CategoryTheory ModuleCat\r\nvariable (R : Type u) [CommRing R]\r\n\r\n/-\r\nambiguous, possible interpretations \r\n  ↟f : of R X ⟶ of R Y\r\n  \r\n  ↾⇑f : X ⟶ Y\r\n-/\r\nexample {X Y : Type v} [AddCommGroup X] [Module R X] [AddCommGroup Y] [Module R Y] (f : X →ₗ[R] Y)\r\n    (x : X) : (asHom f) x = f x := by simp\r\n```\r\nDo you understand this?",
              "createdAt": "2024-11-30T12:51:23Z",
              "author": {
                "login": "chrisflav"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6Vmsj3",
              "body": "I think the testcase fails because there is also the definition [`CategoryTheory.asHom`](https://leanprover-community.github.io/mathlib4_docs/Mathlib/CategoryTheory/Types.html#CategoryTheory.asHom) which is `ModuleCat.asHom` but for the category of types. So we either apply `ModuleCat.asHom` and then coerce back to a function, or we coerce `f` to a function, apply `CategoryTheory.asHom` to make it a morphism, and then coerce it back to a plain function. And since both of the end results have the same types and applicability, Lean can't choose and throws an error.",
              "createdAt": "2024-12-01T16:28:55Z",
              "author": {
                "login": "Vierkantor"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6VrG8M",
              "body": "> I think the testcase fails because there is also the definition [`CategoryTheory.asHom`](https://leanprover-community.github.io/mathlib4_docs/Mathlib/CategoryTheory/Types.html#CategoryTheory.asHom) which is `ModuleCat.asHom` but for the category of types. So we either apply `ModuleCat.asHom` and then coerce back to a function, or we coerce `f` to a function, apply `CategoryTheory.asHom` to make it a morphism, and then coerce it back to a plain function. And since both of the end results have the same types and applicability, Lean can't choose and throws an error.\r\n\r\nAh, silly me, I didn't think of `CategoryTheory.asHom` and was not aware of the notation. Replacing the `asHom` with `ModuleCat.asHom` makes everything work.",
              "createdAt": "2024-12-02T10:11:42Z",
              "author": {
                "login": "chrisflav"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6VrIB7",
              "body": "I put the tests in 554ba6315ef, if you like them feel free to cherry-pick (or tell me to push it here).",
              "createdAt": "2024-12-02T10:13:40Z",
              "author": {
                "login": "chrisflav"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6VrItX",
              "body": "Thank you! Feel free to push your commit directly to this branch. :)",
              "createdAt": "2024-12-02T10:14:54Z",
              "author": {
                "login": "Vierkantor"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6VtqSX",
              "body": "> Overall this looks very good and a lot of proofs got cleaner! Did you run your magic `erw -> rw` tool? I could imagine there is some potential.\r\n> \r\n> I hope you don't mind that I pushed some small changes to get rid of some more `erw`s.\r\n\r\nI did run it on an earlier version of the branch, let me see if anything got cleared up in the meantime.\r\n\r\n(It should be as easy as merging the `try_this-erw` branch into the current branch, and then cherry-picking any of the warnings it produces.)",
              "createdAt": "2024-12-02T15:00:33Z",
              "author": {
                "login": "Vierkantor"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6VuArN",
              "body": "No free `erw` eliminations found on this branch, but I did find a few in other bits of Mathlib so time to make a little PR for that :D",
              "createdAt": "2024-12-02T15:34:55Z",
              "author": {
                "login": "Vierkantor"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6VuB5F",
              "body": "!bench",
              "createdAt": "2024-12-02T15:36:56Z",
              "author": {
                "login": "chrisflav"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6VuTG5",
              "body": "Here are the [benchmark results](http://speed.lean-fro.org/mathlib4/run-detail/698fc869-9376-4049-8627-f1c0e9b2896c) for commit 867bc8212c6d6651ab13f5153cb4748e2e73bd3d.\nThere were [significant changes](http://speed.lean-fro.org/mathlib4/compare/bcf67c94-f0d0-45cd-bab5-2518ad8d3eff/to/698fc869-9376-4049-8627-f1c0e9b2896c) against commit 7f28d7f73f74b31f72449bb9eb240db3ca68fe38:\n```diff\n  Benchmark                                                    Metric         Change\n  ==================================================================================\n- ~Mathlib.Algebra.Category.ModuleCat.Algebra                  instructions   227.7%\n- ~Mathlib.Algebra.Category.ModuleCat.Basic                    instructions    45.8%\n+ ~Mathlib.Algebra.Category.ModuleCat.ChangeOfRings            instructions   -28.9%\n- ~Mathlib.Algebra.Category.ModuleCat.Differentials.Presheaf   instructions    14.3%\n+ ~Mathlib.Algebra.Category.ModuleCat.Presheaf                 instructions   -17.1%\n- ~Mathlib.Algebra.Category.ModuleCat.Presheaf.ChangeOfRings   instructions    28.0%\n+ ~Mathlib.Algebra.Category.ModuleCat.Presheaf.Monoidal        instructions   -18.0%\n- ~Mathlib.Algebra.Category.ModuleCat.Presheaf.Pushforward     instructions    18.2%\n+ ~Mathlib.Algebra.Category.ModuleCat.Presheaf.Sheafify        instructions   -12.5%\n- ~Mathlib.Algebra.Category.ModuleCat.Sheaf.Colimits           instructions    61.2%\n- ~Mathlib.Algebra.Homology.ShortComplex.ModuleCat             instructions    66.2%\n- ~Mathlib.AlgebraicGeometry.Modules.Tilde                     instructions    25.4%\n+ ~Mathlib.CategoryTheory.Monoidal.Internal.Module             instructions    -9.3%\n- ~Mathlib.RepresentationTheory.Rep                            instructions    12.4%\n```",
              "createdAt": "2024-12-02T16:05:35Z",
              "author": {
                "login": "leanprover-bot"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6Vuf1G",
              "body": "Hmm, a very mixed result. The really big slowdowns were in files that had a lot of manual proofs replaced with automation, but still `Mathlib.Algebra.Category.ModuleCat.Sheaf.Colimits` +61.2% with no changed lines is scary. Let me see if I can discover what is slow...",
              "createdAt": "2024-12-02T16:15:48Z",
              "author": {
                "login": "Vierkantor"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6VunlK",
              "body": "The +227% one can be safely ignored, its a 60L file with one proof. Why do we not get the nice summary with all the instruction increases starting from 10^9? Does this mean, all of the changes are below that threshold? If yes, I think everything is fine.",
              "createdAt": "2024-12-02T16:19:59Z",
              "author": {
                "login": "chrisflav"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6VutBq",
              "body": "`Mathlib.Algebra.Category.ModuleCat.Sheaf.Colimits` is also a one-proof file. If I can trust `set_option trace.profiler true` somewhat, then it looks like elaboration of that proof takes slightly less than `50%` longer, and kernel typechecking twice as long. But there is no obvious change in the steps taken to get there, just a bit of slowdown at every level...\r\n",
              "createdAt": "2024-12-02T16:26:47Z",
              "author": {
                "login": "Vierkantor"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "65ffe2ba7712c9b086bfbdb1a984609fde259392",
                "additions": 917,
                "deletions": 817,
                "committedDate": "2024-11-26T14:19:11Z",
                "author": {
                  "name": "Anne C.A. Baanen",
                  "email": "vierkantor@vierkantor.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHz293Og",
                        "name": "Fix style issues from lint",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12032649238/job/33544959802"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHz2_fpg",
                        "name": "Fix style issues from lint",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12032657651/job/33544986534"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHz3IKfQ",
                        "name": "Fix style issues from lint",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12032700738/job/33545128573"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHz3JeAg",
                        "name": "Fix style issues from lint",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12032707455/job/33545149954"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHz3Or1g",
                        "name": "Fix style issues from lint",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12032733577/job/33545235414"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHz3R4-A",
                        "name": "Fix style issues from lint",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12032748817/job/33545287928"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHz3TxtA",
                        "name": "Fix style issues from lint",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12032758599/job/33545318836"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHz3UdRQ",
                        "name": "Fix style issues from lint",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12032762183/job/33545329989"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHz3VXyA",
                        "name": "Fix style issues from lint",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12032766481/job/33545344968"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHz3aFVA",
                        "name": "Fix style issues from lint",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12032789310/job/33545422164"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHz3bHpA",
                        "name": "Fix style issues from lint",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12032793599/job/33545439140"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHz3eTKA",
                        "name": "Fix style issues from lint",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12032808403/job/33545491240"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHz3fJBA",
                        "name": "Fix style issues from lint",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12032813017/job/33545505028"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHz3gomQ",
                        "name": "Fix style issues from lint",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12032819954/job/33545529497"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHz3hrLA",
                        "name": "Fix style issues from lint",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12032825497/job/33545546540"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH0iE44g",
                        "name": "Fix style issues from lint",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12047505069/job/33590163682"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHz21yog",
                        "name": "Lint style",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12032608354/job/33544827554"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHz291ig",
                        "name": "Add ready-to-merge or delegated label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12032649234/job/33544959370"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHz2_fFQ",
                        "name": "Add ready-to-merge or delegated label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12032657658/job/33544986389"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHz3IKcA",
                        "name": "Add ready-to-merge or delegated label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12032700724/job/33545128560"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHz3JeTA",
                        "name": "Add ready-to-merge or delegated label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12032707461/job/33545150028"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHz3OqKQ",
                        "name": "Add ready-to-merge or delegated label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12032733570/job/33545234985"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHz3R3Kg",
                        "name": "Add ready-to-merge or delegated label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12032748782/job/33545287466"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHz3Txug",
                        "name": "Add ready-to-merge or delegated label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12032758603/job/33545318842"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHz3Uc3A",
                        "name": "Add ready-to-merge or delegated label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12032762176/job/33545329884"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHz3VYhQ",
                        "name": "Add ready-to-merge or delegated label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12032766480/job/33545345157"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHz3aFTQ",
                        "name": "Add ready-to-merge or delegated label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12032789312/job/33545422157"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHz3bEuw",
                        "name": "Add ready-to-merge or delegated label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12032793588/job/33545438395"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHz3eU2g",
                        "name": "Add ready-to-merge or delegated label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12032808422/job/33545491674"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHz3fJHw",
                        "name": "Add ready-to-merge or delegated label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12032813047/job/33545505055"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHz3gqSg",
                        "name": "Add ready-to-merge or delegated label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12032819947/job/33545529930"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHz3hrPA",
                        "name": "Add ready-to-merge or delegated label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12032825517/job/33545546556"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH0iE4xA",
                        "name": "Add ready-to-merge or delegated label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12047505060/job/33590163652"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHz21zDA",
                        "name": "Add topic label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12032608357/job/33544827660"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHz21ypw",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12032608350/job/33544827559"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHz291rA",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12032649224/job/33544959404"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHz2_gNA",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12032657674/job/33544986676"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHz3IMvg",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12032700781/job/33545129150"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHz3Je6w",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12032707466/job/33545150187"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHz3OqCA",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12032733575/job/33545234952"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHz3R3tA",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12032748784/job/33545287604"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHz3TwLA",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12032758595/job/33545318444"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHz3UdcA",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12032762186/job/33545330032"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHz3VXfw",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12032766483/job/33545344895"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHz3aG3g",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12032789346/job/33545422558"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHz3bEgQ",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12032793569/job/33545438337"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHz3eTcg",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12032808417/job/33545491314"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHz3fIuQ",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12032813018/job/33545504953"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHz3gogg",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12032819950/job/33545529474"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHz3hrUA",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12032825506/job/33545546576"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH0iE59A",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12047505066/job/33590163956"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHz21yVQ",
                        "name": "post-or-update-summary-comment",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12032608346/job/33544827477"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHz20lYw",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12032601676/job/33544807779"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHz20nVg",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12032601673/job/33544808278"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHz20piA",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12032601676/job/33544808840"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHz210sw",
                        "name": "Check all files imported",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12032608354/job/33544828083"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHz20pQQ",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12032601673/job/33544808769"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHz20lLg",
                        "name": "Build",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12032601673/job/33544807726"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHz20ncw",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12032601676/job/33544808307"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHz20rsg",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12032601676/job/33544809394"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHz3CIqw",
                        "name": "Post-CI job",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12032601673/job/33545029803"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHz22cgQ",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/33544838273"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHz22qJg",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=19511&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "f5ac4c0be4697128204e8cd5b8a11458ae2c5434",
                "additions": 41,
                "deletions": 35,
                "committedDate": "2024-11-28T14:45:21Z",
                "author": {
                  "name": "Anne C.A. Baanen",
                  "email": "vierkantor@vierkantor.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH1mmA4A",
                        "name": "Lint style",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12071081964/job/33662009568"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH1ml-9A",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12071081906/job/33662009076"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH1ml-xw",
                        "name": "post-or-update-summary-comment",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12071081893/job/33662009031"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH1mlyQA",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12071080745/job/33662005824"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH1mlxCQ",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12071080676/job/33662005513"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH1mlzwg",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12071080745/job/33662006210"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH1mmCwQ",
                        "name": "Check all files imported",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12071081964/job/33662010049"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH1ml0JA",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12071080676/job/33662006308"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH1mlyjQ",
                        "name": "Build",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12071080676/job/33662005901"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH1ml1PQ",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12071080745/job/33662006589"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH1ml3HQ",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12071080745/job/33662007069"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH1mqfAg",
                        "name": "Post-CI job",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12071080676/job/33662082818"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH1mmiDg",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/33662018062"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH1mn5YQ",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=19511&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "8c1156e51da69984b1eeb3d6dfc96837bc7b254f",
                "additions": 115,
                "deletions": 60,
                "committedDate": "2024-11-28T16:17:55Z",
                "author": {
                  "name": "Anne C.A. Baanen",
                  "email": "vierkantor@vierkantor.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH1q40BQ",
                        "name": "Lint style",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12072470277/job/33666511877"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH1q4zjA",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12072470269/job/33666511756"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH1q4zyA",
                        "name": "post-or-update-summary-comment",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12072470273/job/33666511816"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH1q4ttA",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12072469773/job/33666510260"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH1q4wKA",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12072469771/job/33666510888"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH1q4u4A",
                        "name": "Lint style",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12072469771/job/33666510560"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH1q4wsg",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12072469773/job/33666511026"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH1q41OA",
                        "name": "Check all files imported",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12072470277/job/33666512184"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH1q4xFg",
                        "name": "Build",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12072469771/job/33666511126"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH1q4vJA",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12072469773/job/33666510628"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH1q4x6A",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12072469773/job/33666511336"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH1rUZIw",
                        "name": "Post-CI job",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12072469771/job/33666963747"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH1q5Org",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/33666518702"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH1q6OKw",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=19511&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "800d5269fd54f52c6f0394ea8f27b70504289268",
                "additions": 10,
                "deletions": 38,
                "committedDate": "2024-11-28T17:42:47Z",
                "author": {
                  "name": "Anne C.A. Baanen",
                  "email": "vierkantor@vierkantor.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH1uAQhQ",
                        "name": "Lint style",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12073522876/job/33669779589"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH1uAP1A",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12073522883/job/33669779412"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH1uAPfw",
                        "name": "post-or-update-summary-comment",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12073522873/job/33669779327"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH1uAMKA",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12073522485/job/33669778472"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH1uAL_Q",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12073522484/job/33669778429"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH1uALMQ",
                        "name": "Lint style",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12073522484/job/33669778225"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH1uAM5w",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12073522485/job/33669778663"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH1uAPng",
                        "name": "Check all files imported",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12073522876/job/33669779358"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH1uAM3Q",
                        "name": "Build",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12073522484/job/33669778653"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH1uALPw",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12073522485/job/33669778239"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH1uANvg",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12073522485/job/33669778878"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH1uQu0Q",
                        "name": "Post-CI job",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12073522484/job/33670049489"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH1uAgVg",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/33669783638"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH1uBGKg",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=19511&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "147f7a966e6b70958d20957fb86abceebc82e48d",
                "additions": 0,
                "deletions": 1,
                "committedDate": "2024-11-29T09:25:35Z",
                "author": {
                  "name": "Anne C.A. Baanen",
                  "email": "vierkantor@vierkantor.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "df747a794dfa9c08b1b868883391eae05c5e27ef",
                "additions": 10,
                "deletions": 12,
                "committedDate": "2024-11-29T09:42:57Z",
                "author": {
                  "name": "Anne C.A. Baanen",
                  "email": "vierkantor@vierkantor.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "7f2dd2c268d58fe052a0018fff6d698c517c54b2",
                "additions": 75,
                "deletions": 37,
                "committedDate": "2024-11-29T11:35:25Z",
                "author": {
                  "name": "Anne C.A. Baanen",
                  "email": "vierkantor@vierkantor.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "d76eed0f4d5f1a932f2c95c0b0d26902bc20286e",
                "additions": 27,
                "deletions": 43,
                "committedDate": "2024-11-29T11:35:34Z",
                "author": {
                  "name": "Anne C.A. Baanen",
                  "email": "vierkantor@vierkantor.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "c201fc2cba287bd1651fc2112dfc0015015c4c8d",
                "additions": 30,
                "deletions": 29,
                "committedDate": "2024-11-29T12:01:14Z",
                "author": {
                  "name": "Anne C.A. Baanen",
                  "email": "vierkantor@vierkantor.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH2KorzQ",
                        "name": "Fix style issues from lint",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12084493053/job/33699802061"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH2KSYZQ",
                        "name": "Lint style",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12084375542/job/33699436645"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH2KosGg",
                        "name": "Add ready-to-merge or delegated label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12084493052/job/33699802138"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH2KSW2g",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12084375534/job/33699436250"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH2Korlg",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12084493054/job/33699802006"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH2KSWuw",
                        "name": "post-or-update-summary-comment",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12084375536/job/33699436219"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH2KSSqg",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12084374920/job/33699435178"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH2KSSSQ",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12084374913/job/33699435081"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH2KST6Q",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12084374920/job/33699435497"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH2KSW2Q",
                        "name": "Check all files imported",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12084375542/job/33699436249"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH2KST_Q",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12084374913/job/33699435517"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH2KSREQ",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12084374920/job/33699434769"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH2KSQvQ",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12084374913/job/33699434685"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH2KSVCg",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12084374920/job/33699435786"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH2Kt7Uw",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12084374913/job/33699887955"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH2KS1KQ",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/33699444009"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH2KTvGg",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=19511&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "20866d9184de1589ae2eb80067e203791695c829",
                "additions": 47,
                "deletions": 61,
                "committedDate": "2024-11-29T12:40:13Z",
                "author": {
                  "name": "Anne C.A. Baanen",
                  "email": "vierkantor@vierkantor.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH2L9ZFg",
                        "name": "Fix style issues from lint",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12084952584/job/33701189910"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH2L9YaA",
                        "name": "Add ready-to-merge or delegated label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12084952587/job/33701189736"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH2L5gbg",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12084932244/job/33701126254"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH2L9ZGw",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12084952566/job/33701189915"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH2L5hjA",
                        "name": "post-or-update-summary-comment",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12084932257/job/33701126540"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH2L5bUQ",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12084931657/job/33701124945"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH2L5bZQ",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12084931658/job/33701124965"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH2L5hlQ",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12084932241/job/33701126549"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH2L5e8A",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12084931657/job/33701125872"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH2L5dlg",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12084931658/job/33701125526"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH2L5gyw",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12084932241/job/33701126347"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH2L5ciQ",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12084931657/job/33701125257"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH2L5chg",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12084931658/job/33701125254"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH2L5gCQ",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12084931657/job/33701126153"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH2MUiHA",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12084931658/job/33701569052"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH2L52Yg",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/33701131874"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH2L6u4g",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=19511&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "af19cc85fa6c39835df46e6a2223d2c74b3812b0",
                "additions": 10,
                "deletions": 10,
                "committedDate": "2024-11-30T12:45:16Z",
                "author": {
                  "name": "Christian Merten",
                  "email": "christian@merten.dev"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH2oPjng",
                        "name": "Fix style issues from lint",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12096493474/job/33730847646"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH2-Bsjg",
                        "name": "Fix style issues from lint",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12107133516/job/33753689230"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH2-ENWw",
                        "name": "Fix style issues from lint",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12107152282/job/33753730395"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH2oPjfA",
                        "name": "Add ready-to-merge or delegated label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12096493465/job/33730847612"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH2-Bsgg",
                        "name": "Add ready-to-merge or delegated label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12107133514/job/33753689218"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH2-EM6w",
                        "name": "Add ready-to-merge or delegated label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12107152281/job/33753730283"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH2oPgzA",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12096493128/job/33730846924"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH2oPjcA",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12096493469/job/33730847600"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH2-BsYA",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12107133515/job/33753689184"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH2-ENXA",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12107152279/job/33753730396"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH2oPg0Q",
                        "name": "post-or-update-summary-comment",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12096493127/job/33730846929"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH2oPeDg",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12096492840/job/33730846222"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH2oPehw",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12096492843/job/33730846343"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH2oPhLQ",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12096493135/job/33730847021"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH2oPecA",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12096492840/job/33730846320"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH2oPe1w",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12096492843/job/33730846423"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH2oPg9Q",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12096493135/job/33730846965"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH2oPexg",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12096492840/job/33730846406"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH2oPeMg",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12096492843/job/33730846258"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH2oPfLQ",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12096492840/job/33730846509"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH2oW_aA",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12096492843/job/33730969448"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH2oPotg",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/33730848950"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH2oP7DA",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=19511&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "d56283a21b3d8641c5b9ab479ee7e4ec41e9a42a",
                "additions": 53,
                "deletions": 0,
                "committedDate": "2024-12-02T10:16:15Z",
                "author": {
                  "name": "Christian Merten",
                  "email": "christian@merten.dev"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH3YH9nA",
                        "name": "Fix style issues from lint",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12117828209/job/33781054876"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH3YH8sg",
                        "name": "Add ready-to-merge or delegated label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12117828210/job/33781054642"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH3WR7Sg",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12117189051/job/33779120970"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH3YH8kQ",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12117828201/job/33781054609"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH3WR7DA",
                        "name": "post-or-update-summary-comment",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12117189060/job/33779120908"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH3WR2fw",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12117188426/job/33779119743"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH3WR3gQ",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12117188430/job/33779120001"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH3WR88g",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12117189068/job/33779121394"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH3WR5Lw",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12117188426/job/33779120431"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH3WR4uw",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12117188430/job/33779120315"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH3WR7ow",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12117189068/job/33779121059"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH3WR31w",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12117188426/job/33779120087"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH3WR2AA",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12117188430/job/33779119616"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH3WR6iA",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12117188426/job/33779120776"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH3WsW-A",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12117188430/job/33779554040"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH3WSTpQ",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/33779127205"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH3WTrjw",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=19511&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "656f2c399719cb3148a978cd9a359f250d060f9d",
                "additions": 3,
                "deletions": 1,
                "committedDate": "2024-12-02T12:21:14Z",
                "author": {
                  "name": "Anne C.A. Baanen",
                  "email": "vierkantor@vierkantor.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "d34a272d1875268d9c74f8075f2945fb116dbfac",
                "additions": 11,
                "deletions": 11,
                "committedDate": "2024-12-02T12:21:33Z",
                "author": {
                  "name": "Anne C.A. Baanen",
                  "email": "vierkantor@vierkantor.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "867bc8212c6d6651ab13f5153cb4748e2e73bd3d",
                "additions": 7,
                "deletions": 4,
                "committedDate": "2024-12-02T12:24:55Z",
                "author": {
                  "name": "Anne C.A. Baanen",
                  "email": "vierkantor@vierkantor.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH3kn4wg",
                        "name": "Fix style issues from lint",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12121990995/job/33794160834"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH3kn27w",
                        "name": "Add ready-to-merge or delegated label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12121990992/job/33794160367"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH3cbMKA",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12119293808/job/33785564200"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH3kn2zw",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12121991005/job/33794160335"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH3cbMOw",
                        "name": "post-or-update-summary-comment",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12119293824/job/33785564219"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH3cbHHQ",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12119293238/job/33785562909"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH3cbHIw",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12119293236/job/33785562915"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH3cbNgA",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12119293806/job/33785564544"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH3cbIYA",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12119293238/job/33785563232"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH3cbIZw",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12119293236/job/33785563239"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH3cbMRg",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12119293806/job/33785564230"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH3cbJjA",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12119293238/job/33785563532"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH3cbJbg",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12119293236/job/33785563502"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH3cbKug",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12119293238/job/33785563834"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH3c7uhg",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12119293236/job/33786097286"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH3cblWw",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/33785570651"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH3ccmFg",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=19511&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            }
          ]
        },
        "createdAt": "2024-11-26T14:22:42Z",
        "deletions": 1026,
        "files": {
          "nodes": [
            {
              "path": "Counterexamples/Pseudoelement.lean",
              "additions": 10,
              "deletions": 12
            },
            {
              "path": "Mathlib/Algebra/Category/AlgebraCat/Basic.lean",
              "additions": 2,
              "deletions": 1
            },
            {
              "path": "Mathlib/Algebra/Category/AlgebraCat/Monoidal.lean",
              "additions": 4,
              "deletions": 3
            },
            {
              "path": "Mathlib/Algebra/Category/CoalgebraCat/Basic.lean",
              "additions": 5,
              "deletions": 4
            },
            {
              "path": "Mathlib/Algebra/Category/CoalgebraCat/ComonEquivalence.lean",
              "additions": 18,
              "deletions": 18
            },
            {
              "path": "Mathlib/Algebra/Category/CoalgebraCat/Monoidal.lean",
              "additions": 3,
              "deletions": 3
            },
            {
              "path": "Mathlib/Algebra/Category/FGModuleCat/Basic.lean",
              "additions": 43,
              "deletions": 22
            },
            {
              "path": "Mathlib/Algebra/Category/FGModuleCat/Limits.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Algebra/Category/Grp/Injective.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Algebra/Category/Grp/ZModuleEquivalence.lean",
              "additions": 7,
              "deletions": 6
            },
            {
              "path": "Mathlib/Algebra/Category/ModuleCat/Abelian.lean",
              "additions": 10,
              "deletions": 10
            },
            {
              "path": "Mathlib/Algebra/Category/ModuleCat/Adjunctions.lean",
              "additions": 9,
              "deletions": 10
            },
            {
              "path": "Mathlib/Algebra/Category/ModuleCat/Algebra.lean",
              "additions": 2,
              "deletions": 11
            },
            {
              "path": "Mathlib/Algebra/Category/ModuleCat/Basic.lean",
              "additions": 250,
              "deletions": 123
            },
            {
              "path": "Mathlib/Algebra/Category/ModuleCat/Biproducts.lean",
              "additions": 22,
              "deletions": 20
            },
            {
              "path": "Mathlib/Algebra/Category/ModuleCat/ChangeOfRings.lean",
              "additions": 178,
              "deletions": 203
            },
            {
              "path": "Mathlib/Algebra/Category/ModuleCat/Differentials/Basic.lean",
              "additions": 5,
              "deletions": 3
            },
            {
              "path": "Mathlib/Algebra/Category/ModuleCat/Differentials/Presheaf.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Algebra/Category/ModuleCat/EpiMono.lean",
              "additions": 11,
              "deletions": 9
            },
            {
              "path": "Mathlib/Algebra/Category/ModuleCat/FilteredColimits.lean",
              "additions": 10,
              "deletions": 7
            },
            {
              "path": "Mathlib/Algebra/Category/ModuleCat/Free.lean",
              "additions": 6,
              "deletions": 6
            },
            {
              "path": "Mathlib/Algebra/Category/ModuleCat/Images.lean",
              "additions": 23,
              "deletions": 22
            },
            {
              "path": "Mathlib/Algebra/Category/ModuleCat/Injective.lean",
              "additions": 5,
              "deletions": 4
            },
            {
              "path": "Mathlib/Algebra/Category/ModuleCat/Kernels.lean",
              "additions": 20,
              "deletions": 22
            },
            {
              "path": "Mathlib/Algebra/Category/ModuleCat/Limits.lean",
              "additions": 16,
              "deletions": 22
            },
            {
              "path": "Mathlib/Algebra/Category/ModuleCat/Monoidal/Basic.lean",
              "additions": 44,
              "deletions": 70
            },
            {
              "path": "Mathlib/Algebra/Category/ModuleCat/Monoidal/Closed.lean",
              "additions": 13,
              "deletions": 15
            },
            {
              "path": "Mathlib/Algebra/Category/ModuleCat/Monoidal/Symmetric.lean",
              "additions": 6,
              "deletions": 2
            },
            {
              "path": "Mathlib/Algebra/Category/ModuleCat/Presheaf.lean",
              "additions": 33,
              "deletions": 34
            },
            {
              "path": "Mathlib/Algebra/Category/ModuleCat/Presheaf/ChangeOfRings.lean",
              "additions": 4,
              "deletions": 1
            },
            {
              "path": "Mathlib/Algebra/Category/ModuleCat/Presheaf/Monoidal.lean",
              "additions": 4,
              "deletions": 6
            },
            {
              "path": "Mathlib/Algebra/Category/ModuleCat/Presheaf/Pushforward.lean",
              "additions": 23,
              "deletions": 12
            },
            {
              "path": "Mathlib/Algebra/Category/ModuleCat/Presheaf/Sheafify.lean",
              "additions": 8,
              "deletions": 4
            },
            {
              "path": "Mathlib/Algebra/Category/ModuleCat/Products.lean",
              "additions": 6,
              "deletions": 8
            },
            {
              "path": "Mathlib/Algebra/Category/ModuleCat/Projective.lean",
              "additions": 8,
              "deletions": 11
            },
            {
              "path": "Mathlib/Algebra/Category/ModuleCat/Sheaf.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Algebra/Category/ModuleCat/Sheaf/ChangeOfRings.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Algebra/Category/ModuleCat/Subobject.lean",
              "additions": 21,
              "deletions": 25
            },
            {
              "path": "Mathlib/Algebra/Category/ModuleCat/Tannaka.lean",
              "additions": 6,
              "deletions": 9
            },
            {
              "path": "Mathlib/Algebra/Homology/LocalCohomology.lean",
              "additions": 1,
              "deletions": 3
            },
            {
              "path": "Mathlib/Algebra/Homology/ShortComplex/ModuleCat.lean",
              "additions": 23,
              "deletions": 46
            },
            {
              "path": "Mathlib/AlgebraicGeometry/AffineSpace.lean",
              "additions": 1,
              "deletions": 3
            },
            {
              "path": "Mathlib/AlgebraicGeometry/Modules/Tilde.lean",
              "additions": 41,
              "deletions": 27
            },
            {
              "path": "Mathlib/CategoryTheory/Abelian/Pseudoelements.lean",
              "additions": 6,
              "deletions": 6
            },
            {
              "path": "Mathlib/CategoryTheory/Limits/ConcreteCategory/WithAlgebraicStructures.lean",
              "additions": 26,
              "deletions": 20
            },
            {
              "path": "Mathlib/CategoryTheory/Monoidal/Internal/Module.lean",
              "additions": 43,
              "deletions": 39
            },
            {
              "path": "Mathlib/Condensed/Discrete/Module.lean",
              "additions": 6,
              "deletions": 6
            },
            {
              "path": "Mathlib/LinearAlgebra/QuadraticForm/QuadraticModuleCat.lean",
              "additions": 6,
              "deletions": 4
            },
            {
              "path": "Mathlib/RepresentationTheory/Character.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/RepresentationTheory/FDRep.lean",
              "additions": 21,
              "deletions": 7
            },
            {
              "path": "Mathlib/RepresentationTheory/GroupCohomology/Basic.lean",
              "additions": 22,
              "deletions": 12
            },
            {
              "path": "Mathlib/RepresentationTheory/GroupCohomology/LowDegree.lean",
              "additions": 19,
              "deletions": 15
            },
            {
              "path": "Mathlib/RepresentationTheory/GroupCohomology/Resolution.lean",
              "additions": 15,
              "deletions": 16
            },
            {
              "path": "Mathlib/RepresentationTheory/Invariants.lean",
              "additions": 9,
              "deletions": 5
            },
            {
              "path": "Mathlib/RepresentationTheory/Rep.lean",
              "additions": 71,
              "deletions": 54
            },
            {
              "path": "Mathlib/RingTheory/AdicCompletion/AsTensorProduct.lean",
              "additions": 8,
              "deletions": 8
            },
            {
              "path": "Mathlib/RingTheory/Coalgebra/TensorProduct.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/RingTheory/Flat/CategoryTheory.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Topology/Category/Profinite/Nobeling.lean",
              "additions": 3,
              "deletions": 3
            },
            {
              "path": "MathlibTest/CategoryTheory/ConcreteCategory/ModuleCat.lean",
              "additions": 53,
              "deletions": 0
            }
          ]
        },
        "headRefName": "ModuleCat-Hom-structure",
        "headRefOid": "867bc8212c6d6651ab13f5153cb4748e2e73bd3d",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c6DMmuE",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
              "color": "f99094",
              "name": "merge-conflict"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABViJTYQ",
              "color": "33dbec",
              "name": "t-category-theory"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABwbfWPw",
              "color": "B60205",
              "name": "large-import"
            }
          ]
        },
        "latestReviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c6TXWhm",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "chrisflav"
              },
              "submittedAt": "2024-12-02T10:53:55Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6S5Min",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "jcommelin"
              },
              "submittedAt": "2024-11-27T09:35:01Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6TgJZj",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "kim-em"
              },
              "submittedAt": "2024-12-03T06:15:05Z"
            }
          ]
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "UNKNOWN",
        "mergeable": "UNKNOWN",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 19511,
        "potentialMergeCommit": null,
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": null,
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c6Sun7z",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "Vierkantor"
              },
              "submittedAt": "2024-11-26T14:24:53Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6SuoPm",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "Vierkantor"
              },
              "submittedAt": "2024-11-26T14:25:19Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6Supww",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "Vierkantor"
              },
              "submittedAt": "2024-11-26T14:27:34Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6Sup_-",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "Vierkantor"
              },
              "submittedAt": "2024-11-26T14:27:55Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6Suq9V",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "Vierkantor"
              },
              "submittedAt": "2024-11-26T14:29:17Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6Surim",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "Vierkantor"
              },
              "submittedAt": "2024-11-26T14:30:08Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6Sur32",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "Vierkantor"
              },
              "submittedAt": "2024-11-26T14:30:38Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6SusAk",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "Vierkantor"
              },
              "submittedAt": "2024-11-26T14:30:50Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6SusK7",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "Vierkantor"
              },
              "submittedAt": "2024-11-26T14:31:04Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6SutCB",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "Vierkantor"
              },
              "submittedAt": "2024-11-26T14:32:20Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6SutMt",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "Vierkantor"
              },
              "submittedAt": "2024-11-26T14:32:36Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6SutwY",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "Vierkantor"
              },
              "submittedAt": "2024-11-26T14:33:25Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6Sut6K",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "Vierkantor"
              },
              "submittedAt": "2024-11-26T14:33:38Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6SuuLK",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "Vierkantor"
              },
              "submittedAt": "2024-11-26T14:34:02Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6SuuXg",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "Vierkantor"
              },
              "submittedAt": "2024-11-26T14:34:19Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6S5Min",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "jcommelin"
              },
              "submittedAt": "2024-11-27T09:35:01Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6TNc8B",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "Vierkantor"
              },
              "submittedAt": "2024-11-29T12:09:47Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6TNrf8",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "Vierkantor"
              },
              "submittedAt": "2024-11-29T12:42:09Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6TRtJz",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "chrisflav"
              },
              "submittedAt": "2024-11-30T12:45:56Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6TT3XZ",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "Vierkantor"
              },
              "submittedAt": "2024-12-01T16:22:54Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6TT3el",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "Vierkantor"
              },
              "submittedAt": "2024-12-01T16:25:39Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6TXWhm",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "chrisflav"
              },
              "submittedAt": "2024-12-02T10:53:55Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6TZiwE",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "Vierkantor"
              },
              "submittedAt": "2024-12-02T14:58:32Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6Tf0QX",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "kim-em"
              },
              "submittedAt": "2024-12-03T05:07:13Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6Tf0fK",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "kim-em"
              },
              "submittedAt": "2024-12-03T05:07:49Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6Tf0_9",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "kim-em"
              },
              "submittedAt": "2024-12-03T05:09:21Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6Tf1Sq",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "kim-em"
              },
              "submittedAt": "2024-12-03T05:10:41Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6Tf1lG",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "kim-em"
              },
              "submittedAt": "2024-12-03T05:11:45Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6Tf18c",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "kim-em"
              },
              "submittedAt": "2024-12-03T05:12:33Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6Tf2L3",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "kim-em"
              },
              "submittedAt": "2024-12-03T05:13:31Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6Tf2VB",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "kim-em"
              },
              "submittedAt": "2024-12-03T05:14:01Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6Tf3Xw",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "kim-em"
              },
              "submittedAt": "2024-12-03T05:16:46Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6Tf3fa",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "kim-em"
              },
              "submittedAt": "2024-12-03T05:17:09Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6Tf3kd",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "kim-em"
              },
              "submittedAt": "2024-12-03T05:17:28Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6Tf43i",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "kim-em"
              },
              "submittedAt": "2024-12-03T05:22:15Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6Tf9OV",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "kim-em"
              },
              "submittedAt": "2024-12-03T05:38:50Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6TgF2s",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "kim-em"
              },
              "submittedAt": "2024-12-03T06:07:06Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6TgItb",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "kim-em"
              },
              "submittedAt": "2024-12-03T06:13:15Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6TgJZj",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "kim-em"
              },
              "submittedAt": "2024-12-03T06:15:05Z"
            }
          ]
        },
        "reviewThreads": {
          "nodes": [
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5uyIzG",
                    "body": "This instance causes downstream issues in `Mathlib/Algebra/Category/ModuleCat/Presheaf/Pushforward.lean:40`, where the synthesized instance does not equal the one obtained by unification.",
                    "createdAt": "2024-11-26T14:24:53Z",
                    "author": {
                      "login": "Vierkantor"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5uyI-O",
                    "body": "Having to type-ascribe `asHom` suggests there is some defeq abuse going on.",
                    "createdAt": "2024-11-26T14:25:19Z",
                    "author": {
                      "login": "Vierkantor"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5uyJ6_",
                    "body": "The `@[simps]` lemma generated here has the wrong type, but if we type-ascript `asHom` to give it the right type, then the proofs in this definition breaks.",
                    "createdAt": "2024-11-26T14:27:34Z",
                    "author": {
                      "login": "Vierkantor"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5uyKEC",
                    "body": "More signs of defeq abuse.",
                    "createdAt": "2024-11-26T14:27:55Z",
                    "author": {
                      "login": "Vierkantor"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5uyKq9",
                    "body": "This should be defeq now to `asHom`. Can we safely replace it? (i.e. deprecated alias it)",
                    "createdAt": "2024-11-26T14:29:17Z",
                    "author": {
                      "login": "Vierkantor"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5uyLA5",
                    "body": "This feels like there is some categorical definition already, but I couldn't find it (without searching very hard).",
                    "createdAt": "2024-11-26T14:30:08Z",
                    "author": {
                      "login": "Vierkantor"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5uyLOI",
                    "body": "We should really fix the issue that makes `TensorProduct.ext'` not apply using the `ext` tactic...",
                    "createdAt": "2024-11-26T14:30:38Z",
                    "author": {
                      "login": "Vierkantor"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5vHe3d",
                    "body": "Agreed, but a problem for another day :)",
                    "createdAt": "2024-11-30T11:59:23Z",
                    "author": {
                      "login": "chrisflav"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5uyLT9",
                    "body": "More defeq issues.",
                    "createdAt": "2024-11-26T14:30:50Z",
                    "author": {
                      "login": "Vierkantor"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5uyLap",
                    "body": "More defeq issues...",
                    "createdAt": "2024-11-26T14:31:04Z",
                    "author": {
                      "login": "Vierkantor"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5uyL-O",
                    "body": "This suggests `colimit_no_zero_smul_divisor` is not phrased correctly.",
                    "createdAt": "2024-11-26T14:32:20Z",
                    "author": {
                      "login": "Vierkantor"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5uyMEj",
                    "body": "Also some errors downstream of this that I haven't figured out.",
                    "createdAt": "2024-11-26T14:32:36Z",
                    "author": {
                      "login": "Vierkantor"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5uyMZJ",
                    "body": "This proof got uglier, not sure what the concrete cause is.",
                    "createdAt": "2024-11-26T14:33:25Z",
                    "author": {
                      "login": "Vierkantor"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5vEbPt",
                    "body": "I tried a few things and it seems there was already a lot of defeq abuse that got exposed now.",
                    "createdAt": "2024-11-29T12:09:47Z",
                    "author": {
                      "login": "Vierkantor"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5uyMf8",
                    "body": "This proof got a lot uglier, not sure what the concrete cause is.",
                    "createdAt": "2024-11-26T14:33:38Z",
                    "author": {
                      "login": "Vierkantor"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5uyMqp",
                    "body": "Should probably be moved to `ModuleCat/Basic.lean`, if that has the right imports.",
                    "createdAt": "2024-11-26T14:34:01Z",
                    "author": {
                      "login": "Vierkantor"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5uyMyl",
                    "body": "Is there a categorical name for this thing?",
                    "createdAt": "2024-11-26T14:34:19Z",
                    "author": {
                      "login": "Vierkantor"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5u4jDg",
                    "body": "It seems to me like this should work for endomorphism monoids in any `bundled` category.",
                    "createdAt": "2024-11-27T09:35:01Z",
                    "author": {
                      "login": "jcommelin"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5vElLG",
                    "body": "This is the major regression of this PR: we needed to specialize these results because there is no longer a good way to say for `ModuleCat` that all its homs are linear maps.",
                    "createdAt": "2024-11-29T12:42:09Z",
                    "author": {
                      "login": "Vierkantor"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5vHeMo",
                    "body": "I think this should be called `ofHom` to align with the other concrete categories, but the diff of this PR is already large enough so I am fine with leaving this to a follow-up.",
                    "createdAt": "2024-11-30T11:47:55Z",
                    "author": {
                      "login": "chrisflav"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5vKM09",
                    "body": "Yeah, I was very unsure which convention to follow: existing `ModuleCat.asHom` usage or consistency with the other categories. It's kind of funny that a couple months ago the deprecated alias was `ofHom` and now we want it to be exactly the opposite. :)",
                    "createdAt": "2024-12-01T16:22:54Z",
                    "author": {
                      "login": "Vierkantor"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5vHeSk",
                    "body": "Here `V W : FGModuleCat R`, but I think this should take `V W : Type u` with `Module R V` etc.",
                    "createdAt": "2024-11-30T11:49:08Z",
                    "author": {
                      "login": "chrisflav"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5vHecT",
                    "body": "```suggestion\r\n@[simps]\r\ndef endMulEquiv : End M ≃* (M →ₗ[R] M) where\r\n  toFun := ModuleCat.Hom.hom\r\n```\r\nmaybe?",
                    "createdAt": "2024-11-30T11:52:10Z",
                    "author": {
                      "login": "chrisflav"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5vHey0",
                    "body": "This makes me happy :)",
                    "createdAt": "2024-11-30T11:57:37Z",
                    "author": {
                      "login": "chrisflav"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5vHfNZ",
                    "body": "What's going on here?",
                    "createdAt": "2024-11-30T12:04:55Z",
                    "author": {
                      "login": "chrisflav"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5vHhDr",
                    "body": "Ah I suppose this is related to the def-eq abuse you mention in the PR description concerning `ModuleCat.restrictScalars` right?",
                    "createdAt": "2024-11-30T12:37:04Z",
                    "author": {
                      "login": "chrisflav"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5vKNDJ",
                    "body": "It's a bit more complicated but basically yes: we have that the codomain of `((toSheafify α φ).app X).hom` would by default be inferred as some object which is only definitionally equal to `(ModuleCat.restrictScalars (α.app X)).obj _))`. And these definitional equalities are `dsimp` lemmas so they do get applied before `toSheafify_app_apply` (which therefore would never get applied since it looks like it has the wrong type).\r\n\r\nOne idea I just had: maybe specify `no_index` instead of writing out the expected type tediously?",
                    "createdAt": "2024-12-01T16:25:39Z",
                    "author": {
                      "login": "Vierkantor"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5vM2lT",
                    "body": "Yes `no_index` works here",
                    "createdAt": "2024-12-02T10:53:55Z",
                    "author": {
                      "login": "chrisflav"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5vOPct",
                    "body": "So playing around with `no_index` for a while, I suspect that the `simp_nf` linter doesn't actually pick up on that correctly. In any case, I think the fault lies more with the simp lemmas applying to objects, making things non-reducibly defeq. (That's the other main source of `erw`s I found.) But that's a problem throughout the library and not something I feel comfortable tackling here.",
                    "createdAt": "2024-12-02T14:58:32Z",
                    "author": {
                      "login": "Vierkantor"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5vHfUM",
                    "body": "I think `simp; rfl` is considered potentially unstable?",
                    "createdAt": "2024-11-30T12:07:38Z",
                    "author": {
                      "login": "chrisflav"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5vHgi4",
                    "body": "```suggestion\r\n    erw [LinearEquiv.symm_apply_apply, this]\r\n    simp only [LinearMap.zero_apply, ChainComplex.linearYonedaObj_X, linearYoneda_obj_obj_carrier,\r\n      map_zero, Pi.zero_apply, LinearMap.zero_apply]\r\n    rfl\r\n```\r\nmaybe slightly better?",
                    "createdAt": "2024-11-30T12:26:58Z",
                    "author": {
                      "login": "chrisflav"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5vSRP4",
                    "body": "Should this also be `@[simp]`? If not, let's leave a comment in place explaining why.",
                    "createdAt": "2024-12-03T05:07:13Z",
                    "author": {
                      "login": "kim-em"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5vSRUv",
                    "body": "Similarly here, either `@[simp]` or explain why it's not a good idea.",
                    "createdAt": "2024-12-03T05:07:49Z",
                    "author": {
                      "login": "kim-em"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5vSRml",
                    "body": "I think indeed these shouldn't be `simp`, but let's say so.",
                    "createdAt": "2024-12-03T05:09:21Z",
                    "author": {
                      "login": "kim-em"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5vSR0G",
                    "body": "These are implicitly deprecated, right? Let's write something in the doc-string.",
                    "createdAt": "2024-12-03T05:10:41Z",
                    "author": {
                      "login": "kim-em"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5vSSAk",
                    "body": "```suggestion\r\n@[simp] lemma hom_smul (s : S) (f : M ⟶ N) : (s • f).hom = s • f.hom := rfl\r\n```",
                    "createdAt": "2024-12-03T05:11:45Z",
                    "author": {
                      "login": "kim-em"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5vSSKT",
                    "body": "Should we just separately have `hom_injective`? Seems convenient.",
                    "createdAt": "2024-12-03T05:12:33Z",
                    "author": {
                      "login": "kim-em"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5vSSV2",
                    "body": "This needs `simp` lemmas.",
                    "createdAt": "2024-12-03T05:13:30Z",
                    "author": {
                      "login": "kim-em"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5vSSaU",
                    "body": "Should we separately have a `homAddEquiv`, before assuming the smul structure?",
                    "createdAt": "2024-12-03T05:14:01Z",
                    "author": {
                      "login": "kim-em"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5vSTKN",
                    "body": "Maybe this can just be a note for later, but I guess we could generalize this with an SMulCommClass, to `M : ModuleCat S`, `N P : ModuleCat R`.",
                    "createdAt": "2024-12-03T05:16:46Z",
                    "author": {
                      "login": "kim-em"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5vSTPq",
                    "body": "Can we not write this with the categorical arrow?",
                    "createdAt": "2024-12-03T05:17:09Z",
                    "author": {
                      "login": "kim-em"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5vSTTU",
                    "body": "Other direction?",
                    "createdAt": "2024-12-03T05:17:28Z",
                    "author": {
                      "login": "kim-em"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5vSUK2",
                    "body": "Nice!",
                    "createdAt": "2024-12-03T05:22:15Z",
                    "author": {
                      "login": "kim-em"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5vSW1F",
                    "body": "The goal after `simp` here is \r\n```\r\n(cokernel.π g).hom (g.hom ((factorThruImageSubobject f).hom l)) = 0\r\n```\r\nI think we should just have a simp lemma for `(cokernel.π g).hom (g.hom x) = 0`, called something like `ModuleCat.Hom.cokernel_condition`.\r\n\r\nIdeally we'd have some tactic help, e.g. like `@[elementwise]`, but for now we should just write these at the point we set up cokernels.\r\n\r\nWe might also think (by introducing a level of indirection to `ModuleCat.Hom.hom`?) about how we could write a single simp lemma that would apply `cokernel_condition` to all of its different concrete versions.\r\n\r\n",
                    "createdAt": "2024-12-03T05:38:50Z",
                    "author": {
                      "login": "kim-em"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5vScLE",
                    "body": "Having to write out the source and target so often doesn't seem fun. :-(\r\n\r\nAt very least we should leave some comments on the places this is necessary, reminding us to come back.\r\n\r\nI wonder if having a variant of `asHom` here, that took as input a semilinear map (twisted by `(Spec (CommRingCat.of R)).ringCatSheaf.val.map i`), could producing something that would typecheck more easily... Not sure yet.",
                    "createdAt": "2024-12-03T06:07:06Z",
                    "author": {
                      "login": "kim-em"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5vSdun",
                    "body": "Something like\r\n```\r\ndef tildeInTypeLinearMap {U V : (Opens (PrimeSpectrum.Top R))ᵒᵖ} (i : U ⟶ V) :\r\n    (M.tildeInType.1.obj U) →ₛₗ[(Spec (CommRingCat.of R)).ringCatSheaf.val.map i] \r\n        (of ((Spec (.of R)).ringCatSheaf.1.obj V) (M.tildeInType.1.obj V)) :=\r\n  { toFun := M.tildeInType.val.map i\r\n    map_smul' := by intros; rfl\r\n    map_add' := by intros; rfl } \r\n\r\ndef asHomRestrictScalars {M N : Type u} {R S : Type*} [Ring R] [Ring S] (σ : R →+* S)\r\n    [AddCommGroup M] [Module R M] [AddCommGroup N] [Module S N] \r\n    (f : M →ₛₗ[σ] N) :\r\n    ModuleCat.of R M ⟶ (restrictScalars σ).obj (ModuleCat.of S N) :=\r\n  sorry\r\n\r\n/--\r\n`M^~` as a sheaf of `𝒪_{Spec R}`-modules\r\n-/\r\nnoncomputable def tilde : (Spec (CommRingCat.of R)).Modules where\r\n  val :=\r\n    { obj := fun U ↦ ModuleCat.of _ (M.tildeInType.val.obj U)\r\n      map := fun {U V} i ↦ \r\n        asHomRestrictScalars ((Spec (CommRingCat.of R)).ringCatSheaf.val.map i) (tildeInTypeLinearMap M i)\r\n      map_id := sorry\r\n      map_comp := sorry }\r\n  isSheaf := (TopCat.Presheaf.isSheaf_iff_isSheaf_comp (forget AddCommGrp) _ ).2\r\n    M.tildeInType.2\r\n```",
                    "createdAt": "2024-12-03T06:13:15Z",
                    "author": {
                      "login": "kim-em"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5vSeEC",
                    "body": "Why is `restrictScalars` printing with a `coe` arrow?? That is really unhelpful. :-)",
                    "createdAt": "2024-12-03T06:15:05Z",
                    "author": {
                      "login": "kim-em"
                    }
                  }
                ]
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjIxMTY1NzA=",
              "login": "Vierkantor"
            },
            {
              "id": "U_kgDOCB8vYg",
              "login": "chrisflav"
            },
            {
              "id": "MDQ6VXNlcjg1NjY4Mzk0",
              "login": "leanprover-bot"
            },
            {
              "id": "MDQ6VXNlcjQ3Nzk1Ng==",
              "login": "kim-em"
            },
            {
              "id": "MDQ6VXNlcjU2MzY3MDU=",
              "login": "jcommelin"
            },
            {
              "id": "MDQ6VXNlcjM3NzcyOTQ5",
              "login": "joelriou"
            },
            {
              "id": "U_kgDOBcsTTQ",
              "login": "leanprover-community-bot-assistant"
            }
          ]
        },
        "state": "OPEN",
        "statusCheckRollup": {
          "contexts": {
            "nodes": [
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAH3kn4wg",
                "name": "Fix style issues from lint",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12121990995/job/33794160834"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAH3kn27w",
                "name": "Add ready-to-merge or delegated label",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12121990992/job/33794160367"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAH3cbMKA",
                "name": "label-and-report-new-contributor",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12119293808/job/33785564200"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAH3kn2zw",
                "name": "Ping maintainers on Zulip",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12121991005/job/33794160335"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAH3cbMOw",
                "name": "post-or-update-summary-comment",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12119293824/job/33785564219"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAH3cbHHQ",
                "name": "Cancel Previous Runs (CI)",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12119293238/job/33785562909"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAH3cbHIw",
                "name": "Cancel Previous Runs (CI)",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12119293236/job/33785562915"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAH3cbNgA",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12119293806/job/33785564544"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAH3cbIYA",
                "name": "Lint style (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12119293238/job/33785563232"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAH3cbIZw",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12119293236/job/33785563239"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAH3cbMRg",
                "name": "Check all files imported",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12119293806/job/33785564230"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAH3cbJjA",
                "name": "Build (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12119293238/job/33785563532"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAH3cbJbg",
                "name": "Build",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12119293236/job/33785563502"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAH3cbKug",
                "name": "Post-CI job (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12119293238/job/33785563834"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAH3c7uhg",
                "name": "Post-CI job",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12119293236/job/33786097286"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAH3cblWw",
                "name": "New Contributor Check",
                "conclusion": "NEUTRAL",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/33785570651"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAH3ccmFg",
                "name": "Summary",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=19511&login=leanprover-community&repository=mathlib4"
              }
            ]
          }
        },
        "title": "refactor(Algebra/Category/ModuleCat): make `ModuleCat.Hom` a structure",
        "updatedAt": "2024-12-03T06:15:05Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/19511",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6VEUNf",
              "createdAt": "2024-11-26T14:23:31Z",
              "body": "### PR summary [867bc8212c](https://github.com/leanprover-community/mathlib4/pull/19511/commits/867bc8212c6d6651ab13f5153cb4748e2e73bd3d)\n\nImport changes exceeding 2%\n\n| %      | File |\n| -      | -    |\n| +18.95% | `Mathlib.CategoryTheory.Limits.ConcreteCategory.WithAlgebraicStructures` |\n\n<details><summary>\n\n#### Import changes for modified files\n\n</summary>\n\nDependency changes\n\n| File | Base Count | Head Count | Change |\n| --- | --- | --- | --- |\n| Mathlib.CategoryTheory.Limits.ConcreteCategory.WithAlgebraicStructures | 612 | 728 | +116 (+18.95%) |\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n| `Mathlib.CategoryTheory.Limits.ConcreteCategory.WithAlgebraicStructures`|116|\n\n</details>\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ FGModuleCatEvaluation_apply'`\n`+ Hom`\n`+ Hom.hom₂`\n`+ Hom.hom₂_asHom₂`\n`+ Hom.instModule`\n`+ HomEquiv.fromRestriction_hom_apply_apply`\n`+ HomEquiv.toRestriction_hom_apply`\n`+ Iso.conj_hom_eq_conj`\n`+ asHom`\n`+ asHom_apply`\n`+ asHom_comp`\n`+ asHom_hom`\n`+ asHom_id`\n`+ asHom_ρ`\n`+ asHom₂`\n`+ asHom₂_compr₂`\n`+ comp_apply`\n`+ endMulEquiv`\n`+ endMulEquiv_comp_ρ`\n`+ endMulEquiv_symm_comp_ρ`\n`+ forget_obj`\n`+ homEquiv`\n`+ homLinearEquiv`\n`+ hom_action_ρ`\n`+ hom_add`\n`+ hom_asHom`\n`+ hom_bijective`\n`+ hom_comp`\n`+ hom_id`\n`+ hom_inv_apply`\n`+ hom_neg`\n`+ hom_nsmul`\n`+ hom_smul`\n`+ hom_sub`\n`+ hom_sum`\n`+ hom_zero`\n`+ hom_zsmul`\n`+ instance : Add (M ⟶ N)`\n`+ instance : AddCommGroup (M ⟶ N)`\n`+ instance : CoeFun (obj' f M) fun _ => S → M`\n`+ instance : Inhabited (ModuleCat R)`\n`+ instance : Neg (M ⟶ N)`\n`+ instance : SMul S (M ⟶ N)`\n`+ instance : SMul ℕ (M ⟶ N)`\n`+ instance : SMul ℤ (M ⟶ N)`\n`+ instance : Sub (M ⟶ N)`\n`+ instance : Zero (M ⟶ N)`\n`+ instance {M N : ModuleCat.{v} R} : CoeFun (M ⟶ N) (fun _ ↦ M → N)`\n`+ inv_hom_apply`\n`+ pushforward_map_app_apply'`\n`+ pushforward_obj_map_apply'`\n`+ toSheafify_app_apply'`\n`+ ρ_hom`\n`++ hom_ext`\n`++ ofHom`\n`++-- of`\n`- ModuleCat.asHom`\n`- ModuleCat.asHom_apply`\n`- ModuleCat.ofHom`\n`- coe_comp`\n`- comp_def`\n`- ext`\n`- instance : CoeFun (obj' f M) fun _ => S → M where coe g := g.toFun`\n`- instance {M N : FGModuleCat R} : FunLike (M ⟶ N) M N`\n`- instance {M N : FGModuleCat R} : LinearMapClass (M ⟶ N) R M N`\n`- instance {M N : ModuleCat.{v} R} : AddCommGroup (M ⟶ N) := LinearMap.addCommGroup`\n`- instance {M N : ModuleCat.{v} R} : FunLike (M ⟶ N) M N`\n`- instance {M N : ModuleCat.{v} R} : LinearMapClass (M ⟶ N) R M N`\n`- instance {R : Type u₁} {S : Type u₂} [Ring R] [Ring S] {f : R →+* S}`\n`- ofUnique`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>\n\n---\n\n<details><summary>Decrease in tech debt: (relative, absolute) = (5.46, 0.03)</summary>\n\n|Current number|Change|Type|\n|-:|:-:|:-|\n|5006|-29|porting notes|\n|198|-2|disabled simpNF lints|\n|1527|-25|erw|\n\nCurrent commit [867bc8212c](https://github.com/leanprover-community/mathlib4/commit/867bc8212c6d6651ab13f5153cb4748e2e73bd3d)\nReference commit [7f28d7f73f](https://github.com/leanprover-community/mathlib4/commit/7f28d7f73f74b31f72449bb9eb240db3ca68fe38)\n\nYou can run this locally as\n```\n./scripts/technical-debt-metrics.sh pr_summary\n```\n* The `relative` value is the weighted *sum* of the differences with weight given by the *inverse* of the current value of the statistic.\n* The `absolute` value is the `relative` value divided by the total sum of the inverses of the current values (i.e. the weighted *average* of the differences).\n</details>",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6Sun7z",
              "createdAt": "2024-11-26T14:24:53Z",
              "body": "",
              "author": {
                "login": "Vierkantor"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6SuoPm",
              "createdAt": "2024-11-26T14:25:19Z",
              "body": "",
              "author": {
                "login": "Vierkantor"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6Supww",
              "createdAt": "2024-11-26T14:27:34Z",
              "body": "",
              "author": {
                "login": "Vierkantor"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6Sup_-",
              "createdAt": "2024-11-26T14:27:55Z",
              "body": "",
              "author": {
                "login": "Vierkantor"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6Suq9V",
              "createdAt": "2024-11-26T14:29:17Z",
              "body": "",
              "author": {
                "login": "Vierkantor"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6Surim",
              "createdAt": "2024-11-26T14:30:08Z",
              "body": "",
              "author": {
                "login": "Vierkantor"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6Sur32",
              "createdAt": "2024-11-26T14:30:38Z",
              "body": "",
              "author": {
                "login": "Vierkantor"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6SusAk",
              "createdAt": "2024-11-26T14:30:49Z",
              "body": "",
              "author": {
                "login": "Vierkantor"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6SusK7",
              "createdAt": "2024-11-26T14:31:04Z",
              "body": "",
              "author": {
                "login": "Vierkantor"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6SutCB",
              "createdAt": "2024-11-26T14:32:20Z",
              "body": "",
              "author": {
                "login": "Vierkantor"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6SutwY",
              "createdAt": "2024-11-26T14:33:25Z",
              "body": "",
              "author": {
                "login": "Vierkantor"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6Sut6K",
              "createdAt": "2024-11-26T14:33:38Z",
              "body": "",
              "author": {
                "login": "Vierkantor"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6SuuLK",
              "createdAt": "2024-11-26T14:34:01Z",
              "body": "",
              "author": {
                "login": "Vierkantor"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6SuuXg",
              "createdAt": "2024-11-26T14:34:19Z",
              "body": "",
              "author": {
                "login": "Vierkantor"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6goAIFzwAAAAOYKKn2",
              "createdAt": "2024-11-26T15:00:12Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABViJTYQ",
                "name": "t-category-theory"
              }
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6goAIFzwAAAAOZ4cPO",
              "createdAt": "2024-11-28T14:46:20Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABwbfWPw",
                "name": "large-import"
              }
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6goAIFzwAAAAOZ-xR5",
              "createdAt": "2024-11-28T17:42:56Z"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "ReadyForReviewEvent",
              "id": "RFRE_lADOFcwZ1c6goAIFzwAAAAOaYMLE",
              "createdAt": "2024-11-29T12:09:10Z"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6TNrf8",
              "createdAt": "2024-11-29T12:42:09Z",
              "body": "",
              "author": {
                "login": "Vierkantor"
              }
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6TRtJz",
              "createdAt": "2024-11-30T11:47:55Z",
              "body": "",
              "author": {
                "login": "chrisflav"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6Vi5G-",
              "createdAt": "2024-11-30T12:48:55Z",
              "body": "Overall this looks very good and a lot of proofs got cleaner! Did you run your magic `erw -> rw` tool? I could imagine there is some potential.\r\n\r\nI hope you don't mind that I pushed some small changes to get rid of some more `erw`s.",
              "author": {
                "login": "chrisflav"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6Vi5Qw",
              "createdAt": "2024-11-30T12:51:23Z",
              "body": "I tried to add a test file similar to the one for `AlgebraCat`, but I am running into this:\r\n```\r\nimport Mathlib\r\nopen CategoryTheory ModuleCat\r\nvariable (R : Type u) [CommRing R]\r\n\r\n/-\r\nambiguous, possible interpretations \r\n  ↟f : of R X ⟶ of R Y\r\n  \r\n  ↾⇑f : X ⟶ Y\r\n-/\r\nexample {X Y : Type v} [AddCommGroup X] [Module R X] [AddCommGroup Y] [Module R Y] (f : X →ₗ[R] Y)\r\n    (x : X) : (asHom f) x = f x := by simp\r\n```\r\nDo you understand this?",
              "author": {
                "login": "chrisflav"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6Vmsj3",
              "createdAt": "2024-12-01T16:28:55Z",
              "body": "I think the testcase fails because there is also the definition [`CategoryTheory.asHom`](https://leanprover-community.github.io/mathlib4_docs/Mathlib/CategoryTheory/Types.html#CategoryTheory.asHom) which is `ModuleCat.asHom` but for the category of types. So we either apply `ModuleCat.asHom` and then coerce back to a function, or we coerce `f` to a function, apply `CategoryTheory.asHom` to make it a morphism, and then coerce it back to a plain function. And since both of the end results have the same types and applicability, Lean can't choose and throws an error.",
              "author": {
                "login": "Vierkantor"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6VrG8M",
              "createdAt": "2024-12-02T10:11:42Z",
              "body": "> I think the testcase fails because there is also the definition [`CategoryTheory.asHom`](https://leanprover-community.github.io/mathlib4_docs/Mathlib/CategoryTheory/Types.html#CategoryTheory.asHom) which is `ModuleCat.asHom` but for the category of types. So we either apply `ModuleCat.asHom` and then coerce back to a function, or we coerce `f` to a function, apply `CategoryTheory.asHom` to make it a morphism, and then coerce it back to a plain function. And since both of the end results have the same types and applicability, Lean can't choose and throws an error.\r\n\r\nAh, silly me, I didn't think of `CategoryTheory.asHom` and was not aware of the notation. Replacing the `asHom` with `ModuleCat.asHom` makes everything work.",
              "author": {
                "login": "chrisflav"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6VrIB7",
              "createdAt": "2024-12-02T10:13:40Z",
              "body": "I put the tests in 554ba6315ef, if you like them feel free to cherry-pick (or tell me to push it here).",
              "author": {
                "login": "chrisflav"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6VrItX",
              "createdAt": "2024-12-02T10:14:54Z",
              "body": "Thank you! Feel free to push your commit directly to this branch. :)",
              "author": {
                "login": "Vierkantor"
              }
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5pMIen",
              "createdAt": "2024-12-02T12:14:31Z",
              "source": {
                "id": "PR_kwDOFcwZ1c6Du8pV",
                "title": "chore: address and delete many porting notes across the library",
                "url": "https://github.com/leanprover-community/mathlib4/pull/19685"
              }
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6VtqSX",
              "createdAt": "2024-12-02T15:00:33Z",
              "body": "> Overall this looks very good and a lot of proofs got cleaner! Did you run your magic `erw -> rw` tool? I could imagine there is some potential.\r\n> \r\n> I hope you don't mind that I pushed some small changes to get rid of some more `erw`s.\r\n\r\nI did run it on an earlier version of the branch, let me see if anything got cleared up in the meantime.\r\n\r\n(It should be as easy as merging the `try_this-erw` branch into the current branch, and then cherry-picking any of the warnings it produces.)",
              "author": {
                "login": "Vierkantor"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6VuArN",
              "createdAt": "2024-12-02T15:34:55Z",
              "body": "No free `erw` eliminations found on this branch, but I did find a few in other bits of Mathlib so time to make a little PR for that :D",
              "author": {
                "login": "Vierkantor"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6VuB5F",
              "createdAt": "2024-12-02T15:36:56Z",
              "body": "!bench",
              "author": {
                "login": "chrisflav"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6VuTG5",
              "createdAt": "2024-12-02T16:05:35Z",
              "body": "Here are the [benchmark results](http://speed.lean-fro.org/mathlib4/run-detail/698fc869-9376-4049-8627-f1c0e9b2896c) for commit 867bc8212c6d6651ab13f5153cb4748e2e73bd3d.\nThere were [significant changes](http://speed.lean-fro.org/mathlib4/compare/bcf67c94-f0d0-45cd-bab5-2518ad8d3eff/to/698fc869-9376-4049-8627-f1c0e9b2896c) against commit 7f28d7f73f74b31f72449bb9eb240db3ca68fe38:\n```diff\n  Benchmark                                                    Metric         Change\n  ==================================================================================\n- ~Mathlib.Algebra.Category.ModuleCat.Algebra                  instructions   227.7%\n- ~Mathlib.Algebra.Category.ModuleCat.Basic                    instructions    45.8%\n+ ~Mathlib.Algebra.Category.ModuleCat.ChangeOfRings            instructions   -28.9%\n- ~Mathlib.Algebra.Category.ModuleCat.Differentials.Presheaf   instructions    14.3%\n+ ~Mathlib.Algebra.Category.ModuleCat.Presheaf                 instructions   -17.1%\n- ~Mathlib.Algebra.Category.ModuleCat.Presheaf.ChangeOfRings   instructions    28.0%\n+ ~Mathlib.Algebra.Category.ModuleCat.Presheaf.Monoidal        instructions   -18.0%\n- ~Mathlib.Algebra.Category.ModuleCat.Presheaf.Pushforward     instructions    18.2%\n+ ~Mathlib.Algebra.Category.ModuleCat.Presheaf.Sheafify        instructions   -12.5%\n- ~Mathlib.Algebra.Category.ModuleCat.Sheaf.Colimits           instructions    61.2%\n- ~Mathlib.Algebra.Homology.ShortComplex.ModuleCat             instructions    66.2%\n- ~Mathlib.AlgebraicGeometry.Modules.Tilde                     instructions    25.4%\n+ ~Mathlib.CategoryTheory.Monoidal.Internal.Module             instructions    -9.3%\n- ~Mathlib.RepresentationTheory.Rep                            instructions    12.4%\n```",
              "author": {
                "login": "leanprover-bot"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6Vuf1G",
              "createdAt": "2024-12-02T16:15:48Z",
              "body": "Hmm, a very mixed result. The really big slowdowns were in files that had a lot of manual proofs replaced with automation, but still `Mathlib.Algebra.Category.ModuleCat.Sheaf.Colimits` +61.2% with no changed lines is scary. Let me see if I can discover what is slow...",
              "author": {
                "login": "Vierkantor"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6VunlK",
              "createdAt": "2024-12-02T16:19:59Z",
              "body": "The +227% one can be safely ignored, its a 60L file with one proof. Why do we not get the nice summary with all the instruction increases starting from 10^9? Does this mean, all of the changes are below that threshold? If yes, I think everything is fine.",
              "author": {
                "login": "chrisflav"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6VutBq",
              "createdAt": "2024-12-02T16:26:47Z",
              "body": "`Mathlib.Algebra.Category.ModuleCat.Sheaf.Colimits` is also a one-proof file. If I can trust `set_option trace.profiler true` somewhat, then it looks like elaboration of that proof takes slightly less than `50%` longer, and kernel typechecking twice as long. But there is no obvious change in the steps taken to get there, just a bit of slowdown at every level...\r\n",
              "author": {
                "login": "Vierkantor"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6goAIFzwAAAAObsb4B",
              "createdAt": "2024-12-02T17:38:18Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6Tf0QX",
              "createdAt": "2024-12-03T05:07:13Z",
              "body": "",
              "author": {
                "login": "kim-em"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6Tf0fK",
              "createdAt": "2024-12-03T05:07:49Z",
              "body": "",
              "author": {
                "login": "kim-em"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6Tf0_9",
              "createdAt": "2024-12-03T05:09:21Z",
              "body": "",
              "author": {
                "login": "kim-em"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6Tf1Sq",
              "createdAt": "2024-12-03T05:10:41Z",
              "body": "",
              "author": {
                "login": "kim-em"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6Tf1lG",
              "createdAt": "2024-12-03T05:11:45Z",
              "body": "",
              "author": {
                "login": "kim-em"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6Tf18c",
              "createdAt": "2024-12-03T05:12:33Z",
              "body": "",
              "author": {
                "login": "kim-em"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6Tf2L3",
              "createdAt": "2024-12-03T05:13:30Z",
              "body": "",
              "author": {
                "login": "kim-em"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6Tf2VB",
              "createdAt": "2024-12-03T05:14:01Z",
              "body": "",
              "author": {
                "login": "kim-em"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6Tf3Xw",
              "createdAt": "2024-12-03T05:16:45Z",
              "body": "",
              "author": {
                "login": "kim-em"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6Tf3fa",
              "createdAt": "2024-12-03T05:17:09Z",
              "body": "",
              "author": {
                "login": "kim-em"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6Tf3kd",
              "createdAt": "2024-12-03T05:17:27Z",
              "body": "",
              "author": {
                "login": "kim-em"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6Tf43i",
              "createdAt": "2024-12-03T05:22:14Z",
              "body": "",
              "author": {
                "login": "kim-em"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6Tf9OV",
              "createdAt": "2024-12-03T05:38:49Z",
              "body": "",
              "author": {
                "login": "kim-em"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6TgF2s",
              "createdAt": "2024-12-03T06:07:06Z",
              "body": "",
              "author": {
                "login": "kim-em"
              }
            }
          ]
        }
      }
    }
  }
}
