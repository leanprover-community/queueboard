{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 1291,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "Vierkantor"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "This PR follows the approach of #19065 to solve painful definitional equalities problems by forbidding the identification of `A ⟶ B` and `A →ₗ[R] B`. These are not equal reducibly, so tactics get confused if one is replaced by the other.\r\n\r\nThere seem to be a few regressions caused by defeq abuse that we were able to get away with previously, but some subtle elaboration differences made it evident. Otherwise the cost is inserting many `.hom`s and `asHom`s.\r\n\r\nA few steps that might clean up the diff, but would be too much work to incorporate in this PR:\r\n * Make the `ext` tactic pick up `TensorProduct.ext` again.\r\n * Replace the defeq abuse between `(restrictScalars f).obj M` and `M` with explicit maps going back and forth.\r\n\r\nOverall quite a few proofs could be cleaned up at the cost of more bookkeeping.\r\n\r\n---\r\n\r\n- [ ] depends on: #19705\r\n\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nFor details on the \"pull request lifecycle\" in mathlib, please see:\r\nhttps://leanprover-community.github.io/contribute/index.html\r\n\r\nIn particular, note that most reviewers will only notice your PR\r\nif it passes the continuous integration checks.\r\nPlease ask for help on https://leanprover.zulipchat.com if needed.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nIf you are moving or deleting declarations, please include these lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nMoves:\r\n- Vector.* -> Mathlib.Vector.*\r\n- ...\r\n\r\nDeletions:\r\n- Nat.bit1_add_bit1\r\n- ...\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n\r\n-->\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 60,
        "closed": false,
        "closedAt": null,
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c6VEUNf",
              "body": "### PR summary [f8f8363b30](https://github.com/leanprover-community/mathlib4/pull/19511/commits/f8f8363b30bf3426fabad9c002a2f722daafa3f8)\n\nImport changes exceeding 2%\n\n| %      | File |\n| -      | -    |\n| +18.89% | `Mathlib.CategoryTheory.Limits.ConcreteCategory.WithAlgebraicStructures` |\n\n<details><summary>\n\n#### Import changes for modified files\n\n</summary>\n\nDependency changes\n\n| File | Base Count | Head Count | Change |\n| --- | --- | --- | --- |\n| Mathlib.CategoryTheory.Limits.ConcreteCategory.WithAlgebraicStructures | 614 | 730 | +116 (+18.89%) |\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n| `Mathlib.CategoryTheory.Limits.ConcreteCategory.WithAlgebraicStructures`|116|\n\n</details>\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ FGModuleCatEvaluation_apply'`\n`+ Hom`\n`+ Hom.hom₂`\n`+ Hom.hom₂_ofHom₂`\n`+ Hom.instModule`\n`+ HomEquiv.fromRestriction_hom_apply_apply`\n`+ HomEquiv.toRestriction_hom_apply`\n`+ Iso.conj_hom_eq_conj`\n`+ asHom`\n`+ comp_apply`\n`+ endMulEquiv`\n`+ endMulEquiv_comp_ρ`\n`+ endMulEquiv_symm_comp_ρ`\n`+ forget_obj`\n`+ homAddEquiv`\n`+ homEquiv`\n`+ homLinearEquiv`\n`+ hom_action_ρ`\n`+ hom_add`\n`+ hom_bijective`\n`+ hom_comp`\n`+ hom_id`\n`+ hom_injective`\n`+ hom_inv_apply`\n`+ hom_neg`\n`+ hom_nsmul`\n`+ hom_ofHom`\n`+ hom_smul`\n`+ hom_sub`\n`+ hom_sum`\n`+ hom_surjective`\n`+ hom_zero`\n`+ hom_zsmul`\n`+ instance : Add (M ⟶ N)`\n`+ instance : AddCommGroup (M ⟶ N)`\n`+ instance : CoeFun (obj' f M) fun _ => S → M`\n`+ instance : Inhabited (ModuleCat R)`\n`+ instance : Neg (M ⟶ N)`\n`+ instance : SMul S (M ⟶ N)`\n`+ instance : SMul ℕ (M ⟶ N)`\n`+ instance : SMul ℤ (M ⟶ N)`\n`+ instance : Sub (M ⟶ N)`\n`+ instance : Zero (M ⟶ N)`\n`+ instance {M N : ModuleCat.{v} R} : CoeFun (M ⟶ N) (fun _ ↦ M → N)`\n`+ inv_hom_apply`\n`+ ofHom_apply`\n`+ ofHom_comp`\n`+ ofHom_hom`\n`+ ofHom_id`\n`+ ofHom_ρ`\n`+ ofHom₂`\n`+ ofHom₂_compr₂`\n`+ ofHom₂_hom₂`\n`+ pushforward_map_app_apply'`\n`+ pushforward_obj_map_apply'`\n`+ toSheafify_app_apply'`\n`+ ρ_hom`\n`++ hom_ext`\n`++ ofHom`\n`++-- of`\n`- ModuleCat.asHom`\n`- ModuleCat.ofHom`\n`- ModuleCat.ofHom_apply`\n`- coe_comp`\n`- comp_def`\n`- ext`\n`- instance : CoeFun (obj' f M) fun _ => S → M where coe g := g.toFun`\n`- instance {M N : FGModuleCat R} : FunLike (M ⟶ N) M N`\n`- instance {M N : FGModuleCat R} : LinearMapClass (M ⟶ N) R M N`\n`- instance {M N : ModuleCat.{v} R} : AddCommGroup (M ⟶ N) := LinearMap.addCommGroup`\n`- instance {M N : ModuleCat.{v} R} : FunLike (M ⟶ N) M N`\n`- instance {M N : ModuleCat.{v} R} : LinearMapClass (M ⟶ N) R M N`\n`- instance {R : Type u₁} {S : Type u₂} [Ring R] [Ring S] {f : R →+* S}`\n`- ofUnique`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>\n\n---\n\n<details><summary>Decrease in tech debt: (relative, absolute) = (5.49, 0.03)</summary>\n\n|Current number|Change|Type|\n|-:|:-:|:-|\n|4981|-30|porting notes|\n|202|-2|disabled simpNF lints|\n|1498|-24|erw|\n\nCurrent commit [f8f8363b30](https://github.com/leanprover-community/mathlib4/commit/f8f8363b30bf3426fabad9c002a2f722daafa3f8)\nReference commit [a38db992d0](https://github.com/leanprover-community/mathlib4/commit/a38db992d088e602ba99cdf94f77435bf23e9b8e)\n\nYou can run this locally as\n```\n./scripts/technical-debt-metrics.sh pr_summary\n```\n* The `relative` value is the weighted *sum* of the differences with weight given by the *inverse* of the current value of the statistic.\n* The `absolute` value is the `relative` value divided by the total sum of the inverses of the current values (i.e. the weighted *average* of the differences).\n</details>",
              "createdAt": "2024-11-26T14:23:31Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6Vi5G-",
              "body": "Overall this looks very good and a lot of proofs got cleaner! Did you run your magic `erw -> rw` tool? I could imagine there is some potential.\r\n\r\nI hope you don't mind that I pushed some small changes to get rid of some more `erw`s.",
              "createdAt": "2024-11-30T12:48:55Z",
              "author": {
                "login": "chrisflav"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6Vi5Qw",
              "body": "I tried to add a test file similar to the one for `AlgebraCat`, but I am running into this:\r\n```\r\nimport Mathlib\r\nopen CategoryTheory ModuleCat\r\nvariable (R : Type u) [CommRing R]\r\n\r\n/-\r\nambiguous, possible interpretations \r\n  ↟f : of R X ⟶ of R Y\r\n  \r\n  ↾⇑f : X ⟶ Y\r\n-/\r\nexample {X Y : Type v} [AddCommGroup X] [Module R X] [AddCommGroup Y] [Module R Y] (f : X →ₗ[R] Y)\r\n    (x : X) : (asHom f) x = f x := by simp\r\n```\r\nDo you understand this?",
              "createdAt": "2024-11-30T12:51:23Z",
              "author": {
                "login": "chrisflav"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6Vmsj3",
              "body": "I think the testcase fails because there is also the definition [`CategoryTheory.asHom`](https://leanprover-community.github.io/mathlib4_docs/Mathlib/CategoryTheory/Types.html#CategoryTheory.asHom) which is `ModuleCat.asHom` but for the category of types. So we either apply `ModuleCat.asHom` and then coerce back to a function, or we coerce `f` to a function, apply `CategoryTheory.asHom` to make it a morphism, and then coerce it back to a plain function. And since both of the end results have the same types and applicability, Lean can't choose and throws an error.",
              "createdAt": "2024-12-01T16:28:55Z",
              "author": {
                "login": "Vierkantor"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6VrG8M",
              "body": "> I think the testcase fails because there is also the definition [`CategoryTheory.asHom`](https://leanprover-community.github.io/mathlib4_docs/Mathlib/CategoryTheory/Types.html#CategoryTheory.asHom) which is `ModuleCat.asHom` but for the category of types. So we either apply `ModuleCat.asHom` and then coerce back to a function, or we coerce `f` to a function, apply `CategoryTheory.asHom` to make it a morphism, and then coerce it back to a plain function. And since both of the end results have the same types and applicability, Lean can't choose and throws an error.\r\n\r\nAh, silly me, I didn't think of `CategoryTheory.asHom` and was not aware of the notation. Replacing the `asHom` with `ModuleCat.asHom` makes everything work.",
              "createdAt": "2024-12-02T10:11:42Z",
              "author": {
                "login": "chrisflav"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6VrIB7",
              "body": "I put the tests in 554ba6315ef, if you like them feel free to cherry-pick (or tell me to push it here).",
              "createdAt": "2024-12-02T10:13:40Z",
              "author": {
                "login": "chrisflav"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6VrItX",
              "body": "Thank you! Feel free to push your commit directly to this branch. :)",
              "createdAt": "2024-12-02T10:14:54Z",
              "author": {
                "login": "Vierkantor"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6VtqSX",
              "body": "> Overall this looks very good and a lot of proofs got cleaner! Did you run your magic `erw -> rw` tool? I could imagine there is some potential.\r\n> \r\n> I hope you don't mind that I pushed some small changes to get rid of some more `erw`s.\r\n\r\nI did run it on an earlier version of the branch, let me see if anything got cleared up in the meantime.\r\n\r\n(It should be as easy as merging the `try_this-erw` branch into the current branch, and then cherry-picking any of the warnings it produces.)",
              "createdAt": "2024-12-02T15:00:33Z",
              "author": {
                "login": "Vierkantor"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6VuArN",
              "body": "No free `erw` eliminations found on this branch, but I did find a few in other bits of Mathlib so time to make a little PR for that :D",
              "createdAt": "2024-12-02T15:34:55Z",
              "author": {
                "login": "Vierkantor"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6VuB5F",
              "body": "!bench",
              "createdAt": "2024-12-02T15:36:56Z",
              "author": {
                "login": "chrisflav"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6VuTG5",
              "body": "Here are the [benchmark results](http://speed.lean-fro.org/mathlib4/run-detail/698fc869-9376-4049-8627-f1c0e9b2896c) for commit 867bc8212c6d6651ab13f5153cb4748e2e73bd3d.\nThere were [significant changes](http://speed.lean-fro.org/mathlib4/compare/bcf67c94-f0d0-45cd-bab5-2518ad8d3eff/to/698fc869-9376-4049-8627-f1c0e9b2896c) against commit 7f28d7f73f74b31f72449bb9eb240db3ca68fe38:\n```diff\n  Benchmark                                                    Metric         Change\n  ==================================================================================\n- ~Mathlib.Algebra.Category.ModuleCat.Algebra                  instructions   227.7%\n- ~Mathlib.Algebra.Category.ModuleCat.Basic                    instructions    45.8%\n+ ~Mathlib.Algebra.Category.ModuleCat.ChangeOfRings            instructions   -28.9%\n- ~Mathlib.Algebra.Category.ModuleCat.Differentials.Presheaf   instructions    14.3%\n+ ~Mathlib.Algebra.Category.ModuleCat.Presheaf                 instructions   -17.1%\n- ~Mathlib.Algebra.Category.ModuleCat.Presheaf.ChangeOfRings   instructions    28.0%\n+ ~Mathlib.Algebra.Category.ModuleCat.Presheaf.Monoidal        instructions   -18.0%\n- ~Mathlib.Algebra.Category.ModuleCat.Presheaf.Pushforward     instructions    18.2%\n+ ~Mathlib.Algebra.Category.ModuleCat.Presheaf.Sheafify        instructions   -12.5%\n- ~Mathlib.Algebra.Category.ModuleCat.Sheaf.Colimits           instructions    61.2%\n- ~Mathlib.Algebra.Homology.ShortComplex.ModuleCat             instructions    66.2%\n- ~Mathlib.AlgebraicGeometry.Modules.Tilde                     instructions    25.4%\n+ ~Mathlib.CategoryTheory.Monoidal.Internal.Module             instructions    -9.3%\n- ~Mathlib.RepresentationTheory.Rep                            instructions    12.4%\n```",
              "createdAt": "2024-12-02T16:05:35Z",
              "author": {
                "login": "leanprover-bot"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6Vuf1G",
              "body": "Hmm, a very mixed result. The really big slowdowns were in files that had a lot of manual proofs replaced with automation, but still `Mathlib.Algebra.Category.ModuleCat.Sheaf.Colimits` +61.2% with no changed lines is scary. Let me see if I can discover what is slow...",
              "createdAt": "2024-12-02T16:15:48Z",
              "author": {
                "login": "Vierkantor"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6VunlK",
              "body": "The +227% one can be safely ignored, its a 60L file with one proof. Why do we not get the nice summary with all the instruction increases starting from 10^9? Does this mean, all of the changes are below that threshold? If yes, I think everything is fine.",
              "createdAt": "2024-12-02T16:19:59Z",
              "author": {
                "login": "chrisflav"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6VutBq",
              "body": "`Mathlib.Algebra.Category.ModuleCat.Sheaf.Colimits` is also a one-proof file. If I can trust `set_option trace.profiler true` somewhat, then it looks like elaboration of that proof takes slightly less than `50%` longer, and kernel typechecking twice as long. But there is no obvious change in the steps taken to get there, just a bit of slowdown at every level...\r\n",
              "createdAt": "2024-12-02T16:26:47Z",
              "author": {
                "login": "Vierkantor"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6V5RVe",
              "body": "This PR/issue depends on:\n* ~~leanprover-community/mathlib4#19705~~\nBy **[Dependent Issues](https://github.com/z0al/dependent-issues)** (🤖). Happy coding!\n<!-- By Dependent Issues (Action) - DO NOT REMOVE -->",
              "createdAt": "2024-12-03T15:02:54Z",
              "author": {
                "login": "mathlib4-dependent-issues-bot"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6WFDvc",
              "body": "!bench",
              "createdAt": "2024-12-04T16:15:27Z",
              "author": {
                "login": "jcommelin"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6WFYBK",
              "body": "Here are the [benchmark results](http://speed.lean-fro.org/mathlib4/run-detail/1807ed17-3561-4775-aac8-55b11db574ad) for commit f8f8363b30bf3426fabad9c002a2f722daafa3f8.\nThere were [significant changes](http://speed.lean-fro.org/mathlib4/compare/376caf18-3015-4b16-80e7-6763a47746fd/to/1807ed17-3561-4775-aac8-55b11db574ad) against commit a38db992d088e602ba99cdf94f77435bf23e9b8e:\n```diff\n  Benchmark                                                    Metric         Change\n  ==================================================================================\n- ~Mathlib.Algebra.Category.ModuleCat.Algebra                  instructions   227.1%\n- ~Mathlib.Algebra.Category.ModuleCat.Basic                    instructions    46.7%\n+ ~Mathlib.Algebra.Category.ModuleCat.ChangeOfRings            instructions   -30.3%\n- ~Mathlib.Algebra.Category.ModuleCat.Differentials.Presheaf   instructions    15.2%\n+ ~Mathlib.Algebra.Category.ModuleCat.Presheaf                 instructions   -16.9%\n- ~Mathlib.Algebra.Category.ModuleCat.Presheaf.ChangeOfRings   instructions    28.3%\n+ ~Mathlib.Algebra.Category.ModuleCat.Presheaf.Monoidal        instructions   -16.7%\n- ~Mathlib.Algebra.Category.ModuleCat.Presheaf.Pushforward     instructions    19.1%\n+ ~Mathlib.Algebra.Category.ModuleCat.Presheaf.Sheafify        instructions   -13.4%\n- ~Mathlib.Algebra.Category.ModuleCat.Sheaf.Colimits           instructions    61.8%\n- ~Mathlib.Algebra.Homology.ShortComplex.ModuleCat             instructions    71.3%\n- ~Mathlib.AlgebraicGeometry.Modules.Tilde                     instructions    24.1%\n- ~Mathlib.CategoryTheory.Linear.Yoneda                        instructions    19.8%\n+ ~Mathlib.CategoryTheory.Monoidal.Internal.Module             instructions    -9.2%\n- ~Mathlib.RepresentationTheory.Rep                            instructions    12.1%\n```",
              "createdAt": "2024-12-04T16:43:06Z",
              "author": {
                "login": "leanprover-bot"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "c948fb5fe4252d9d2c7a4d3f1d03f2e18aa1239e",
                "additions": 917,
                "deletions": 817,
                "committedDate": "2024-12-03T09:47:44Z",
                "author": {
                  "name": "Anne C.A. Baanen",
                  "email": "vierkantor@vierkantor.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "d6f113706811979b7b9d3549610227eb714ae2c2",
                "additions": 41,
                "deletions": 35,
                "committedDate": "2024-12-03T09:47:44Z",
                "author": {
                  "name": "Anne C.A. Baanen",
                  "email": "vierkantor@vierkantor.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "dd633fb920287f21fd5dc7fa3e618d175bbcfbd9",
                "additions": 115,
                "deletions": 60,
                "committedDate": "2024-12-03T09:47:44Z",
                "author": {
                  "name": "Anne C.A. Baanen",
                  "email": "vierkantor@vierkantor.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "eb204c6f1d977d5a1dfbdb328071f911707a81c7",
                "additions": 10,
                "deletions": 38,
                "committedDate": "2024-12-03T09:57:16Z",
                "author": {
                  "name": "Anne C.A. Baanen",
                  "email": "vierkantor@vierkantor.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "240b01cc2ec6c128b008a92a5bf711e8ed4885ac",
                "additions": 0,
                "deletions": 1,
                "committedDate": "2024-12-03T09:57:17Z",
                "author": {
                  "name": "Anne C.A. Baanen",
                  "email": "vierkantor@vierkantor.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "e1e6d1240775d0c73215d1094878d23bd1ee3e14",
                "additions": 10,
                "deletions": 12,
                "committedDate": "2024-12-03T09:57:17Z",
                "author": {
                  "name": "Anne C.A. Baanen",
                  "email": "vierkantor@vierkantor.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "8a02aa1f277a4fbab3582e9d8ede32e6164945fa",
                "additions": 75,
                "deletions": 37,
                "committedDate": "2024-12-03T09:57:17Z",
                "author": {
                  "name": "Anne C.A. Baanen",
                  "email": "vierkantor@vierkantor.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "e180a0db6783e3e306f568c4b361f986a9c12a65",
                "additions": 27,
                "deletions": 43,
                "committedDate": "2024-12-03T09:57:17Z",
                "author": {
                  "name": "Anne C.A. Baanen",
                  "email": "vierkantor@vierkantor.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "d3c94c067200757e84c3f8e853d8002bcbe41808",
                "additions": 30,
                "deletions": 29,
                "committedDate": "2024-12-03T09:57:17Z",
                "author": {
                  "name": "Anne C.A. Baanen",
                  "email": "vierkantor@vierkantor.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "3840a544a182da25128123cd00c2c51fcc91de36",
                "additions": 47,
                "deletions": 61,
                "committedDate": "2024-12-03T09:57:17Z",
                "author": {
                  "name": "Anne C.A. Baanen",
                  "email": "vierkantor@vierkantor.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "68b147395d26ae74fd103bea4279f52193c71f59",
                "additions": 10,
                "deletions": 10,
                "committedDate": "2024-12-03T09:57:17Z",
                "author": {
                  "name": "Christian Merten",
                  "email": "christian@merten.dev"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "ba86f098d2922a30b74058e804e66eea8c4ead72",
                "additions": 53,
                "deletions": 0,
                "committedDate": "2024-12-03T09:57:17Z",
                "author": {
                  "name": "Christian Merten",
                  "email": "christian@merten.dev"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "f7ed8882020fc18700fb5ec17980766e78081882",
                "additions": 3,
                "deletions": 1,
                "committedDate": "2024-12-03T09:57:17Z",
                "author": {
                  "name": "Anne C.A. Baanen",
                  "email": "vierkantor@vierkantor.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "0af28ccb2e487dedd6715be874053c242245e481",
                "additions": 11,
                "deletions": 11,
                "committedDate": "2024-12-03T09:57:17Z",
                "author": {
                  "name": "Anne C.A. Baanen",
                  "email": "vierkantor@vierkantor.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "b0b4a08de8fc0ff8fc8a7213c71ef86191551d76",
                "additions": 7,
                "deletions": 4,
                "committedDate": "2024-12-03T09:57:17Z",
                "author": {
                  "name": "Anne C.A. Baanen",
                  "email": "vierkantor@vierkantor.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "bdd24425d10b67ec9d778ab3fd796f0003adf2fc",
                "additions": 5,
                "deletions": 0,
                "committedDate": "2024-12-03T10:00:12Z",
                "author": {
                  "name": "Anne C.A. Baanen",
                  "email": "vierkantor@vierkantor.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "44e4f79fb7a981311859f209adee9db8cf58784b",
                "additions": 37,
                "deletions": 11,
                "committedDate": "2024-12-03T10:28:30Z",
                "author": {
                  "name": "Anne C.A. Baanen",
                  "email": "vierkantor@vierkantor.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH4SdsZw",
                        "name": "set_pr_emoji",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12137921679/job/33842228327"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH4ZQw9w",
                        "name": "Fix style issues from lint",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12140171929/job/33849356535"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH4ZQvVA",
                        "name": "Add ready-to-merge or delegated label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12140171935/job/33849356116"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH4R53SA",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12137733343/job/33841641288"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH4ZQu8Q",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12140171942/job/33849356017"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH4R52yg",
                        "name": "post-or-update-summary-comment",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12137733349/job/33841641162"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH4R5wxA",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12137732595/job/33841639620"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH4R5vxA",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12137732597/job/33841639364"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH4R52Ww",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12137733327/job/33841641051"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH4R5tgQ",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12137732595/job/33841638785"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH4R5xbw",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12137732597/job/33841639791"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH4R532Q",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12137733327/job/33841641433"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH4R5t5A",
                        "name": "Build",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12137732597/job/33841638884"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH4R5vJA",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12137732595/job/33841639204"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH4R5yKg",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12137732595/job/33841639978"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH4SEKog",
                        "name": "Post-CI job",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12137732597/job/33841810082"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH4R6btw",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/33841650615"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH4R5oWA",
                        "name": ".github/dependabot.yml",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dependabot-api.githubapp.com"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH4R7dHw",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=19511&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "b3631ab4a68204161fda5b8aabf136f5ac4bdc32",
                "additions": 6,
                "deletions": 5,
                "committedDate": "2024-12-03T12:52:42Z",
                "author": {
                  "name": "Anne C.A. Baanen",
                  "email": "vierkantor@vierkantor.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "21b0d661e78579a9b3e664c0f51a3ae20a39e866",
                "additions": 6,
                "deletions": 0,
                "committedDate": "2024-12-03T12:58:52Z",
                "author": {
                  "name": "Anne C.A. Baanen",
                  "email": "vierkantor@vierkantor.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "58f4a6ad6b82a9b7e6fcb6aab54a4cd49659af9b",
                "additions": 29,
                "deletions": 4,
                "committedDate": "2024-12-03T13:13:23Z",
                "author": {
                  "name": "Anne C.A. Baanen",
                  "email": "vierkantor@vierkantor.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH4aI2lA",
                        "name": "Fix style issues from lint",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12140451673/job/33850275476"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH4aI2SQ",
                        "name": "Add ready-to-merge or delegated label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12140451721/job/33850275401"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH4aENDg",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12140430642/job/33850199310"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH4aI2Vw",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12140451691/job/33850275415"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH4aENMw",
                        "name": "post-or-update-summary-comment",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12140430645/job/33850199347"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH4aEA6A",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12140429736/job/33850196200"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH4aEA7w",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12140429730/job/33850196207"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH4aEQiw",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12140430682/job/33850200203"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH4aECcg",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12140429736/job/33850196594"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH4aECsg",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12140429730/job/33850196658"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH4aEOfg",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12140430682/job/33850199678"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH4aEE1A",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12140429736/job/33850197204"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH4aEEgg",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12140429730/job/33850197122"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH4aEGwg",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12140429736/job/33850197698"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH4aoGxA",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12140429730/job/33850787524"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH4aE0vg",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/33850209470"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH4aGP4Q",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=19511&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "5684fe0214ef11fe23e8ecdc7937872a68f6898a",
                "additions": 0,
                "deletions": 3,
                "committedDate": "2024-12-03T13:25:55Z",
                "author": {
                  "name": "Anne C.A. Baanen",
                  "email": "vierkantor@vierkantor.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "289a3cc1886bc98f4e6889dddcc3b68256dd1476",
                "additions": 247,
                "deletions": 247,
                "committedDate": "2024-12-03T13:57:42Z",
                "author": {
                  "name": "Anne C.A. Baanen",
                  "email": "vierkantor@vierkantor.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH4cvTSA",
                        "name": "set_pr_emoji",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12141275057/job/33853002568"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH4cdE9g",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12141188302/job/33852703990"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH4cdFiA",
                        "name": "post-or-update-summary-comment",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12141188314/job/33852704136"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH4cc3dw",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12141187220/job/33852700535"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH4cc47Q",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12141187221/job/33852700909"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH4cdFSw",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12141188303/job/33852704075"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH4cc6cA",
                        "name": "Lint style",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12141187221/job/33852701296"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH4cc60A",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12141187220/job/33852701392"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH4cdG1g",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12141188303/job/33852704470"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH4cc3YQ",
                        "name": "Build",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12141187221/job/33852700513"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH4cc5Hg",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12141187220/job/33852700958"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH4cc8dA",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12141187220/job/33852701812"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH4dCn0g",
                        "name": "Post-CI job",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12141187221/job/33853319122"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH4cdlkg",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/33852712338"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH4cevrg",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=19511&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "4e600fdb3eab366ad5f0f020a2643ee578584b17",
                "additions": 4,
                "deletions": 4,
                "committedDate": "2024-12-03T14:08:50Z",
                "author": {
                  "name": "Anne C.A. Baanen",
                  "email": "vierkantor@vierkantor.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH4dhkVQ",
                        "name": "Fix style issues from lint",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12141526725/job/33853826133"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH4dlkCQ",
                        "name": "Fix style issues from lint",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12141546805/job/33853891593"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH4dhmVA",
                        "name": "Add ready-to-merge or delegated label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12141526735/job/33853826644"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH4dljsg",
                        "name": "Add ready-to-merge or delegated label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12141546795/job/33853891506"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH4dHS2Q",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12141395892/job/33853395673"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH4dhkeg",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12141526737/job/33853826170"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH4dlkLw",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12141546809/job/33853891631"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH4dHStw",
                        "name": "post-or-update-summary-comment",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12141395884/job/33853395639"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH4dHICw",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12141394802/job/33853392907"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH4dHGMQ",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12141394798/job/33853392433"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH4dHTTA",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12141395883/job/33853395788"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH4dHMjw",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12141394802/job/33853394063"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH4dHKYA",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12141394798/job/33853393504"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH4dHVxQ",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12141395883/job/33853396421"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH4dHKLw",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12141394802/job/33853393455"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH4dHIUA",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12141394798/job/33853392976"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH4dHOng",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12141394802/job/33853394590"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH4dlqhw",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12141394798/job/33853893255"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH4dHyew",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/33853403771"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH4dJLEQ",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=19511&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "f8f8363b30bf3426fabad9c002a2f722daafa3f8",
                "additions": 2199,
                "deletions": 309,
                "committedDate": "2024-12-04T15:13:09Z",
                "author": {
                  "name": "Anne C.A. Baanen",
                  "email": "vierkantor@vierkantor.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH5ddlYQ",
                        "name": "set_pr_emoji",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12162880931/job/33920869729"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH5cxU1w",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12162664185/job/33920144599"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH5cxVGQ",
                        "name": "post-or-update-summary-comment",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12162664207/job/33920144665"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH5cxNsQ",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12162663328/job/33920142769"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH5cxKsA",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12162663325/job/33920142000"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH5cxU2w",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12162664204/job/33920144603"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH5cxPxw",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12162663328/job/33920143303"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH5cxMRA",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12162663325/job/33920142404"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH5cxWsA",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12162664204/job/33920145072"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH5cxLGg",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12162663328/job/33920142106"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH5cxOAQ",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12162663325/job/33920142849"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH5cxR9Q",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12162663328/job/33920143861"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH5dZMyA",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12162663325/job/33920797896"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH5cyDMA",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/33920156464"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH5czNmg",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=19511&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            }
          ]
        },
        "createdAt": "2024-11-26T14:22:42Z",
        "deletions": 1035,
        "files": {
          "nodes": [
            {
              "path": "Counterexamples/Pseudoelement.lean",
              "additions": 10,
              "deletions": 12
            },
            {
              "path": "Mathlib/Algebra/Category/AlgebraCat/Monoidal.lean",
              "additions": 4,
              "deletions": 3
            },
            {
              "path": "Mathlib/Algebra/Category/CoalgebraCat/Basic.lean",
              "additions": 5,
              "deletions": 4
            },
            {
              "path": "Mathlib/Algebra/Category/CoalgebraCat/ComonEquivalence.lean",
              "additions": 18,
              "deletions": 18
            },
            {
              "path": "Mathlib/Algebra/Category/CoalgebraCat/Monoidal.lean",
              "additions": 3,
              "deletions": 3
            },
            {
              "path": "Mathlib/Algebra/Category/FGModuleCat/Basic.lean",
              "additions": 43,
              "deletions": 22
            },
            {
              "path": "Mathlib/Algebra/Category/FGModuleCat/Limits.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Algebra/Category/Grp/Injective.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Algebra/Category/Grp/ZModuleEquivalence.lean",
              "additions": 7,
              "deletions": 6
            },
            {
              "path": "Mathlib/Algebra/Category/ModuleCat/Abelian.lean",
              "additions": 10,
              "deletions": 10
            },
            {
              "path": "Mathlib/Algebra/Category/ModuleCat/Adjunctions.lean",
              "additions": 9,
              "deletions": 10
            },
            {
              "path": "Mathlib/Algebra/Category/ModuleCat/Algebra.lean",
              "additions": 2,
              "deletions": 11
            },
            {
              "path": "Mathlib/Algebra/Category/ModuleCat/Basic.lean",
              "additions": 283,
              "deletions": 125
            },
            {
              "path": "Mathlib/Algebra/Category/ModuleCat/Biproducts.lean",
              "additions": 22,
              "deletions": 20
            },
            {
              "path": "Mathlib/Algebra/Category/ModuleCat/ChangeOfRings.lean",
              "additions": 190,
              "deletions": 203
            },
            {
              "path": "Mathlib/Algebra/Category/ModuleCat/Differentials/Basic.lean",
              "additions": 7,
              "deletions": 3
            },
            {
              "path": "Mathlib/Algebra/Category/ModuleCat/Differentials/Presheaf.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Algebra/Category/ModuleCat/EpiMono.lean",
              "additions": 11,
              "deletions": 9
            },
            {
              "path": "Mathlib/Algebra/Category/ModuleCat/FilteredColimits.lean",
              "additions": 10,
              "deletions": 7
            },
            {
              "path": "Mathlib/Algebra/Category/ModuleCat/Free.lean",
              "additions": 6,
              "deletions": 6
            },
            {
              "path": "Mathlib/Algebra/Category/ModuleCat/Images.lean",
              "additions": 23,
              "deletions": 22
            },
            {
              "path": "Mathlib/Algebra/Category/ModuleCat/Injective.lean",
              "additions": 5,
              "deletions": 4
            },
            {
              "path": "Mathlib/Algebra/Category/ModuleCat/Kernels.lean",
              "additions": 20,
              "deletions": 22
            },
            {
              "path": "Mathlib/Algebra/Category/ModuleCat/Limits.lean",
              "additions": 16,
              "deletions": 22
            },
            {
              "path": "Mathlib/Algebra/Category/ModuleCat/Monoidal/Basic.lean",
              "additions": 44,
              "deletions": 70
            },
            {
              "path": "Mathlib/Algebra/Category/ModuleCat/Monoidal/Closed.lean",
              "additions": 13,
              "deletions": 15
            },
            {
              "path": "Mathlib/Algebra/Category/ModuleCat/Monoidal/Symmetric.lean",
              "additions": 6,
              "deletions": 2
            },
            {
              "path": "Mathlib/Algebra/Category/ModuleCat/Presheaf.lean",
              "additions": 37,
              "deletions": 34
            },
            {
              "path": "Mathlib/Algebra/Category/ModuleCat/Presheaf/ChangeOfRings.lean",
              "additions": 6,
              "deletions": 1
            },
            {
              "path": "Mathlib/Algebra/Category/ModuleCat/Presheaf/Monoidal.lean",
              "additions": 4,
              "deletions": 6
            },
            {
              "path": "Mathlib/Algebra/Category/ModuleCat/Presheaf/Pushforward.lean",
              "additions": 23,
              "deletions": 12
            },
            {
              "path": "Mathlib/Algebra/Category/ModuleCat/Presheaf/Sheafify.lean",
              "additions": 8,
              "deletions": 4
            },
            {
              "path": "Mathlib/Algebra/Category/ModuleCat/Products.lean",
              "additions": 12,
              "deletions": 13
            },
            {
              "path": "Mathlib/Algebra/Category/ModuleCat/Projective.lean",
              "additions": 8,
              "deletions": 11
            },
            {
              "path": "Mathlib/Algebra/Category/ModuleCat/Sheaf.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Algebra/Category/ModuleCat/Sheaf/ChangeOfRings.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Algebra/Category/ModuleCat/Subobject.lean",
              "additions": 27,
              "deletions": 25
            },
            {
              "path": "Mathlib/Algebra/Category/ModuleCat/Tannaka.lean",
              "additions": 6,
              "deletions": 9
            },
            {
              "path": "Mathlib/Algebra/Homology/LocalCohomology.lean",
              "additions": 1,
              "deletions": 3
            },
            {
              "path": "Mathlib/Algebra/Homology/ShortComplex/ModuleCat.lean",
              "additions": 23,
              "deletions": 46
            },
            {
              "path": "Mathlib/AlgebraicGeometry/AffineSpace.lean",
              "additions": 1,
              "deletions": 3
            },
            {
              "path": "Mathlib/AlgebraicGeometry/Modules/Tilde.lean",
              "additions": 46,
              "deletions": 27
            },
            {
              "path": "Mathlib/CategoryTheory/Abelian/Pseudoelements.lean",
              "additions": 6,
              "deletions": 6
            },
            {
              "path": "Mathlib/CategoryTheory/Limits/ConcreteCategory/WithAlgebraicStructures.lean",
              "additions": 26,
              "deletions": 20
            },
            {
              "path": "Mathlib/CategoryTheory/Linear/Yoneda.lean",
              "additions": 0,
              "deletions": 3
            },
            {
              "path": "Mathlib/CategoryTheory/Monoidal/Internal/Module.lean",
              "additions": 43,
              "deletions": 39
            },
            {
              "path": "Mathlib/Condensed/Discrete/Module.lean",
              "additions": 6,
              "deletions": 6
            },
            {
              "path": "Mathlib/LinearAlgebra/QuadraticForm/QuadraticModuleCat.lean",
              "additions": 6,
              "deletions": 4
            },
            {
              "path": "Mathlib/RepresentationTheory/Character.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/RepresentationTheory/FDRep.lean",
              "additions": 21,
              "deletions": 7
            },
            {
              "path": "Mathlib/RepresentationTheory/GroupCohomology/Basic.lean",
              "additions": 22,
              "deletions": 12
            },
            {
              "path": "Mathlib/RepresentationTheory/GroupCohomology/LowDegree.lean",
              "additions": 19,
              "deletions": 15
            },
            {
              "path": "Mathlib/RepresentationTheory/GroupCohomology/Resolution.lean",
              "additions": 15,
              "deletions": 16
            },
            {
              "path": "Mathlib/RepresentationTheory/Invariants.lean",
              "additions": 9,
              "deletions": 5
            },
            {
              "path": "Mathlib/RepresentationTheory/Rep.lean",
              "additions": 71,
              "deletions": 54
            },
            {
              "path": "Mathlib/RingTheory/AdicCompletion/AsTensorProduct.lean",
              "additions": 8,
              "deletions": 8
            },
            {
              "path": "Mathlib/RingTheory/Coalgebra/TensorProduct.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/RingTheory/Flat/CategoryTheory.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Topology/Category/Profinite/Nobeling.lean",
              "additions": 3,
              "deletions": 3
            },
            {
              "path": "MathlibTest/CategoryTheory/ConcreteCategory/ModuleCat.lean",
              "additions": 53,
              "deletions": 0
            }
          ]
        },
        "headRefName": "ModuleCat-Hom-structure",
        "headRefOid": "f8f8363b30bf3426fabad9c002a2f722daafa3f8",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c6DMmuE",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c8AAAABViJTYQ",
              "color": "33dbec",
              "name": "t-category-theory"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABwbfWPw",
              "color": "B60205",
              "name": "large-import"
            }
          ]
        },
        "latestReviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c6TkgC0",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "chrisflav"
              },
              "submittedAt": "2024-12-03T14:16:48Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6S5Min",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "jcommelin"
              },
              "submittedAt": "2024-11-27T09:35:01Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6TgJZj",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "kim-em"
              },
              "submittedAt": "2024-12-03T06:15:05Z"
            }
          ]
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "BLOCKED",
        "mergeable": "MERGEABLE",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 19511,
        "potentialMergeCommit": {
          "oid": "71e0d074663991e1e74bdb29d0ec933901117385"
        },
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": null,
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c6Sun7z",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "Vierkantor"
              },
              "submittedAt": "2024-11-26T14:24:53Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6SuoPm",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "Vierkantor"
              },
              "submittedAt": "2024-11-26T14:25:19Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6Supww",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "Vierkantor"
              },
              "submittedAt": "2024-11-26T14:27:34Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6Sup_-",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "Vierkantor"
              },
              "submittedAt": "2024-11-26T14:27:55Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6Suq9V",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "Vierkantor"
              },
              "submittedAt": "2024-11-26T14:29:17Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6Surim",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "Vierkantor"
              },
              "submittedAt": "2024-11-26T14:30:08Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6Sur32",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "Vierkantor"
              },
              "submittedAt": "2024-11-26T14:30:38Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6SusAk",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "Vierkantor"
              },
              "submittedAt": "2024-11-26T14:30:50Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6SusK7",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "Vierkantor"
              },
              "submittedAt": "2024-11-26T14:31:04Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6SutCB",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "Vierkantor"
              },
              "submittedAt": "2024-11-26T14:32:20Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6SutMt",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "Vierkantor"
              },
              "submittedAt": "2024-11-26T14:32:36Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6SutwY",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "Vierkantor"
              },
              "submittedAt": "2024-11-26T14:33:25Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6Sut6K",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "Vierkantor"
              },
              "submittedAt": "2024-11-26T14:33:38Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6SuuLK",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "Vierkantor"
              },
              "submittedAt": "2024-11-26T14:34:02Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6SuuXg",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "Vierkantor"
              },
              "submittedAt": "2024-11-26T14:34:19Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6S5Min",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "jcommelin"
              },
              "submittedAt": "2024-11-27T09:35:01Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6TNc8B",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "Vierkantor"
              },
              "submittedAt": "2024-11-29T12:09:47Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6TNrf8",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "Vierkantor"
              },
              "submittedAt": "2024-11-29T12:42:09Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6TRtJz",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "chrisflav"
              },
              "submittedAt": "2024-11-30T12:45:56Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6TT3XZ",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "Vierkantor"
              },
              "submittedAt": "2024-12-01T16:22:54Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6TT3el",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "Vierkantor"
              },
              "submittedAt": "2024-12-01T16:25:39Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6TXWhm",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "chrisflav"
              },
              "submittedAt": "2024-12-02T10:53:55Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6TZiwE",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "Vierkantor"
              },
              "submittedAt": "2024-12-02T14:58:32Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6Tf0QX",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "kim-em"
              },
              "submittedAt": "2024-12-03T05:07:13Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6Tf0fK",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "kim-em"
              },
              "submittedAt": "2024-12-03T05:07:49Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6Tf0_9",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "kim-em"
              },
              "submittedAt": "2024-12-03T05:09:21Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6Tf1Sq",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "kim-em"
              },
              "submittedAt": "2024-12-03T05:10:41Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6Tf1lG",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "kim-em"
              },
              "submittedAt": "2024-12-03T05:11:45Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6Tf18c",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "kim-em"
              },
              "submittedAt": "2024-12-03T05:12:33Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6Tf2L3",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "kim-em"
              },
              "submittedAt": "2024-12-03T05:13:31Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6Tf2VB",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "kim-em"
              },
              "submittedAt": "2024-12-03T05:14:01Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6Tf3Xw",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "kim-em"
              },
              "submittedAt": "2024-12-03T05:16:46Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6Tf3fa",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "kim-em"
              },
              "submittedAt": "2024-12-03T05:17:09Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6Tf3kd",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "kim-em"
              },
              "submittedAt": "2024-12-03T05:17:28Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6Tf43i",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "kim-em"
              },
              "submittedAt": "2024-12-03T05:22:15Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6Tf9OV",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "kim-em"
              },
              "submittedAt": "2024-12-03T05:38:50Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6TgF2s",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "kim-em"
              },
              "submittedAt": "2024-12-03T06:07:06Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6TgItb",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "kim-em"
              },
              "submittedAt": "2024-12-03T06:13:15Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6TgJZj",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "kim-em"
              },
              "submittedAt": "2024-12-03T06:15:05Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6Th_Ng",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "Vierkantor"
              },
              "submittedAt": "2024-12-03T10:01:50Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6Th_q8",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "Vierkantor"
              },
              "submittedAt": "2024-12-03T10:02:24Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6TiBA-",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "chrisflav"
              },
              "submittedAt": "2024-12-03T10:03:46Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6TiFwF",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "Vierkantor"
              },
              "submittedAt": "2024-12-03T10:10:54Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6TiHHf",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "Vierkantor"
              },
              "submittedAt": "2024-12-03T10:13:12Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6TiOEW",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "Vierkantor"
              },
              "submittedAt": "2024-12-03T10:23:53Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6Tjt2f",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "Vierkantor"
              },
              "submittedAt": "2024-12-03T12:59:14Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6Tj3I_",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "Vierkantor"
              },
              "submittedAt": "2024-12-03T13:15:30Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6TkfXb",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "chrisflav"
              },
              "submittedAt": "2024-12-03T14:15:47Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6TkgC0",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "chrisflav"
              },
              "submittedAt": "2024-12-03T14:16:48Z"
            }
          ]
        },
        "reviewThreads": {
          "nodes": [
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5uyIzG",
                    "body": "This instance causes downstream issues in `Mathlib/Algebra/Category/ModuleCat/Presheaf/Pushforward.lean:40`, where the synthesized instance does not equal the one obtained by unification.",
                    "createdAt": "2024-11-26T14:24:53Z",
                    "author": {
                      "login": "Vierkantor"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5uyI-O",
                    "body": "Having to type-ascribe `asHom` suggests there is some defeq abuse going on.",
                    "createdAt": "2024-11-26T14:25:19Z",
                    "author": {
                      "login": "Vierkantor"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5uyJ6_",
                    "body": "The `@[simps]` lemma generated here has the wrong type, but if we type-ascript `asHom` to give it the right type, then the proofs in this definition breaks.",
                    "createdAt": "2024-11-26T14:27:34Z",
                    "author": {
                      "login": "Vierkantor"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5uyKEC",
                    "body": "More signs of defeq abuse.",
                    "createdAt": "2024-11-26T14:27:55Z",
                    "author": {
                      "login": "Vierkantor"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5uyKq9",
                    "body": "This should be defeq now to `asHom`. Can we safely replace it? (i.e. deprecated alias it)",
                    "createdAt": "2024-11-26T14:29:17Z",
                    "author": {
                      "login": "Vierkantor"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5uyLA5",
                    "body": "This feels like there is some categorical definition already, but I couldn't find it (without searching very hard).",
                    "createdAt": "2024-11-26T14:30:08Z",
                    "author": {
                      "login": "Vierkantor"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5uyLOI",
                    "body": "We should really fix the issue that makes `TensorProduct.ext'` not apply using the `ext` tactic...",
                    "createdAt": "2024-11-26T14:30:38Z",
                    "author": {
                      "login": "Vierkantor"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5vHe3d",
                    "body": "Agreed, but a problem for another day :)",
                    "createdAt": "2024-11-30T11:59:23Z",
                    "author": {
                      "login": "chrisflav"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5uyLT9",
                    "body": "More defeq issues.",
                    "createdAt": "2024-11-26T14:30:50Z",
                    "author": {
                      "login": "Vierkantor"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5uyLap",
                    "body": "More defeq issues...",
                    "createdAt": "2024-11-26T14:31:04Z",
                    "author": {
                      "login": "Vierkantor"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5uyL-O",
                    "body": "This suggests `colimit_no_zero_smul_divisor` is not phrased correctly.",
                    "createdAt": "2024-11-26T14:32:20Z",
                    "author": {
                      "login": "Vierkantor"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5uyMEj",
                    "body": "Also some errors downstream of this that I haven't figured out.",
                    "createdAt": "2024-11-26T14:32:36Z",
                    "author": {
                      "login": "Vierkantor"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5uyMZJ",
                    "body": "This proof got uglier, not sure what the concrete cause is.",
                    "createdAt": "2024-11-26T14:33:25Z",
                    "author": {
                      "login": "Vierkantor"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5vEbPt",
                    "body": "I tried a few things and it seems there was already a lot of defeq abuse that got exposed now.",
                    "createdAt": "2024-11-29T12:09:47Z",
                    "author": {
                      "login": "Vierkantor"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5uyMf8",
                    "body": "This proof got a lot uglier, not sure what the concrete cause is.",
                    "createdAt": "2024-11-26T14:33:38Z",
                    "author": {
                      "login": "Vierkantor"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5uyMqp",
                    "body": "Should probably be moved to `ModuleCat/Basic.lean`, if that has the right imports.",
                    "createdAt": "2024-11-26T14:34:01Z",
                    "author": {
                      "login": "Vierkantor"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5uyMyl",
                    "body": "Is there a categorical name for this thing?",
                    "createdAt": "2024-11-26T14:34:19Z",
                    "author": {
                      "login": "Vierkantor"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5u4jDg",
                    "body": "It seems to me like this should work for endomorphism monoids in any `bundled` category.",
                    "createdAt": "2024-11-27T09:35:01Z",
                    "author": {
                      "login": "jcommelin"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5vElLG",
                    "body": "This is the major regression of this PR: we needed to specialize these results because there is no longer a good way to say for `ModuleCat` that all its homs are linear maps.",
                    "createdAt": "2024-11-29T12:42:09Z",
                    "author": {
                      "login": "Vierkantor"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5vHeMo",
                    "body": "I think this should be called `ofHom` to align with the other concrete categories, but the diff of this PR is already large enough so I am fine with leaving this to a follow-up.",
                    "createdAt": "2024-11-30T11:47:55Z",
                    "author": {
                      "login": "chrisflav"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5vKM09",
                    "body": "Yeah, I was very unsure which convention to follow: existing `ModuleCat.asHom` usage or consistency with the other categories. It's kind of funny that a couple months ago the deprecated alias was `ofHom` and now we want it to be exactly the opposite. :)",
                    "createdAt": "2024-12-01T16:22:54Z",
                    "author": {
                      "login": "Vierkantor"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5vHeSk",
                    "body": "Here `V W : FGModuleCat R`, but I think this should take `V W : Type u` with `Module R V` etc.",
                    "createdAt": "2024-11-30T11:49:08Z",
                    "author": {
                      "login": "chrisflav"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5vHecT",
                    "body": "```suggestion\r\n@[simps]\r\ndef endMulEquiv : End M ≃* (M →ₗ[R] M) where\r\n  toFun := ModuleCat.Hom.hom\r\n```\r\nmaybe?",
                    "createdAt": "2024-11-30T11:52:10Z",
                    "author": {
                      "login": "chrisflav"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5vHey0",
                    "body": "This makes me happy :)",
                    "createdAt": "2024-11-30T11:57:37Z",
                    "author": {
                      "login": "chrisflav"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5vHfNZ",
                    "body": "What's going on here?",
                    "createdAt": "2024-11-30T12:04:55Z",
                    "author": {
                      "login": "chrisflav"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5vHhDr",
                    "body": "Ah I suppose this is related to the def-eq abuse you mention in the PR description concerning `ModuleCat.restrictScalars` right?",
                    "createdAt": "2024-11-30T12:37:04Z",
                    "author": {
                      "login": "chrisflav"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5vKNDJ",
                    "body": "It's a bit more complicated but basically yes: we have that the codomain of `((toSheafify α φ).app X).hom` would by default be inferred as some object which is only definitionally equal to `(ModuleCat.restrictScalars (α.app X)).obj _))`. And these definitional equalities are `dsimp` lemmas so they do get applied before `toSheafify_app_apply` (which therefore would never get applied since it looks like it has the wrong type).\r\n\r\nOne idea I just had: maybe specify `no_index` instead of writing out the expected type tediously?",
                    "createdAt": "2024-12-01T16:25:39Z",
                    "author": {
                      "login": "Vierkantor"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5vM2lT",
                    "body": "Yes `no_index` works here",
                    "createdAt": "2024-12-02T10:53:55Z",
                    "author": {
                      "login": "chrisflav"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5vOPct",
                    "body": "So playing around with `no_index` for a while, I suspect that the `simp_nf` linter doesn't actually pick up on that correctly. In any case, I think the fault lies more with the simp lemmas applying to objects, making things non-reducibly defeq. (That's the other main source of `erw`s I found.) But that's a problem throughout the library and not something I feel comfortable tackling here.",
                    "createdAt": "2024-12-02T14:58:32Z",
                    "author": {
                      "login": "Vierkantor"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5vHfUM",
                    "body": "I think `simp; rfl` is considered potentially unstable?",
                    "createdAt": "2024-11-30T12:07:38Z",
                    "author": {
                      "login": "chrisflav"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5vHgi4",
                    "body": "```suggestion\r\n    erw [LinearEquiv.symm_apply_apply, this]\r\n    simp only [LinearMap.zero_apply, ChainComplex.linearYonedaObj_X, linearYoneda_obj_obj_carrier,\r\n      map_zero, Pi.zero_apply, LinearMap.zero_apply]\r\n    rfl\r\n```\r\nmaybe slightly better?",
                    "createdAt": "2024-11-30T12:26:58Z",
                    "author": {
                      "login": "chrisflav"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5vSRP4",
                    "body": "Should this also be `@[simp]`? If not, let's leave a comment in place explaining why.",
                    "createdAt": "2024-12-03T05:07:13Z",
                    "author": {
                      "login": "kim-em"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5vTnN0",
                    "body": "It shouldn't be `@[simp]` because `asHom` and `hom` are reducibly defeq to the constructor and projection, respectively, so the whole thing reduces to `f = f`.",
                    "createdAt": "2024-12-03T10:01:50Z",
                    "author": {
                      "login": "Vierkantor"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5vSRUv",
                    "body": "Similarly here, either `@[simp]` or explain why it's not a good idea.",
                    "createdAt": "2024-12-03T05:07:49Z",
                    "author": {
                      "login": "kim-em"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5vTnhj",
                    "body": "I thought this would be the same issue, but actually it would be a good `@[simp]` lemma!",
                    "createdAt": "2024-12-03T10:02:24Z",
                    "author": {
                      "login": "Vierkantor"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5vToaD",
                    "body": "This is solvable by `simp`, so I don't think we should add `@[simp]` here.",
                    "createdAt": "2024-12-03T10:03:46Z",
                    "author": {
                      "login": "chrisflav"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5vSRml",
                    "body": "I think indeed these shouldn't be `simp`, but let's say so.",
                    "createdAt": "2024-12-03T05:09:21Z",
                    "author": {
                      "login": "kim-em"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5vTrOU",
                    "body": "@chrisflav, am I correct that you removed these from the `simp` set in 6c554e33a35498ea9ef0fc288523c26d980e4fcc because:\r\n\r\n* `forget_obj` will apply as a `dsimp` lemma to the (co)domain of morphisms, causing definitional equality issues?\r\n* `forget_map` has a morphism on the LHS but a plain function on the RHS?",
                    "createdAt": "2024-12-03T10:10:54Z",
                    "author": {
                      "login": "Vierkantor"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5vVGqE",
                    "body": "The main issue was that both of them have very bad `simp` keys, because `AlgebraCat` did not feature in the keys. This caused a +1.2% linter time increase all over mathlib. I assume it is the same situation for `ModuleCat`.",
                    "createdAt": "2024-12-03T14:15:47Z",
                    "author": {
                      "login": "chrisflav"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5vVHD4",
                    "body": "But I also agree with your two points.",
                    "createdAt": "2024-12-03T14:16:48Z",
                    "author": {
                      "login": "chrisflav"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5vSR0G",
                    "body": "These are implicitly deprecated, right? Let's write something in the doc-string.",
                    "createdAt": "2024-12-03T05:10:41Z",
                    "author": {
                      "login": "kim-em"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5vTsCa",
                    "body": "Indeed, since this notation resolves to the deprecated `asHomLeft`/`asHomRight`, we get a deprecation warning if we actually try to use the notation. I'll add the same warning to the docstring for the notation itself.",
                    "createdAt": "2024-12-03T10:13:12Z",
                    "author": {
                      "login": "Vierkantor"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5vSSAk",
                    "body": "```suggestion\r\n@[simp] lemma hom_smul (s : S) (f : M ⟶ N) : (s • f).hom = s • f.hom := rfl\r\n```",
                    "createdAt": "2024-12-03T05:11:45Z",
                    "author": {
                      "login": "kim-em"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5vSSKT",
                    "body": "Should we just separately have `hom_injective`? Seems convenient.",
                    "createdAt": "2024-12-03T05:12:33Z",
                    "author": {
                      "login": "kim-em"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5vSSV2",
                    "body": "This needs `simp` lemmas.",
                    "createdAt": "2024-12-03T05:13:30Z",
                    "author": {
                      "login": "kim-em"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5vSSaU",
                    "body": "Should we separately have a `homAddEquiv`, before assuming the smul structure?",
                    "createdAt": "2024-12-03T05:14:01Z",
                    "author": {
                      "login": "kim-em"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5vSTKN",
                    "body": "Maybe this can just be a note for later, but I guess we could generalize this with an SMulCommClass, to `M : ModuleCat S`, `N P : ModuleCat R`.",
                    "createdAt": "2024-12-03T05:16:46Z",
                    "author": {
                      "login": "kim-em"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5vTwI2",
                    "body": "I think that would make it difficult to make all the arrows typecheck since the objects would be in different categories.\r\n\r\n(Also I am not sure myself which scalars you want to use for `(f : M →ₗ[_] N →ₗ[_] P)`.)",
                    "createdAt": "2024-12-03T10:23:53Z",
                    "author": {
                      "login": "Vierkantor"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5vSTPq",
                    "body": "Can we not write this with the categorical arrow?",
                    "createdAt": "2024-12-03T05:17:09Z",
                    "author": {
                      "login": "kim-em"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5vSTTU",
                    "body": "Other direction?",
                    "createdAt": "2024-12-03T05:17:28Z",
                    "author": {
                      "login": "kim-em"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5vSUK2",
                    "body": "Nice!",
                    "createdAt": "2024-12-03T05:22:15Z",
                    "author": {
                      "login": "kim-em"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5vSW1F",
                    "body": "The goal after `simp` here is \r\n```\r\n(cokernel.π g).hom (g.hom ((factorThruImageSubobject f).hom l)) = 0\r\n```\r\nI think we should just have a simp lemma for `(cokernel.π g).hom (g.hom x) = 0`, called something like `ModuleCat.Hom.cokernel_condition`.\r\n\r\nIdeally we'd have some tactic help, e.g. like `@[elementwise]`, but for now we should just write these at the point we set up cokernels.\r\n\r\nWe might also think (by introducing a level of indirection to `ModuleCat.Hom.hom`?) about how we could write a single simp lemma that would apply `cokernel_condition` to all of its different concrete versions.\r\n\r\n",
                    "createdAt": "2024-12-03T05:38:50Z",
                    "author": {
                      "login": "kim-em"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5vUpEM",
                    "body": "I added a TODO comment as per our discussion.",
                    "createdAt": "2024-12-03T12:59:14Z",
                    "author": {
                      "login": "Vierkantor"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5vScLE",
                    "body": "Having to write out the source and target so often doesn't seem fun. :-(\r\n\r\nAt very least we should leave some comments on the places this is necessary, reminding us to come back.\r\n\r\nI wonder if having a variant of `asHom` here, that took as input a semilinear map (twisted by `(Spec (CommRingCat.of R)).ringCatSheaf.val.map i`), could producing something that would typecheck more easily... Not sure yet.",
                    "createdAt": "2024-12-03T06:07:06Z",
                    "author": {
                      "login": "kim-em"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5vSdun",
                    "body": "Something like\r\n```\r\ndef tildeInTypeLinearMap {U V : (Opens (PrimeSpectrum.Top R))ᵒᵖ} (i : U ⟶ V) :\r\n    (M.tildeInType.1.obj U) →ₛₗ[(Spec (CommRingCat.of R)).ringCatSheaf.val.map i] \r\n        (of ((Spec (.of R)).ringCatSheaf.1.obj V) (M.tildeInType.1.obj V)) :=\r\n  { toFun := M.tildeInType.val.map i\r\n    map_smul' := by intros; rfl\r\n    map_add' := by intros; rfl } \r\n\r\ndef asHomRestrictScalars {M N : Type u} {R S : Type*} [Ring R] [Ring S] (σ : R →+* S)\r\n    [AddCommGroup M] [Module R M] [AddCommGroup N] [Module S N] \r\n    (f : M →ₛₗ[σ] N) :\r\n    ModuleCat.of R M ⟶ (restrictScalars σ).obj (ModuleCat.of S N) :=\r\n  sorry\r\n\r\n/--\r\n`M^~` as a sheaf of `𝒪_{Spec R}`-modules\r\n-/\r\nnoncomputable def tilde : (Spec (CommRingCat.of R)).Modules where\r\n  val :=\r\n    { obj := fun U ↦ ModuleCat.of _ (M.tildeInType.val.obj U)\r\n      map := fun {U V} i ↦ \r\n        asHomRestrictScalars ((Spec (CommRingCat.of R)).ringCatSheaf.val.map i) (tildeInTypeLinearMap M i)\r\n      map_id := sorry\r\n      map_comp := sorry }\r\n  isSheaf := (TopCat.Presheaf.isSheaf_iff_isSheaf_comp (forget AddCommGrp) _ ).2\r\n    M.tildeInType.2\r\n```",
                    "createdAt": "2024-12-03T06:13:15Z",
                    "author": {
                      "login": "kim-em"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5vSeEC",
                    "body": "Why is `restrictScalars` printing with a `coe` arrow?? That is really unhelpful. :-)",
                    "createdAt": "2024-12-03T06:15:05Z",
                    "author": {
                      "login": "kim-em"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5vUufW",
                    "body": "I went through and added a comment at each point we have to add a type hint: looks like `restrictScalars` is always involved somehow.",
                    "createdAt": "2024-12-03T13:15:30Z",
                    "author": {
                      "login": "Vierkantor"
                    }
                  }
                ]
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjIxMTY1NzA=",
              "login": "Vierkantor"
            },
            {
              "id": "U_kgDOCB8vYg",
              "login": "chrisflav"
            },
            {
              "id": "MDQ6VXNlcjg1NjY4Mzk0",
              "login": "leanprover-bot"
            },
            {
              "id": "U_kgDOCsITAQ",
              "login": "mathlib4-dependent-issues-bot"
            },
            {
              "id": "MDQ6VXNlcjU2MzY3MDU=",
              "login": "jcommelin"
            },
            {
              "id": "MDQ6VXNlcjQ3Nzk1Ng==",
              "login": "kim-em"
            },
            {
              "id": "MDQ6VXNlcjM3NzcyOTQ5",
              "login": "joelriou"
            },
            {
              "id": "U_kgDOBcsTTQ",
              "login": "leanprover-community-bot-assistant"
            }
          ]
        },
        "state": "OPEN",
        "statusCheckRollup": {
          "contexts": {
            "nodes": [
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAH5ddlYQ",
                "name": "set_pr_emoji",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12162880931/job/33920869729"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAH5cxU1w",
                "name": "label-and-report-new-contributor",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12162664185/job/33920144599"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAH5cxVGQ",
                "name": "post-or-update-summary-comment",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12162664207/job/33920144665"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAH5cxNsQ",
                "name": "Cancel Previous Runs (CI)",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12162663328/job/33920142769"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAH5cxKsA",
                "name": "Cancel Previous Runs (CI)",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12162663325/job/33920142000"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAH5cxU2w",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12162664204/job/33920144603"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAH5cxPxw",
                "name": "Lint style (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12162663328/job/33920143303"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAH5cxMRA",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12162663325/job/33920142404"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAH5cxWsA",
                "name": "Check all files imported",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12162664204/job/33920145072"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAH5cxLGg",
                "name": "Build (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12162663328/job/33920142106"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAH5cxOAQ",
                "name": "Build",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12162663325/job/33920142849"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAH5cxR9Q",
                "name": "Post-CI job (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12162663328/job/33920143861"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAH5dZMyA",
                "name": "Post-CI job",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12162663325/job/33920797896"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAH5cyDMA",
                "name": "New Contributor Check",
                "conclusion": "NEUTRAL",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/33920156464"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAH5czNmg",
                "name": "Summary",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=19511&login=leanprover-community&repository=mathlib4"
              }
            ]
          }
        },
        "title": "refactor(Algebra/Category/ModuleCat): make `ModuleCat.Hom` a structure",
        "updatedAt": "2024-12-04T16:43:07Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/19511",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6VEUNf",
              "createdAt": "2024-11-26T14:23:31Z",
              "body": "### PR summary [f8f8363b30](https://github.com/leanprover-community/mathlib4/pull/19511/commits/f8f8363b30bf3426fabad9c002a2f722daafa3f8)\n\nImport changes exceeding 2%\n\n| %      | File |\n| -      | -    |\n| +18.89% | `Mathlib.CategoryTheory.Limits.ConcreteCategory.WithAlgebraicStructures` |\n\n<details><summary>\n\n#### Import changes for modified files\n\n</summary>\n\nDependency changes\n\n| File | Base Count | Head Count | Change |\n| --- | --- | --- | --- |\n| Mathlib.CategoryTheory.Limits.ConcreteCategory.WithAlgebraicStructures | 614 | 730 | +116 (+18.89%) |\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n| `Mathlib.CategoryTheory.Limits.ConcreteCategory.WithAlgebraicStructures`|116|\n\n</details>\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ FGModuleCatEvaluation_apply'`\n`+ Hom`\n`+ Hom.hom₂`\n`+ Hom.hom₂_ofHom₂`\n`+ Hom.instModule`\n`+ HomEquiv.fromRestriction_hom_apply_apply`\n`+ HomEquiv.toRestriction_hom_apply`\n`+ Iso.conj_hom_eq_conj`\n`+ asHom`\n`+ comp_apply`\n`+ endMulEquiv`\n`+ endMulEquiv_comp_ρ`\n`+ endMulEquiv_symm_comp_ρ`\n`+ forget_obj`\n`+ homAddEquiv`\n`+ homEquiv`\n`+ homLinearEquiv`\n`+ hom_action_ρ`\n`+ hom_add`\n`+ hom_bijective`\n`+ hom_comp`\n`+ hom_id`\n`+ hom_injective`\n`+ hom_inv_apply`\n`+ hom_neg`\n`+ hom_nsmul`\n`+ hom_ofHom`\n`+ hom_smul`\n`+ hom_sub`\n`+ hom_sum`\n`+ hom_surjective`\n`+ hom_zero`\n`+ hom_zsmul`\n`+ instance : Add (M ⟶ N)`\n`+ instance : AddCommGroup (M ⟶ N)`\n`+ instance : CoeFun (obj' f M) fun _ => S → M`\n`+ instance : Inhabited (ModuleCat R)`\n`+ instance : Neg (M ⟶ N)`\n`+ instance : SMul S (M ⟶ N)`\n`+ instance : SMul ℕ (M ⟶ N)`\n`+ instance : SMul ℤ (M ⟶ N)`\n`+ instance : Sub (M ⟶ N)`\n`+ instance : Zero (M ⟶ N)`\n`+ instance {M N : ModuleCat.{v} R} : CoeFun (M ⟶ N) (fun _ ↦ M → N)`\n`+ inv_hom_apply`\n`+ ofHom_apply`\n`+ ofHom_comp`\n`+ ofHom_hom`\n`+ ofHom_id`\n`+ ofHom_ρ`\n`+ ofHom₂`\n`+ ofHom₂_compr₂`\n`+ ofHom₂_hom₂`\n`+ pushforward_map_app_apply'`\n`+ pushforward_obj_map_apply'`\n`+ toSheafify_app_apply'`\n`+ ρ_hom`\n`++ hom_ext`\n`++ ofHom`\n`++-- of`\n`- ModuleCat.asHom`\n`- ModuleCat.ofHom`\n`- ModuleCat.ofHom_apply`\n`- coe_comp`\n`- comp_def`\n`- ext`\n`- instance : CoeFun (obj' f M) fun _ => S → M where coe g := g.toFun`\n`- instance {M N : FGModuleCat R} : FunLike (M ⟶ N) M N`\n`- instance {M N : FGModuleCat R} : LinearMapClass (M ⟶ N) R M N`\n`- instance {M N : ModuleCat.{v} R} : AddCommGroup (M ⟶ N) := LinearMap.addCommGroup`\n`- instance {M N : ModuleCat.{v} R} : FunLike (M ⟶ N) M N`\n`- instance {M N : ModuleCat.{v} R} : LinearMapClass (M ⟶ N) R M N`\n`- instance {R : Type u₁} {S : Type u₂} [Ring R] [Ring S] {f : R →+* S}`\n`- ofUnique`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>\n\n---\n\n<details><summary>Decrease in tech debt: (relative, absolute) = (5.49, 0.03)</summary>\n\n|Current number|Change|Type|\n|-:|:-:|:-|\n|4981|-30|porting notes|\n|202|-2|disabled simpNF lints|\n|1498|-24|erw|\n\nCurrent commit [f8f8363b30](https://github.com/leanprover-community/mathlib4/commit/f8f8363b30bf3426fabad9c002a2f722daafa3f8)\nReference commit [a38db992d0](https://github.com/leanprover-community/mathlib4/commit/a38db992d088e602ba99cdf94f77435bf23e9b8e)\n\nYou can run this locally as\n```\n./scripts/technical-debt-metrics.sh pr_summary\n```\n* The `relative` value is the weighted *sum* of the differences with weight given by the *inverse* of the current value of the statistic.\n* The `absolute` value is the `relative` value divided by the total sum of the inverses of the current values (i.e. the weighted *average* of the differences).\n</details>",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6Sun7z",
              "createdAt": "2024-11-26T14:24:53Z",
              "body": "",
              "author": {
                "login": "Vierkantor"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6SuoPm",
              "createdAt": "2024-11-26T14:25:19Z",
              "body": "",
              "author": {
                "login": "Vierkantor"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6Supww",
              "createdAt": "2024-11-26T14:27:34Z",
              "body": "",
              "author": {
                "login": "Vierkantor"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6Sup_-",
              "createdAt": "2024-11-26T14:27:55Z",
              "body": "",
              "author": {
                "login": "Vierkantor"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6Suq9V",
              "createdAt": "2024-11-26T14:29:17Z",
              "body": "",
              "author": {
                "login": "Vierkantor"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6Surim",
              "createdAt": "2024-11-26T14:30:08Z",
              "body": "",
              "author": {
                "login": "Vierkantor"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6Sur32",
              "createdAt": "2024-11-26T14:30:38Z",
              "body": "",
              "author": {
                "login": "Vierkantor"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6SusAk",
              "createdAt": "2024-11-26T14:30:49Z",
              "body": "",
              "author": {
                "login": "Vierkantor"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6SusK7",
              "createdAt": "2024-11-26T14:31:04Z",
              "body": "",
              "author": {
                "login": "Vierkantor"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6SutCB",
              "createdAt": "2024-11-26T14:32:20Z",
              "body": "",
              "author": {
                "login": "Vierkantor"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6SutwY",
              "createdAt": "2024-11-26T14:33:25Z",
              "body": "",
              "author": {
                "login": "Vierkantor"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6Sut6K",
              "createdAt": "2024-11-26T14:33:38Z",
              "body": "",
              "author": {
                "login": "Vierkantor"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6SuuLK",
              "createdAt": "2024-11-26T14:34:01Z",
              "body": "",
              "author": {
                "login": "Vierkantor"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6SuuXg",
              "createdAt": "2024-11-26T14:34:19Z",
              "body": "",
              "author": {
                "login": "Vierkantor"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6goAIFzwAAAAOYKKn2",
              "createdAt": "2024-11-26T15:00:12Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABViJTYQ",
                "name": "t-category-theory"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6goAIFzwAAAAOZ4cPO",
              "createdAt": "2024-11-28T14:46:20Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABwbfWPw",
                "name": "large-import"
              }
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6goAIFzwAAAAOZ-xR5",
              "createdAt": "2024-11-28T17:42:56Z"
            },
            {
              "__typename": "ReadyForReviewEvent",
              "id": "RFRE_lADOFcwZ1c6goAIFzwAAAAOaYMLE",
              "createdAt": "2024-11-29T12:09:10Z"
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6TNrf8",
              "createdAt": "2024-11-29T12:42:09Z",
              "body": "",
              "author": {
                "login": "Vierkantor"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6TRtJz",
              "createdAt": "2024-11-30T11:47:55Z",
              "body": "",
              "author": {
                "login": "chrisflav"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6Vi5G-",
              "createdAt": "2024-11-30T12:48:55Z",
              "body": "Overall this looks very good and a lot of proofs got cleaner! Did you run your magic `erw -> rw` tool? I could imagine there is some potential.\r\n\r\nI hope you don't mind that I pushed some small changes to get rid of some more `erw`s.",
              "author": {
                "login": "chrisflav"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6Vi5Qw",
              "createdAt": "2024-11-30T12:51:23Z",
              "body": "I tried to add a test file similar to the one for `AlgebraCat`, but I am running into this:\r\n```\r\nimport Mathlib\r\nopen CategoryTheory ModuleCat\r\nvariable (R : Type u) [CommRing R]\r\n\r\n/-\r\nambiguous, possible interpretations \r\n  ↟f : of R X ⟶ of R Y\r\n  \r\n  ↾⇑f : X ⟶ Y\r\n-/\r\nexample {X Y : Type v} [AddCommGroup X] [Module R X] [AddCommGroup Y] [Module R Y] (f : X →ₗ[R] Y)\r\n    (x : X) : (asHom f) x = f x := by simp\r\n```\r\nDo you understand this?",
              "author": {
                "login": "chrisflav"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6Vmsj3",
              "createdAt": "2024-12-01T16:28:55Z",
              "body": "I think the testcase fails because there is also the definition [`CategoryTheory.asHom`](https://leanprover-community.github.io/mathlib4_docs/Mathlib/CategoryTheory/Types.html#CategoryTheory.asHom) which is `ModuleCat.asHom` but for the category of types. So we either apply `ModuleCat.asHom` and then coerce back to a function, or we coerce `f` to a function, apply `CategoryTheory.asHom` to make it a morphism, and then coerce it back to a plain function. And since both of the end results have the same types and applicability, Lean can't choose and throws an error.",
              "author": {
                "login": "Vierkantor"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6VrG8M",
              "createdAt": "2024-12-02T10:11:42Z",
              "body": "> I think the testcase fails because there is also the definition [`CategoryTheory.asHom`](https://leanprover-community.github.io/mathlib4_docs/Mathlib/CategoryTheory/Types.html#CategoryTheory.asHom) which is `ModuleCat.asHom` but for the category of types. So we either apply `ModuleCat.asHom` and then coerce back to a function, or we coerce `f` to a function, apply `CategoryTheory.asHom` to make it a morphism, and then coerce it back to a plain function. And since both of the end results have the same types and applicability, Lean can't choose and throws an error.\r\n\r\nAh, silly me, I didn't think of `CategoryTheory.asHom` and was not aware of the notation. Replacing the `asHom` with `ModuleCat.asHom` makes everything work.",
              "author": {
                "login": "chrisflav"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6VrIB7",
              "createdAt": "2024-12-02T10:13:40Z",
              "body": "I put the tests in 554ba6315ef, if you like them feel free to cherry-pick (or tell me to push it here).",
              "author": {
                "login": "chrisflav"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6VrItX",
              "createdAt": "2024-12-02T10:14:54Z",
              "body": "Thank you! Feel free to push your commit directly to this branch. :)",
              "author": {
                "login": "Vierkantor"
              }
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5pMIen",
              "createdAt": "2024-12-02T12:14:31Z",
              "source": {
                "id": "PR_kwDOFcwZ1c6Du8pV",
                "title": "chore: address and delete many porting notes across the library",
                "url": "https://github.com/leanprover-community/mathlib4/pull/19685"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6VtqSX",
              "createdAt": "2024-12-02T15:00:33Z",
              "body": "> Overall this looks very good and a lot of proofs got cleaner! Did you run your magic `erw -> rw` tool? I could imagine there is some potential.\r\n> \r\n> I hope you don't mind that I pushed some small changes to get rid of some more `erw`s.\r\n\r\nI did run it on an earlier version of the branch, let me see if anything got cleared up in the meantime.\r\n\r\n(It should be as easy as merging the `try_this-erw` branch into the current branch, and then cherry-picking any of the warnings it produces.)",
              "author": {
                "login": "Vierkantor"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6VuArN",
              "createdAt": "2024-12-02T15:34:55Z",
              "body": "No free `erw` eliminations found on this branch, but I did find a few in other bits of Mathlib so time to make a little PR for that :D",
              "author": {
                "login": "Vierkantor"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6VuB5F",
              "createdAt": "2024-12-02T15:36:56Z",
              "body": "!bench",
              "author": {
                "login": "chrisflav"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6VuTG5",
              "createdAt": "2024-12-02T16:05:35Z",
              "body": "Here are the [benchmark results](http://speed.lean-fro.org/mathlib4/run-detail/698fc869-9376-4049-8627-f1c0e9b2896c) for commit 867bc8212c6d6651ab13f5153cb4748e2e73bd3d.\nThere were [significant changes](http://speed.lean-fro.org/mathlib4/compare/bcf67c94-f0d0-45cd-bab5-2518ad8d3eff/to/698fc869-9376-4049-8627-f1c0e9b2896c) against commit 7f28d7f73f74b31f72449bb9eb240db3ca68fe38:\n```diff\n  Benchmark                                                    Metric         Change\n  ==================================================================================\n- ~Mathlib.Algebra.Category.ModuleCat.Algebra                  instructions   227.7%\n- ~Mathlib.Algebra.Category.ModuleCat.Basic                    instructions    45.8%\n+ ~Mathlib.Algebra.Category.ModuleCat.ChangeOfRings            instructions   -28.9%\n- ~Mathlib.Algebra.Category.ModuleCat.Differentials.Presheaf   instructions    14.3%\n+ ~Mathlib.Algebra.Category.ModuleCat.Presheaf                 instructions   -17.1%\n- ~Mathlib.Algebra.Category.ModuleCat.Presheaf.ChangeOfRings   instructions    28.0%\n+ ~Mathlib.Algebra.Category.ModuleCat.Presheaf.Monoidal        instructions   -18.0%\n- ~Mathlib.Algebra.Category.ModuleCat.Presheaf.Pushforward     instructions    18.2%\n+ ~Mathlib.Algebra.Category.ModuleCat.Presheaf.Sheafify        instructions   -12.5%\n- ~Mathlib.Algebra.Category.ModuleCat.Sheaf.Colimits           instructions    61.2%\n- ~Mathlib.Algebra.Homology.ShortComplex.ModuleCat             instructions    66.2%\n- ~Mathlib.AlgebraicGeometry.Modules.Tilde                     instructions    25.4%\n+ ~Mathlib.CategoryTheory.Monoidal.Internal.Module             instructions    -9.3%\n- ~Mathlib.RepresentationTheory.Rep                            instructions    12.4%\n```",
              "author": {
                "login": "leanprover-bot"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6Vuf1G",
              "createdAt": "2024-12-02T16:15:48Z",
              "body": "Hmm, a very mixed result. The really big slowdowns were in files that had a lot of manual proofs replaced with automation, but still `Mathlib.Algebra.Category.ModuleCat.Sheaf.Colimits` +61.2% with no changed lines is scary. Let me see if I can discover what is slow...",
              "author": {
                "login": "Vierkantor"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6VunlK",
              "createdAt": "2024-12-02T16:19:59Z",
              "body": "The +227% one can be safely ignored, its a 60L file with one proof. Why do we not get the nice summary with all the instruction increases starting from 10^9? Does this mean, all of the changes are below that threshold? If yes, I think everything is fine.",
              "author": {
                "login": "chrisflav"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6VutBq",
              "createdAt": "2024-12-02T16:26:47Z",
              "body": "`Mathlib.Algebra.Category.ModuleCat.Sheaf.Colimits` is also a one-proof file. If I can trust `set_option trace.profiler true` somewhat, then it looks like elaboration of that proof takes slightly less than `50%` longer, and kernel typechecking twice as long. But there is no obvious change in the steps taken to get there, just a bit of slowdown at every level...\r\n",
              "author": {
                "login": "Vierkantor"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6goAIFzwAAAAObsb4B",
              "createdAt": "2024-12-02T17:38:18Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6Tf0QX",
              "createdAt": "2024-12-03T05:07:13Z",
              "body": "",
              "author": {
                "login": "kim-em"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6Tf0fK",
              "createdAt": "2024-12-03T05:07:49Z",
              "body": "",
              "author": {
                "login": "kim-em"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6Tf0_9",
              "createdAt": "2024-12-03T05:09:21Z",
              "body": "",
              "author": {
                "login": "kim-em"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6Tf1Sq",
              "createdAt": "2024-12-03T05:10:41Z",
              "body": "",
              "author": {
                "login": "kim-em"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6Tf1lG",
              "createdAt": "2024-12-03T05:11:45Z",
              "body": "",
              "author": {
                "login": "kim-em"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6Tf18c",
              "createdAt": "2024-12-03T05:12:33Z",
              "body": "",
              "author": {
                "login": "kim-em"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6Tf2L3",
              "createdAt": "2024-12-03T05:13:30Z",
              "body": "",
              "author": {
                "login": "kim-em"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6Tf2VB",
              "createdAt": "2024-12-03T05:14:01Z",
              "body": "",
              "author": {
                "login": "kim-em"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6Tf3Xw",
              "createdAt": "2024-12-03T05:16:45Z",
              "body": "",
              "author": {
                "login": "kim-em"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6Tf3fa",
              "createdAt": "2024-12-03T05:17:09Z",
              "body": "",
              "author": {
                "login": "kim-em"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6Tf3kd",
              "createdAt": "2024-12-03T05:17:27Z",
              "body": "",
              "author": {
                "login": "kim-em"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6Tf43i",
              "createdAt": "2024-12-03T05:22:14Z",
              "body": "",
              "author": {
                "login": "kim-em"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6Tf9OV",
              "createdAt": "2024-12-03T05:38:49Z",
              "body": "",
              "author": {
                "login": "kim-em"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6TgF2s",
              "createdAt": "2024-12-03T06:07:06Z",
              "body": "",
              "author": {
                "login": "kim-em"
              }
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6goAIFzwAAAAOcTeiC",
              "createdAt": "2024-12-03T10:28:43Z"
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6goAIFzwAAAAOcUGkv",
              "createdAt": "2024-12-03T10:39:53Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5piLps",
              "createdAt": "2024-12-03T13:37:24Z",
              "source": {
                "id": "PR_kwDOFcwZ1c6D5Rul",
                "title": "[Merged by Bors] - chore(Algebra/Category/ModuleCat): rename `ModuleCat.asHom` to `ModuleCat.ofHom`",
                "url": "https://github.com/leanprover-community/mathlib4/pull/19705"
              }
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6goAIFzwAAAAOcfNrO",
              "createdAt": "2024-12-03T14:02:54Z",
              "label": {
                "id": "MDU6TGFiZWwzMjg4OTQyMDg2",
                "name": "blocked-by-other-PR"
              }
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6goAIFzwAAAAOcjGmH",
              "createdAt": "2024-12-03T15:02:52Z",
              "label": {
                "id": "MDU6TGFiZWwzMjg4OTQyMDg2",
                "name": "blocked-by-other-PR"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6V5RVe",
              "createdAt": "2024-12-03T15:02:54Z",
              "body": "This PR/issue depends on:\n* ~~leanprover-community/mathlib4#19705~~\nBy **[Dependent Issues](https://github.com/z0al/dependent-issues)** (🤖). Happy coding!\n<!-- By Dependent Issues (Action) - DO NOT REMOVE -->",
              "author": {
                "login": "mathlib4-dependent-issues-bot"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6goAIFzwAAAAOcl7du",
              "createdAt": "2024-12-03T15:49:03Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6goAIFzwAAAAOdjn-2",
              "createdAt": "2024-12-04T15:24:48Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6WFDvc",
              "createdAt": "2024-12-04T16:15:27Z",
              "body": "!bench",
              "author": {
                "login": "jcommelin"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6WFYBK",
              "createdAt": "2024-12-04T16:43:06Z",
              "body": "Here are the [benchmark results](http://speed.lean-fro.org/mathlib4/run-detail/1807ed17-3561-4775-aac8-55b11db574ad) for commit f8f8363b30bf3426fabad9c002a2f722daafa3f8.\nThere were [significant changes](http://speed.lean-fro.org/mathlib4/compare/376caf18-3015-4b16-80e7-6763a47746fd/to/1807ed17-3561-4775-aac8-55b11db574ad) against commit a38db992d088e602ba99cdf94f77435bf23e9b8e:\n```diff\n  Benchmark                                                    Metric         Change\n  ==================================================================================\n- ~Mathlib.Algebra.Category.ModuleCat.Algebra                  instructions   227.1%\n- ~Mathlib.Algebra.Category.ModuleCat.Basic                    instructions    46.7%\n+ ~Mathlib.Algebra.Category.ModuleCat.ChangeOfRings            instructions   -30.3%\n- ~Mathlib.Algebra.Category.ModuleCat.Differentials.Presheaf   instructions    15.2%\n+ ~Mathlib.Algebra.Category.ModuleCat.Presheaf                 instructions   -16.9%\n- ~Mathlib.Algebra.Category.ModuleCat.Presheaf.ChangeOfRings   instructions    28.3%\n+ ~Mathlib.Algebra.Category.ModuleCat.Presheaf.Monoidal        instructions   -16.7%\n- ~Mathlib.Algebra.Category.ModuleCat.Presheaf.Pushforward     instructions    19.1%\n+ ~Mathlib.Algebra.Category.ModuleCat.Presheaf.Sheafify        instructions   -13.4%\n- ~Mathlib.Algebra.Category.ModuleCat.Sheaf.Colimits           instructions    61.8%\n- ~Mathlib.Algebra.Homology.ShortComplex.ModuleCat             instructions    71.3%\n- ~Mathlib.AlgebraicGeometry.Modules.Tilde                     instructions    24.1%\n- ~Mathlib.CategoryTheory.Linear.Yoneda                        instructions    19.8%\n+ ~Mathlib.CategoryTheory.Monoidal.Internal.Module             instructions    -9.2%\n- ~Mathlib.RepresentationTheory.Rep                            instructions    12.1%\n```",
              "author": {
                "login": "leanprover-bot"
              }
            }
          ]
        }
      }
    }
  }
}
