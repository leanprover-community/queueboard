{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 32,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "bsubercaseaux"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "Add converses of some `diam` and `ediam` lemmas.\r\nThese should improve the experience of working with diam/ediam by providing more direct relations between the terms `G.ediam = \\top`, `G.diam = 0`, `G.Preconnected`, etc.\r\n\r\n---\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nFor details on the \"pull request lifecycle\" in mathlib, please see:\r\nhttps://leanprover-community.github.io/contribute/index.html\r\n\r\nIn particular, note that most reviewers will only notice your PR\r\nif it passes the continuous integration checks.\r\nPlease ask for help on https://leanprover.zulipchat.com if needed.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nIf you are moving or deleting declarations, please include these lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nMoves:\r\n- Vector.* -> List.Vector.*\r\n- ...\r\n\r\nDeletions:\r\n- Nat.bit1_add_bit1\r\n- ...\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n\r\n-->\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 1,
        "closed": false,
        "closedAt": null,
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c6j0VdF",
              "body": "### PR summary [1718448e47](https://github.com/leanprover-community/mathlib4/pull/23264/commits/1718448e474a7284511065ecc7e4aa19ee8e0338)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ connected_of_ediam_ne_top`\n`+ diam_ne_zero_iff_ne_top_and_nt`\n`+ diam_ne_zero_of_ediam_ne_top`\n`+ ediam_ne_top_of_preconnected`\n`+ not_connected_of_diam_zero`\n`+ not_preconnected_of_ediam_eq_top`\n`+ preconnected_of_ediam_ne_top`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>\n\n---\n\n<details><summary>No changes to technical debt.</summary>\n\nYou can run this locally as\n```\n./scripts/technical-debt-metrics.sh pr_summary\n```\n* The `relative` value is the weighted *sum* of the differences with weight given by the *inverse* of the current value of the statistic.\n* The `absolute` value is the `relative` value divided by the total sum of the inverses of the current values (i.e. the weighted *average* of the differences).\n</details>\n",
              "createdAt": "2025-03-24T14:52:53Z",
              "author": {
                "login": "github-actions"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "7e5147ed23d4a7909b5fc5112ae5d936f64e97fb",
                "additions": 33,
                "deletions": 0,
                "committedDate": "2025-03-25T02:29:04Z",
                "author": {
                  "name": "Bernardo Subercaseaux",
                  "email": "bernardosubercaseaux@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJKM5JOA",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14050307416/job/39339313464"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJKgbwaQ",
                        "name": "Add ready-to-merge or delegated label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14057384150/job/39359803497"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJKM5KFQ",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14050307721/job/39339313685"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJKgbzWw",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14057384169/job/39359804251"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJKM5Jww",
                        "name": "post-or-update-summary-comment",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14050307719/job/39339313603"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJKM5IeQ",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14050307415/job/39339313273"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJKM5IDA",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14050307416/job/39339313164"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJKM5JnA",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14050307415/job/39339313564"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJKM5Kng",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14050307416/job/39339313822"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJKNJ9RQ",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14050307415/job/39339588933"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJKM5bog",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/39339318178"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "bbb7669fb8ac37682c58a4e8e813cd7a2b1ae1ce",
                "additions": 20,
                "deletions": 22,
                "committedDate": "2025-03-25T18:00:20Z",
                "author": {
                  "name": "Bernardo Subercaseaux",
                  "email": "bernardosubercaseaux@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJK-iFKw",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14066833788/job/39391364395"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJK-rTtQ",
                        "name": "Add ready-to-merge or delegated label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14066878700/job/39391515573"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJK-iKBw",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14066834586/job/39391365639"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJK-rTrA",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14066878652/job/39391515564"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJK-iKMg",
                        "name": "post-or-update-summary-comment",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14066834604/job/39391365682"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJK-iEbg",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14066833817/job/39391364206"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJK-iCbQ",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14066833788/job/39391363693"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJK-iCeA",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14066833817/job/39391363704"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJK-iG4A",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14066833788/job/39391364832"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJK_Do9w",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14066833817/job/39391914231"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJK-isOg",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/39391374394"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "1718448e474a7284511065ecc7e4aa19ee8e0338",
                "additions": 5,
                "deletions": 4,
                "committedDate": "2025-03-27T21:13:25Z",
                "author": {
                  "name": "Bernardo Subercaseaux",
                  "email": "bernardosubercaseaux@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJNUxEVA",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14116816680/job/39548896340"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJNUxHoA",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14116817117/job/39548897184"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJNUxHYQ",
                        "name": "post-or-update-summary-comment",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14116817114/job/39548897121"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJNUxEQw",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14116816694/job/39548896323"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJNUxFUQ",
                        "name": "Build",
                        "conclusion": null,
                        "status": "IN_PROGRESS",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14116816694/job/39548896593"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJNUxFtw",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14116816680/job/39548896695"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJNUxHDw",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14116816680/job/39548897039"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJNUxjEA",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/39548904208"
                      }
                    ]
                  }
                }
              }
            }
          ]
        },
        "createdAt": "2025-03-24T14:51:36Z",
        "deletions": 0,
        "files": {
          "nodes": [
            {
              "path": "Mathlib/Combinatorics/SimpleGraph/Diam.lean",
              "additions": 32,
              "deletions": 0
            }
          ]
        },
        "headRefName": "diam_facts",
        "headRefOid": "1718448e474a7284511065ecc7e4aa19ee8e0338",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c6P4mfX",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c8AAAABViJPeA",
              "color": "33dbec",
              "name": "t-combinatorics"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABb5aSCQ",
              "color": "8BBA68",
              "name": "new-contributor"
            }
          ]
        },
        "latestReviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c6htfNb",
              "body": "Thank you! \r\n\r\nThe rest of the file uses `*_ne_zero` instead of `*_pos`, these are practically equivalent, but for the sake of having a consistent file, can you change the lemmas that concern positivity so that they are of the form `*_ne_zero`?",
              "state": "COMMENTED",
              "author": {
                "login": "Rida-Hamadani"
              },
              "submittedAt": "2025-03-25T10:30:00Z"
            }
          ]
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "BLOCKED",
        "mergeable": "MERGEABLE",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 23264,
        "potentialMergeCommit": {
          "oid": "d9be62e4db5d959f83242a54f7c1dcd8339a1e8e"
        },
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": null,
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c6hkjrR",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "bsubercaseaux"
              },
              "submittedAt": "2025-03-24T15:03:50Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6htfNb",
              "body": "Thank you! \r\n\r\nThe rest of the file uses `*_ne_zero` instead of `*_pos`, these are practically equivalent, but for the sake of having a consistent file, can you change the lemmas that concern positivity so that they are of the form `*_ne_zero`?",
              "state": "COMMENTED",
              "author": {
                "login": "Rida-Hamadani"
              },
              "submittedAt": "2025-03-25T10:30:00Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6hzzfq",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "bsubercaseaux"
              },
              "submittedAt": "2025-03-25T18:02:40Z"
            }
          ]
        },
        "reviewThreads": {
          "nodes": [
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c530788",
                    "body": "sorry, this was a mistake, trying to fix it.",
                    "createdAt": "2025-03-24T15:03:49Z",
                    "author": {
                      "login": "bsubercaseaux"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c536Ce2",
                    "body": "```suggestion\r\nlemma preconnected_of_ediam_ne_top (h : G.ediam ≠ ⊤) : G.Preconnected :=\r\n  not_not.mp <| mt G.ediam_eq_top_of_not_preconnected h\r\n```",
                    "createdAt": "2025-03-25T09:40:45Z",
                    "author": {
                      "login": "Rida-Hamadani"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c536DrO",
                    "body": "```suggestion\r\nlemma connected_of_ediam_ne_top [Nonempty α] (h : G.ediam ≠ ⊤) : G.Connected :=\r\n  G.connected_iff.mpr ⟨preconnected_of_ediam_ne_top h, ‹_›⟩\r\n```",
                    "createdAt": "2025-03-25T09:43:14Z",
                    "author": {
                      "login": "Rida-Hamadani"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c536NEE",
                    "body": "```suggestion\r\nlemma ediam_ne_top_of_preconnected [Nonempty α] [Finite α] (h : G.Preconnected) : G.ediam ≠ ⊤ :=\r\n  have ⟨u, v, huv⟩ := G.exists_edist_eq_ediam_of_finite\r\n  huv ▸ edist_ne_top_iff_reachable.mpr (h u v)\r\n```",
                    "createdAt": "2025-03-25T10:03:32Z",
                    "author": {
                      "login": "Rida-Hamadani"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c536N-z",
                    "body": "```suggestion\r\nlemma not_preconnected_of_ediam_eq_top [Nonempty α] [Finite α] (h : G.ediam = ⊤) :\r\n    ¬G.Preconnected :=\r\n  mt G.ediam_ne_top_of_preconnected <| not_ne_iff.mpr h\r\n```",
                    "createdAt": "2025-03-25T10:05:48Z",
                    "author": {
                      "login": "Rida-Hamadani"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c536SMC",
                    "body": "```suggestion\r\nlemma diam_pos_of_ediam_ne_top [Nontrivial α] (h : G.ediam ≠ ⊤) : 0 < G.diam  :=\r\n  have ⟨_, _, hne⟩ := exists_pair_ne ‹_›\r\n  lt_of_lt_of_le ((connected_of_ediam_ne_top h).pos_dist_of_ne hne) <| dist_le_diam h\r\n```\r\nInstances go before assumptions.",
                    "createdAt": "2025-03-25T10:15:55Z",
                    "author": {
                      "login": "Rida-Hamadani"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c536VJn",
                    "body": "This part has non-terminal `simp`s, can you deal with it by using `simp?` please? Also I think for the last `rcases`, `cases` is more suitable.",
                    "createdAt": "2025-03-25T10:23:00Z",
                    "author": {
                      "login": "Rida-Hamadani"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c539r_2",
                    "body": "updated this! :)",
                    "createdAt": "2025-03-25T18:02:40Z",
                    "author": {
                      "login": "bsubercaseaux"
                    }
                  }
                ]
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjE2NzQ4ODY1",
              "login": "bsubercaseaux"
            },
            {
              "id": "U_kgDOBlmvUA",
              "login": "Rida-Hamadani"
            }
          ]
        },
        "state": "OPEN",
        "statusCheckRollup": {
          "contexts": {
            "nodes": [
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJNUxEVA",
                "name": "Lint style (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14116816680/job/39548896340"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJNUxHoA",
                "name": "label-and-report-new-contributor",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14116817117/job/39548897184"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJNUxHYQ",
                "name": "post-or-update-summary-comment",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14116817114/job/39548897121"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJNUxEQw",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14116816694/job/39548896323"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJNUxFUQ",
                "name": "Build",
                "conclusion": null,
                "status": "IN_PROGRESS",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14116816694/job/39548896593"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJNUxFtw",
                "name": "Build (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14116816680/job/39548896695"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJNUxHDw",
                "name": "Post-CI job (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14116816680/job/39548897039"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJNUxjEA",
                "name": "New Contributor Check",
                "conclusion": "NEUTRAL",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/39548904208"
              }
            ]
          }
        },
        "title": "feat(Combinatorics/SimpleGraph/Diam): add basic (e)diam facts",
        "updatedAt": "2025-03-27T21:14:33Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/23264",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "ReviewRequestedEvent",
              "id": "RRE_lADOFcwZ1c6vconUzwAAAAPyvkNA",
              "createdAt": "2025-03-24T14:51:36Z",
              "requestedReviewer": {
                "id": "U_kgDOBlmvUA",
                "login": "Rida-Hamadani"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6vconUzwAAAAPyvk97",
              "createdAt": "2025-03-24T14:51:47Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABb5aSCQ",
                "name": "new-contributor"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6vconUzwAAAAPyvojS",
              "createdAt": "2025-03-24T14:52:36Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABViJPeA",
                "name": "t-combinatorics"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6j0VdF",
              "createdAt": "2025-03-24T14:52:53Z",
              "body": "### PR summary [1718448e47](https://github.com/leanprover-community/mathlib4/pull/23264/commits/1718448e474a7284511065ecc7e4aa19ee8e0338)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ connected_of_ediam_ne_top`\n`+ diam_ne_zero_iff_ne_top_and_nt`\n`+ diam_ne_zero_of_ediam_ne_top`\n`+ ediam_ne_top_of_preconnected`\n`+ not_connected_of_diam_zero`\n`+ not_preconnected_of_ediam_eq_top`\n`+ preconnected_of_ediam_ne_top`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>\n\n---\n\n<details><summary>No changes to technical debt.</summary>\n\nYou can run this locally as\n```\n./scripts/technical-debt-metrics.sh pr_summary\n```\n* The `relative` value is the weighted *sum* of the differences with weight given by the *inverse* of the current value of the statistic.\n* The `absolute` value is the `relative` value divided by the total sum of the inverses of the current values (i.e. the weighted *average* of the differences).\n</details>\n",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6hkjrR",
              "createdAt": "2025-03-24T15:03:49Z",
              "body": "",
              "author": {
                "login": "bsubercaseaux"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "7e5147ed23d4a7909b5fc5112ae5d936f64e97fb"
              }
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6vconUzwAAAAPzQM_q",
              "createdAt": "2025-03-25T02:30:04Z"
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6htfNb",
              "createdAt": "2025-03-25T09:40:45Z",
              "body": "Thank you! \r\n\r\nThe rest of the file uses `*_ne_zero` instead of `*_pos`, these are practically equivalent, but for the sake of having a consistent file, can you change the lemmas that concern positivity so that they are of the form `*_ne_zero`?",
              "author": {
                "login": "Rida-Hamadani"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "bbb7669fb8ac37682c58a4e8e813cd7a2b1ae1ce"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "1718448e474a7284511065ecc7e4aa19ee8e0338"
              }
            }
          ]
        }
      }
    }
  }
}
