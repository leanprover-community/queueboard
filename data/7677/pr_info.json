{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 347,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "girving"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "We record various simple lemmas that things are `analyticAt` or `analyticOn`.  There's no hard work here, just corollaries of other results:\r\n\r\n1. `id`, `fst`, `snd`\r\n2. Power series terms, in the origin (we already know they have power series, this is just the `.analyticAt_changeOrigin` corollary\r\n3. Finite sums\r\n4. Pairs of analytic functions: `x ↦ (f x, g x)`\r\n\r\nWe also add a few lemmas for dealing with curried analytic functions. Starting with `AnalyticOn 𝕜 (uncurry h) s`,\r\n\r\n1. `AnalyticOn.curry_comp` composes it with two input analytic functions\r\n2. `AnalyticOn.along_fst/snd` show analyticity along each coordinate\r\n\r\n\r\n---\r\n\r\nThis is the first (extremely minimal) PR for upstreaming of https://github.com/girving/ray: Sebastien Gouezel suggested lemmas about analyticity, so I started with the simplest ones.  The next thing I would upstream after this is `AnalyticAt.mul`, but that requires some `ContinuousMultilinearMap` machinery so I'll do it as a second PR unless advised otherwise.",
        "changedFiles": 6,
        "closed": true,
        "closedAt": "2023-10-25T13:52:55Z",
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c5pF_jW",
              "body": "Thanks for your first PR! Is it ready for review yet? If so, please add the \"awaiting-review\" and \"t-analysis\" labels, otherwise this PR won't appear in the list of PRs to review that most maintainers use :wink: See https://leanprover-community.github.io/contribute/index.html#lifecycle-of-a-pr for more details.",
              "createdAt": "2023-10-14T20:57:04Z",
              "author": {
                "login": "ADedecker"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5pUfBq",
              "body": "Note that there is a big overlap with #7552, which also proves analyticity of the product (cc @loefflerd). ",
              "createdAt": "2023-10-17T18:50:05Z",
              "author": {
                "login": "ADedecker"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5pUq2n",
              "body": "> Note that there is a big overlap with #7552, which also proves analyticity of the product (cc @loefflerd).\r\n\r\nYes, indeed. @girving : how much of my PR is contained in this one of yours + others that will be following in the near future? If the answer is \"all of it\" then I'm happy to just delete my PR.",
              "createdAt": "2023-10-17T19:23:28Z",
              "author": {
                "login": "loefflerd"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5pc3fW",
              "body": "I see, that PR stomps on most/all of my mine.  In a good way, since they are the same, but: possibly I should just hold off submitting things for a while, unless something is interested in taking a look through the code and figuring out if there is a useful thing to upstream that won't be immediately wasted effort on my part as I'm learning the system.  This is pure hobby stuff for me, so I often won't be able to turn things around rapidly.\r\n\r\nThe key aspect is that when doing this kind of small upstreaming I will often need to generalize my current https://github.com/girving/ray code to make it suitable for wider use.  It would be better to do that generalization work if there is some confidence that no one else is doing it at exactly the same time, and faster and better than me due to experience.",
              "createdAt": "2023-10-18T19:20:09Z",
              "author": {
                "login": "girving"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5pmkts",
              "body": "Apologies for overreacting above.  It seems like this was a coincidental collision and just happened to occur on my first PR.  Hopefully it will not happen most of the time. :)\r\n\r\nIn any case, I've rebased.  Now the results added are just the very simple ones, since `.prod` is gone.  Back to review!  Some questions I have:\r\n\r\n1. What's the right name of `.along_fst` and `.along_snd`?  Is there a standard name to use?\r\n2. Should I move things in `Prod.lean` to `Basic.lean` or `Linear.lean`, especially since `.prod` is now in `Basic`?",
              "createdAt": "2023-10-19T21:18:00Z",
              "author": {
                "login": "girving"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5pu_uj",
              "body": "Note: I have pushed an update to the lean toolchain because this PR was on a [buggy version](https://leanprover.zulipchat.com/#narrow/stream/113488-general/topic/Potential.20data.20loss.20from.20.60lake.20clean.60.20with.204.2E2.2E0-rc2.2F3/near/397875701) of the toolchain. **WARNING**: checking out old commits of this PR using v4.2.0-rc2 or v4.2.0-rc3 can cause `lake clean` to delete your mathlib folder! If you need to do so, make sure to delete `lakefile.olean` manually before running any `lake` commands.",
              "createdAt": "2023-10-21T21:32:08Z",
              "author": {
                "login": "digama0"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5pzONF",
              "body": "@loefflerd: Thank you!  Those changes look good. ",
              "createdAt": "2023-10-23T11:58:52Z",
              "author": {
                "login": "girving"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5qDWSC",
              "body": "bors r+\r\nThanks!",
              "createdAt": "2023-10-25T13:20:35Z",
              "author": {
                "login": "sgouezel"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5qDmEc",
              "body": "Pull request successfully merged into master.\n\n  Build succeeded!\n\n  The publicly hosted instance of bors-ng is deprecated and will go away soon.\n\n  If you want to self-host your own instance, [instructions are here][instructions].\n  For more help, visit [the forum].\n\n  If you want to switch to GitHub's built-in merge queue, visit [their help page][gh].\n\n  [instructions]: https://github.com/bors-ng/bors-ng#how-to-set-up-your-own-real-instance\n  [the forum]: https://forum.bors.tech\n  [gh]: https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/configuring-pull-request-merges/managing-a-merge-queue\n\n\n\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/6641027128/job/18042626928)\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/6641027128/job/18042627539)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/6641027128/job/18042628146)",
              "createdAt": "2023-10-25T13:52:55Z",
              "author": {
                "login": "bors"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "048c5e40e0f068895f3b7c5799cbdf72625ecc66",
                "additions": 359,
                "deletions": 192,
                "committedDate": "2023-10-20T23:01:29Z",
                "author": {
                  "name": "Geoffrey Irving",
                  "email": "irving@naml.us"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "a306c44feedd90d8ee573ecf1dde5d20dae84ee1",
                "additions": 1,
                "deletions": 1,
                "committedDate": "2023-10-21T21:32:06Z",
                "author": {
                  "name": "Mario Carneiro",
                  "email": "di.gama@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "a0a73874732320fc4ba95cd3ab7ecf5a5fd20a1e",
                "additions": 5,
                "deletions": 8,
                "committedDate": "2023-10-23T11:07:30Z",
                "author": {
                  "name": "David Loeffler",
                  "email": "d.loeffler.01@cantab.net"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "9de0322cf5dac5d0eb508f6d0bf88497711be114",
                "additions": 1,
                "deletions": 1,
                "committedDate": "2023-10-23T16:32:38Z",
                "author": {
                  "name": "Geoffrey Irving",
                  "email": "irving@naml.us"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "04593be46fa096b799a69a4af8569ec4457b568f",
                "additions": 1,
                "deletions": 1,
                "committedDate": "2023-10-23T16:33:18Z",
                "author": {
                  "name": "Geoffrey Irving",
                  "email": "irving@naml.us"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "e52ca4aecb5de6d9cc1d41e92993a6ef0e9e310d",
                "additions": 18,
                "deletions": 26,
                "committedDate": "2023-10-23T18:50:16Z",
                "author": {
                  "name": "Geoffrey Irving",
                  "email": "irving@naml.us"
                },
                "statusCheckRollup": null
              }
            }
          ]
        },
        "createdAt": "2023-10-14T19:23:04Z",
        "deletions": 191,
        "files": {
          "nodes": [
            {
              "path": "Mathlib.lean",
              "additions": 1,
              "deletions": 0
            },
            {
              "path": "Mathlib/Analysis/Analytic/Basic.lean",
              "additions": 9,
              "deletions": 114
            },
            {
              "path": "Mathlib/Analysis/Analytic/Constructions.lean",
              "additions": 317,
              "deletions": 0
            },
            {
              "path": "Mathlib/Analysis/Analytic/Linear.lean",
              "additions": 19,
              "deletions": 61
            },
            {
              "path": "Mathlib/Analysis/Calculus/FormalMultilinearSeries.lean",
              "additions": 0,
              "deletions": 15
            },
            {
              "path": "lean-toolchain",
              "additions": 1,
              "deletions": 1
            }
          ]
        },
        "headRefName": "GI_analytic",
        "headRefOid": "e52ca4aecb5de6d9cc1d41e92993a6ef0e9e310d",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c5cz4d6",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
              "color": "06e039",
              "name": "ready-to-merge"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABViJeVg",
              "color": "33DBEC",
              "name": "t-analysis"
            }
          ]
        },
        "latestReviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5kMOof",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-10-16T20:44:24Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5kE2O-",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "kim-em"
              },
              "submittedAt": "2023-10-16T02:41:08Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5kyMkN",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "alreadydone"
              },
              "submittedAt": "2023-10-20T20:45:23Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5kMRg9",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "AntoineChambert-Loir"
              },
              "submittedAt": "2023-10-16T20:53:18Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5kMcZO",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "ADedecker"
              },
              "submittedAt": "2023-10-16T21:22:59Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5k3gPg",
              "body": "I pushed a small change which just gets rid of some repetition in the statements. Otherwise LGTM (but I am not a maintainer, so my word is not enough to merge).",
              "state": "APPROVED",
              "author": {
                "login": "loefflerd"
              },
              "submittedAt": "2023-10-23T11:09:10Z"
            }
          ]
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "UNKNOWN",
        "mergeable": "UNKNOWN",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 7677,
        "potentialMergeCommit": null,
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": "APPROVED",
        "reviewRequests": {
          "nodes": [
            {
              "requestedReviewer": {
                "id": "MDQ6VXNlcjEwODE4NDM0",
                "login": "sgouezel"
              }
            }
          ]
        },
        "reviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5kDFCP",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "kim-em"
              },
              "submittedAt": "2023-10-14T23:52:59Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5kDFCq",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "kim-em"
              },
              "submittedAt": "2023-10-14T23:53:11Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5kDFDU",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "kim-em"
              },
              "submittedAt": "2023-10-14T23:53:50Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5kDFEb",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "kim-em"
              },
              "submittedAt": "2023-10-14T23:55:21Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5kDFE-",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "kim-em"
              },
              "submittedAt": "2023-10-14T23:56:06Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5kD8Jx",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-10-15T08:49:35Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5kERKO",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "girving"
              },
              "submittedAt": "2023-10-15T18:15:28Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5kERKj",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "girving"
              },
              "submittedAt": "2023-10-15T18:15:39Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5kERK5",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "girving"
              },
              "submittedAt": "2023-10-15T18:15:48Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5kE2O-",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "kim-em"
              },
              "submittedAt": "2023-10-16T02:41:08Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5kMMTe",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "AntoineChambert-Loir"
              },
              "submittedAt": "2023-10-16T20:37:38Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5kMNS5",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "AntoineChambert-Loir"
              },
              "submittedAt": "2023-10-16T20:40:16Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5kMOaE",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "girving"
              },
              "submittedAt": "2023-10-16T20:43:46Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5kMOof",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-10-16T20:44:24Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5kMPdg",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "girving"
              },
              "submittedAt": "2023-10-16T20:46:56Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5kMQJ9",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "AntoineChambert-Loir"
              },
              "submittedAt": "2023-10-16T20:49:05Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5kMRG5",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "girving"
              },
              "submittedAt": "2023-10-16T20:52:00Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5kMRg9",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "AntoineChambert-Loir"
              },
              "submittedAt": "2023-10-16T20:53:18Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5kMb7Z",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "ADedecker"
              },
              "submittedAt": "2023-10-16T21:21:23Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5kMcZO",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "ADedecker"
              },
              "submittedAt": "2023-10-16T21:22:59Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5kQe0C",
              "body": "This looks very good, although I have many minor comments as expected. Thanks!",
              "state": "COMMENTED",
              "author": {
                "login": "sgouezel"
              },
              "submittedAt": "2023-10-17T11:29:39Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5kVPr4",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "girving"
              },
              "submittedAt": "2023-10-17T20:16:02Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5kpr3F",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "girving"
              },
              "submittedAt": "2023-10-19T21:06:58Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5kpsYJ",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "girving"
              },
              "submittedAt": "2023-10-19T21:08:45Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5kpsqT",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "girving"
              },
              "submittedAt": "2023-10-19T21:09:42Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5kpsys",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "girving"
              },
              "submittedAt": "2023-10-19T21:10:07Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5kpte6",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "girving"
              },
              "submittedAt": "2023-10-19T21:11:45Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5kpxRa",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "girving"
              },
              "submittedAt": "2023-10-19T21:21:00Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5kpx5P",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "girving"
              },
              "submittedAt": "2023-10-19T21:21:51Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5ksbGD",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "loefflerd"
              },
              "submittedAt": "2023-10-20T08:18:49Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5ktAlM",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "girving"
              },
              "submittedAt": "2023-10-20T08:31:02Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5ktA6B",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "girving"
              },
              "submittedAt": "2023-10-20T08:31:48Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5ktCy5",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "loefflerd"
              },
              "submittedAt": "2023-10-20T08:34:49Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5ktehg",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "girving"
              },
              "submittedAt": "2023-10-20T09:37:07Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5kyMkN",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "alreadydone"
              },
              "submittedAt": "2023-10-20T20:45:23Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5kyl1r",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "girving"
              },
              "submittedAt": "2023-10-20T23:03:08Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5k3gPg",
              "body": "I pushed a small change which just gets rid of some repetition in the statements. Otherwise LGTM (but I am not a maintainer, so my word is not enough to merge).",
              "state": "APPROVED",
              "author": {
                "login": "loefflerd"
              },
              "submittedAt": "2023-10-23T11:09:10Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5k5b9O",
              "body": "Looks great, thanks!",
              "state": "COMMENTED",
              "author": {
                "login": "sgouezel"
              },
              "submittedAt": "2023-10-23T16:03:41Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5k7TqY",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "girving"
              },
              "submittedAt": "2023-10-23T18:42:13Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5k7Tzc",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "girving"
              },
              "submittedAt": "2023-10-23T18:42:24Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5k7T92",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "girving"
              },
              "submittedAt": "2023-10-23T18:42:37Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5k7UoO",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "girving"
              },
              "submittedAt": "2023-10-23T18:43:16Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5k7YhO",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "girving"
              },
              "submittedAt": "2023-10-23T18:46:49Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5k7ZJP",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "girving"
              },
              "submittedAt": "2023-10-23T18:47:16Z"
            }
          ]
        },
        "reviewThreads": {
          "nodes": [
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5RCzaA",
                    "body": "```suggestion\r\n/-- `fst` is entire -/\r\n```",
                    "createdAt": "2023-10-14T23:52:59Z",
                    "author": {
                      "login": "kim-em"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5RCzaY",
                    "body": "```suggestion\r\n/-- `snd` is entire -/\r\n```",
                    "createdAt": "2023-10-14T23:53:11Z",
                    "author": {
                      "login": "kim-em"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5RCzbT",
                    "body": "```suggestion\r\n/-- Products of analytic functions are analytic -/\r\n```",
                    "createdAt": "2023-10-14T23:53:50Z",
                    "author": {
                      "login": "kim-em"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5RCzdW",
                    "body": "```suggestion\r\n    (m : ∀ x, x ∈ t → (f x, g x) ∈ s) : AnalyticOn 𝕜 (fun x ↦ h (f x) (g x)) t := \r\n  fun _ xt ↦ (ha _ (m _ xt)).curry_comp (fa _ xt) (ga _ xt)\r\n```\r\nI think we tend not to keep the `fun` on the `:=` line, although probably Mathlib is inconsistent about this.",
                    "createdAt": "2023-10-14T23:55:21Z",
                    "author": {
                      "login": "kim-em"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5RDsiZ",
                    "body": "Done.  Is there a way to lint for this?",
                    "createdAt": "2023-10-15T18:15:28Z",
                    "author": {
                      "login": "girving"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5RCzeh",
                    "body": "Not completely essential, but I think it's good style to use `· ` every time there are multiple goals.",
                    "createdAt": "2023-10-14T23:56:05Z",
                    "author": {
                      "login": "kim-em"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5RDsi-",
                    "body": "Done.\r\n\r\nIs there a way to lint for this?  (I think I have a bunch of these throughout https://github.com/girving/ray.)",
                    "createdAt": "2023-10-15T18:15:48Z",
                    "author": {
                      "login": "girving"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5REIjS",
                    "body": "I think it would be tricky to lint for. There are valid tactics to run when you have multiple goals open (`rotate_right`, `solve_by_elim*`, ...).",
                    "createdAt": "2023-10-16T02:41:08Z",
                    "author": {
                      "login": "kim-em"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5RDXFR",
                    "body": "Does this generalize to a Finset of an arbitrary type?",
                    "createdAt": "2023-10-15T08:49:35Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5RDsir",
                    "body": "Done.",
                    "createdAt": "2023-10-15T18:15:39Z",
                    "author": {
                      "login": "girving"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5RIt0L",
                    "body": "For the docstring, I'd say \"implies continuous\" rather than \"means\".",
                    "createdAt": "2023-10-16T20:37:38Z",
                    "author": {
                      "login": "AntoineChambert-Loir"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5RIvAB",
                    "body": "Done.",
                    "createdAt": "2023-10-16T20:43:46Z",
                    "author": {
                      "login": "girving"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5RIuUP",
                    "body": "Is it possible to treat a bilinear/multilinear map rather than product?\r\n(It could be possible to use composition, once it is proved that a bilinear/multilinear map is analytic)",
                    "createdAt": "2023-10-16T20:40:16Z",
                    "author": {
                      "login": "AntoineChambert-Loir"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5RIvIF",
                    "body": "I don't understand the request, `prod.mk` isn't bilinear!",
                    "createdAt": "2023-10-16T20:44:24Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5RIvpb",
                    "body": "I'm not sure I follow the suggestion, but it seems like this would be best handled by a separate lemma that bilinear maps are analytic composed with this one, and then the chained version.  I'll be doing that in particular to handle the case of multiplication in the next PR.  But it seems like we want this case regardless (and certainly I use it directly all the time downstream).",
                    "createdAt": "2023-10-16T20:46:56Z",
                    "author": {
                      "login": "girving"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5RIwHk",
                    "body": "Indeed. I confused `prod` with product (in a field…).",
                    "createdAt": "2023-10-16T20:49:05Z",
                    "author": {
                      "login": "AntoineChambert-Loir"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5RIwuO",
                    "body": "Out of scope for this PR, but coming... (I need to clean it up a bit first)\r\n\r\nhttps://github.com/girving/ray/blob/01188729d12baffe1bc0d88340223ea6e77ce280/Ray/Analytic/Analytic.lean#L180",
                    "createdAt": "2023-10-16T20:52:00Z",
                    "author": {
                      "login": "girving"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5RIw_k",
                    "body": "Another product is possible, which takes two analytic functions E -> F and G -> H and considers the map E x G -> F x H.\r\nYour product is a restriction to the diagonal.\r\nAlso, what about things like (Fin n -> E -> F) and its dependent variant (Fin n -> E n -> F n)?",
                    "createdAt": "2023-10-16T20:53:18Z",
                    "author": {
                      "login": "AntoineChambert-Loir"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5RI3Vh",
                    "body": "The usual way we organize things (e.g for `Continuous`) is to first prove that maps to a product are continuous iff each component is. Then it's easy to deduce that both notions of product work well. AFAIK there's no reason that it wouldn't work for analyticity (see `ContinuousMultilinearMap.prod`)\n\nAnd indeed the same scheme works for both `Prod` and (finite? I'm not even sure we need it) `Pi` (see `ContinuousMultilinearMap.pi`).",
                    "createdAt": "2023-10-16T21:21:22Z",
                    "author": {
                      "login": "ADedecker"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5RI3nd",
                    "body": "Regarding naming I think this is right though. We use `prod` to refer to the \"diagonal\" product (aka applying the universal property) and `prod_map` to refer to the one Antoine describes. ",
                    "createdAt": "2023-10-16T21:22:59Z",
                    "author": {
                      "login": "ADedecker"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5RbTDT",
                    "body": "Resolved, since someone already added `prod`.",
                    "createdAt": "2023-10-19T21:06:57Z",
                    "author": {
                      "login": "girving"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5RLYis",
                    "body": "could you only require `h` for elements of `N`?",
                    "createdAt": "2023-10-17T11:13:51Z",
                    "author": {
                      "login": "sgouezel"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5RbWqR",
                    "body": "Oops, missed these comments.  Fixed, about to push.",
                    "createdAt": "2023-10-19T21:21:00Z",
                    "author": {
                      "login": "girving"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5RLY33",
                    "body": "```suggestion\r\n    AnalyticAt 𝕜 (fun z ↦ ∑ n in N, f n z) c := by\r\n```\r\nis easier to read. (You may need to `open scoped BigOperators`)",
                    "createdAt": "2023-10-17T11:15:08Z",
                    "author": {
                      "login": "sgouezel"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5RLY-m",
                    "body": "ditto.",
                    "createdAt": "2023-10-17T11:15:33Z",
                    "author": {
                      "login": "sgouezel"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5RLayr",
                    "body": "Normally, we use a single tactic per line (except in one line proofs). Here, you could use \r\n```\r\n    refine ENNReal.le_of_forall_nnreal_lt (fun r rr ↦ ?_)\r\n```\r\nto get the same effect as your two tactics.",
                    "createdAt": "2023-10-17T11:22:40Z",
                    "author": {
                      "login": "sgouezel"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5RbXIG",
                    "body": "Will do in future (though apologies in advance as I expect to accidentally let a variety of them through as I do this a lot in the current code).  In any case, obsolete here as this function was already upstreamed by someone else.",
                    "createdAt": "2023-10-19T21:21:50Z",
                    "author": {
                      "login": "girving"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5RLbVo",
                    "body": "```suggestion\r\n        intro y yr\r\n        apply HasSum.prod_mk\r\n```",
                    "createdAt": "2023-10-17T11:24:43Z",
                    "author": {
                      "login": "sgouezel"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5RbTk9",
                    "body": "Obsolete; `AnalyticAt.prod` went in in a separate PR.",
                    "createdAt": "2023-10-19T21:09:42Z",
                    "author": {
                      "login": "girving"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5RLbgq",
                    "body": "At this point of your proof, you have two goals, so you should focus on the first one and then the second one, with\r\n```suggestion\r\n        · exact fp.hasSum (EMetric.ball_subset_ball (min_le_left _ _) yr)\r\n        · exact gq.hasSum (EMetric.ball_subset_ball (min_le_right _ _) yr) }\r\n```",
                    "createdAt": "2023-10-17T11:25:26Z",
                    "author": {
                      "login": "sgouezel"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5RbTqq",
                    "body": "Obsolete.",
                    "createdAt": "2023-10-19T21:10:06Z",
                    "author": {
                      "login": "girving"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5RLb7n",
                    "body": "The canonical name per our naming conventions would be\r\n```suggestion\r\ntheorem AnalyticAt.comp₂ {h : F → G → H} {f : E → F} {g : E → G} {x : E}\r\n```\r\nSame thing below.",
                    "createdAt": "2023-10-17T11:27:03Z",
                    "author": {
                      "login": "sgouezel"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5ROVGq",
                    "body": "Hmm that does seem like it's `defeq` to the version with explicit curry, but I should check to see if things infer correctly when doing `apply` in tactics.  +1 to it being way better if things do work.\r\n\r\n(Thank you for this and the other comments!  Will check this and resolve the other changes later, but might be a couple day delay.)",
                    "createdAt": "2023-10-17T20:16:02Z",
                    "author": {
                      "login": "girving"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5RbTYU",
                    "body": "I checked, and this works great.  Fixed.",
                    "createdAt": "2023-10-19T21:08:45Z",
                    "author": {
                      "login": "girving"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5RLcAV",
                    "body": "```suggestion\r\n  rw [e]\r\n```",
                    "createdAt": "2023-10-17T11:27:22Z",
                    "author": {
                      "login": "sgouezel"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5RLceH",
                    "body": "```suggestion\r\n    (fa : AnalyticAt 𝕜 (uncurry f) p) :\r\n```\r\nWith my formulation, the lemma will apply in all situations (including the case of `(x, y)`), while your version will only apply when the point is already written as a product.\r\n\r\nSame thing below.",
                    "createdAt": "2023-10-17T11:29:17Z",
                    "author": {
                      "login": "sgouezel"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5RbUGB",
                    "body": "Fixed, thank you!",
                    "createdAt": "2023-10-19T21:11:44Z",
                    "author": {
                      "login": "girving"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5RgfJb",
                    "body": "```suggestion\r\n    (fa : AnalyticAt 𝕜 (uncurry f) p) :\r\n```\r\nSide comment: several lemmas around [nhds_prod_eq](https://leanprover-community.github.io/mathlib4_docs/Mathlib/Topology/Constructions.html#nhds_prod_eq) should probably also be \"generalized\" this way.",
                    "createdAt": "2023-10-20T20:45:23Z",
                    "author": {
                      "login": "alreadydone"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5Rc_aG",
                    "body": "It seems possibly nonoptimal that this file is called `Prod`, but the definition of `AnalyticAt.prod` is not in it. Since `Analytic.Basic` is probably a bit on the long side anyway, it might be best to move the `prod` constructions that I put into `Basic` into this new file of yours. (Since it also imports `Linear`, it probably makes sense to move `AnalyticAt.mul` and its cousins here as well.)",
                    "createdAt": "2023-10-20T06:59:16Z",
                    "author": {
                      "login": "loefflerd"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5RdXqp",
                    "body": "Should I call it `Constructions.lean` then, or something else?",
                    "createdAt": "2023-10-20T08:31:48Z",
                    "author": {
                      "login": "girving"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5RdYeB",
                    "body": "Yes, that sounds like a good name for it.",
                    "createdAt": "2023-10-20T08:34:49Z",
                    "author": {
                      "login": "loefflerd"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5RgwTl",
                    "body": "Done, and while I was at it I added a few more lemmas about `inv` and `div` (and `Finset.prod`).",
                    "createdAt": "2023-10-20T23:03:08Z",
                    "author": {
                      "login": "girving"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5RdQW9",
                    "body": "Where are the curried functions here? In this statement `h` is not curried. The curried form of `h` would be the map from `F` to functions `G → H` sending `x \\in H` to the function `y ↦ h x y`. \r\n\r\nIn nice situations (e.g. continuous functions on compacts) the continuity of `h` as a map on `F \\times G` is equivalent to continuity of its curried form as a map `F \\to C(G, H)`, so one can reduce continuity problems to a single variable (at a cost of allowing the target space to be large). But I'm not sure that's even defined here; the space of functions that are analytic at a given point (and arbitrary elsewhere) isn't a Banach space in any natural way, so I don't think we can define analyticity with this space as target.",
                    "createdAt": "2023-10-20T08:06:59Z",
                    "author": {
                      "login": "loefflerd"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5RdQzT",
                    "body": "(Just to clarify, I have nothing against the content of these lemmas, I'm just advocating for a change to the docstrings.)",
                    "createdAt": "2023-10-20T08:08:41Z",
                    "author": {
                      "login": "loefflerd"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5RdXco",
                    "body": "Sorry, will fix: they used to be curried and called `curry_comp`, but I fixed names and definitions to not be curried but not the doctoring. ",
                    "createdAt": "2023-10-20T08:31:02Z",
                    "author": {
                      "login": "girving"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5Rdqtq",
                    "body": "I’m actually going to need that Banach space (the Linf version) later on to extend Hartogs theorem from 2D to ND, but I’ll build that when I use it. ",
                    "createdAt": "2023-10-20T09:37:07Z",
                    "author": {
                      "login": "girving"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5RllmZ",
                    "body": "```suggestion\r\nCopyright (c) 2023 Geoffrey Irving. All rights reserved.\r\n```\r\nJust one name on this line, the creator of the file. What matters more is the authors line below.",
                    "createdAt": "2023-10-23T14:49:52Z",
                    "author": {
                      "login": "sgouezel"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5Rllzo",
                    "body": "```suggestion\r\n/-- The radius of the Cartesian product of two formal series is the minimum of their radii. -/\r\n```",
                    "createdAt": "2023-10-23T14:50:26Z",
                    "author": {
                      "login": "sgouezel"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5Rl3om",
                    "body": "```suggestion\r\n  (analyticAt_mul (f z, g z)).comp₂ hf hg\r\n```\r\nThe `comp₂` API is designed exactly to avoid the mess of the `@` version.",
                    "createdAt": "2023-10-23T15:34:07Z",
                    "author": {
                      "login": "sgouezel"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5RmwuM",
                    "body": "Done.",
                    "createdAt": "2023-10-23T18:42:24Z",
                    "author": {
                      "login": "girving"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5Rl4Vo",
                    "body": "```suggestion\r\n  (analyticAt_smul (f z, g z)).comp₂ hf hg\r\n```",
                    "createdAt": "2023-10-23T15:36:16Z",
                    "author": {
                      "login": "sgouezel"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5Rmwpd",
                    "body": "Done.",
                    "createdAt": "2023-10-23T18:42:13Z",
                    "author": {
                      "login": "girving"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5Rl-0B",
                    "body": "```suggestion\r\n    ‖formalMultilinearSeries_geometric 𝕜 A n‖ = 1 :=\r\n  ContinuousMultilinearMap.norm_mkPiAlgebraFin (Ei := fun _ ↦ A)\r\n```\r\nUsing named arguments is both more robust and more readable.",
                    "createdAt": "2023-10-23T15:56:40Z",
                    "author": {
                      "login": "sgouezel"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5RmwzN",
                    "body": "Done.",
                    "createdAt": "2023-10-23T18:42:37Z",
                    "author": {
                      "login": "girving"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5Rl_vV",
                    "body": "```suggestion\r\n  have feq : f1 ∘ f2 ∘ f3 = Inv.inv := by\r\n    ext1 x\r\n```\r\nAfter a `have`, it's better practice to use `:= by` to zoom on the goal of the have directly, instead of relying on Lean to manage the list of different goals. Same thing three lines below.",
                    "createdAt": "2023-10-23T15:59:16Z",
                    "author": {
                      "login": "sgouezel"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5RmxKL",
                    "body": "Done.",
                    "createdAt": "2023-10-23T18:43:16Z",
                    "author": {
                      "login": "girving"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5RmACx",
                    "body": "```suggestion\r\n    (N : Finset α) (h : ∀ n ∈ N, AnalyticAt 𝕜 (f n) c) :\r\n```\r\nIt's exactly the same thing, just more readable. Same thing below.",
                    "createdAt": "2023-10-23T16:00:21Z",
                    "author": {
                      "login": "sgouezel"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5RmzHT",
                    "body": "Done.",
                    "createdAt": "2023-10-23T18:46:48Z",
                    "author": {
                      "login": "girving"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5RmA_y",
                    "body": "```suggestion\r\n```\r\nLooks unnecessary.",
                    "createdAt": "2023-10-23T16:03:22Z",
                    "author": {
                      "login": "sgouezel"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5RmzZV",
                    "body": "Gone.",
                    "createdAt": "2023-10-23T18:47:16Z",
                    "author": {
                      "login": "girving"
                    }
                  }
                ]
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjcwNTEx",
              "login": "girving"
            },
            {
              "id": "MDQ6VXNlcjQ4NjU2Nzkz",
              "login": "ADedecker"
            },
            {
              "id": "MDQ6VXNlcjM0Mzk2ODg=",
              "login": "loefflerd"
            },
            {
              "id": "MDQ6VXNlcjg2ODU4OA==",
              "login": "digama0"
            },
            {
              "id": "MDQ6VXNlcjEwODE4NDM0",
              "login": "sgouezel"
            },
            {
              "id": "MDQ6VXNlcjQyNTI2MA==",
              "login": "eric-wieser"
            },
            {
              "id": "MDQ6VXNlcjQ3Nzk1Ng==",
              "login": "kim-em"
            },
            {
              "id": "MDQ6VXNlcjMwNjQxNDU=",
              "login": "alreadydone"
            },
            {
              "id": "MDQ6VXNlcjQ4MTczNDg=",
              "login": "AntoineChambert-Loir"
            },
            {
              "id": "U_kgDOB75MNQ",
              "login": "leanprover-community-mathlib4-bot"
            }
          ]
        },
        "state": "CLOSED",
        "statusCheckRollup": null,
        "title": "[Merged by Bors] - feat(Analysis/Analytic): A few lemmas that simple things are analytic",
        "updatedAt": "2023-10-25T13:52:59Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/7677",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c5z123vzwAAAAJ7HkUj",
              "createdAt": "2023-10-14T19:25:55Z"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5pF_jW",
              "createdAt": "2023-10-14T20:57:04Z",
              "body": "Thanks for your first PR! Is it ready for review yet? If so, please add the \"awaiting-review\" and \"t-analysis\" labels, otherwise this PR won't appear in the list of PRs to review that most maintainers use :wink: See https://leanprover-community.github.io/contribute/index.html#lifecycle-of-a-pr for more details.",
              "author": {
                "login": "ADedecker"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5kDFCP",
              "createdAt": "2023-10-14T23:52:58Z",
              "body": "",
              "author": {
                "login": "kim-em"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5kDFCq",
              "createdAt": "2023-10-14T23:53:10Z",
              "body": "",
              "author": {
                "login": "kim-em"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5kDFDU",
              "createdAt": "2023-10-14T23:53:49Z",
              "body": "",
              "author": {
                "login": "kim-em"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5kDFEb",
              "createdAt": "2023-10-14T23:55:21Z",
              "body": "",
              "author": {
                "login": "kim-em"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5kDFE-",
              "createdAt": "2023-10-14T23:56:05Z",
              "body": "",
              "author": {
                "login": "kim-em"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5kD8Jx",
              "createdAt": "2023-10-15T08:49:35Z",
              "body": "",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5z123vzwAAAAJ7R0Jd",
              "createdAt": "2023-10-15T18:21:38Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5z123vzwAAAAJ7R2rs",
              "createdAt": "2023-10-15T18:27:57Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABViJeVg",
                "name": "t-analysis"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5kMMTe",
              "createdAt": "2023-10-16T20:37:38Z",
              "body": "",
              "author": {
                "login": "AntoineChambert-Loir"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5kMNS5",
              "createdAt": "2023-10-16T20:40:15Z",
              "body": "",
              "author": {
                "login": "AntoineChambert-Loir"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5kQe0C",
              "createdAt": "2023-10-17T11:13:51Z",
              "body": "This looks very good, although I have many minor comments as expected. Thanks!",
              "author": {
                "login": "sgouezel"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5z123vzwAAAAJ8aXK4",
              "createdAt": "2023-10-17T11:29:59Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5z123vzwAAAAJ8aXLH",
              "createdAt": "2023-10-17T11:29:59Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5pUfBq",
              "createdAt": "2023-10-17T18:50:05Z",
              "body": "Note that there is a big overlap with #7552, which also proves analyticity of the product (cc @loefflerd). ",
              "author": {
                "login": "ADedecker"
              }
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5pUq2n",
              "createdAt": "2023-10-17T19:23:28Z",
              "body": "> Note that there is a big overlap with #7552, which also proves analyticity of the product (cc @loefflerd).\r\n\r\nYes, indeed. @girving : how much of my PR is contained in this one of yours + others that will be following in the near future? If the answer is \"all of it\" then I'm happy to just delete my PR.",
              "author": {
                "login": "loefflerd"
              }
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5z123vzwAAAAJ9U187",
              "createdAt": "2023-10-18T12:48:49Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5pc3fW",
              "createdAt": "2023-10-18T19:20:09Z",
              "body": "I see, that PR stomps on most/all of my mine.  In a good way, since they are the same, but: possibly I should just hold off submitting things for a while, unless something is interested in taking a look through the code and figuring out if there is a useful thing to upstream that won't be immediately wasted effort on my part as I'm learning the system.  This is pure hobby stuff for me, so I often won't be able to turn things around rapidly.\r\n\r\nThe key aspect is that when doing this kind of small upstreaming I will often need to generalize my current https://github.com/girving/ray code to make it suitable for wider use.  It would be better to do that generalization work if there is some confidence that no one else is doing it at exactly the same time, and faster and better than me due to experience.",
              "author": {
                "login": "girving"
              }
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c5z123vzwAAAAJ-yadp",
              "createdAt": "2023-10-19T21:17:58Z"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5pmkts",
              "createdAt": "2023-10-19T21:18:00Z",
              "body": "Apologies for overreacting above.  It seems like this was a coincidental collision and just happened to occur on my first PR.  Hopefully it will not happen most of the time. :)\r\n\r\nIn any case, I've rebased.  Now the results added are just the very simple ones, since `.prod` is gone.  Back to review!  Some questions I have:\r\n\r\n1. What's the right name of `.along_fst` and `.along_snd`?  Is there a standard name to use?\r\n2. Should I move things in `Prod.lean` to `Basic.lean` or `Linear.lean`, especially since `.prod` is now in `Basic`?",
              "author": {
                "login": "girving"
              }
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c5z123vzwAAAAJ-ytNf",
              "createdAt": "2023-10-19T21:27:46Z"
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5z123vzwAAAAJ-yvib",
              "createdAt": "2023-10-19T21:29:05Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5z123vzwAAAAJ-yvig",
              "createdAt": "2023-10-19T21:29:05Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5z123vzwAAAAJ-yzYr",
              "createdAt": "2023-10-19T21:31:07Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "ReviewRequestedEvent",
              "id": "RRE_lADOFcwZ1c5z123vzwAAAAJ-06jH",
              "createdAt": "2023-10-19T22:59:19Z",
              "requestedReviewer": {
                "id": "MDQ6VXNlcjEwODE4NDM0",
                "login": "sgouezel"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5ksbGD",
              "createdAt": "2023-10-20T06:59:16Z",
              "body": "",
              "author": {
                "login": "loefflerd"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "048c5e40e0f068895f3b7c5799cbdf72625ecc66"
              }
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c5z123vzwAAAAJ_hRn6",
              "createdAt": "2023-10-20T23:02:07Z"
            },
            {
              "__typename": "ReviewRequestedEvent",
              "id": "RRE_lADOFcwZ1c5z123vzwAAAAJ_hTVD",
              "createdAt": "2023-10-20T23:03:54Z",
              "requestedReviewer": {
                "id": "MDQ6VXNlcjM0Mzk2ODg=",
                "login": "loefflerd"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "a306c44feedd90d8ee573ecf1dde5d20dae84ee1"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5pu_uj",
              "createdAt": "2023-10-21T21:32:08Z",
              "body": "Note: I have pushed an update to the lean toolchain because this PR was on a [buggy version](https://leanprover.zulipchat.com/#narrow/stream/113488-general/topic/Potential.20data.20loss.20from.20.60lake.20clean.60.20with.204.2E2.2E0-rc2.2F3/near/397875701) of the toolchain. **WARNING**: checking out old commits of this PR using v4.2.0-rc2 or v4.2.0-rc3 can cause `lake clean` to delete your mathlib folder! If you need to do so, make sure to delete `lakefile.olean` manually before running any `lake` commands.",
              "author": {
                "login": "digama0"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "a0a73874732320fc4ba95cd3ab7ecf5a5fd20a1e"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5k3gPg",
              "createdAt": "2023-10-23T11:09:10Z",
              "body": "I pushed a small change which just gets rid of some repetition in the statements. Otherwise LGTM (but I am not a maintainer, so my word is not enough to merge).",
              "author": {
                "login": "loefflerd"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5pzONF",
              "createdAt": "2023-10-23T11:58:52Z",
              "body": "@loefflerd: Thank you!  Those changes look good. ",
              "author": {
                "login": "girving"
              }
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5k5b9O",
              "createdAt": "2023-10-23T14:49:52Z",
              "body": "Looks great, thanks!",
              "author": {
                "login": "sgouezel"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "9de0322cf5dac5d0eb508f6d0bf88497711be114"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "04593be46fa096b799a69a4af8569ec4457b568f"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "e52ca4aecb5de6d9cc1d41e92993a6ef0e9e310d"
              }
            },
            {
              "__typename": "ReviewRequestedEvent",
              "id": "RRE_lADOFcwZ1c5z123vzwAAAAKAcyaA",
              "createdAt": "2023-10-23T18:51:44Z",
              "requestedReviewer": {
                "id": "MDQ6VXNlcjEwODE4NDM0",
                "login": "sgouezel"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5qDWSC",
              "createdAt": "2023-10-25T13:20:35Z",
              "body": "bors r+\r\nThanks!",
              "author": {
                "login": "sgouezel"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5z123vzwAAAAKBydwI",
              "createdAt": "2023-10-25T13:20:48Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
                "name": "ready-to-merge"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5z123vzwAAAAKBydzd",
              "createdAt": "2023-10-25T13:20:49Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5qDmEc",
              "createdAt": "2023-10-25T13:52:55Z",
              "body": "Pull request successfully merged into master.\n\n  Build succeeded!\n\n  The publicly hosted instance of bors-ng is deprecated and will go away soon.\n\n  If you want to self-host your own instance, [instructions are here][instructions].\n  For more help, visit [the forum].\n\n  If you want to switch to GitHub's built-in merge queue, visit [their help page][gh].\n\n  [instructions]: https://github.com/bors-ng/bors-ng#how-to-set-up-your-own-real-instance\n  [the forum]: https://forum.bors.tech\n  [gh]: https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/configuring-pull-request-merges/managing-a-merge-queue\n\n\n\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/6641027128/job/18042626928)\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/6641027128/job/18042627539)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/6641027128/job/18042628146)",
              "author": {
                "login": "bors"
              }
            },
            {
              "__typename": "RenamedTitleEvent"
            },
            {
              "__typename": "ClosedEvent",
              "id": "CE_lADOFcwZ1c5z123vzwAAAAKB0R6o",
              "createdAt": "2023-10-25T13:52:56Z"
            },
            {
              "__typename": "HeadRefDeletedEvent",
              "id": "HRDE_lADOFcwZ1c5z123vzwAAAAKB0SGH",
              "createdAt": "2023-10-25T13:52:59Z"
            }
          ]
        }
      }
    }
  }
}
