{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 155,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "loefflerd"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "Show that the Mellin transform of a power series in `exp (-t)` is the corresponding Dirchlet series.\r\n\r\n---\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n-->\r\n- [x] depends on: #11069\r\n- [x] depends on: #11150 \r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 2,
        "closed": true,
        "closedAt": "2024-03-28T10:26:37Z",
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c539sDo",
              "body": "This PR/issue depends on:\n* ~~leanprover-community/mathlib4#11069~~\n* ~~leanprover-community/mathlib4#11150~~\nBy **[Dependent Issues](https://github.com/z0al/dependent-issues)** (ðŸ¤–). Happy coding!\n<!-- By Dependent Issues (Action) - DO NOT REMOVE -->",
              "createdAt": "2024-03-21T15:32:25Z",
              "author": {
                "login": "leanprover-community-mathlib4-bot"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c54T0c4",
              "body": "There are a lot of fiddly things involving complex and/or real powers, norms, gamma functions, ...\r\nI was wondering whether one could perhaps extract some more general lemmas to help with that. But maybe all these instances are sufficiently different from one another to really make this possible.\r\n\r\nOne thing to be added could be `Complex.ne_zero_of_zero_lt_re` (compare [Complex.ne_zero_of_one_lt_re](https://leanprover-community.github.io/mathlib4_docs/Mathlib/Data/Complex/Abs.html#Complex.ne_zero_of_one_lt_re)).",
              "createdAt": "2024-03-25T16:52:20Z",
              "author": {
                "login": "MichaelStollBayreuth"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c54UjrU",
              "body": "See, e.g., the private lemma `foo` [here](https://github.com/MichaelStollBayreuth/EulerProducts/blob/main/EulerProducts/LSeriesUnique.lean#L43) ...",
              "createdAt": "2024-03-25T18:34:41Z",
              "author": {
                "login": "MichaelStollBayreuth"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c54UyEb",
              "body": "> One thing to be added could be `Complex.ne_zero_of_zero_lt_re` (compare [Complex.ne_zero_of_one_lt_re](https://leanprover-community.github.io/mathlib4_docs/Mathlib/Data/Complex/Abs.html#Complex.ne_zero_of_one_lt_re).\r\n\r\nI'm not keen on this, the statement only gets used twice (+ once more with a slight variant) and the proof term is less than half a line long. I don't think it's worthy of being a lemma of its own. Anyway, where would we stop? If we have `Complex.ne_zero_of_zero_lt_re` and `Complex.ne_zero_of_one_lt_re`, are we going to have `Complex.ne_zero_of_seventeen_point_six_lt_re` as well?\r\n",
              "createdAt": "2024-03-25T19:07:53Z",
              "author": {
                "login": "loefflerd"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c54VGSv",
              "body": "The conditions `0 < s.re` and `1 < s.re` will be far more frequent than any other such bound, I would think, so there should not be much danger of this getting out of hand. But if you think you won't need it anywhere else, it is of course OK to leave it inlined.",
              "createdAt": "2024-03-25T19:54:27Z",
              "author": {
                "login": "MichaelStollBayreuth"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c54dzj8",
              "body": "> The conditions `0 < s.re` and `1 < s.re` will be far more frequent than any other such bound, I would think, so there should not be much danger of this getting out of hand. But if you think you won't need it anywhere else, it is of course OK to leave it inlined.\r\n\r\nAll of these non-vanishing statements are needed purely as inputs to `zero_cpow`, to check that `0 ^ s` terms don't cause any trouble. They could be got rid of entirely by using `if / then` in the statements to blank out the zero terms; e.g. by changing the conclusion of `hasSum_mellin_pi_mulâ‚€` from\r\n````\r\nHasSum (fun i â†¦ Ï€ ^ (-s) * Gamma s * a i / p i ^ s) (mellin F s)\r\n````\r\nto\r\n````\r\nHasSum (fun i â†¦ if i = 0 then 0 else Ï€ ^ (-s) * Gamma s * a i / p i ^ s) (mellin F s)\r\n````\r\nThis also simplifies the proofs considerably. The approach I'm suggesting here is of course heavily based on your `LSeries.term`, but isn't quite covered by that, since `LSeries.term` only works for `Nat`s while I definitely want to allow `p i` to be an arbitrary non-negative real.\r\n\r\nWhat do you think? I'd be happy with either option.\r\n",
              "createdAt": "2024-03-26T17:39:38Z",
              "author": {
                "login": "loefflerd"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c54eNAA",
              "body": "So far, the experience with how `LSeries.term` is set up was quite smooth. So the approach with blanking out the term at zero looks reasonable. Did you try to see if this leads to complications when you want to apply the results from this file?",
              "createdAt": "2024-03-26T18:27:17Z",
              "author": {
                "login": "MichaelStollBayreuth"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c54jCLY",
              "body": "> So far, the experience with how `LSeries.term` is set up was quite smooth. So the approach with blanking out the term at zero looks reasonable. Did you try to see if this leads to complications when you want to apply the results from this file?\r\n\r\nI tried this setup, but unfortunately it turns out to be more troublesome than I expected. Developing a whole API for a version of `LSeries.term` with `NNReal` exponents seems overkill; and without that, every single proof ends up being weighted down with numerous `split_ifs`. I think I'd rather keep the code as it was before, with the `s â‰  0` proofs inlined",
              "createdAt": "2024-03-27T10:44:33Z",
              "author": {
                "login": "loefflerd"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c54jTcc",
              "body": "OK, fine. Can you push your changes so that I can review them?",
              "createdAt": "2024-03-27T11:18:08Z",
              "author": {
                "login": "MichaelStollBayreuth"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c54jUJh",
              "body": "> OK, fine. Can you push your changes so that I can review them?\r\n\r\nI ended up deciding I'd prefer the code as it currently stands.",
              "createdAt": "2024-03-27T11:19:50Z",
              "author": {
                "login": "loefflerd"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c54kQTT",
              "body": "I don't think you pushed the small stylistic changes (even though you remarked the conversations as \"resolved\" and at one point said that you had \"golfed away\" a part of the proof).",
              "createdAt": "2024-03-27T13:27:47Z",
              "author": {
                "login": "MichaelStollBayreuth"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c54kUp8",
              "body": "> I don't think you pushed the small stylistic changes (even though you remarked the conversations as \"resolved\" and at one point said that you had \"golfed away\" a part of the proof).\r\n\r\nYou're quite right, I pushed them to the wrong branch by mistake! Sorry. ",
              "createdAt": "2024-03-27T13:35:02Z",
              "author": {
                "login": "loefflerd"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c54kkpo",
              "body": "maintainer merge\r\n",
              "createdAt": "2024-03-27T14:03:06Z",
              "author": {
                "login": "MichaelStollBayreuth"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c54kkxW",
              "body": "ðŸš€ Pull request has been placed on the maintainer queue by MichaelStollBayreuth.",
              "createdAt": "2024-03-27T14:03:19Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c54sO0w",
              "body": "Pull request successfully merged into master.\n\nBuild succeeded:\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/8465534672/job/23192437854)\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/8465534672/job/23192437160)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/8465534672/job/23192437610)",
              "createdAt": "2024-03-28T10:26:37Z",
              "author": {
                "login": "mathlib-bors"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "122dc8fdb742c35cf11bf8bc98a56aef9572a04d",
                "additions": 155,
                "deletions": 0,
                "committedDate": "2024-03-22T10:10:43Z",
                "author": {
                  "name": "David Loeffler",
                  "email": "d.loeffler.01@cantab.net"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFWVLIxA",
                        "name": "Add annotations",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8388701745/job/22973434052"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFWVLEtg",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8388701298/job/22973433014"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFWVLH5Q",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8388701301/job/22973433829"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFWVLIcQ",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8388701731/job/22973433969"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFWVLI9g",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8388701298/job/22973434102"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFWVLFsw",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8388701301/job/22973433267"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFWVLKAQ",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8388701731/job/22973434369"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFWVLGmw",
                        "name": "Check all files imported (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8388701298/job/22973433499"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFWVLGrQ",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8388701301/job/22973433517"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFWVLHyw",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8388701298/job/22973433803"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFWVLEeQ",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8388701301/job/22973432953"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFWVLFtw",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8388701298/job/22973433271"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFWVLJCg",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8388701301/job/22973434122"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFWVLKGg",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8388701298/job/22973434394"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFWWCCTg",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8388701301/job/22974333518"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFWVMcEQ",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/github/leanprover-community/repo/mathlib4/event-logs?pullRequestNumber=11190"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "b41e4e95042b26257638119b3673a1e0d71fd8de",
                "additions": 3724,
                "deletions": 2609,
                "committedDate": "2024-03-24T17:16:05Z",
                "author": {
                  "name": "David Loeffler",
                  "email": "d.loeffler.01@cantab.net"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "743e66227a88520b173dea88eaa11d502377ba0e",
                "additions": 2,
                "deletions": 2,
                "committedDate": "2024-03-24T17:23:12Z",
                "author": {
                  "name": "David Loeffler",
                  "email": "d.loeffler.01@cantab.net"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFXtCVAA",
                        "name": "Add ready-to-merge label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8423586948/job/23065564416"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFXtP30Q",
                        "name": "Add ready-to-merge label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8423658092/job/23065786321"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFXtTTAw",
                        "name": "Add ready-to-merge label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8423674865/job/23065842435"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFXtaG2A",
                        "name": "Add ready-to-merge label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8423706634/job/23065954008"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFXuAR7g",
                        "name": "Add ready-to-merge label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8423888895/job/23066579438"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFXyQ8Pg",
                        "name": "Add ready-to-merge label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8425296657/job/23071046718"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFXtCToA",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8423586946/job/23065564064"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFXtP2RQ",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8423658085/job/23065785925"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFXtTS9Q",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8423674870/job/23065842421"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFXtaFRw",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8423706633/job/23065953607"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFXuAQlw",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8423888898/job/23066579095"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFXyQ7TA",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8425296658/job/23071046476"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFXMB1iw",
                        "name": "Add annotations",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8411406310/job/23030953355"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFXMB0XA",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8411406155/job/23030953052"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFXMB0fQ",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8411406156/job/23030953085"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFXMB1wg",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8411406309/job/23030953410"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFXtCTsg",
                        "name": "Add delegated label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8423586948/job/23065564082"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFXtP2iw",
                        "name": "Add delegated label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8423658092/job/23065785995"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFXtTUQw",
                        "name": "Add delegated label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8423674865/job/23065842755"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFXtaFeg",
                        "name": "Add delegated label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8423706634/job/23065953658"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFXuAQow",
                        "name": "Add delegated label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8423888895/job/23066579107"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFXyQ7WQ",
                        "name": "Add delegated label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8425296657/job/23071046489"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFXMB1JA",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8411406155/job/23030953252"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFXMB1RQ",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8411406156/job/23030953285"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFXMB1fw",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8411406309/job/23030953343"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFXMB0oQ",
                        "name": "Check all files imported (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8411406155/job/23030953121"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFXMB1BQ",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8411406156/job/23030953221"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFXMB05Q",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8411406155/job/23030953189"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFXMB0yQ",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8411406156/job/23030953161"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFXMB1bg",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8411406155/job/23030953326"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFXMB0NQ",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8411406156/job/23030953013"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFXMB1uQ",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8411406155/job/23030953401"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFXMSYRw",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8411406156/job/23031224391"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFXMCP3g",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/github/leanprover-community/repo/mathlib4/event-logs?pullRequestNumber=11190"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "639c31aa87d118870d3a22fb0902f957ae16f929",
                "additions": 10,
                "deletions": 10,
                "committedDate": "2024-03-27T13:36:39Z",
                "author": {
                  "name": "David Loeffler",
                  "email": "d.loeffler.01@cantab.net"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFZCOGxg",
                        "name": "Add ready-to-merge label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8453056165/job/23154886342"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFZCOGvw",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8453056169/job/23154886335"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFZmBW7A",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8465531606/job/23192426220"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFZmBW3A",
                        "name": "Add ready-to-merge label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8465531601/job/23192426204"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFZBGTyA",
                        "name": "Add annotations",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8452718072/job/23153710024"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFZBGO7w",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8452717687/job/23153708783"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFZBGPuA",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8452717683/job/23153708984"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFZBGT7w",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8452718074/job/23153710063"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFZCOIcQ",
                        "name": "Add delegated label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8453056165/job/23154886769"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFZmBXsg",
                        "name": "Add delegated label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8465531601/job/23192426418"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFZBGRFA",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8452717687/job/23153709332"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFZBGQmQ",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8452717683/job/23153709209"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFZBGU7A",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8452718074/job/23153710316"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFZBGQBA",
                        "name": "Check all files imported (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8452717687/job/23153709060"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFZBGRkg",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8452717683/job/23153709458"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFZBGTPQ",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8452717687/job/23153709885"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFZBGOng",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8452717683/job/23153708702"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFZBGSHA",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8452717687/job/23153709596"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFZBGSaA",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8452717683/job/23153709672"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFZBGUgQ",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8452717687/job/23153710209"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFZCIuwg",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8452717683/job/23154798274"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAFZBINwA",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/github/leanprover-community/repo/mathlib4/event-logs?pullRequestNumber=11190"
                      },
                      {
                        "__typename": "StatusContext",
                        "id": "SC_kwDOFcwZ1c8AAAAGlvVXxA",
                        "context": "bors",
                        "state": "SUCCESS",
                        "targetUrl": "https://mathlib-bors-ca18eefec4cb.herokuapp.com/batches/2384",
                        "description": "Build succeeded"
                      }
                    ]
                  }
                }
              }
            }
          ]
        },
        "createdAt": "2024-03-05T22:31:19Z",
        "deletions": 0,
        "files": {
          "nodes": [
            {
              "path": "Mathlib.lean",
              "additions": 1,
              "deletions": 0
            },
            {
              "path": "Mathlib/NumberTheory/LSeries/MellinEqDirichlet.lean",
              "additions": 154,
              "deletions": 0
            }
          ]
        },
        "headRefName": "DL_mellin_dirichlet",
        "headRefOid": "639c31aa87d118870d3a22fb0902f957ae16f929",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c5oxciO",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
              "color": "06e039",
              "name": "ready-to-merge"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABViJLNA",
              "color": "33DBEC",
              "name": "t-number-theory"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABh1mAHA",
              "color": "6BEB7E",
              "name": "maintainer-merge"
            }
          ]
        },
        "latestReviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c51B6-7",
              "body": "LGTM!",
              "state": "APPROVED",
              "author": {
                "login": "MichaelStollBayreuth"
              },
              "submittedAt": "2024-03-27T14:02:43Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c51KZ0L",
              "body": "Thanks :tada:\r\n\r\nbors merge",
              "state": "APPROVED",
              "author": {
                "login": "jcommelin"
              },
              "submittedAt": "2024-03-28T10:00:36Z"
            }
          ]
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "UNKNOWN",
        "mergeable": "UNKNOWN",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 11190,
        "potentialMergeCommit": null,
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": "APPROVED",
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c50uC77",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "MichaelStollBayreuth"
              },
              "submittedAt": "2024-03-25T16:32:40Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c50uF11",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "MichaelStollBayreuth"
              },
              "submittedAt": "2024-03-25T16:38:28Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c50uHKi",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "MichaelStollBayreuth"
              },
              "submittedAt": "2024-03-25T16:41:00Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c50uP1n",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "MichaelStollBayreuth"
              },
              "submittedAt": "2024-03-25T16:55:00Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c50vIyU",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "loefflerd"
              },
              "submittedAt": "2024-03-25T18:40:51Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c51B6-7",
              "body": "LGTM!",
              "state": "APPROVED",
              "author": {
                "login": "MichaelStollBayreuth"
              },
              "submittedAt": "2024-03-27T14:02:43Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c51KZ0L",
              "body": "Thanks :tada:\r\n\r\nbors merge",
              "state": "APPROVED",
              "author": {
                "login": "jcommelin"
              },
              "submittedAt": "2024-03-28T10:00:36Z"
            }
          ]
        },
        "reviewThreads": {
          "nodes": [
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5bqkVK",
                    "body": "```suggestion\r\n  have (i t) : (if p i = 0 then 0 else a i * rexp (-Ï€ * p i * t)) =\r\n      (a' i * rexp (-Ï€ * p i * t)) := by\r\n    simp only [a', ite_mul, zero_mul]\r\n```\r\nI think it is better to have the proof on the next line when the statement spans more than one line.",
                    "createdAt": "2024-03-25T16:32:40Z",
                    "author": {
                      "login": "MichaelStollBayreuth"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5bqmLY",
                    "body": "```suggestion\r\n  have h i : r i = 0 â†” r i ^ 2 = 0 := by simp\r\n  simp_rw [h] at hF\r\n```",
                    "createdAt": "2024-03-25T16:38:28Z",
                    "author": {
                      "login": "MichaelStollBayreuth"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5brR_5",
                    "body": "This line is now golfed away entirely",
                    "createdAt": "2024-03-25T18:40:51Z",
                    "author": {
                      "login": "loefflerd"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5bqnCR",
                    "body": "```suggestion\r\n  have (i t) : (a i * r i * rexp (-Ï€ * r i ^ 2 * t)) =\r\n      if r i = 0 then 0 else (a i * r i * rexp (-Ï€ * r i ^ 2 * t)) := by\r\n    split_ifs with h <;> simp [h]\r\n```",
                    "createdAt": "2024-03-25T16:41:00Z",
                    "author": {
                      "login": "MichaelStollBayreuth"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5bqsKJ",
                    "body": "```suggestion\r\nopen Complex\r\n```\r\nHiding `abs_of_nonneg` does not seem to be necessary.",
                    "createdAt": "2024-03-25T16:55:00Z",
                    "author": {
                      "login": "MichaelStollBayreuth"
                    }
                  }
                ]
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjM0Mzk2ODg=",
              "login": "loefflerd"
            },
            {
              "id": "U_kgDOB75MNQ",
              "login": "leanprover-community-mathlib4-bot"
            },
            {
              "id": "U_kgDOBfNrCg",
              "login": "MichaelStollBayreuth"
            },
            {
              "id": "MDQ6VXNlcjU2MzY3MDU=",
              "login": "jcommelin"
            }
          ]
        },
        "state": "CLOSED",
        "statusCheckRollup": {
          "contexts": {
            "nodes": [
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAFZCOGxg",
                "name": "Add ready-to-merge label",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8453056165/job/23154886342"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAFZCOGvw",
                "name": "Ping maintainers on Zulip",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8453056169/job/23154886335"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAFZmBW7A",
                "name": "Ping maintainers on Zulip",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8465531606/job/23192426220"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAFZmBW3A",
                "name": "Add ready-to-merge label",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8465531601/job/23192426204"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAFZBGTyA",
                "name": "Add annotations",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8452718072/job/23153710024"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAFZBGO7w",
                "name": "Cancel Previous Runs (CI)",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8452717687/job/23153708783"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAFZBGPuA",
                "name": "Cancel Previous Runs (CI)",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8452717683/job/23153708984"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAFZBGT7w",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8452718074/job/23153710063"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAFZCOIcQ",
                "name": "Add delegated label",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8453056165/job/23154886769"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAFZmBXsg",
                "name": "Add delegated label",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8465531601/job/23192426418"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAFZBGRFA",
                "name": "Lint style (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8452717687/job/23153709332"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAFZBGQmQ",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8452717683/job/23153709209"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAFZBGU7A",
                "name": "Check all files imported",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8452718074/job/23153710316"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAFZBGQBA",
                "name": "Check all files imported (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8452717687/job/23153709060"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAFZBGRkg",
                "name": "Check all files imported",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8452717683/job/23153709458"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAFZBGTPQ",
                "name": "check workflows (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8452717687/job/23153709885"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAFZBGOng",
                "name": "check workflows",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8452717683/job/23153708702"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAFZBGSHA",
                "name": "Build (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8452717687/job/23153709596"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAFZBGSaA",
                "name": "Build",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8452717683/job/23153709672"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAFZBGUgQ",
                "name": "Post-CI job (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8452717687/job/23153710209"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAFZCIuwg",
                "name": "Post-CI job",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/8452717683/job/23154798274"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAFZBINwA",
                "name": "Summary",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://dashboard.mergify.com/github/leanprover-community/repo/mathlib4/event-logs?pullRequestNumber=11190"
              },
              {
                "__typename": "StatusContext",
                "id": "SC_kwDOFcwZ1c8AAAAGlvVXxA",
                "context": "bors",
                "state": "SUCCESS",
                "targetUrl": "https://mathlib-bors-ca18eefec4cb.herokuapp.com/batches/2384",
                "description": "Build succeeded"
              }
            ]
          }
        },
        "title": "[Merged by Bors] - feat (NumberTheory/LSeries): Dirichlet series as Mellin transforms ",
        "updatedAt": "2024-03-28T10:26:40Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/11190",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6BW2c9zwAAAALMeEVJ",
              "createdAt": "2024-03-05T22:34:35Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5RQBxF",
              "createdAt": "2024-03-05T22:35:02Z",
              "source": {
                "id": "PR_kwDOFcwZ1c5lHI6h",
                "title": "feat (NumberTheory/ZetaFunctions): Hurwitz zeta function",
                "url": "https://github.com/leanprover-community/mathlib4/pull/10011"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6BW2c9zwAAAALMeaUs",
              "createdAt": "2024-03-05T22:46:43Z",
              "label": {
                "id": "MDU6TGFiZWwzMjg4OTQyMDg2",
                "name": "blocked-by-other-PR"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6BW2c9zwAAAALN_rH9",
              "createdAt": "2024-03-07T17:53:09Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6BW2c9zwAAAALPKwQ4",
              "createdAt": "2024-03-10T14:38:39Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6BW2c9zwAAAALPb7Vg",
              "createdAt": "2024-03-11T08:54:49Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABViJLNA",
                "name": "t-number-theory"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6BW2c9zwAAAALQf7RN",
              "createdAt": "2024-03-12T11:53:00Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6BW2c9zwAAAALQvMI0",
              "createdAt": "2024-03-12T16:23:51Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6BW2c9zwAAAALXWBhF",
              "createdAt": "2024-03-21T15:32:24Z",
              "label": {
                "id": "MDU6TGFiZWwzMjg4OTQyMDg2",
                "name": "blocked-by-other-PR"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c539sDo",
              "createdAt": "2024-03-21T15:32:25Z",
              "body": "This PR/issue depends on:\n* ~~leanprover-community/mathlib4#11069~~\n* ~~leanprover-community/mathlib4#11150~~\nBy **[Dependent Issues](https://github.com/z0al/dependent-issues)** (ðŸ¤–). Happy coding!\n<!-- By Dependent Issues (Action) - DO NOT REMOVE -->",
              "author": {
                "login": "leanprover-community-mathlib4-bot"
              }
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6BW2c9zwAAAALX_X4m",
              "createdAt": "2024-03-22T10:12:00Z"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "ReviewRequestedEvent",
              "id": "RRE_lADOFcwZ1c6BW2c9zwAAAALZZmlx",
              "createdAt": "2024-03-25T16:25:08Z",
              "requestedReviewer": {
                "id": "U_kgDOBfNrCg",
                "login": "MichaelStollBayreuth"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c50uC77",
              "createdAt": "2024-03-25T16:32:40Z",
              "body": "",
              "author": {
                "login": "MichaelStollBayreuth"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c50uF11",
              "createdAt": "2024-03-25T16:38:28Z",
              "body": "",
              "author": {
                "login": "MichaelStollBayreuth"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c50uHKi",
              "createdAt": "2024-03-25T16:40:59Z",
              "body": "",
              "author": {
                "login": "MichaelStollBayreuth"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c54T0c4",
              "createdAt": "2024-03-25T16:52:20Z",
              "body": "There are a lot of fiddly things involving complex and/or real powers, norms, gamma functions, ...\r\nI was wondering whether one could perhaps extract some more general lemmas to help with that. But maybe all these instances are sufficiently different from one another to really make this possible.\r\n\r\nOne thing to be added could be `Complex.ne_zero_of_zero_lt_re` (compare [Complex.ne_zero_of_one_lt_re](https://leanprover-community.github.io/mathlib4_docs/Mathlib/Data/Complex/Abs.html#Complex.ne_zero_of_one_lt_re)).",
              "author": {
                "login": "MichaelStollBayreuth"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c50uP1n",
              "createdAt": "2024-03-25T16:55:00Z",
              "body": "",
              "author": {
                "login": "MichaelStollBayreuth"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c54UjrU",
              "createdAt": "2024-03-25T18:34:41Z",
              "body": "See, e.g., the private lemma `foo` [here](https://github.com/MichaelStollBayreuth/EulerProducts/blob/main/EulerProducts/LSeriesUnique.lean#L43) ...",
              "author": {
                "login": "MichaelStollBayreuth"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c54UyEb",
              "createdAt": "2024-03-25T19:07:53Z",
              "body": "> One thing to be added could be `Complex.ne_zero_of_zero_lt_re` (compare [Complex.ne_zero_of_one_lt_re](https://leanprover-community.github.io/mathlib4_docs/Mathlib/Data/Complex/Abs.html#Complex.ne_zero_of_one_lt_re).\r\n\r\nI'm not keen on this, the statement only gets used twice (+ once more with a slight variant) and the proof term is less than half a line long. I don't think it's worthy of being a lemma of its own. Anyway, where would we stop? If we have `Complex.ne_zero_of_zero_lt_re` and `Complex.ne_zero_of_one_lt_re`, are we going to have `Complex.ne_zero_of_seventeen_point_six_lt_re` as well?\r\n",
              "author": {
                "login": "loefflerd"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c54VGSv",
              "createdAt": "2024-03-25T19:54:27Z",
              "body": "The conditions `0 < s.re` and `1 < s.re` will be far more frequent than any other such bound, I would think, so there should not be much danger of this getting out of hand. But if you think you won't need it anywhere else, it is of course OK to leave it inlined.",
              "author": {
                "login": "MichaelStollBayreuth"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c54dzj8",
              "createdAt": "2024-03-26T17:39:38Z",
              "body": "> The conditions `0 < s.re` and `1 < s.re` will be far more frequent than any other such bound, I would think, so there should not be much danger of this getting out of hand. But if you think you won't need it anywhere else, it is of course OK to leave it inlined.\r\n\r\nAll of these non-vanishing statements are needed purely as inputs to `zero_cpow`, to check that `0 ^ s` terms don't cause any trouble. They could be got rid of entirely by using `if / then` in the statements to blank out the zero terms; e.g. by changing the conclusion of `hasSum_mellin_pi_mulâ‚€` from\r\n````\r\nHasSum (fun i â†¦ Ï€ ^ (-s) * Gamma s * a i / p i ^ s) (mellin F s)\r\n````\r\nto\r\n````\r\nHasSum (fun i â†¦ if i = 0 then 0 else Ï€ ^ (-s) * Gamma s * a i / p i ^ s) (mellin F s)\r\n````\r\nThis also simplifies the proofs considerably. The approach I'm suggesting here is of course heavily based on your `LSeries.term`, but isn't quite covered by that, since `LSeries.term` only works for `Nat`s while I definitely want to allow `p i` to be an arbitrary non-negative real.\r\n\r\nWhat do you think? I'd be happy with either option.\r\n",
              "author": {
                "login": "loefflerd"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c54eNAA",
              "createdAt": "2024-03-26T18:27:17Z",
              "body": "So far, the experience with how `LSeries.term` is set up was quite smooth. So the approach with blanking out the term at zero looks reasonable. Did you try to see if this leads to complications when you want to apply the results from this file?",
              "author": {
                "login": "MichaelStollBayreuth"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c54jCLY",
              "createdAt": "2024-03-27T10:44:33Z",
              "body": "> So far, the experience with how `LSeries.term` is set up was quite smooth. So the approach with blanking out the term at zero looks reasonable. Did you try to see if this leads to complications when you want to apply the results from this file?\r\n\r\nI tried this setup, but unfortunately it turns out to be more troublesome than I expected. Developing a whole API for a version of `LSeries.term` with `NNReal` exponents seems overkill; and without that, every single proof ends up being weighted down with numerous `split_ifs`. I think I'd rather keep the code as it was before, with the `s â‰  0` proofs inlined",
              "author": {
                "login": "loefflerd"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c54jTcc",
              "createdAt": "2024-03-27T11:18:08Z",
              "body": "OK, fine. Can you push your changes so that I can review them?",
              "author": {
                "login": "MichaelStollBayreuth"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c54jUJh",
              "createdAt": "2024-03-27T11:19:50Z",
              "body": "> OK, fine. Can you push your changes so that I can review them?\r\n\r\nI ended up deciding I'd prefer the code as it currently stands.",
              "author": {
                "login": "loefflerd"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c54kQTT",
              "createdAt": "2024-03-27T13:27:47Z",
              "body": "I don't think you pushed the small stylistic changes (even though you remarked the conversations as \"resolved\" and at one point said that you had \"golfed away\" a part of the proof).",
              "author": {
                "login": "MichaelStollBayreuth"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c54kUp8",
              "createdAt": "2024-03-27T13:35:02Z",
              "body": "> I don't think you pushed the small stylistic changes (even though you remarked the conversations as \"resolved\" and at one point said that you had \"golfed away\" a part of the proof).\r\n\r\nYou're quite right, I pushed them to the wrong branch by mistake! Sorry. ",
              "author": {
                "login": "loefflerd"
              }
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c51B6-7",
              "createdAt": "2024-03-27T14:02:43Z",
              "body": "LGTM!",
              "author": {
                "login": "MichaelStollBayreuth"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c54kkpo",
              "createdAt": "2024-03-27T14:03:06Z",
              "body": "maintainer merge\r\n",
              "author": {
                "login": "MichaelStollBayreuth"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c54kkxW",
              "createdAt": "2024-03-27T14:03:19Z",
              "body": "ðŸš€ Pull request has been placed on the maintainer queue by MichaelStollBayreuth.",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6BW2c9zwAAAALbIOBC",
              "createdAt": "2024-03-27T14:03:20Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABh1mAHA",
                "name": "maintainer-merge"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c51KZ0L",
              "createdAt": "2024-03-28T10:00:36Z",
              "body": "Thanks :tada:\r\n\r\nbors merge",
              "author": {
                "login": "jcommelin"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6BW2c9zwAAAALb4eOr",
              "createdAt": "2024-03-28T10:00:47Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
                "name": "ready-to-merge"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6BW2c9zwAAAALb4eTR",
              "createdAt": "2024-03-28T10:00:48Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c54sO0w",
              "createdAt": "2024-03-28T10:26:37Z",
              "body": "Pull request successfully merged into master.\n\nBuild succeeded:\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/8465534672/job/23192437854)\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/8465534672/job/23192437160)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/8465534672/job/23192437610)",
              "author": {
                "login": "mathlib-bors"
              }
            },
            {
              "__typename": "RenamedTitleEvent"
            },
            {
              "__typename": "ClosedEvent",
              "id": "CE_lADOFcwZ1c6BW2c9zwAAAALb5si7",
              "createdAt": "2024-03-28T10:26:37Z"
            },
            {
              "__typename": "HeadRefDeletedEvent",
              "id": "HRDE_lADOFcwZ1c6BW2c9zwAAAALb5sro",
              "createdAt": "2024-03-28T10:26:40Z"
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5SC_QU",
              "createdAt": "2024-04-09T15:44:04Z",
              "source": {
                "id": "I_kwDOFcwZ1c6FJF9J",
                "title": "Tracking issue for Hurwitz and Dirichlet L-series",
                "url": "https://github.com/leanprover-community/mathlib4/issues/12035"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "ReferencedEvent"
            }
          ]
        }
      }
    }
  }
}
