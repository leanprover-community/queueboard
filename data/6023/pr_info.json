{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 100,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "kbuzzard"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "An R-derivation from `R[X]` is determined by its value on `X`. Joint work with Richard Hill, who needs this stuff for his work on power series. We followed `MvPolynomial.Derivation` .\r\n\r\n\r\n---\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n-->\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 4,
        "closed": true,
        "closedAt": "2023-08-02T19:29:31Z",
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c5jGFWr",
              "body": "bors merge",
              "createdAt": "2023-08-02T16:26:57Z",
              "author": {
                "login": "ocfnash"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5jHTJ5",
              "body": "Pull request successfully merged into master.\n\n  Build succeeded!\n\n  The publicly hosted instance of bors-ng is deprecated and will go away soon.\n\n  If you want to self-host your own instance, [instructions are here][instructions].\n  For more help, visit [the forum].\n\n  If you want to switch to GitHub's built-in merge queue, visit [their help page][gh].\n\n  [instructions]: https://github.com/bors-ng/bors-ng#how-to-set-up-your-own-real-instance\n  [the forum]: https://forum.bors.tech\n  [gh]: https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/configuring-pull-request-merges/managing-a-merge-queue\n\n\n\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/5742270209/job/15564061354)\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/5742270209/job/15564061787)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/5742270209/job/15564061056)",
              "createdAt": "2023-08-02T19:29:29Z",
              "author": {
                "login": "bors"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "f456b882d4ea2f6d23255575360c4fab3011bf24",
                "additions": 73,
                "deletions": 0,
                "committedDate": "2023-07-20T12:21:07Z",
                "author": {
                  "name": "Kevin Buzzard",
                  "email": "k.buzzard@imperial.ac.uk"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "e5a1728f7d0454293a79b1c82c0ad2fca242643c",
                "additions": 1,
                "deletions": 1,
                "committedDate": "2023-07-20T12:26:02Z",
                "author": {
                  "name": "Kevin Buzzard",
                  "email": "k.buzzard@imperial.ac.uk"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "c839d4f45521e26b13da4b247e5675c4530c60e7",
                "additions": 1,
                "deletions": 0,
                "committedDate": "2023-07-20T13:11:04Z",
                "author": {
                  "name": "Kevin Buzzard",
                  "email": "k.buzzard@imperial.ac.uk"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "f53137b4e6577d264182d4caefee37b338d753ee",
                "additions": 1,
                "deletions": 1,
                "committedDate": "2023-07-20T19:10:47Z",
                "author": {
                  "name": "Kevin Buzzard",
                  "email": "k.buzzard@imperial.ac.uk"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "64982b6ade78925cc2511295cb6f4cc957051ff0",
                "additions": 36,
                "deletions": 22,
                "committedDate": "2023-07-28T15:27:17Z",
                "author": {
                  "name": "Kevin Buzzard",
                  "email": "k.buzzard@imperial.ac.uk"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "5ac0665bda562de19850c5e2253a2f6f584dc3c5",
                "additions": 2,
                "deletions": 2,
                "committedDate": "2023-07-28T15:35:35Z",
                "author": {
                  "name": "Kevin Buzzard",
                  "email": "k.buzzard@imperial.ac.uk"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "ec35e892c0532363100b1fec7fee64c861149839",
                "additions": 3,
                "deletions": 6,
                "committedDate": "2023-07-29T09:16:12Z",
                "author": {
                  "name": "Kevin Buzzard",
                  "email": "k.buzzard@imperial.ac.uk"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "bc445f956c286a9f4eebeaa013251172c361cc9a",
                "additions": 1,
                "deletions": 2,
                "committedDate": "2023-07-31T08:44:43Z",
                "author": {
                  "name": "Kevin Buzzard",
                  "email": "k.buzzard@imperial.ac.uk"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "a1e23e865da379a042305babe8194228f035dd15",
                "additions": 14,
                "deletions": 10,
                "committedDate": "2023-08-02T11:37:08Z",
                "author": {
                  "name": "Eric Wieser",
                  "email": "wieser.eric@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "291978a5c8b73f7e6f695b2a505436423614e186",
                "additions": 5,
                "deletions": 3,
                "committedDate": "2023-08-02T16:22:26Z",
                "author": {
                  "name": "Oliver Nash",
                  "email": "github@olivernash.org"
                },
                "statusCheckRollup": null
              }
            }
          ]
        },
        "createdAt": "2023-07-20T12:23:13Z",
        "deletions": 10,
        "files": {
          "nodes": [
            {
              "path": "Mathlib.lean",
              "additions": 1,
              "deletions": 0
            },
            {
              "path": "Mathlib/Data/MvPolynomial/Derivation.lean",
              "additions": 2,
              "deletions": 8
            },
            {
              "path": "Mathlib/Data/MvPolynomial/PDeriv.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Data/Polynomial/Derivation.lean",
              "additions": 95,
              "deletions": 0
            }
          ]
        },
        "headRefName": "kbuzzard-polynomial-derivation",
        "headRefOid": "291978a5c8b73f7e6f695b2a505436423614e186",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c5V_vyp",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
              "color": "06e039",
              "name": "ready-to-merge"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABViJjTQ",
              "color": "33DBEC",
              "name": "t-algebra"
            }
          ]
        },
        "latestReviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5c6C69",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-08-02T10:38:49Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5c8kKh",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "ocfnash"
              },
              "submittedAt": "2023-08-02T16:19:33Z"
            }
          ]
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "UNKNOWN",
        "mergeable": "UNKNOWN",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 6023,
        "potentialMergeCommit": null,
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": null,
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5cfkrt",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-07-28T10:13:17Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5cg9qy",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "kbuzzard"
              },
              "submittedAt": "2023-07-28T13:38:29Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5chAMH",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "kbuzzard"
              },
              "submittedAt": "2023-07-28T13:44:44Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5chHCu",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-07-28T14:00:19Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5chHVm",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "kbuzzard"
              },
              "submittedAt": "2023-07-28T14:00:59Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5chgiM",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "kbuzzard"
              },
              "submittedAt": "2023-07-28T14:51:26Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5chlwN",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-07-28T14:56:42Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5chyhr",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "kbuzzard"
              },
              "submittedAt": "2023-07-28T15:23:57Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5chzUU",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "kbuzzard"
              },
              "submittedAt": "2023-07-28T15:25:55Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5ch0UM",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "kbuzzard"
              },
              "submittedAt": "2023-07-28T15:28:34Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5ch9YF",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-07-28T15:51:05Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5ch-Dk",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-07-28T15:52:53Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5clIFM",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "kbuzzard"
              },
              "submittedAt": "2023-07-29T09:15:59Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5c53_C",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-08-02T10:10:38Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5c6BVf",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "ocfnash"
              },
              "submittedAt": "2023-08-02T10:34:32Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5c6C69",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-08-02T10:38:49Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5c8eAM",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "ocfnash"
              },
              "submittedAt": "2023-08-02T16:09:27Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5c8e6E",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "ocfnash"
              },
              "submittedAt": "2023-08-02T16:10:34Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5c8h5p",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "ocfnash"
              },
              "submittedAt": "2023-08-02T16:16:11Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5c8kKh",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "ocfnash"
              },
              "submittedAt": "2023-08-02T16:19:33Z"
            }
          ]
        },
        "reviewThreads": {
          "nodes": [
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5MIw12",
                    "body": "I'm not sure this lemma is useful, given that it follows trivially from `adjoin_X`",
                    "createdAt": "2023-07-28T10:09:16Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5MJ2Rk",
                    "body": "I use it in the proof of `derivation_ext` on line 41 of the Derivation file but I can just inline the proof.",
                    "createdAt": "2023-07-28T14:51:26Z",
                    "author": {
                      "login": "kbuzzard"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5MIxM8",
                    "body": "This one looks a bit weird to me: it uses simp-normal form on the LHS but not the RHS.\r\n\r\nThe version with the simp-normal form on both sides is `derivation_C_mul'`, while the one with neither side is `D.map_smul`: so I'd argue we should just drop this lemma.\r\n\r\n",
                    "createdAt": "2023-07-28T10:10:48Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5MJfvv",
                    "body": "This was mindlessly copied from [the corresponding MvPolynomial file](https://github.com/leanprover-community/mathlib4/blob/7bedbaeb2181e706b6612563c6d4f0565cc6f346/Mathlib/Data/MvPolynomial/Derivation.lean#L66-L76) . I'll delete it. Should I now rename `derivation_C_mul'` to `derivation_C_mul`? Should I make the corresponding change in `MvPolynomial`? In another PR? Now I'm not in \"mindlessly copy\" mode -- should the name of this lemma be `C_smul_derivation`?",
                    "createdAt": "2023-07-28T13:38:28Z",
                    "author": {
                      "login": "kbuzzard"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5MJlfj",
                    "body": "> Should I now rename derivation_C_mul' to derivation_C_mul? Should I make the corresponding change in MvPolynomial?\r\n\r\nYes; and doing it in this PR is fine.\r\n\r\n",
                    "createdAt": "2023-07-28T14:00:18Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5MKCb4",
                    "body": "OK I've removed the primed lemmas (which were unused in mathlib). Is the name of the lemma even correct though? (sorry, I edited my comment at the same time as you were replying to it :-). That'll teach me.)",
                    "createdAt": "2023-07-28T15:28:34Z",
                    "author": {
                      "login": "kbuzzard"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5MIxYm",
                    "body": "How easily does this theory generalize to `Derivation R (Polynomial S) A`?",
                    "createdAt": "2023-07-28T10:11:37Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5MJhT_",
                    "body": "This PR is showing that an R-derivation on R[X] is determined by its value on X, and this is true because R[X] is generated as an R-algebra by R (on which the R-derivation has to be 0 by the axioms of a derivation) and X. If you consider R-derivations on S[X] with S an R-algebra then this argument no longer works because there can be elements of S which don't derive to 0 in this generality. So for example `derivation_C` would be false for `a : S`, `derivation_ext` would be false etc. ",
                    "createdAt": "2023-07-28T13:44:44Z",
                    "author": {
                      "login": "kbuzzard"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5Ma-Gp",
                    "body": "I also don't see a useful generalisation here.",
                    "createdAt": "2023-08-02T16:19:32Z",
                    "author": {
                      "login": "ocfnash"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5MIxmF",
                    "body": "Can you add the lemma that links `mkDerivation` to `derivative`?",
                    "createdAt": "2023-07-28T10:12:36Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5MKBzj",
                    "body": "This involves constructing `derivative` as a `Derivation`, which as far as I can see isn't done. I've added it to the PR. ",
                    "createdAt": "2023-07-28T15:25:55Z",
                    "author": {
                      "login": "kbuzzard"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5MKIao",
                    "body": "Oh, I just meant\r\n```lean\r\n@[simp]\r\ntheorem mkDerivation_apply (a : A) (p : R[X]) : mkDerivation R a p = Polynomial.derivative p • a :=\r\n  rfl\r\n```",
                    "createdAt": "2023-07-28T15:52:53Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5MIxte",
                    "body": "```suggestion\r\n@[simps]\r\ndef mkDerivationEquiv : A ≃ₗ[R] Derivation R R[X] A :=\r\n```",
                    "createdAt": "2023-07-28T10:13:15Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5MJluf",
                    "body": "Will `@[simps!]` do? Asking for a linter. The reason we have a `LinearEquiv.symm` term here is that `map_add'` and `map_smul'` are much easier that way around (they're `rfl`). Looking at the output with `@[simps!?]` most of it looks OK, apart from\r\n```\r\n[simps.verbose] adding projection Polynomial.mkDerivationEquiv_symm_apply:\r\n      ∀ (R : Type u_1) {A : Type u_2} [inst : CommSemiring R] [inst_1 : AddCommMonoid A] [inst_2 : Module R A]\r\n        [inst_3 : Module R[X] A] [inst_4 : IsScalarTower R R[X] A] (a : Derivation R R[X] A),\r\n        ↑(LinearEquiv.symm (Polynomial.mkDerivationEquiv R)) a =\r\n          ↑(↑(LinearEquiv.symm\r\n                    {\r\n                      toLinearMap :=\r\n                        {\r\n                          toAddHom :=\r\n                            { toFun := fun D ↦ ↑D Polynomial.X,\r\n                              map_add' :=\r\n                                (_ :\r\n                                  ∀ (x x_1 : Derivation R R[X] A),\r\n                                    (fun D ↦ ↑D Polynomial.X) (x + x_1) = (fun D ↦ ↑D Polynomial.X) (x + x_1)) },\r\n                          map_smul' :=\r\n                            (_ :\r\n                              ∀ (x : R) (x_1 : Derivation R R[X] A),\r\n                                AddHom.toFun\r\n                                    { toFun := fun D ↦ ↑D Polynomial.X,\r\n                                      map_add' :=\r\n                                        (_ :\r\n                                          ∀ (x x_2 : Derivation R R[X] A),\r\n                                            (fun D ↦ ↑D Polynomial.X) (x + x_2) = (fun D ↦ ↑D Polynomial.X) (x + x_2)) }\r\n                                    (x • x_1) =\r\n                                  AddHom.toFun\r\n                                    { toFun := fun D ↦ ↑D Polynomial.X,\r\n                                      map_add' :=\r\n                                        (_ :\r\n                                          ∀ (x x_2 : Derivation R R[X] A),\r\n                                            (fun D ↦ ↑D Polynomial.X) (x + x_2) = (fun D ↦ ↑D Polynomial.X) (x + x_2)) }\r\n                                    (x • x_1)) },\r\n                      invFun := Polynomial.mkDerivation R,\r\n                      left_inv :=\r\n                        (_ :\r\n                          ∀ (x : Derivation R R[X] A),\r\n                            Polynomial.mkDerivation R\r\n                                (AddHom.toFun\r\n                                  {\r\n                                      toAddHom :=\r\n                                        { toFun := fun D ↦ ↑D Polynomial.X,\r\n                                          map_add' :=\r\n                                            (_ :\r\n                                              ∀ (x x_1 : Derivation R R[X] A),\r\n                                                (fun D ↦ ↑D Polynomial.X) (x + x_1) =\r\n                                                  (fun D ↦ ↑D Polynomial.X) (x + x_1)) },\r\n                                      map_smul' :=\r\n                                        (_ :\r\n                                          ∀ (x : R) (x_1 : Derivation R R[X] A),\r\n                                            AddHom.toFun\r\n                                                { toFun := fun D ↦ ↑D Polynomial.X,\r\n                                                  map_add' :=\r\n                                                    (_ :\r\n                                                      ∀ (x x_2 : Derivation R R[X] A),\r\n                                                        (fun D ↦ ↑D Polynomial.X) (x + x_2) =\r\n                                                          (fun D ↦ ↑D Polynomial.X) (x + x_2)) }\r\n                                                (x • x_1) =\r\n                                              AddHom.toFun\r\n                                                { toFun := fun D ↦ ↑D Polynomial.X,\r\n                                                  map_add' :=\r\n                                                    (_ :\r\n                                                      ∀ (x x_2 : Derivation R R[X] A),\r\n                                                        (fun D ↦ ↑D Polynomial.X) (x + x_2) =\r\n                                                          (fun D ↦ ↑D Polynomial.X) (x + x_2)) }\r\n                                                (x • x_1)) }.toAddHom\r\n                                  x) =\r\n                              x),\r\n                      right_inv := (_ : ∀ (x : A), ↑(Polynomial.mkDerivation R x) Polynomial.X = x) })).symm\r\n            a \r\n```\r\nI don't really understand `simps` properly. Should I tell simps somehow to not generate this lemma and then write a more appropriate one by hand?",
                    "createdAt": "2023-07-28T14:00:59Z",
                    "author": {
                      "login": "kbuzzard"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5MJ6LX",
                    "body": "There used to be a `simp_rhs := true` setting in Lean 3. I don't know if that's what `!` means (in which case, there's a simp lemma missing), or if you have to spell it differently.\r\n\r\nI think it's fine to write the lemma manually if `simps` is generating a mess.",
                    "createdAt": "2023-07-28T14:56:41Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5MKBUi",
                    "body": "OK having read the docstring I understand `simps` much better. I think I'll just write these manually, given that as far as I can see there are only two.",
                    "createdAt": "2023-07-28T15:23:56Z",
                    "author": {
                      "login": "kbuzzard"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5MKH_b",
                    "body": "```suggestion\r\n/-- The derivation on `R[X]` that takes the value `a` on `X`. -/\r\ndef mkDerivation (a : A) : Derivation R R[X] A :=\r\n  (LinearMap.toSpanSingleton R[X] A a).compDer derivative'\r\n```",
                    "createdAt": "2023-07-28T15:51:05Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5MMOLj",
                    "body": "Oh yeah :-) ",
                    "createdAt": "2023-07-29T09:15:59Z",
                    "author": {
                      "login": "kbuzzard"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5MZSgl",
                    "body": "```suggestion\r\n/-- `Polynomial.derivative` as a derivation. -/\r\n@[simps]\r\ndef derivative' : Derivation R R[X] R[X] where\r\n```",
                    "createdAt": "2023-08-02T10:10:38Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5MZYcz",
                    "body": "Indexing a typeclass on a non-carrier type will eventually cause pain.\r\n\r\nFor example, we might one day have another ring `S` with `R ≃+* S` and wish to use some result which includes the term `Module (Polynomial R) A` in a proof that discusses `Module (Polynomial S) A`.\r\n\r\nI wonder could we avoid doing this by introducing a `PolynomialAlgebra` typeclass along the lines of:\r\n```lean\r\nclass PolynomialAlgebra (R P : Type _) [CommSemiring R] [Semiring P] extends Algebra R P :=\r\n  (X : P)\r\n  -- TODO add axioms that are equivalent to the map that sends `Polynomial.X` to `PolynomialAlgebra.X` extending to a full algebra equivalence: `R[X] ≃ₐ[R] P`\r\n```\r\n\r\nAlternatively we could introduce a typeclass for this specific situation since we know a module over `R[X]` is \"the same as\" a module over `R` together with an `R`-linear endomorphism (scalar action of `X`):\r\n```lean\r\nclass PolynomialModule (R M : Type _) [Semiring R] [AddCommMonoid M] extends Module R M :=\r\n  (X : M →ₗ[R] M)\r\n```",
                    "createdAt": "2023-08-02T10:34:31Z",
                    "author": {
                      "login": "ocfnash"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5MZZbM",
                    "body": "Note that @kbuzzard is just copying what we already did for `MvPolynomial` in this PR, not that that invalidates your comment.",
                    "createdAt": "2023-08-02T10:38:48Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5Ma648",
                    "body": "Good point, I think we can live with this for now but I predict one day we'll want something like `PolynomialAlgebra` or `PolynomialModule`.",
                    "createdAt": "2023-08-02T16:09:27Z",
                    "author": {
                      "login": "ocfnash"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5Ma7QF",
                    "body": "I think we should upgrade this to:\r\n```suggestion\r\ndef mkDerivation : A →ₗ[R] Derivation R R[X] A :=\r\n```",
                    "createdAt": "2023-08-02T16:10:34Z",
                    "author": {
                      "login": "ocfnash"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5Ma85m",
                    "body": "```suggestion\r\ntheorem C_smul_derivation_apply (D : Derivation R R[X] A) (a : R) (f : R[X]) :\r\n```",
                    "createdAt": "2023-08-02T16:16:11Z",
                    "author": {
                      "login": "ocfnash"
                    }
                  }
                ]
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjMxODY3ODI3",
              "login": "kbuzzard"
            },
            {
              "id": "MDQ6VXNlcjc3MzQzNjQ=",
              "login": "ocfnash"
            },
            {
              "id": "MDQ6VXNlcjQyNTI2MA==",
              "login": "eric-wieser"
            }
          ]
        },
        "state": "CLOSED",
        "statusCheckRollup": null,
        "title": "[Merged by Bors] - feat: derivations of (univariate) polynomials",
        "updatedAt": "2023-08-02T19:29:36Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/6023",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "f456b882d4ea2f6d23255575360c4fab3011bf24"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "e5a1728f7d0454293a79b1c82c0ad2fca242643c"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "c839d4f45521e26b13da4b247e5675c4530c60e7"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5sHZfdzwAAAAJMkVFH",
              "createdAt": "2023-07-20T13:24:15Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5sHZfdzwAAAAJMkVFR",
              "createdAt": "2023-07-20T13:24:15Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABViJjTQ",
                "name": "t-algebra"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "f53137b4e6577d264182d4caefee37b338d753ee"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5cfkrt",
              "createdAt": "2023-07-28T10:09:16Z",
              "body": "",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5sHZfdzwAAAAJQ2soR",
              "createdAt": "2023-07-28T10:13:24Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5sHZfdzwAAAAJQ2soW",
              "createdAt": "2023-07-28T10:13:24Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "64982b6ade78925cc2511295cb6f4cc957051ff0"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5sHZfdzwAAAAJRCJT6",
              "createdAt": "2023-07-28T15:28:53Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5sHZfdzwAAAAJRCJUC",
              "createdAt": "2023-07-28T15:28:53Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "5ac0665bda562de19850c5e2253a2f6f584dc3c5"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5ch9YF",
              "createdAt": "2023-07-28T15:51:05Z",
              "body": "",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "ec35e892c0532363100b1fec7fee64c861149839"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "bc445f956c286a9f4eebeaa013251172c361cc9a"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5c53_C",
              "createdAt": "2023-08-02T10:10:38Z",
              "body": "",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5c6BVf",
              "createdAt": "2023-08-02T10:34:31Z",
              "body": "",
              "author": {
                "login": "ocfnash"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "a1e23e865da379a042305babe8194228f035dd15"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5c8e6E",
              "createdAt": "2023-08-02T16:10:34Z",
              "body": "",
              "author": {
                "login": "ocfnash"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5c8h5p",
              "createdAt": "2023-08-02T16:16:10Z",
              "body": "",
              "author": {
                "login": "ocfnash"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "291978a5c8b73f7e6f695b2a505436423614e186"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5jGFWr",
              "createdAt": "2023-08-02T16:26:57Z",
              "body": "bors merge",
              "author": {
                "login": "ocfnash"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5sHZfdzwAAAAJTdbj6",
              "createdAt": "2023-08-02T16:27:12Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
                "name": "ready-to-merge"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5sHZfdzwAAAAJTdbmK",
              "createdAt": "2023-08-02T16:27:13Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5jHTJ5",
              "createdAt": "2023-08-02T19:29:29Z",
              "body": "Pull request successfully merged into master.\n\n  Build succeeded!\n\n  The publicly hosted instance of bors-ng is deprecated and will go away soon.\n\n  If you want to self-host your own instance, [instructions are here][instructions].\n  For more help, visit [the forum].\n\n  If you want to switch to GitHub's built-in merge queue, visit [their help page][gh].\n\n  [instructions]: https://github.com/bors-ng/bors-ng#how-to-set-up-your-own-real-instance\n  [the forum]: https://forum.bors.tech\n  [gh]: https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/configuring-pull-request-merges/managing-a-merge-queue\n\n\n\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/5742270209/job/15564061354)\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/5742270209/job/15564061787)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/5742270209/job/15564061056)",
              "author": {
                "login": "bors"
              }
            },
            {
              "__typename": "RenamedTitleEvent"
            },
            {
              "__typename": "ClosedEvent",
              "id": "CE_lADOFcwZ1c5sHZfdzwAAAAJTjKkt",
              "createdAt": "2023-08-02T19:29:31Z"
            },
            {
              "__typename": "HeadRefDeletedEvent",
              "id": "HRDE_lADOFcwZ1c5sHZfdzwAAAAJTjKzc",
              "createdAt": "2023-08-02T19:29:36Z"
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "ReferencedEvent"
            }
          ]
        }
      }
    }
  }
}
