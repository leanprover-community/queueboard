{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 98,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "alexjbest"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "`norm_num` was passing the wrong syntax node to `elabSimpArgs` when elaborating, which essentially had the effect of ignoring all arguments it was passed, i.e. `norm_num [add_comm]` would not try to commute addition in the simp step.\r\nThe fix itself is very simple (though not obvious to debug!), probably using TSyntax more would help avoid such issues in future.\r\n\r\nDue to this bug many `norm_num [blah]` became `rw [blah]; norm_num` or similar, sometimes with porting notes, sometimes not, we fix these porting notes and other regressions during the port also.\r\n\r\nInterestingly `cancel_denoms` uses `norm_num [<- mul_assoc]` internally, so  `cancel_denoms` also got stronger with this change.\r\n\r\n---\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n-->\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 37,
        "closed": true,
        "closedAt": "2023-08-27T07:05:19Z",
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c5kJQjn",
              "body": "Can you summarize in the description what was fixed?",
              "createdAt": "2023-08-16T08:03:51Z",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5kLLEU",
              "body": "> Can you summarize in the description what was fixed?\r\n\r\nis that ok now?",
              "createdAt": "2023-08-16T13:50:35Z",
              "author": {
                "login": "alexjbest"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5lAKf5",
              "body": "bors merge",
              "createdAt": "2023-08-27T01:40:40Z",
              "author": {
                "login": "kim-em"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5lANw0",
              "body": "Build failed (retrying...):\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/5988493381/job/16243731401)",
              "createdAt": "2023-08-27T02:54:36Z",
              "author": {
                "login": "bors"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5lAN6h",
              "body": "Build failed (retrying...):\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/5988506097/job/16243756603)",
              "createdAt": "2023-08-27T02:59:03Z",
              "author": {
                "login": "bors"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5lAWPc",
              "body": "Pull request successfully merged into master.\n\n  Build succeeded!\n\n  The publicly hosted instance of bors-ng is deprecated and will go away soon.\n\n  If you want to self-host your own instance, [instructions are here][instructions].\n  For more help, visit [the forum].\n\n  If you want to switch to GitHub's built-in merge queue, visit [their help page][gh].\n\n  [instructions]: https://github.com/bors-ng/bors-ng#how-to-set-up-your-own-real-instance\n  [the forum]: https://forum.bors.tech\n  [gh]: https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/configuring-pull-request-merges/managing-a-merge-queue\n\n\n\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/5989186271/job/16245107402)\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/5989186271/job/16245107474)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/5989186271/job/16245107435)",
              "createdAt": "2023-08-27T07:05:18Z",
              "author": {
                "login": "bors"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5lAXN6",
              "body": "I think the diagnosis here is a bit wrong, and the fix is somewhat weird and not type-correct, although it does work. What is happening is that `elabSimpArgs` takes a syntax which is the result of matching `(\"[\" simpArg,* \"]\")?`, while norm_num has a syntax of the form `(simpArgs)?` where `syntax simpArgs := \"[\" simpArg,* \"]\"`. The difference is that the former pattern has nodes which are either empty (i.e. ``node `null []``) or of the form ``node `null [\"[\", body, \"]\"]``, while the latter produces either ``node `null []`` or ``node `null [node `simpArgs [\"[\", body, \"]\"]]``.\r\n\r\nCalling `args[0]` produces either `.missing` or ``node `simpArgs [\"[\", simpArgs, \"]\"]``, which is still not of the form expected by `elabSimpArgs` but is close enough that it has the right behavior because `elabSimpArgs` doesn't check the node kind or differentiate a null node from a missing node.",
              "createdAt": "2023-08-27T07:27:20Z",
              "author": {
                "login": "digama0"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5lAmFu",
              "body": "I kinda (see) thanks, do you have a better fix in mind then?",
              "createdAt": "2023-08-27T12:24:42Z",
              "author": {
                "login": "alexjbest"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5lBB26",
              "body": "Not really. As you say, the solution is to use more typed syntax, but lean core is squarely at fault for using untyped syntax in this case and many others. It would also help if the `simpArgs` syntax definition was upstreamed so that all simp-like tactics use it and not just the ones defined in std/mathlib, since it makes it harder to share code between them without suspicious code like this.",
              "createdAt": "2023-08-27T21:42:40Z",
              "author": {
                "login": "digama0"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "c399276229f1351d5bbf9e311d84c00315a2dc70",
                "additions": 1,
                "deletions": 1,
                "committedDate": "2023-08-15T19:39:10Z",
                "author": {
                  "name": "Alex J Best",
                  "email": "alex.j.best@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "8764c872b63b9acc372afd03c4554c59c3bee0b0",
                "additions": 12,
                "deletions": 36,
                "committedDate": "2023-08-15T20:08:36Z",
                "author": {
                  "name": "Alex J Best",
                  "email": "alex.j.best@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "f2f8bc18d9a0414f8f495751b16071bdc7a0f5c5",
                "additions": 10,
                "deletions": 15,
                "committedDate": "2023-08-15T21:52:21Z",
                "author": {
                  "name": "Alex J Best",
                  "email": "alex.j.best@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "1b13b64d54220d2461a9598cebe6bb136d02464b",
                "additions": 2,
                "deletions": 1,
                "committedDate": "2023-08-15T22:13:32Z",
                "author": {
                  "name": "Alex J Best",
                  "email": "alex.j.best@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "7324c197fa5ba512e395fec456234fcfb147a601",
                "additions": 2,
                "deletions": 1,
                "committedDate": "2023-08-15T22:37:57Z",
                "author": {
                  "name": "Alex J Best",
                  "email": "alex.j.best@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "cd009a64c7e1b1155c48552ec350ffa9aa156d4d",
                "additions": 3,
                "deletions": 3,
                "committedDate": "2023-08-15T22:59:42Z",
                "author": {
                  "name": "Alex J Best",
                  "email": "alex.j.best@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "794c9923e810414ef7815a3abeae5728d471a5b3",
                "additions": 45,
                "deletions": 65,
                "committedDate": "2023-08-16T00:21:12Z",
                "author": {
                  "name": "Alex J Best",
                  "email": "alex.j.best@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "260fdd8d6d384563de58b4f86fc11587dd6f0227",
                "additions": 25,
                "deletions": 37,
                "committedDate": "2023-08-16T00:49:41Z",
                "author": {
                  "name": "Alex J Best",
                  "email": "alex.j.best@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "93a6b45893dca5f322407d2e1faeb9df6e29e3b4",
                "additions": 145,
                "deletions": 9,
                "committedDate": "2023-08-16T00:52:34Z",
                "author": {
                  "name": "Alex J Best",
                  "email": "alex.j.best@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "13727289a2a05c4d9f4fd94a028a449115003c05",
                "additions": 1,
                "deletions": 1,
                "committedDate": "2023-08-16T13:51:44Z",
                "author": {
                  "name": "Alex J Best",
                  "email": "alex.j.best@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "36adf0b5eaf4a0b899ccb9634a62d3d51ac11e63",
                "additions": 1,
                "deletions": 1,
                "committedDate": "2023-08-16T13:56:03Z",
                "author": {
                  "name": "Alex J Best",
                  "email": "alex.j.best@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "9573abb7d41b8a78de9d5263b6bd60e51b642a3b",
                "additions": 4,
                "deletions": 1,
                "committedDate": "2023-08-16T14:41:42Z",
                "author": {
                  "name": "Alex J Best",
                  "email": "alex.j.best@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "00de5ff278a5058ec6627bcca04361ed0656e475",
                "additions": 1,
                "deletions": 1,
                "committedDate": "2023-08-16T15:00:20Z",
                "author": {
                  "name": "Alex J Best",
                  "email": "alex.j.best@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "6f43c14d2cf7fda875915733ed92655e27d6141e",
                "additions": 1,
                "deletions": 1,
                "committedDate": "2023-08-16T15:00:51Z",
                "author": {
                  "name": "Alex J Best",
                  "email": "alex.j.best@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "312fca0f60e29699d2cbab9f793531fa0008f1f0",
                "additions": 1,
                "deletions": 1,
                "committedDate": "2023-08-16T15:11:59Z",
                "author": {
                  "name": "Alex J Best",
                  "email": "alex.j.best@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "ebd31517c6c35d5cd16bbbde8e156bc9e77cbd4c",
                "additions": 1,
                "deletions": 1,
                "committedDate": "2023-08-16T15:29:47Z",
                "author": {
                  "name": "Alex J Best",
                  "email": "alex.j.best@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "055232e32899bcc128e992856284c02bb6845f88",
                "additions": 1,
                "deletions": 1,
                "committedDate": "2023-08-16T15:32:34Z",
                "author": {
                  "name": "Alex J Best",
                  "email": "alex.j.best@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "a5587b345c4a6957152d213005def617cdcff65e",
                "additions": 2,
                "deletions": 1,
                "committedDate": "2023-08-16T16:22:20Z",
                "author": {
                  "name": "Alex J Best",
                  "email": "alex.j.best@gmail.com"
                },
                "statusCheckRollup": null
              }
            }
          ]
        },
        "createdAt": "2023-08-15T22:08:20Z",
        "deletions": 155,
        "files": {
          "nodes": [
            {
              "path": "Archive/Imo/Imo1962Q1.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Archive/Imo/Imo1975Q1.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Archive/Imo/Imo1981Q3.lean",
              "additions": 3,
              "deletions": 4
            },
            {
              "path": "Archive/Imo/Imo2008Q4.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Archive/Imo/Imo2019Q4.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Archive/Wiedijk100Theorems/AbelRuffini.lean",
              "additions": 7,
              "deletions": 12
            },
            {
              "path": "Archive/Wiedijk100Theorems/AreaOfACircle.lean",
              "additions": 1,
              "deletions": 2
            },
            {
              "path": "Archive/Wiedijk100Theorems/CubingACube.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Algebra/PUnitInstances.lean",
              "additions": 2,
              "deletions": 1
            },
            {
              "path": "Mathlib/Algebra/Ring/BooleanRing.lean",
              "additions": 6,
              "deletions": 11
            },
            {
              "path": "Mathlib/AlgebraicTopology/FundamentalGroupoid/Basic.lean",
              "additions": 8,
              "deletions": 25
            },
            {
              "path": "Mathlib/Analysis/InnerProductSpace/Basic.lean",
              "additions": 1,
              "deletions": 2
            },
            {
              "path": "Mathlib/Analysis/SpecialFunctions/Complex/Log.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Analysis/SpecialFunctions/Integrals.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Analysis/SpecialFunctions/Trigonometric/Angle.lean",
              "additions": 1,
              "deletions": 2
            },
            {
              "path": "Mathlib/Analysis/SpecialFunctions/Trigonometric/Bounds.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Combinatorics/Catalan.lean",
              "additions": 4,
              "deletions": 2
            },
            {
              "path": "Mathlib/Data/Complex/Exponential.lean",
              "additions": 1,
              "deletions": 8
            },
            {
              "path": "Mathlib/Data/Nat/Choose/Sum.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Data/Nat/Parity.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/GroupTheory/Perm/Sign.lean",
              "additions": 0,
              "deletions": 1
            },
            {
              "path": "Mathlib/MeasureTheory/Covering/BesicovitchVectorSpace.lean",
              "additions": 3,
              "deletions": 3
            },
            {
              "path": "Mathlib/NumberTheory/Bernoulli.lean",
              "additions": 8,
              "deletions": 10
            },
            {
              "path": "Mathlib/NumberTheory/BernoulliPolynomials.lean",
              "additions": 1,
              "deletions": 2
            },
            {
              "path": "Mathlib/NumberTheory/Padics/PadicNumbers.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/NumberTheory/PythagoreanTriples.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/RingTheory/Polynomial/Bernstein.lean",
              "additions": 1,
              "deletions": 4
            },
            {
              "path": "Mathlib/SetTheory/Ordinal/Notation.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Tactic/NormNum/Core.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Topology/Algebra/Polynomial.lean",
              "additions": 1,
              "deletions": 2
            },
            {
              "path": "Mathlib/Topology/Homotopy/Basic.lean",
              "additions": 2,
              "deletions": 4
            },
            {
              "path": "Mathlib/Topology/Homotopy/Path.lean",
              "additions": 5,
              "deletions": 7
            },
            {
              "path": "Mathlib/Topology/MetricSpace/ThickenedIndicator.lean",
              "additions": 1,
              "deletions": 2
            },
            {
              "path": "Mathlib/Topology/PathConnected.lean",
              "additions": 6,
              "deletions": 22
            },
            {
              "path": "test/cancel_denoms.lean",
              "additions": 2,
              "deletions": 3
            },
            {
              "path": "test/norm_num.lean",
              "additions": 10,
              "deletions": 2
            },
            {
              "path": "test/norm_num_ext.lean",
              "additions": 3,
              "deletions": 3
            }
          ]
        },
        "headRefName": "alexjbest/normnumargs",
        "headRefOid": "a5587b345c4a6957152d213005def617cdcff65e",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c5YAn6c",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
              "color": "06e039",
              "name": "ready-to-merge"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABKAKYew",
              "color": "33DBEC",
              "name": "t-meta"
            }
          ]
        },
        "latestReviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5eOoxM",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-08-16T15:28:29Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5e6DHX",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "ericrbg"
              },
              "submittedAt": "2023-08-23T19:26:16Z"
            }
          ]
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "UNKNOWN",
        "mergeable": "UNKNOWN",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 6600,
        "potentialMergeCommit": null,
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": null,
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5eN1ow",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "alexjbest"
              },
              "submittedAt": "2023-08-16T13:51:39Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5eN4PR",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "alexjbest"
              },
              "submittedAt": "2023-08-16T13:55:56Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5eOoip",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-08-16T15:28:02Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5eOoqA",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-08-16T15:28:16Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5eOoxM",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-08-16T15:28:29Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5eOqNP",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "alexjbest"
              },
              "submittedAt": "2023-08-16T15:31:11Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5e6DHX",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "ericrbg"
              },
              "submittedAt": "2023-08-23T19:26:16Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5e6oLy",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "alexjbest"
              },
              "submittedAt": "2023-08-23T21:19:58Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5e6poj",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "alexjbest"
              },
              "submittedAt": "2023-08-23T21:22:41Z"
            }
          ]
        },
        "reviewThreads": {
          "nodes": [
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5NPqlN",
                    "body": "```suggestion\r\n  rw [integral_deriv_eq_sub'] <;> norm_num [continuousOn_exp]\r\n```",
                    "createdAt": "2023-08-16T13:51:39Z",
                    "author": {
                      "login": "alexjbest"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5NPsTg",
                    "body": "```suggestion\r\n  norm_num [sum_range_succ, sum_range_succ, sum_range_zero, this]\r\n```",
                    "createdAt": "2023-08-16T13:55:55Z",
                    "author": {
                      "login": "alexjbest"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5NQLaB",
                    "body": "```suggestion\r\n  norm_num [catalan_eq_centralBinom_div, Nat.centralBinom, Nat.choose]\r\n```",
                    "createdAt": "2023-08-16T15:28:01Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5NQLe3",
                    "body": "```suggestion\r\n  norm_num [catalan_eq_centralBinom_div, Nat.centralBinom, Nat.choose]\r\n```",
                    "createdAt": "2023-08-16T15:28:16Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5NQLju",
                    "body": "Why not keep the `rfl` proof?",
                    "createdAt": "2023-08-16T15:28:29Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5NQMeW",
                    "body": "I assume `norm_num` will eventually become better at computing binomials than the kernel, if it isn't already.\r\nAs with most of these proofs I simply restore the mathlib3 proof unless the new one looks to have an advantage",
                    "createdAt": "2023-08-16T15:31:11Z",
                    "author": {
                      "login": "alexjbest"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5NsR4L",
                    "body": "how could this possibly fix `simpNF`?",
                    "createdAt": "2023-08-23T19:26:16Z",
                    "author": {
                      "login": "ericrbg"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5NsqNb",
                    "body": "Ah you're right maybe I just did that too as it was needed to restore a `norm_num` call that worked in mathlib 3.",
                    "createdAt": "2023-08-23T21:19:58Z",
                    "author": {
                      "login": "alexjbest"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5NsrG4",
                    "body": "The change to Mathlib/Algebra/PUnitInstances.lean is what makes the linter not complain. This is helpful to make it clear that all the `norm_num [blah]` calls that worked in mathlib 3 still work here",
                    "createdAt": "2023-08-23T21:22:41Z",
                    "author": {
                      "login": "alexjbest"
                    }
                  }
                ]
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjE2ODg1MzM=",
              "login": "alexjbest"
            },
            {
              "id": "MDQ6VXNlcjQyNTI2MA==",
              "login": "eric-wieser"
            },
            {
              "id": "MDQ6VXNlcjQ3Nzk1Ng==",
              "login": "kim-em"
            },
            {
              "id": "MDQ6VXNlcjg2ODU4OA==",
              "login": "digama0"
            },
            {
              "id": "MDQ6VXNlcjM3OTg0ODUx",
              "login": "ericrbg"
            },
            {
              "id": "U_kgDOB75MNQ",
              "login": "leanprover-community-mathlib4-bot"
            }
          ]
        },
        "state": "CLOSED",
        "statusCheckRollup": null,
        "title": "[Merged by Bors] - feat: fix norm num with arguments",
        "updatedAt": "2023-08-27T21:42:40Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/6600",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "c399276229f1351d5bbf9e311d84c00315a2dc70"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "8764c872b63b9acc372afd03c4554c59c3bee0b0"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "f2f8bc18d9a0414f8f495751b16071bdc7a0f5c5"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5uZlk1zwAAAAJaHsfl",
              "createdAt": "2023-08-15T22:08:37Z",
              "label": {
                "id": "MDU6TGFiZWwzMjcxMjQ0NzU5",
                "name": "WIP"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5uZlk1zwAAAAJaHsfs",
              "createdAt": "2023-08-15T22:08:37Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKAKYew",
                "name": "t-meta"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "1b13b64d54220d2461a9598cebe6bb136d02464b"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "7324c197fa5ba512e395fec456234fcfb147a601"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "cd009a64c7e1b1155c48552ec350ffa9aa156d4d"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5uZlk1zwAAAAJaJ7pG",
              "createdAt": "2023-08-15T23:50:56Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "794c9923e810414ef7815a3abeae5728d471a5b3"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "260fdd8d6d384563de58b4f86fc11587dd6f0227"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "93a6b45893dca5f322407d2e1faeb9df6e29e3b4"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5uZlk1zwAAAAJaLDHz",
              "createdAt": "2023-08-16T01:04:10Z",
              "label": {
                "id": "MDU6TGFiZWwzMjcxMjQ0NzU5",
                "name": "WIP"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5uZlk1zwAAAAJaLDH0",
              "createdAt": "2023-08-16T01:04:10Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5uZlk1zwAAAAJaLDH4",
              "createdAt": "2023-08-16T01:04:10Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5uZlk1zwAAAAJaLDH7",
              "createdAt": "2023-08-16T01:04:10Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKteTVQ",
                "name": "awaiting-CI"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5kJQjn",
              "createdAt": "2023-08-16T08:03:51Z",
              "body": "Can you summarize in the description what was fixed?",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5kLLEU",
              "createdAt": "2023-08-16T13:50:35Z",
              "body": "> Can you summarize in the description what was fixed?\r\n\r\nis that ok now?",
              "author": {
                "login": "alexjbest"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5eN1ow",
              "createdAt": "2023-08-16T13:51:39Z",
              "body": "",
              "author": {
                "login": "alexjbest"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "13727289a2a05c4d9f4fd94a028a449115003c05"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5eN4PR",
              "createdAt": "2023-08-16T13:55:55Z",
              "body": "",
              "author": {
                "login": "alexjbest"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "36adf0b5eaf4a0b899ccb9634a62d3d51ac11e63"
              }
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5N_LrC",
              "createdAt": "2023-08-16T13:57:16Z",
              "source": {
                "id": "PR_kwDOFcwZ1c5X-Dqr",
                "title": "[Merged by Bors] - feat: nilpotent matrices have nilpotent trace",
                "url": "https://github.com/leanprover-community/mathlib4/pull/6588"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "9573abb7d41b8a78de9d5263b6bd60e51b642a3b"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "00de5ff278a5058ec6627bcca04361ed0656e475"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "6f43c14d2cf7fda875915733ed92655e27d6141e"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "312fca0f60e29699d2cbab9f793531fa0008f1f0"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5eOoip",
              "createdAt": "2023-08-16T15:28:01Z",
              "body": "",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5eOoqA",
              "createdAt": "2023-08-16T15:28:16Z",
              "body": "",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5eOoxM",
              "createdAt": "2023-08-16T15:28:29Z",
              "body": "",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "ebd31517c6c35d5cd16bbbde8e156bc9e77cbd4c"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "055232e32899bcc128e992856284c02bb6845f88"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "a5587b345c4a6957152d213005def617cdcff65e"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5uZlk1zwAAAAJaq256",
              "createdAt": "2023-08-16T17:33:04Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKteTVQ",
                "name": "awaiting-CI"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5e6DHX",
              "createdAt": "2023-08-23T19:26:16Z",
              "body": "",
              "author": {
                "login": "ericrbg"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5lAKf5",
              "createdAt": "2023-08-27T01:40:40Z",
              "body": "bors merge",
              "author": {
                "login": "kim-em"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5uZlk1zwAAAAJgBmno",
              "createdAt": "2023-08-27T01:40:53Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
                "name": "ready-to-merge"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5uZlk1zwAAAAJgBmn4",
              "createdAt": "2023-08-27T01:40:54Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5lANw0",
              "createdAt": "2023-08-27T02:54:36Z",
              "body": "Build failed (retrying...):\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/5988493381/job/16243731401)",
              "author": {
                "login": "bors"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5lAN6h",
              "createdAt": "2023-08-27T02:59:03Z",
              "body": "Build failed (retrying...):\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/5988506097/job/16243756603)",
              "author": {
                "login": "bors"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5lAWPc",
              "createdAt": "2023-08-27T07:05:18Z",
              "body": "Pull request successfully merged into master.\n\n  Build succeeded!\n\n  The publicly hosted instance of bors-ng is deprecated and will go away soon.\n\n  If you want to self-host your own instance, [instructions are here][instructions].\n  For more help, visit [the forum].\n\n  If you want to switch to GitHub's built-in merge queue, visit [their help page][gh].\n\n  [instructions]: https://github.com/bors-ng/bors-ng#how-to-set-up-your-own-real-instance\n  [the forum]: https://forum.bors.tech\n  [gh]: https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/configuring-pull-request-merges/managing-a-merge-queue\n\n\n\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/5989186271/job/16245107402)\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/5989186271/job/16245107474)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/5989186271/job/16245107435)",
              "author": {
                "login": "bors"
              }
            },
            {
              "__typename": "RenamedTitleEvent"
            },
            {
              "__typename": "ClosedEvent",
              "id": "CE_lADOFcwZ1c5uZlk1zwAAAAJgCxNg",
              "createdAt": "2023-08-27T07:05:19Z"
            },
            {
              "__typename": "HeadRefDeletedEvent",
              "id": "HRDE_lADOFcwZ1c5uZlk1zwAAAAJgCxOs",
              "createdAt": "2023-08-27T07:05:24Z"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5lAXN6",
              "createdAt": "2023-08-27T07:27:20Z",
              "body": "I think the diagnosis here is a bit wrong, and the fix is somewhat weird and not type-correct, although it does work. What is happening is that `elabSimpArgs` takes a syntax which is the result of matching `(\"[\" simpArg,* \"]\")?`, while norm_num has a syntax of the form `(simpArgs)?` where `syntax simpArgs := \"[\" simpArg,* \"]\"`. The difference is that the former pattern has nodes which are either empty (i.e. ``node `null []``) or of the form ``node `null [\"[\", body, \"]\"]``, while the latter produces either ``node `null []`` or ``node `null [node `simpArgs [\"[\", body, \"]\"]]``.\r\n\r\nCalling `args[0]` produces either `.missing` or ``node `simpArgs [\"[\", simpArgs, \"]\"]``, which is still not of the form expected by `elabSimpArgs` but is close enough that it has the right behavior because `elabSimpArgs` doesn't check the node kind or differentiate a null node from a missing node.",
              "author": {
                "login": "digama0"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5lAmFu",
              "createdAt": "2023-08-27T12:24:42Z",
              "body": "I kinda (see) thanks, do you have a better fix in mind then?",
              "author": {
                "login": "alexjbest"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5lBB26",
              "createdAt": "2023-08-27T21:42:40Z",
              "body": "Not really. As you say, the solution is to use more typed syntax, but lean core is squarely at fault for using untyped syntax in this case and many others. It would also help if the `simpArgs` syntax definition was upstreamed so that all simp-like tactics use it and not just the ones defined in std/mathlib, since it makes it harder to share code between them without suspicious code like this.",
              "author": {
                "login": "digama0"
              }
            }
          ]
        }
      }
    }
  }
}
