{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 9,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "eric-wieser"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "---\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n-->\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 1,
        "closed": true,
        "closedAt": "2023-08-17T11:39:40Z",
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c5kQEEg",
              "body": "It's great that this works but given how slow it is, it seems like we're still not ready to use `TensorProduct.AlgebraTensorModule.tensorTensorTensorComm` here. How about just updating the comment and leaving the implementation as it was?",
              "createdAt": "2023-08-17T09:20:18Z",
              "author": {
                "login": "ocfnash"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5kQJSC",
              "body": "I managed to speed it up, I didn't need the heterobasic `curry` after all, and that just slowed it down.\r\nIt's still a bit slower, but it's manageable.",
              "createdAt": "2023-08-17T09:34:57Z",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5kQZmw",
              "body": "> Thanks, now that this is not too slow, I think it's worth doing this to have an application of `TensorProduct.AlgebraTensorModule.tensorTensorTensorComm`.\r\n\r\nThere's always #6306 if you want another one :)\r\n",
              "createdAt": "2023-08-17T10:15:52Z",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5kQ1iL",
              "body": "Pull request successfully merged into master.\n\n  Build succeeded!\n\n  The publicly hosted instance of bors-ng is deprecated and will go away soon.\n\n  If you want to self-host your own instance, [instructions are here][instructions].\n  For more help, visit [the forum].\n\n  If you want to switch to GitHub's built-in merge queue, visit [their help page][gh].\n\n  [instructions]: https://github.com/bors-ng/bors-ng#how-to-set-up-your-own-real-instance\n  [the forum]: https://forum.bors.tech\n  [gh]: https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/configuring-pull-request-merges/managing-a-merge-queue\n\n\n\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/5890198934/job/15974822230)\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/5890198934/job/15974821927)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/5890198934/job/15974822059)",
              "createdAt": "2023-08-17T11:39:39Z",
              "author": {
                "login": "bors"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "b5ca954404e584f5c3d24d0d2418396ba4e8c4b2",
                "additions": 8,
                "deletions": 9,
                "committedDate": "2023-08-17T09:13:27Z",
                "author": {
                  "name": "Eric Wieser",
                  "email": "wieser.eric@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "3bbadd9667c3f9030d85502173f7028a3b16ee2e",
                "additions": 5,
                "deletions": 22,
                "committedDate": "2023-08-17T09:34:05Z",
                "author": {
                  "name": "Eric Wieser",
                  "email": "wieser.eric@gmail.com"
                },
                "statusCheckRollup": null
              }
            }
          ]
        },
        "createdAt": "2023-08-17T09:14:46Z",
        "deletions": 27,
        "files": {
          "nodes": [
            {
              "path": "Mathlib/Algebra/Lie/BaseChange.lean",
              "additions": 9,
              "deletions": 27
            }
          ]
        },
        "headRefName": "eric-wieser/rework-!3#7808",
        "headRefOid": "3bbadd9667c3f9030d85502173f7028a3b16ee2e",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c5YIst8",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
              "color": "06e039",
              "name": "ready-to-merge"
            }
          ]
        },
        "latestReviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5eT4B2",
              "body": "Thanks, now that this is not too slow, I think it's worth doing this to have an application of `TensorProduct.AlgebraTensorModule.tensorTensorTensorComm`.\r\n\r\nIt looks like further golfing is now possible (we should no longer need both `bracket_tmul'` and `bracket_tmul` and even `bracket_def` should not be necessary) but I don't think it's worth spending more time on this.\r\n\r\nbors merge",
              "state": "APPROVED",
              "author": {
                "login": "ocfnash"
              },
              "submittedAt": "2023-08-17T10:01:36Z"
            }
          ]
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "UNKNOWN",
        "mergeable": "UNKNOWN",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 6628,
        "potentialMergeCommit": null,
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": "APPROVED",
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5eT4B2",
              "body": "Thanks, now that this is not too slow, I think it's worth doing this to have an application of `TensorProduct.AlgebraTensorModule.tensorTensorTensorComm`.\r\n\r\nIt looks like further golfing is now possible (we should no longer need both `bracket_tmul'` and `bracket_tmul` and even `bracket_def` should not be necessary) but I don't think it's worth spending more time on this.\r\n\r\nbors merge",
              "state": "APPROVED",
              "author": {
                "login": "ocfnash"
              },
              "submittedAt": "2023-08-17T10:01:36Z"
            }
          ]
        },
        "reviewThreads": {
          "nodes": []
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjQyNTI2MA==",
              "login": "eric-wieser"
            },
            {
              "id": "MDQ6VXNlcjc3MzQzNjQ=",
              "login": "ocfnash"
            },
            {
              "id": "U_kgDOB75MNQ",
              "login": "leanprover-community-mathlib4-bot"
            }
          ]
        },
        "state": "CLOSED",
        "statusCheckRollup": null,
        "title": "[Merged by Bors] - refactor(Algebra/Lie/BaseChange): use new tensor product machinery",
        "updatedAt": "2023-08-17T11:39:40Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/6628",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "b5ca954404e584f5c3d24d0d2418396ba4e8c4b2"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5uitQszwAAAAJbA_eS",
              "createdAt": "2023-08-17T09:14:46Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5uitQszwAAAAJbA_eY",
              "createdAt": "2023-08-17T09:14:46Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKteTVQ",
                "name": "awaiting-CI"
              }
            },
            {
              "__typename": "ReviewRequestedEvent",
              "id": "RRE_lADOFcwZ1c5uitQszwAAAAJbA_ep",
              "createdAt": "2023-08-17T09:14:46Z",
              "requestedReviewer": {
                "id": "MDQ6VXNlcjc3MzQzNjQ=",
                "login": "ocfnash"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5kQEEg",
              "createdAt": "2023-08-17T09:20:18Z",
              "body": "It's great that this works but given how slow it is, it seems like we're still not ready to use `TensorProduct.AlgebraTensorModule.tensorTensorTensorComm` here. How about just updating the comment and leaving the implementation as it was?",
              "author": {
                "login": "ocfnash"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "3bbadd9667c3f9030d85502173f7028a3b16ee2e"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5kQJSC",
              "createdAt": "2023-08-17T09:34:57Z",
              "body": "I managed to speed it up, I didn't need the heterobasic `curry` after all, and that just slowed it down.\r\nIt's still a bit slower, but it's manageable.",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5uitQszwAAAAJbDGv7",
              "createdAt": "2023-08-17T09:58:19Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKteTVQ",
                "name": "awaiting-CI"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5eT4B2",
              "createdAt": "2023-08-17T10:01:36Z",
              "body": "Thanks, now that this is not too slow, I think it's worth doing this to have an application of `TensorProduct.AlgebraTensorModule.tensorTensorTensorComm`.\r\n\r\nIt looks like further golfing is now possible (we should no longer need both `bracket_tmul'` and `bracket_tmul` and even `bracket_def` should not be necessary) but I don't think it's worth spending more time on this.\r\n\r\nbors merge",
              "author": {
                "login": "ocfnash"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5uitQszwAAAAJbDPUN",
              "createdAt": "2023-08-17T10:01:47Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
                "name": "ready-to-merge"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5uitQszwAAAAJbDPWI",
              "createdAt": "2023-08-17T10:01:48Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5kQZmw",
              "createdAt": "2023-08-17T10:15:52Z",
              "body": "> Thanks, now that this is not too slow, I think it's worth doing this to have an application of `TensorProduct.AlgebraTensorModule.tensorTensorTensorComm`.\r\n\r\nThere's always #6306 if you want another one :)\r\n",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5kQ1iL",
              "createdAt": "2023-08-17T11:39:39Z",
              "body": "Pull request successfully merged into master.\n\n  Build succeeded!\n\n  The publicly hosted instance of bors-ng is deprecated and will go away soon.\n\n  If you want to self-host your own instance, [instructions are here][instructions].\n  For more help, visit [the forum].\n\n  If you want to switch to GitHub's built-in merge queue, visit [their help page][gh].\n\n  [instructions]: https://github.com/bors-ng/bors-ng#how-to-set-up-your-own-real-instance\n  [the forum]: https://forum.bors.tech\n  [gh]: https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/configuring-pull-request-merges/managing-a-merge-queue\n\n\n\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/5890198934/job/15974822230)\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/5890198934/job/15974821927)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/5890198934/job/15974822059)",
              "author": {
                "login": "bors"
              }
            },
            {
              "__typename": "RenamedTitleEvent"
            },
            {
              "__typename": "ClosedEvent",
              "id": "CE_lADOFcwZ1c5uitQszwAAAAJbGtL_",
              "createdAt": "2023-08-17T11:39:40Z"
            }
          ]
        }
      }
    }
  }
}
