{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 82,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "kmill"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "Uses the same machinery underlying the `Fintype` derive handler to derive a lexicographical `LinearOrder` for non-recursive inductive types that have no indices.\r\n\r\nIn principle more complicated types can have `LinearOrder`s, but that would require a more sophisticated implementation.\r\n\r\n---\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [x] depends on: #3198\r\n\r\n-->\r\n\r\n- [x] depends on: #3198\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 2,
        "closed": false,
        "closedAt": null,
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c5aJnBj",
              "body": "This PR/issue depends on:\n* ~~leanprover-community/mathlib4#3198~~\nBy **[Dependent Issues](https://github.com/z0al/dependent-issues)** (ðŸ¤–). Happy coding!\n<!-- By Dependent Issues (Action) - DO NOT REMOVE -->",
              "createdAt": "2023-04-18T05:47:01Z",
              "author": {
                "login": "kim-em"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5aSWw2",
              "body": "Can you add some documentation explaining exactly which linear order structure it will put on the type?",
              "createdAt": "2023-04-19T13:43:06Z",
              "author": {
                "login": "ChrisHughes24"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5aSZcf",
              "body": "Also, maybe some tests and some lemmas demonstrating how to use the `LinearOrder` structure that it generates. For example, how to prove something like this.\r\n\r\n```\r\ninductive Two : Type\r\n| one : Two\r\n| two : Two\r\nderiving LinearOrder\r\n\r\nexample : Two.one < Two.two := \r\n```",
              "createdAt": "2023-04-19T13:49:43Z",
              "author": {
                "login": "ChrisHughes24"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5aevbY",
              "body": "@ChrisHughes24 Thanks for the review, though I didn't intend for this to be reviewed yet! I'd created the PR to demonstrate how to the proxy type machinery. (@Parcly-Taxel Another reminder to please not change tags without communicating with the author.)\r\n\r\nThe story for how to prove things about this linear order is far from complete. The best I can figure is that one would need to generate linearly many or maybe even quadratically many lemmas with respect to the number of constructors (since earlier constructors come before later ones), and then furthermore you need lemmas for terms from the same constructor.",
              "createdAt": "2023-04-21T15:34:05Z",
              "author": {
                "login": "kmill"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6LyW3n",
              "body": "Is this still in the works? This would be useful for a codebase of mine, where I want to constructively choose some \"arbitrary\" element in a nonempty `Finset` through `Finset.min`.",
              "createdAt": "2024-09-12T04:14:33Z",
              "author": {
                "login": "vihdzp"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "c1fc0a52f12aacbbfe9793d863d035e56e488942",
                "additions": 349,
                "deletions": 0,
                "committedDate": "2023-03-31T05:08:05Z",
                "author": {
                  "name": "Kyle Miller",
                  "email": "kmill31415@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "a8bae729afee054fcba36d9d03e960cd7cd39ace",
                "additions": 144,
                "deletions": 28,
                "committedDate": "2023-03-31T06:12:45Z",
                "author": {
                  "name": "Kyle Miller",
                  "email": "kmill31415@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "2a7c9f36963ed9c736802cc1c7d37d6537e32e2c",
                "additions": 6,
                "deletions": 6,
                "committedDate": "2023-03-31T06:23:32Z",
                "author": {
                  "name": "Kyle Miller",
                  "email": "kmill31415@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "b81b4d143ef3a509a35bc11e80acc901e2d9a628",
                "additions": 43,
                "deletions": 38,
                "committedDate": "2023-03-31T06:40:43Z",
                "author": {
                  "name": "Kyle Miller",
                  "email": "kmill31415@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "5a0eb262fe8b112c3ba9b2c40f19afb78f56777f",
                "additions": 8,
                "deletions": 0,
                "committedDate": "2023-03-31T06:56:02Z",
                "author": {
                  "name": "Kyle Miller",
                  "email": "kmill31415@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "175c9bbc7270e237c7311fa735818695f19d8a31",
                "additions": 3,
                "deletions": 2,
                "committedDate": "2023-03-31T07:05:34Z",
                "author": {
                  "name": "Kyle Miller",
                  "email": "kmill31415@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "a642fdfe9a36d7909983b3a493230cba16e6a6a5",
                "additions": 62,
                "deletions": 30,
                "committedDate": "2023-03-31T20:02:26Z",
                "author": {
                  "name": "Kyle Miller",
                  "email": "kmill31415@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "c1946d7b89a58b57318a57639a47573d268e1d83",
                "additions": 40,
                "deletions": 14,
                "committedDate": "2023-03-31T20:22:24Z",
                "author": {
                  "name": "Kyle Miller",
                  "email": "kmill31415@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "59fb3283b0b59533ede28a59d7ea93e83d5b357b",
                "additions": 22,
                "deletions": 10,
                "committedDate": "2023-03-31T20:34:52Z",
                "author": {
                  "name": "Kyle Miller",
                  "email": "kmill31415@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "6383ece30523df9981a7f7e95e7e46d0fc3f4f59",
                "additions": 14,
                "deletions": 0,
                "committedDate": "2023-03-31T20:40:39Z",
                "author": {
                  "name": "Kyle Miller",
                  "email": "kmill31415@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "283cd4f6da5154060a867884f4a73abf70c98f28",
                "additions": 19,
                "deletions": 20,
                "committedDate": "2023-03-31T21:37:02Z",
                "author": {
                  "name": "Kyle Miller",
                  "email": "kmill31415@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "d10e670c019e6f0520869d3261792df290caf4ef",
                "additions": 7,
                "deletions": 6,
                "committedDate": "2023-04-01T06:24:37Z",
                "author": {
                  "name": "Kyle Miller",
                  "email": "kmill31415@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "b5ce394b5925781caba4ddb889bed8b21389a983",
                "additions": 282,
                "deletions": 202,
                "committedDate": "2023-04-03T17:58:04Z",
                "author": {
                  "name": "Kyle Miller",
                  "email": "kmill31415@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "f70c2b05f45ee0438118736f55e2fa5956e6b39a",
                "additions": 16,
                "deletions": 7,
                "committedDate": "2023-04-03T18:37:17Z",
                "author": {
                  "name": "Kyle Miller",
                  "email": "kmill31415@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "c4ef9d110e61394ce6423cbf77716922d130753e",
                "additions": 18,
                "deletions": 11,
                "committedDate": "2023-04-03T18:51:37Z",
                "author": {
                  "name": "Kyle Miller",
                  "email": "kmill31415@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "dbf2f263afb40e6f696874a74cfa1579b7aed307",
                "additions": 17535,
                "deletions": 1167,
                "committedDate": "2023-04-03T18:54:37Z",
                "author": {
                  "name": "Kyle Miller",
                  "email": "kmill31415@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "2c806e22bfaaf4cb05baae8d05cab8c5b9214a12",
                "additions": 2,
                "deletions": 1,
                "committedDate": "2023-04-03T19:12:41Z",
                "author": {
                  "name": "Kyle Miller",
                  "email": "kmill31415@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "9e3fbb41139258df5151f650c2a0cd94170195b0",
                "additions": 82,
                "deletions": 0,
                "committedDate": "2023-04-03T20:09:21Z",
                "author": {
                  "name": "Kyle Miller",
                  "email": "kmill31415@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "051fc3f28ab6dbc9e1974dffaf332c239075b8b5",
                "additions": 2,
                "deletions": 7,
                "committedDate": "2023-04-15T09:41:34Z",
                "author": {
                  "name": "Kyle Miller",
                  "email": "kmill31415@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "638b668aedb2112c256fcfc9027c8d42f9e9e211",
                "additions": 56642,
                "deletions": 1798,
                "committedDate": "2023-04-15T09:42:35Z",
                "author": {
                  "name": "Kyle Miller",
                  "email": "kmill31415@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "53162ee8874462cebb14ed28ceade237ee5ea62e",
                "additions": 56644,
                "deletions": 1805,
                "committedDate": "2023-04-15T09:44:08Z",
                "author": {
                  "name": "Kyle Miller",
                  "email": "kmill31415@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "6275c253dbfef8f4c1885c1d1315944b699a5599",
                "additions": 15225,
                "deletions": 680,
                "committedDate": "2023-04-18T05:33:36Z",
                "author": {
                  "name": "Jeremy Tan Jie Rui",
                  "email": "reddeloostw@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAErF7Dgw",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=3251&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            }
          ]
        },
        "createdAt": "2023-04-03T20:13:04Z",
        "deletions": 0,
        "files": {
          "nodes": [
            {
              "path": "Mathlib.lean",
              "additions": 1,
              "deletions": 0
            },
            {
              "path": "Mathlib/Tactic/DeriveLinearOrder.lean",
              "additions": 81,
              "deletions": 0
            }
          ]
        },
        "headRefName": "kmill_deriving_linearorder",
        "headRefOid": "6275c253dbfef8f4c1885c1d1315944b699a5599",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c5Nhh7N",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "MDU6TGFiZWwzMjcxMjQ0NzU5",
              "color": "e899cd",
              "name": "WIP"
            },
            {
              "id": "LA_kwDOFcwZ1c7P265b",
              "color": "f9d0c4",
              "name": "awaiting-author"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
              "color": "f99094",
              "name": "merge-conflict"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABKAKYew",
              "color": "33DBEC",
              "name": "t-meta"
            }
          ]
        },
        "latestReviews": {
          "nodes": []
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "DIRTY",
        "mergeable": "CONFLICTING",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 3251,
        "potentialMergeCommit": null,
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": null,
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": []
        },
        "reviewThreads": {
          "nodes": []
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjIzNTMwNw==",
              "login": "kmill"
            },
            {
              "id": "MDQ6VXNlcjQ3Nzk1Ng==",
              "login": "kim-em"
            },
            {
              "id": "MDQ6VXNlcjMzODQ3Njg2",
              "login": "ChrisHughes24"
            },
            {
              "id": "MDQ6VXNlcjY1NDY1Njcw",
              "login": "vihdzp"
            },
            {
              "id": "MDQ6VXNlcjU0MTc1NDYz",
              "login": "Parcly-Taxel"
            },
            {
              "id": "U_kgDOBcsTTQ",
              "login": "leanprover-community-bot-assistant"
            }
          ]
        },
        "state": "OPEN",
        "statusCheckRollup": {
          "contexts": {
            "nodes": [
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAErF7Dgw",
                "name": "Summary",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=3251&login=leanprover-community&repository=mathlib4"
              }
            ]
          }
        },
        "title": "feat: deriving `LinearOrder` for simple enough inductive types",
        "updatedAt": "2025-01-05T04:26:41Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/3251",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5iglgOzwAAAAITfuXg",
              "createdAt": "2023-04-03T20:13:05Z",
              "label": {
                "id": "MDU6TGFiZWwzMjg4OTQyMDg2",
                "name": "blocked-by-other-PR"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5iglgOzwAAAAITfuXp",
              "createdAt": "2023-04-03T20:13:05Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKAKYew",
                "name": "t-meta"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5iglgOzwAAAAIYjqmI",
              "createdAt": "2023-04-13T23:05:48Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5iglgOzwAAAAIZRJkI",
              "createdAt": "2023-04-15T10:22:00Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5iglgOzwAAAAIaUiin",
              "createdAt": "2023-04-18T05:33:48Z",
              "label": {
                "id": "MDU6TGFiZWwzMjg4OTQyMDg2",
                "name": "blocked-by-other-PR"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5iglgOzwAAAAIaUiiw",
              "createdAt": "2023-04-18T05:33:48Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5aJnBj",
              "createdAt": "2023-04-18T05:47:01Z",
              "body": "This PR/issue depends on:\n* ~~leanprover-community/mathlib4#3198~~\nBy **[Dependent Issues](https://github.com/z0al/dependent-issues)** (ðŸ¤–). Happy coding!\n<!-- By Dependent Issues (Action) - DO NOT REMOVE -->",
              "author": {
                "login": "kim-em"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5aSWw2",
              "createdAt": "2023-04-19T13:43:06Z",
              "body": "Can you add some documentation explaining exactly which linear order structure it will put on the type?",
              "author": {
                "login": "ChrisHughes24"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5aSZcf",
              "createdAt": "2023-04-19T13:49:43Z",
              "body": "Also, maybe some tests and some lemmas demonstrating how to use the `LinearOrder` structure that it generates. For example, how to prove something like this.\r\n\r\n```\r\ninductive Two : Type\r\n| one : Two\r\n| two : Two\r\nderiving LinearOrder\r\n\r\nexample : Two.one < Two.two := \r\n```",
              "author": {
                "login": "ChrisHughes24"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5iglgOzwAAAAIbllE_",
              "createdAt": "2023-04-20T03:52:50Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5iglgOzwAAAAIbllFB",
              "createdAt": "2023-04-20T03:52:50Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5aevbY",
              "createdAt": "2023-04-21T15:34:05Z",
              "body": "@ChrisHughes24 Thanks for the review, though I didn't intend for this to be reviewed yet! I'd created the PR to demonstrate how to the proxy type machinery. (@Parcly-Taxel Another reminder to please not change tags without communicating with the author.)\r\n\r\nThe story for how to prove things about this linear order is far from complete. The best I can figure is that one would need to generate linearly many or maybe even quadratically many lemmas with respect to the number of constructors (since earlier constructors come before later ones), and then furthermore you need lemmas for terms from the same constructor.",
              "author": {
                "login": "kmill"
              }
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5iglgOzwAAAAI6s5s4",
              "createdAt": "2023-06-20T04:25:26Z",
              "label": {
                "id": "MDU6TGFiZWwzMjcxMjQ0NzU5",
                "name": "WIP"
              }
            },
            {
              "__typename": "BaseRefChangedEvent"
            },
            {
              "__typename": "BaseRefChangedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6LyW3n",
              "createdAt": "2024-09-12T04:14:33Z",
              "body": "Is this still in the works? This would be useful for a codebase of mine, where I want to constructively choose some \"arbitrary\" element in a nonempty `Finset` through `Finset.min`.",
              "author": {
                "login": "vihdzp"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5iglgOzwAAAAOuv145",
              "createdAt": "2025-01-05T04:26:41Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            }
          ]
        }
      }
    }
  }
}
