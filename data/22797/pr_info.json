{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 210,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "loefflerd"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "---\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nFor details on the \"pull request lifecycle\" in mathlib, please see:\r\nhttps://leanprover-community.github.io/contribute/index.html\r\n\r\nIn particular, note that most reviewers will only notice your PR\r\nif it passes the continuous integration checks.\r\nPlease ask for help on https://leanprover.zulipchat.com if needed.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nIf you are moving or deleting declarations, please include these lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nMoves:\r\n- Vector.* -> List.Vector.*\r\n- ...\r\n\r\nDeletions:\r\n- Nat.bit1_add_bit1\r\n- ...\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n\r\n-->\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 39,
        "closed": false,
        "closedAt": null,
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c6hmD6_",
              "body": "### PR summary [24863b0aa2](https://github.com/leanprover-community/mathlib4/pull/22797/commits/24863b0aa28eccca1bbdafad180958098beb1b10)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ IsBoundedSMul`\n`+ IsBoundedSMul.of_nnnorm_smul_le`\n`+ IsBoundedSMul.of_norm_smul_le`\n`+ IsBoundedSMul.op`\n`+ Matrix.boundedSMul`\n`+ NNReal.isBoundedSMul`\n`+ NonUnitalSeminormedRing.isBoundedSMul`\n`+ NonUnitalSeminormedRing.isBoundedSMulOpposite`\n`+ NormedField.to_isBoundedSMul`\n`+ Pi.instIsBoundedSMul`\n`+ Pi.instIsBoundedSMul'`\n`+ Prod.instIsBoundedSMul`\n`+ Real.isBoundedSMul`\n`+ Submodule.Quotient.instIsBoundedSMul`\n`+ frobeniusIsBoundedSMul`\n`+ instL1IsBoundedSMul`\n`+ instProdIsBoundedSMul`\n`+ instance (priority := 100) IsBoundedSMul.continuousSMul : ContinuousSMul Œ± Œ≤`\n`+ instance (priority := 100) IsBoundedSMul.toUniformContinuousConstSMul :`\n`+ instance (priority := 100) NormedSpace.isBoundedSMul [NormedSpace ùïú E] : IsBoundedSMul ùïú E`\n`+ instance : IsBoundedSMul (Œ± ‚Üí·µá ùïú) (Œ± ‚Üí·µá Œ≤)`\n`+ instance [Fact (1 ‚â§ p)] : IsBoundedSMul ùïú (lp E p)`\n`+ instance {M} [Zero M] [Zero Œ±] [SMul M Œ±] [PseudoMetricSpace M] [IsBoundedSMul M Œ±] :`\n`+ instance {R} [Zero R] [Zero Œ≤] [PseudoMetricSpace R] [SMul R Œ≤] [IsBoundedSMul R Œ≤] :`\n`+ linftyOpIsBoundedSMul`\n`+ simpleFunc.boundedSMul`\n`++ instance {ùïú : Type*} [NormedRing ùïú] [Module ùïú E] [IsBoundedSMul ùïú E] :`\n`++ isBoundedSMul`\n`+++ instIsBoundedSMul`\n`- BoundedSMul.op`\n`- NNReal.boundedSMul`\n`- NonUnitalSeminormedRing.to_boundedSMul`\n`- NonUnitalSeminormedRing.to_has_bounded_op_smul`\n`- NormedField.to_boundedSMul`\n`- Pi.instBoundedSMul`\n`- Pi.instBoundedSMul'`\n`- Prod.instBoundedSMul`\n`- Real.boundedSMul`\n`- Submodule.Quotient.instBoundedSMul`\n`- instL1BoundedSMul`\n`- instProdBoundedSMul`\n`- instance (priority := 100) BoundedSMul.continuousSMul : ContinuousSMul Œ± Œ≤`\n`- instance (priority := 100) BoundedSMul.toUniformContinuousConstSMul :`\n`- instance (priority := 100) NormedSpace.boundedSMul [NormedSpace ùïú E] : BoundedSMul ùïú E`\n`- instance : BoundedSMul (Œ± ‚Üí·µá ùïú) (Œ± ‚Üí·µá Œ≤)`\n`- instance [Fact (1 ‚â§ p)] : BoundedSMul ùïú (lp E p)`\n`- instance {M} [Zero M] [Zero Œ±] [SMul M Œ±] [PseudoMetricSpace M] [BoundedSMul M Œ±] :`\n`- instance {R} [Zero R] [Zero Œ≤] [PseudoMetricSpace R] [SMul R Œ≤] [BoundedSMul R Œ≤] :`\n`- linftyOpBoundedSMul`\n`-- boundedSMul`\n`-- instance {ùïú : Type*} [NormedRing ùïú] [Module ùïú E] [BoundedSMul ùïú E] :`\n`--- instBoundedSMul`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>\n\n---\n\n<details><summary>No changes to technical debt.</summary>\n\nYou can run this locally as\n```\n./scripts/technical-debt-metrics.sh pr_summary\n```\n* The `relative` value is the weighted *sum* of the differences with weight given by the *inverse* of the current value of the statistic.\n* The `absolute` value is the `relative` value divided by the total sum of the inverses of the current values (i.e. the weighted *average* of the differences).\n</details>\n",
              "createdAt": "2025-03-10T16:09:40Z",
              "author": {
                "login": "github-actions"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "ae99ef143761ffb4cf20e3d0446c710445572788",
                "additions": 190,
                "deletions": 188,
                "committedDate": "2025-03-10T16:05:49Z",
                "author": {
                  "name": "David Loeffler",
                  "email": "d.loeffler.01@cantab.net"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "558ba9bafe7e1063d441e35edb8ef454cb5ce4f9",
                "additions": 12,
                "deletions": 0,
                "committedDate": "2025-03-10T16:07:42Z",
                "author": {
                  "name": "David Loeffler",
                  "email": "d.loeffler.01@cantab.net"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI9wCzug",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13769339050/job/38503756730"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI9wGD3g",
                        "name": "Add topic label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13769355487/job/38503810014"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI9wGEMg",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13769355494/job/38503810098"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI9wGEEg",
                        "name": "post-or-update-summary-comment",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13769355489/job/38503810066"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI9wCwQQ",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13769339049/job/38503755841"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI9wGGtA",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13769355527/job/38503810740"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI9wCzBQ",
                        "name": "Build",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13769339049/job/38503756549"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI9wCwgw",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13769339050/job/38503755907"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI9wGE1Q",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13769355527/job/38503810261"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI9wC23g",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13769339050/job/38503757534"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI9wzooQ",
                        "name": "Post-CI job",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13769339049/job/38504556705"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI9wGn-w",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/38503819259"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI9wIW5A",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=22797&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "24863b0aa28eccca1bbdafad180958098beb1b10",
                "additions": 15,
                "deletions": 11,
                "committedDate": "2025-03-10T16:20:00Z",
                "author": {
                  "name": "David Loeffler",
                  "email": "d.loeffler.01@cantab.net"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI9w38yQ",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13769601998/job/38504627401"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI9w3_8w",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13769602313/job/38504628211"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI9w4A4g",
                        "name": "post-or-update-summary-comment",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13769602335/job/38504628450"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI9w3-EA",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13769601984/job/38504627728"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI9w3_QA",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13769602316/job/38504628032"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI9w38bg",
                        "name": "Build",
                        "conclusion": null,
                        "status": "IN_PROGRESS",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13769601984/job/38504627310"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI9w3_Tg",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13769601998/job/38504628046"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI9w4CGw",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13769602316/job/38504628763"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI9w4B3Q",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13769601998/job/38504628701"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI9w4hNQ",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/38504636725"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI9w6Krg",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=22797&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            }
          ]
        },
        "createdAt": "2025-03-10T16:08:35Z",
        "deletions": 192,
        "files": {
          "nodes": [
            {
              "path": "Mathlib/Analysis/Asymptotics/Defs.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Analysis/Asymptotics/Lemmas.lean",
              "additions": 5,
              "deletions": 5
            },
            {
              "path": "Mathlib/Analysis/LocallyConvex/Basic.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Analysis/Matrix.lean",
              "additions": 18,
              "deletions": 14
            },
            {
              "path": "Mathlib/Analysis/Normed/Affine/AddTorsor.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Analysis/Normed/Algebra/TrivSqZeroExt.lean",
              "additions": 10,
              "deletions": 10
            },
            {
              "path": "Mathlib/Analysis/Normed/Group/Hom.lean",
              "additions": 4,
              "deletions": 4
            },
            {
              "path": "Mathlib/Analysis/Normed/Group/NullSubmodule.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Analysis/Normed/Group/Quotient.lean",
              "additions": 3,
              "deletions": 3
            },
            {
              "path": "Mathlib/Analysis/Normed/Lp/PiLp.lean",
              "additions": 3,
              "deletions": 3
            },
            {
              "path": "Mathlib/Analysis/Normed/Lp/ProdLp.lean",
              "additions": 4,
              "deletions": 4
            },
            {
              "path": "Mathlib/Analysis/Normed/Lp/lpSpace.lean",
              "additions": 13,
              "deletions": 13
            },
            {
              "path": "Mathlib/Analysis/Normed/Module/Basic.lean",
              "additions": 4,
              "deletions": 4
            },
            {
              "path": "Mathlib/Analysis/Normed/Module/Span.lean",
              "additions": 3,
              "deletions": 3
            },
            {
              "path": "Mathlib/Analysis/Normed/MulAction.lean",
              "additions": 20,
              "deletions": 13
            },
            {
              "path": "Mathlib/Analysis/Normed/Operator/ContinuousLinearMap.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Analysis/NormedSpace/Pointwise.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Dynamics/BirkhoffSum/NormedSpace.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/MeasureTheory/Function/L1Space/AEEqFun.lean",
              "additions": 4,
              "deletions": 4
            },
            {
              "path": "Mathlib/MeasureTheory/Function/L1Space/HasFiniteIntegral.lean",
              "additions": 6,
              "deletions": 4
            },
            {
              "path": "Mathlib/MeasureTheory/Function/L1Space/Integrable.lean",
              "additions": 8,
              "deletions": 8
            },
            {
              "path": "Mathlib/MeasureTheory/Function/LocallyIntegrable.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/MeasureTheory/Function/LpSeminorm/Basic.lean",
              "additions": 4,
              "deletions": 4
            },
            {
              "path": "Mathlib/MeasureTheory/Function/LpSeminorm/CompareExp.lean",
              "additions": 4,
              "deletions": 4
            },
            {
              "path": "Mathlib/MeasureTheory/Function/LpSpace/Basic.lean",
              "additions": 12,
              "deletions": 12
            },
            {
              "path": "Mathlib/MeasureTheory/Function/LpSpace/DomAct/Basic.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/MeasureTheory/Function/SimpleFuncDenseLp.lean",
              "additions": 10,
              "deletions": 8
            },
            {
              "path": "Mathlib/MeasureTheory/Integral/IntegrableOn.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/MeasureTheory/Measure/FiniteMeasure.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Order/Filter/ZeroAndBoundedAtFilter.lean",
              "additions": 3,
              "deletions": 3
            },
            {
              "path": "Mathlib/Topology/ContinuousMap/Bounded/Basic.lean",
              "additions": 16,
              "deletions": 16
            },
            {
              "path": "Mathlib/Topology/ContinuousMap/Compact.lean",
              "additions": 4,
              "deletions": 4
            },
            {
              "path": "Mathlib/Topology/MetricSpace/Algebra.lean",
              "additions": 27,
              "deletions": 24
            },
            {
              "path": "Mathlib/Topology/MetricSpace/Completion.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Topology/MetricSpace/Holder.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Topology/MetricSpace/HolderNorm.lean",
              "additions": 6,
              "deletions": 6
            },
            {
              "path": "docs/overview.yaml",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "docs/undergrad.yaml",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "scripts/nolints_prime_decls.txt",
              "additions": 1,
              "deletions": 1
            }
          ]
        },
        "headRefName": "DL_rename_smul",
        "headRefOid": "24863b0aa28eccca1bbdafad180958098beb1b10",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c6OBWmK",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": []
        },
        "latestReviews": {
          "nodes": []
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "BLOCKED",
        "mergeable": "MERGEABLE",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 22797,
        "potentialMergeCommit": {
          "oid": "88972fe2fd2cd08fa1042547122169f31d802429"
        },
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": null,
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": []
        },
        "reviewThreads": {
          "nodes": []
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjM0Mzk2ODg=",
              "login": "loefflerd"
            }
          ]
        },
        "state": "OPEN",
        "statusCheckRollup": {
          "contexts": {
            "nodes": [
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAI9w38yQ",
                "name": "Lint style (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13769601998/job/38504627401"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAI9w3_8w",
                "name": "label-and-report-new-contributor",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13769602313/job/38504628211"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAI9w4A4g",
                "name": "post-or-update-summary-comment",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13769602335/job/38504628450"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAI9w3-EA",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13769601984/job/38504627728"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAI9w3_QA",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13769602316/job/38504628032"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAI9w38bg",
                "name": "Build",
                "conclusion": null,
                "status": "IN_PROGRESS",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13769601984/job/38504627310"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAI9w3_Tg",
                "name": "Build (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13769601998/job/38504628046"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAI9w4CGw",
                "name": "Check all files imported",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13769602316/job/38504628763"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAI9w4B3Q",
                "name": "Post-CI job (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13769601998/job/38504628701"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAI9w4hNQ",
                "name": "New Contributor Check",
                "conclusion": "NEUTRAL",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/38504636725"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAI9w6Krg",
                "name": "Summary",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=22797&login=leanprover-community&repository=mathlib4"
              }
            ]
          }
        },
        "title": "chore(Topology/MetricSpace): rename BoundedSMul to IsBoundedSMul",
        "updatedAt": "2025-03-10T16:21:09Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/22797",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "ae99ef143761ffb4cf20e3d0446c710445572788"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "558ba9bafe7e1063d441e35edb8ef454cb5ce4f9"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6hmD6_",
              "createdAt": "2025-03-10T16:09:40Z",
              "body": "### PR summary [24863b0aa2](https://github.com/leanprover-community/mathlib4/pull/22797/commits/24863b0aa28eccca1bbdafad180958098beb1b10)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ IsBoundedSMul`\n`+ IsBoundedSMul.of_nnnorm_smul_le`\n`+ IsBoundedSMul.of_norm_smul_le`\n`+ IsBoundedSMul.op`\n`+ Matrix.boundedSMul`\n`+ NNReal.isBoundedSMul`\n`+ NonUnitalSeminormedRing.isBoundedSMul`\n`+ NonUnitalSeminormedRing.isBoundedSMulOpposite`\n`+ NormedField.to_isBoundedSMul`\n`+ Pi.instIsBoundedSMul`\n`+ Pi.instIsBoundedSMul'`\n`+ Prod.instIsBoundedSMul`\n`+ Real.isBoundedSMul`\n`+ Submodule.Quotient.instIsBoundedSMul`\n`+ frobeniusIsBoundedSMul`\n`+ instL1IsBoundedSMul`\n`+ instProdIsBoundedSMul`\n`+ instance (priority := 100) IsBoundedSMul.continuousSMul : ContinuousSMul Œ± Œ≤`\n`+ instance (priority := 100) IsBoundedSMul.toUniformContinuousConstSMul :`\n`+ instance (priority := 100) NormedSpace.isBoundedSMul [NormedSpace ùïú E] : IsBoundedSMul ùïú E`\n`+ instance : IsBoundedSMul (Œ± ‚Üí·µá ùïú) (Œ± ‚Üí·µá Œ≤)`\n`+ instance [Fact (1 ‚â§ p)] : IsBoundedSMul ùïú (lp E p)`\n`+ instance {M} [Zero M] [Zero Œ±] [SMul M Œ±] [PseudoMetricSpace M] [IsBoundedSMul M Œ±] :`\n`+ instance {R} [Zero R] [Zero Œ≤] [PseudoMetricSpace R] [SMul R Œ≤] [IsBoundedSMul R Œ≤] :`\n`+ linftyOpIsBoundedSMul`\n`+ simpleFunc.boundedSMul`\n`++ instance {ùïú : Type*} [NormedRing ùïú] [Module ùïú E] [IsBoundedSMul ùïú E] :`\n`++ isBoundedSMul`\n`+++ instIsBoundedSMul`\n`- BoundedSMul.op`\n`- NNReal.boundedSMul`\n`- NonUnitalSeminormedRing.to_boundedSMul`\n`- NonUnitalSeminormedRing.to_has_bounded_op_smul`\n`- NormedField.to_boundedSMul`\n`- Pi.instBoundedSMul`\n`- Pi.instBoundedSMul'`\n`- Prod.instBoundedSMul`\n`- Real.boundedSMul`\n`- Submodule.Quotient.instBoundedSMul`\n`- instL1BoundedSMul`\n`- instProdBoundedSMul`\n`- instance (priority := 100) BoundedSMul.continuousSMul : ContinuousSMul Œ± Œ≤`\n`- instance (priority := 100) BoundedSMul.toUniformContinuousConstSMul :`\n`- instance (priority := 100) NormedSpace.boundedSMul [NormedSpace ùïú E] : BoundedSMul ùïú E`\n`- instance : BoundedSMul (Œ± ‚Üí·µá ùïú) (Œ± ‚Üí·µá Œ≤)`\n`- instance [Fact (1 ‚â§ p)] : BoundedSMul ùïú (lp E p)`\n`- instance {M} [Zero M] [Zero Œ±] [SMul M Œ±] [PseudoMetricSpace M] [BoundedSMul M Œ±] :`\n`- instance {R} [Zero R] [Zero Œ≤] [PseudoMetricSpace R] [SMul R Œ≤] [BoundedSMul R Œ≤] :`\n`- linftyOpBoundedSMul`\n`-- boundedSMul`\n`-- instance {ùïú : Type*} [NormedRing ùïú] [Module ùïú E] [BoundedSMul ùïú E] :`\n`--- instBoundedSMul`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>\n\n---\n\n<details><summary>No changes to technical debt.</summary>\n\nYou can run this locally as\n```\n./scripts/technical-debt-metrics.sh pr_summary\n```\n* The `relative` value is the weighted *sum* of the differences with weight given by the *inverse* of the current value of the statistic.\n* The `absolute` value is the `relative` value divided by the total sum of the inverses of the current values (i.e. the weighted *average* of the differences).\n</details>\n",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "24863b0aa28eccca1bbdafad180958098beb1b10"
              }
            }
          ]
        }
      }
    }
  }
}
