{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 403,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "ScottCarnahan"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "This PR adds generalized versions of existing results, where the original base ring is no longer necessarily linearly ordered, but is an algebra over a LinearOrderedCommRing.\r\n\r\n---\r\n\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 9,
        "closed": false,
        "closedAt": null,
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c6kHr0K",
              "body": "### PR summary [1c5de3e07e](https://github.com/leanprover-community/mathlib4/pull/23329/commits/1c5de3e07e6869ae54114f37b3266093e42d5669)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n|<details><summary>10 files</summary> `Mathlib.Algebra.Lie.Weights.RootSystem` `Mathlib.LinearAlgebra.RootSystem.BaseChange` `Mathlib.LinearAlgebra.RootSystem.Basic` `Mathlib.LinearAlgebra.RootSystem.CartanMatrix` `Mathlib.LinearAlgebra.RootSystem.Finite.CanonicalBilinear` `Mathlib.LinearAlgebra.RootSystem.Finite.Lemmas` `Mathlib.LinearAlgebra.RootSystem.Finite.Nondegenerate` `Mathlib.LinearAlgebra.RootSystem.Irreducible` `Mathlib.LinearAlgebra.RootSystem.Reduced` `Mathlib.LinearAlgebra.RootSystem.RootPositive`</details>|1|\n| `Mathlib.LinearAlgebra.RootSystem.IsValuedIn` (new file)|1462|\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ CoPolarizationIn`\n`+ CoPolarizationIn_apply`\n`+ CoPolarizationIn_eq`\n`+ PolarizationIn`\n`+ PolarizationIn_apply`\n`+ PolarizationIn_eq`\n`+ algebraMap_coroot'In_apply`\n`+ algebraMap_posRootForm_posForm`\n`+ algebraMap_root'In_apply`\n`+ coroot'In`\n`+ coroot'In_rootSpanMem_eq_pairingIn`\n`+ corootSpanIn`\n`+ corootSpanMem`\n`+ exists_coroot_ne`\n`+ finrank_corootSpanIn_eq`\n`+ finrank_range_polarization_eq_finrank_span_coroot`\n`+ instance [Module S M] [Finite ι] :`\n`+ instance [Module S N] [Finite ι] :`\n`+ pairingIn_reflection_perm`\n`+ polarizationIn_Injective`\n`+ posRootForm_posForm_anisotropic`\n`+ posRootForm_posForm_apply_apply`\n`+ posRootForm_posForm_nondegenerate`\n`+ posRootForm_posForm_pos_of_ne_zero`\n`+ posRootForm_posForm_self_smul_coroot`\n`+ prod_posRootForm_posForm_smul_coroot_mem_range_PolarizationIn`\n`+ range_polarizationIn_le_span_coroot`\n`+ root'In`\n`+ root'In_corootSpanMem_eq_pairingIn`\n`+ rootSpanIn`\n`+ rootSpanMem`\n`+ toPerfectPairing_apply_PolarizationIn`\n`+ zero_le_posForm`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>\n\n---\n\n<details><summary>No changes to technical debt.</summary>\n\nYou can run this locally as\n```\n./scripts/technical-debt-metrics.sh pr_summary\n```\n* The `relative` value is the weighted *sum* of the differences with weight given by the *inverse* of the current value of the statistic.\n* The `absolute` value is the `relative` value divided by the total sum of the inverses of the current values (i.e. the weighted *average* of the differences).\n</details>\n",
              "createdAt": "2025-03-26T07:37:02Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6ktLtu",
              "body": "> Do you think that is worth doing as part of these changes?\r\n\r\nYes. I've moved the `IsValuedIn` material to a new file, but I think I will need to reorganize more later.",
              "createdAt": "2025-03-29T11:27:07Z",
              "author": {
                "login": "ScottCarnahan"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "717458056fb54d9e0f3d675ed9149c5a1bab9460",
                "additions": 289,
                "deletions": 6,
                "committedDate": "2025-03-26T07:31:43Z",
                "author": {
                  "name": "Scott Carnahan",
                  "email": "128885296+ScottCarnahan@users.noreply.github.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJLdvr4g",
                        "name": "set_pr_emoji",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14077873464/job/39424093154"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJLdkz9A",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14077808695/job/39423914996"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJOQsPyw",
                        "name": "Add ready-to-merge or delegated label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14137225758/job/39611731915"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJLdvq5Q",
                        "name": "Add topic label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14077873472/job/39424092901"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJLdvq6Q",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14077873463/job/39424092905"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJOQsP4Q",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14137225776/job/39611731937"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJLdvqyQ",
                        "name": "post-or-update-summary-comment",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14077873468/job/39424092873"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJLdkz5A",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14077808691/job/39423914980"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJLdk1gg",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14077808695/job/39423915394"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJLdk1HQ",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14077808691/job/39423915293"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJLdk2uw",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14077808695/job/39423915707"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJLd9tnQ",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14077808691/job/39424322973"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJLdwCaw",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/39424098923"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "7de6fea310b4fb2557a869fd3a92487239dfbc30",
                "additions": 7551,
                "deletions": 3913,
                "committedDate": "2025-03-29T05:45:26Z",
                "author": {
                  "name": "Scott Carnahan",
                  "email": "128885296+ScottCarnahan@users.noreply.github.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "1c5de3e07e6869ae54114f37b3266093e42d5669",
                "additions": 216,
                "deletions": 205,
                "committedDate": "2025-03-29T09:44:44Z",
                "author": {
                  "name": "Scott Carnahan",
                  "email": "128885296+ScottCarnahan@users.noreply.github.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJOiN7jA",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14144467944/job/39630109580"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJOiN8rw",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14144468167/job/39630109871"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJOiN8nw",
                        "name": "post-or-update-summary-comment",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14144468156/job/39630109855"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJOiN7Xg",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14144467943/job/39630109534"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJOiN7Kw",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14144467944/job/39630109483"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJOiN7Gg",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14144467943/job/39630109466"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJOiN71w",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14144467944/job/39630109655"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJOiU8tQ",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14144467943/job/39630224565"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJOiOFwQ",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/39630112193"
                      }
                    ]
                  }
                }
              }
            }
          ]
        },
        "createdAt": "2025-03-26T07:35:56Z",
        "deletions": 109,
        "files": {
          "nodes": [
            {
              "path": "Mathlib.lean",
              "additions": 1,
              "deletions": 0
            },
            {
              "path": "Mathlib/LinearAlgebra/RootSystem/BaseChange.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/LinearAlgebra/RootSystem/Defs.lean",
              "additions": 0,
              "deletions": 101
            },
            {
              "path": "Mathlib/LinearAlgebra/RootSystem/Finite/CanonicalBilinear.lean",
              "additions": 107,
              "deletions": 4
            },
            {
              "path": "Mathlib/LinearAlgebra/RootSystem/Finite/Lemmas.lean",
              "additions": 0,
              "deletions": 1
            },
            {
              "path": "Mathlib/LinearAlgebra/RootSystem/Finite/Nondegenerate.lean",
              "additions": 80,
              "deletions": 0
            },
            {
              "path": "Mathlib/LinearAlgebra/RootSystem/IsValuedIn.lean",
              "additions": 212,
              "deletions": 0
            },
            {
              "path": "Mathlib/LinearAlgebra/RootSystem/Reduced.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/LinearAlgebra/RootSystem/RootPositive.lean",
              "additions": 1,
              "deletions": 1
            }
          ]
        },
        "headRefName": "ScottCarnahan/nondegeneracy",
        "headRefOid": "1c5de3e07e6869ae54114f37b3266093e42d5669",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c6QKFgR",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c8AAAABViJjTQ",
              "color": "33DBEC",
              "name": "t-algebra"
            }
          ]
        },
        "latestReviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c6ihRXg",
              "body": "Just some quick remarks for now: I will do a proper review at the weekend.\r\n\r\nGiven the new material here I wonder if we should split the definition of `IsValuedIn` + all related API in `Defs.lean` into its own file. I think this might make it easier to understand the design. Do you think that is worth doing as part of these changes?",
              "state": "COMMENTED",
              "author": {
                "login": "ocfnash"
              },
              "submittedAt": "2025-03-28T20:21:41Z"
            }
          ]
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "BLOCKED",
        "mergeable": "MERGEABLE",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 23329,
        "potentialMergeCommit": {
          "oid": "674e76d20e325b7a4bc39c3d4e0b4d813a68e643"
        },
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": null,
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c6ihRXg",
              "body": "Just some quick remarks for now: I will do a proper review at the weekend.\r\n\r\nGiven the new material here I wonder if we should split the definition of `IsValuedIn` + all related API in `Defs.lean` into its own file. I think this might make it easier to understand the design. Do you think that is worth doing as part of these changes?",
              "state": "COMMENTED",
              "author": {
                "login": "ocfnash"
              },
              "submittedAt": "2025-03-28T20:21:41Z"
            }
          ]
        },
        "reviewThreads": {
          "nodes": [
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c54W-k-",
                    "body": "```suggestion\r\n    Dual S (P.rootSpanIn S) :=\r\n  P.flip.root'In S i\r\n```",
                    "createdAt": "2025-03-28T20:13:09Z",
                    "author": {
                      "login": "ocfnash"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c54W-nt",
                    "body": "```suggestion\r\n    algebraMap S R (P.coroot'In S i x) = P.coroot' i x :=\r\n  P.flip.algebraMap_root'In_apply S i x\r\n```",
                    "createdAt": "2025-03-28T20:13:21Z",
                    "author": {
                      "login": "ocfnash"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c54W_AK",
                    "body": "Already in `Defs`:\r\n```suggestion\r\n```",
                    "createdAt": "2025-03-28T20:15:02Z",
                    "author": {
                      "login": "ocfnash"
                    }
                  }
                ]
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "U_kgDOB66iMA",
              "login": "ScottCarnahan"
            },
            {
              "id": "MDQ6VXNlcjc3MzQzNjQ=",
              "login": "ocfnash"
            }
          ]
        },
        "state": "OPEN",
        "statusCheckRollup": {
          "contexts": {
            "nodes": [
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJOiN7jA",
                "name": "Lint style (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14144467944/job/39630109580"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJOiN8rw",
                "name": "label-and-report-new-contributor",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14144468167/job/39630109871"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJOiN8nw",
                "name": "post-or-update-summary-comment",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14144468156/job/39630109855"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJOiN7Xg",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14144467943/job/39630109534"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJOiN7Kw",
                "name": "Build (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14144467944/job/39630109483"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJOiN7Gg",
                "name": "Build",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14144467943/job/39630109466"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJOiN71w",
                "name": "Post-CI job (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14144467944/job/39630109655"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJOiU8tQ",
                "name": "Post-CI job",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14144467943/job/39630224565"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJOiOFwQ",
                "name": "New Contributor Check",
                "conclusion": "NEUTRAL",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/39630112193"
              }
            ]
          }
        },
        "title": "feat (LinearAlgebra/RootSystem): nondegeneracy for subrings",
        "updatedAt": "2025-03-29T11:27:08Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/23329",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "717458056fb54d9e0f3d675ed9149c5a1bab9460"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6vwOX6zwAAAAP0hXWD",
              "createdAt": "2025-03-26T07:35:56Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABViJjTQ",
                "name": "t-algebra"
              }
            },
            {
              "__typename": "ReviewRequestedEvent",
              "id": "RRE_lADOFcwZ1c6vwOX6zwAAAAP0hXk6",
              "createdAt": "2025-03-26T07:36:01Z",
              "requestedReviewer": {
                "id": "MDQ6VXNlcjc3MzQzNjQ=",
                "login": "ocfnash"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6kHr0K",
              "createdAt": "2025-03-26T07:37:02Z",
              "body": "### PR summary [1c5de3e07e](https://github.com/leanprover-community/mathlib4/pull/23329/commits/1c5de3e07e6869ae54114f37b3266093e42d5669)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n|<details><summary>10 files</summary> `Mathlib.Algebra.Lie.Weights.RootSystem` `Mathlib.LinearAlgebra.RootSystem.BaseChange` `Mathlib.LinearAlgebra.RootSystem.Basic` `Mathlib.LinearAlgebra.RootSystem.CartanMatrix` `Mathlib.LinearAlgebra.RootSystem.Finite.CanonicalBilinear` `Mathlib.LinearAlgebra.RootSystem.Finite.Lemmas` `Mathlib.LinearAlgebra.RootSystem.Finite.Nondegenerate` `Mathlib.LinearAlgebra.RootSystem.Irreducible` `Mathlib.LinearAlgebra.RootSystem.Reduced` `Mathlib.LinearAlgebra.RootSystem.RootPositive`</details>|1|\n| `Mathlib.LinearAlgebra.RootSystem.IsValuedIn` (new file)|1462|\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ CoPolarizationIn`\n`+ CoPolarizationIn_apply`\n`+ CoPolarizationIn_eq`\n`+ PolarizationIn`\n`+ PolarizationIn_apply`\n`+ PolarizationIn_eq`\n`+ algebraMap_coroot'In_apply`\n`+ algebraMap_posRootForm_posForm`\n`+ algebraMap_root'In_apply`\n`+ coroot'In`\n`+ coroot'In_rootSpanMem_eq_pairingIn`\n`+ corootSpanIn`\n`+ corootSpanMem`\n`+ exists_coroot_ne`\n`+ finrank_corootSpanIn_eq`\n`+ finrank_range_polarization_eq_finrank_span_coroot`\n`+ instance [Module S M] [Finite ι] :`\n`+ instance [Module S N] [Finite ι] :`\n`+ pairingIn_reflection_perm`\n`+ polarizationIn_Injective`\n`+ posRootForm_posForm_anisotropic`\n`+ posRootForm_posForm_apply_apply`\n`+ posRootForm_posForm_nondegenerate`\n`+ posRootForm_posForm_pos_of_ne_zero`\n`+ posRootForm_posForm_self_smul_coroot`\n`+ prod_posRootForm_posForm_smul_coroot_mem_range_PolarizationIn`\n`+ range_polarizationIn_le_span_coroot`\n`+ root'In`\n`+ root'In_corootSpanMem_eq_pairingIn`\n`+ rootSpanIn`\n`+ rootSpanMem`\n`+ toPerfectPairing_apply_PolarizationIn`\n`+ zero_le_posForm`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>\n\n---\n\n<details><summary>No changes to technical debt.</summary>\n\nYou can run this locally as\n```\n./scripts/technical-debt-metrics.sh pr_summary\n```\n* The `relative` value is the weighted *sum* of the differences with weight given by the *inverse* of the current value of the statistic.\n* The `absolute` value is the `relative` value divided by the total sum of the inverses of the current values (i.e. the weighted *average* of the differences).\n</details>\n",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6ihRXg",
              "createdAt": "2025-03-28T20:13:09Z",
              "body": "Just some quick remarks for now: I will do a proper review at the weekend.\r\n\r\nGiven the new material here I wonder if we should split the definition of `IsValuedIn` + all related API in `Defs.lean` into its own file. I think this might make it easier to understand the design. Do you think that is worth doing as part of these changes?",
              "author": {
                "login": "ocfnash"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "7de6fea310b4fb2557a869fd3a92487239dfbc30"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "1c5de3e07e6869ae54114f37b3266093e42d5669"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6ktLtu",
              "createdAt": "2025-03-29T11:27:07Z",
              "body": "> Do you think that is worth doing as part of these changes?\r\n\r\nYes. I've moved the `IsValuedIn` material to a new file, but I think I will need to reorganize more later.",
              "author": {
                "login": "ScottCarnahan"
              }
            }
          ]
        }
      }
    }
  }
}
