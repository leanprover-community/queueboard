{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 155,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "loefflerd"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "Define the discrete Fourier transform as a `LinearEquiv`, rather than just a map; and prove the Fourier inversion formula, as well as a bunch of more routine lemmas. \r\n\r\n---\r\n\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nFor details on the \"pull request lifecycle\" in mathlib, please see:\r\nhttps://leanprover-community.github.io/contribute/index.html\r\n\r\nIn particular, note that most reviewers will only notice your PR\r\nif it passes the continuous integration checks, and is labeled with `awaiting-review`.\r\nPlease ask for help on https://leanprover.zulipchat.com if needed.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n-->\r\nRemarks:\r\n- I had to drop my plan of making the DFT be *by definition* an instance of the general Fourier-transform machinery, because I wanted to make it work for functions valued in any vector space; and mathlib's definition of \"integration\" only works when the target space is complete, even if the integral is over a finite discrete set. So now we define it by hand, & prove compatibility with the non-discrete FT if completeness holds.\r\n- For some lemmas I wasn't sure whether it was best to formulate the statement with the functions \"fully applied\" or not. E.g. should `dft_comp_neg` be\r\n```lemma dft_comp_neg (Œ¶ : ZMod N ‚Üí E) : ùìï (fun j ‚Ü¶ Œ¶ (-j)) = fun k ‚Ü¶ ùìï Œ¶ (-k)```\r\nor\r\n```lemma dft_comp_neg (Œ¶ : ZMod N ‚Üí E) (k : ZMod N) : ùìï (fun j ‚Ü¶ Œ¶ (-j)) k = ùìï Œ¶ (-k)```\r\n? \r\n\r\n- [x] depends on: #14495 \r\n\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 2,
        "closed": true,
        "closedAt": "2024-08-29T02:11:25Z",
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c6EBVf2",
              "body": "### PR summary [c6b25d0817](https://github.com/leanprover-community/mathlib4/pull/14535/commits/c6b25d08176e06196e69cbf7d20fc7d24abe8460)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ dft_apply_zero`\n`+ dft_comp_neg`\n`+ dft_comp_unitMul`\n`+ dft_const_mul`\n`+ dft_const_smul`\n`+ dft_dft`\n`+ dft_eq_fourier`\n`+ dft_mul_const`\n`+ dft_smul_const`\n`+ invDFT_apply`\n`+ invDFT_apply'`\n`+ invDFT_def`\n`+ invDFT_def'`\n`++ fourierIntegral_const_smul`\n`-- fourierIntegral_smul_const`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>",
              "createdAt": "2024-07-08T18:53:47Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6ECg3O",
              "body": "I think it would make sense to define DFT with more general targets (modules over a ring that contains a primitive $n$th root of unity). This would be relevant for applications in Computer Algebra (fast multiplication algorithms), for example. (Sorry for not mentioning this earlier on Zulip.)",
              "createdAt": "2024-07-08T20:45:27Z",
              "author": {
                "login": "MichaelStollBayreuth"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6EIo_9",
              "body": "Thanks for looking at this! I'm also at a conference this week, so there's no rush.\r\n\r\nRegarding extensions to more general coefficients: do you have a suggestion for how the API should look? I'd rather avoid a situation where users need to specify an explicit choice of coefficient ring, & root of unity in it, every time they invoke any lemmas about the DFT.\r\n\r\n\r\n",
              "createdAt": "2024-07-09T07:51:33Z",
              "author": {
                "login": "loefflerd"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6GCYTW",
              "body": "I think we can define a quite general version of DFT for functions `Œ¶ : R ‚Üí M`, where `R` is a finite ring, `M` is a module over another ring `R'`, and we fix an additive character `œà : R ‚Üí R'`. The relevant condition on `œà` to have interesting results should then be that it is primitive as an additive character (and that `n : R'` is invertible, or rather, `n : Module.End R' M` is invertible, for the linear equivalence). One can then still define `ùìï Œ¶` to be `dft stdAddChar Œ¶`, where `Œ¶ : ZMod N ‚Üí E`. For convenience, some results may need to be restated in this context (to make use of properties of `stdAddChar` and/or the complex numbers that may not be true in general), but I think having the general version available is worth the extra effort.\r\n\r\nBTW (and slightly off-topic), I think the correct definition of \"`Œ∂ : R` is a primitive `n`th root of unity\" is \"Œ∂ ^ n = 1 and for all 0 < k < n, 1 - Œ∂ ^ k is invertible\" (one can restrict `k` to the maximal proper divisors of `n`, of course). With this definition, images of primitive `n`th roots of unity under ring homomorphisms are still primitive `n`th roots of unity, which is not in general the case with the current definition, which just says that `Œ∂` has order `n` in the multiplicative monoid. Note that this definition also implies that `n` is invertible in `R`.",
              "createdAt": "2024-07-24T19:41:58Z",
              "author": {
                "login": "MichaelStollBayreuth"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6Gyj32",
              "body": "This PR/issue depends on:\n* ~~leanprover-community/mathlib4#14495~~\nBy **[Dependent Issues](https://github.com/z0al/dependent-issues)** (ü§ñ). Happy coding!\n<!-- By Dependent Issues (Action) - DO NOT REMOVE -->",
              "createdAt": "2024-07-31T20:32:47Z",
              "author": {
                "login": "leanprover-community-mathlib4-bot"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6J-iIU",
              "body": "Thanks Ya√´l for the comments, I have made the modifications as you suggested. ",
              "createdAt": "2024-08-28T09:57:47Z",
              "author": {
                "login": "loefflerd"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6J_0Cg",
              "body": "üöÄ Pull request has been placed on the maintainer queue by YaelDillies.",
              "createdAt": "2024-08-28T12:37:30Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6KE1NS",
              "body": "bors r+",
              "createdAt": "2024-08-29T01:01:39Z",
              "author": {
                "login": "dupuisf"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6KFDYx",
              "body": "Pull request successfully merged into master.\n\nBuild succeeded:\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/10606948866/job/29398568519)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/10606948866/job/29398568839)",
              "createdAt": "2024-08-29T02:11:25Z",
              "author": {
                "login": "mathlib-bors"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "44b1d1dc7302c32e6ed8c538dd57299ecc1895c9",
                "additions": 183,
                "deletions": 34,
                "committedDate": "2024-07-07T16:55:03Z",
                "author": {
                  "name": "David Loeffler",
                  "email": "d.loeffler.01@cantab.net"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGVBXn8g",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9845298520/job/27180525554"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGVBXoAw",
                        "name": "build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9845298551/job/27180525571"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGVBREDA",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9845265224/job/27180418060"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGVBRFGQ",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9845265227/job/27180418329"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGVBXn-g",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9845298519/job/27180525562"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGVBRBmQ",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9845265224/job/27180417433"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGVBRB0w",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9845265227/job/27180417491"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGVBXo_Q",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9845298519/job/27180525821"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGVBRE9w",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9845265224/job/27180418295"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGVBREIA",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9845265227/job/27180418080"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGVBRDEA",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9845265224/job/27180417808"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGVBRDGQ",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9845265227/job/27180417817"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGVBRGFA",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9845265224/job/27180418580"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGVBtZyA",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9845265227/job/27180882376"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGVBX9wQ",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/27180531137"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGVBY2og",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=14535&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "fdb6d7e1529c71dcfc79ad50d7d6d889a1875635",
                "additions": 114722,
                "deletions": 206697,
                "committedDate": "2024-08-24T22:17:13Z",
                "author": {
                  "name": "David Loeffler",
                  "email": "d.loeffler.01@cantab.net"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "65572a9fa538510fe6443edb8140dddc20739223",
                "additions": 75,
                "deletions": 20,
                "committedDate": "2024-08-24T22:17:42Z",
                "author": {
                  "name": "David Loeffler",
                  "email": "d.loeffler.01@cantab.net"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG1c13kQ",
                        "name": "Add ready-to-merge label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10594042440/job/29356816273"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG1c13iw",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10594042450/job/29356816267"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG1c15RA",
                        "name": "Fix style issues from lint",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10594042438/job/29356816708"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGzPCAjA",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10541901017/job/29208117388"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGzPCAiA",
                        "name": "build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10541901016/job/29208117384"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGzPCG-Q",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10541901848/job/29208119033"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGzPCGpQ",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10541901853/job/29208118949"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGzPCAtg",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10541901018/job/29208117430"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG1c16Nw",
                        "name": "Add delegated label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10594042440/job/29356816951"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGzPCHhg",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10541901848/job/29208119174"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGzPCHcw",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10541901853/job/29208119155"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGzPCAiQ",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10541901018/job/29208117385"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGzPCHSQ",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10541901848/job/29208119113"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGzPCHRw",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10541901853/job/29208119111"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGzPCGpw",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10541901848/job/29208118951"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGzPCHAQ",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10541901853/job/29208119041"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGzPCHtQ",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10541901848/job/29208119221"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGzPIyuQ",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10541901853/job/29208228537"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGzPCGuA",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/29208118968"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGzPCU9w",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=14535&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "3c08edd171d7fba354e58f1d295415f47c0801ea",
                "additions": 7560,
                "deletions": 3071,
                "committedDate": "2024-08-28T09:33:48Z",
                "author": {
                  "name": "David Loeffler",
                  "email": "d.loeffler.01@cantab.net"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "c6b25d08176e06196e69cbf7d20fc7d24abe8460",
                "additions": 23,
                "deletions": 23,
                "committedDate": "2024-08-28T09:54:58Z",
                "author": {
                  "name": "David Loeffler",
                  "email": "d.loeffler.01@cantab.net"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG1lNn2A",
                        "name": "Add ready-to-merge label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10596813984/job/29365594072"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG1lNm9w",
                        "name": "Fix style issues from lint",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10596814015/job/29365593847"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG1d8kdQ",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10594410988/job/29357974645"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG1lNmjQ",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10596814036/job/29365593741"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG1d8kSw",
                        "name": "build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10594410984/job/29357974603"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG1d8gow",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10594410744/job/29357973667"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG1d8guA",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10594410754/job/29357973688"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG1d8lYQ",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10594411028/job/29357974881"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG1lNmTQ",
                        "name": "Add delegated label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10596813984/job/29365593677"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG1d8iYA",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10594410744/job/29357974112"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG1d8lHw",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10594410754/job/29357974815"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG1d8mWQ",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10594411028/job/29357975129"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG1d8jzQ",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10594410744/job/29357974477"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG1d8jeQ",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10594410754/job/29357974393"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG1d8lTA",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10594410744/job/29357974860"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG1d8iaQ",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10594410754/job/29357974121"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG1d8mcg",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10594410744/job/29357975154"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG1eb8bA",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10594410754/job/29358488684"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG1d84PQ",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/29357979709"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAG1d-HiQ",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=14535&login=leanprover-community&repository=mathlib4"
                      },
                      {
                        "__typename": "StatusContext",
                        "id": "SC_kwDOFcwZ1c8AAAAHO9qK8A",
                        "context": "bors",
                        "state": "SUCCESS",
                        "targetUrl": "https://mathlib-bors-ca18eefec4cb.herokuapp.com/batches/5393",
                        "description": "Build succeeded"
                      }
                    ]
                  }
                }
              }
            }
          ]
        },
        "createdAt": "2024-07-08T18:53:06Z",
        "deletions": 24,
        "files": {
          "nodes": [
            {
              "path": "Mathlib/Analysis/Fourier/FourierTransform.lean",
              "additions": 4,
              "deletions": 4
            },
            {
              "path": "Mathlib/Analysis/Fourier/ZMod.lean",
              "additions": 151,
              "deletions": 20
            }
          ]
        },
        "headRefName": "DL_fourier_api",
        "headRefOid": "c6b25d08176e06196e69cbf7d20fc7d24abe8460",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c50u24P",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
              "color": "06e039",
              "name": "ready-to-merge"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABViJeVg",
              "color": "33DBEC",
              "name": "t-analysis"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABh1mAHA",
              "color": "6BEB7E",
              "name": "maintainer-merge"
            }
          ]
        },
        "latestReviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c6HEnNj",
              "body": "Thanks!\r\n\r\nmaintainer merge",
              "state": "APPROVED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2024-08-28T12:37:16Z"
            }
          ]
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "UNKNOWN",
        "mergeable": "UNKNOWN",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 14535,
        "potentialMergeCommit": null,
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": "APPROVED",
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c6HC871",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2024-08-28T09:30:54Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6HEnNj",
              "body": "Thanks!\r\n\r\nmaintainer merge",
              "state": "APPROVED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2024-08-28T12:37:16Z"
            }
          ]
        },
        "reviewThreads": {
          "nodes": [
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5nX8hR",
                    "body": "```suggestion\r\nprivate noncomputable def auxDFT (Œ¶ : ZMod N ‚Üí E) (k : ZMod N) : E :=\r\n```",
                    "createdAt": "2024-08-28T09:30:21Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5nX8jb",
                    "body": "I would suggest\r\n```suggestion\r\nlemma invDFT_apply (Œ® : ZMod N ‚Üí E) (k : ZMod N) :\r\n```\r\nto avoid confusing with `(dft Œ¶)‚Åª¬π`",
                    "createdAt": "2024-08-28T09:30:27Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  }
                ]
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjM0Mzk2ODg=",
              "login": "loefflerd"
            },
            {
              "id": "U_kgDOBfNrCg",
              "login": "MichaelStollBayreuth"
            },
            {
              "id": "U_kgDOB75MNQ",
              "login": "leanprover-community-mathlib4-bot"
            },
            {
              "id": "MDQ6VXNlcjMxMTAxODkz",
              "login": "dupuisf"
            },
            {
              "id": "MDQ6VXNlcjE0MDkwNTkz",
              "login": "YaelDillies"
            },
            {
              "id": "MDQ6VXNlcjQ3Nzk1Ng==",
              "login": "kim-em"
            },
            {
              "id": "MDQ6VXNlcjkxNDE1NjQ=",
              "login": "joneugster"
            }
          ]
        },
        "state": "CLOSED",
        "statusCheckRollup": {
          "contexts": {
            "nodes": [
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAG1lNn2A",
                "name": "Add ready-to-merge label",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10596813984/job/29365594072"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAG1lNm9w",
                "name": "Fix style issues from lint",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10596814015/job/29365593847"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAG1d8kdQ",
                "name": "label-and-report-new-contributor",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10594410988/job/29357974645"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAG1lNmjQ",
                "name": "Ping maintainers on Zulip",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10596814036/job/29365593741"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAG1d8kSw",
                "name": "build",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10594410984/job/29357974603"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAG1d8gow",
                "name": "Cancel Previous Runs (CI)",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10594410744/job/29357973667"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAG1d8guA",
                "name": "Cancel Previous Runs (CI)",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10594410754/job/29357973688"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAG1d8lYQ",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10594411028/job/29357974881"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAG1lNmTQ",
                "name": "Add delegated label",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10596813984/job/29365593677"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAG1d8iYA",
                "name": "Lint style (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10594410744/job/29357974112"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAG1d8lHw",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10594410754/job/29357974815"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAG1d8mWQ",
                "name": "Check all files imported",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10594411028/job/29357975129"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAG1d8jzQ",
                "name": "check workflows (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10594410744/job/29357974477"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAG1d8jeQ",
                "name": "check workflows",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10594410754/job/29357974393"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAG1d8lTA",
                "name": "Build (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10594410744/job/29357974860"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAG1d8iaQ",
                "name": "Build",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10594410754/job/29357974121"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAG1d8mcg",
                "name": "Post-CI job (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10594410744/job/29357975154"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAG1eb8bA",
                "name": "Post-CI job",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10594410754/job/29358488684"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAG1d84PQ",
                "name": "New Contributor Check",
                "conclusion": "NEUTRAL",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/29357979709"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAG1d-HiQ",
                "name": "Summary",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=14535&login=leanprover-community&repository=mathlib4"
              },
              {
                "__typename": "StatusContext",
                "id": "SC_kwDOFcwZ1c8AAAAHO9qK8A",
                "context": "bors",
                "state": "SUCCESS",
                "targetUrl": "https://mathlib-bors-ca18eefec4cb.herokuapp.com/batches/5393",
                "description": "Build succeeded"
              }
            ]
          }
        },
        "title": "[Merged by Bors] - feat(Analysis/Fourier/ZMod): more API for discrete Fourier transform",
        "updatedAt": "2024-08-29T02:11:28Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/14535",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6EBVf2",
              "createdAt": "2024-07-08T18:53:47Z",
              "body": "### PR summary [c6b25d0817](https://github.com/leanprover-community/mathlib4/pull/14535/commits/c6b25d08176e06196e69cbf7d20fc7d24abe8460)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ dft_apply_zero`\n`+ dft_comp_neg`\n`+ dft_comp_unitMul`\n`+ dft_const_mul`\n`+ dft_const_smul`\n`+ dft_dft`\n`+ dft_eq_fourier`\n`+ dft_mul_const`\n`+ dft_smul_const`\n`+ invDFT_apply`\n`+ invDFT_apply'`\n`+ invDFT_def`\n`+ invDFT_def'`\n`++ fourierIntegral_const_smul`\n`-- fourierIntegral_smul_const`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6O1QIazwAAAAMgZTEP",
              "createdAt": "2024-07-08T19:00:52Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6O1QIazwAAAAMgZTUv",
              "createdAt": "2024-07-08T19:00:58Z",
              "label": {
                "id": "MDU6TGFiZWwzMjg4OTQyMDg2",
                "name": "blocked-by-other-PR"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6ECg3O",
              "createdAt": "2024-07-08T20:45:27Z",
              "body": "I think it would make sense to define DFT with more general targets (modules over a ring that contains a primitive $n$th root of unity). This would be relevant for applications in Computer Algebra (fast multiplication algorithms), for example. (Sorry for not mentioning this earlier on Zulip.)",
              "author": {
                "login": "MichaelStollBayreuth"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6EIo_9",
              "createdAt": "2024-07-09T07:51:33Z",
              "body": "Thanks for looking at this! I'm also at a conference this week, so there's no rush.\r\n\r\nRegarding extensions to more general coefficients: do you have a suggestion for how the API should look? I'd rather avoid a situation where users need to specify an explicit choice of coefficient ring, & root of unity in it, every time they invoke any lemmas about the DFT.\r\n\r\n\r\n",
              "author": {
                "login": "loefflerd"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6O1QIazwAAAAMhHhnM",
              "createdAt": "2024-07-09T13:35:38Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6O1QIazwAAAAMidY70",
              "createdAt": "2024-07-10T21:51:04Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6GCYTW",
              "createdAt": "2024-07-24T19:41:58Z",
              "body": "I think we can define a quite general version of DFT for functions `Œ¶ : R ‚Üí M`, where `R` is a finite ring, `M` is a module over another ring `R'`, and we fix an additive character `œà : R ‚Üí R'`. The relevant condition on `œà` to have interesting results should then be that it is primitive as an additive character (and that `n : R'` is invertible, or rather, `n : Module.End R' M` is invertible, for the linear equivalence). One can then still define `ùìï Œ¶` to be `dft stdAddChar Œ¶`, where `Œ¶ : ZMod N ‚Üí E`. For convenience, some results may need to be restated in this context (to make use of properties of `stdAddChar` and/or the complex numbers that may not be true in general), but I think having the general version available is worth the extra effort.\r\n\r\nBTW (and slightly off-topic), I think the correct definition of \"`Œ∂ : R` is a primitive `n`th root of unity\" is \"Œ∂ ^ n = 1 and for all 0 < k < n, 1 - Œ∂ ^ k is invertible\" (one can restrict `k` to the maximal proper divisors of `n`, of course). With this definition, images of primitive `n`th roots of unity under ring homomorphisms are still primitive `n`th roots of unity, which is not in general the case with the current definition, which just says that `Œ∂` has order `n` in the multiplicative monoid. Note that this definition also implies that `n` is invertible in `R`.",
              "author": {
                "login": "MichaelStollBayreuth"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6O1QIazwAAAAMxiELC",
              "createdAt": "2024-07-31T20:32:45Z",
              "label": {
                "id": "MDU6TGFiZWwzMjg4OTQyMDg2",
                "name": "blocked-by-other-PR"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6Gyj32",
              "createdAt": "2024-07-31T20:32:47Z",
              "body": "This PR/issue depends on:\n* ~~leanprover-community/mathlib4#14495~~\nBy **[Dependent Issues](https://github.com/z0al/dependent-issues)** (ü§ñ). Happy coding!\n<!-- By Dependent Issues (Action) - DO NOT REMOVE -->",
              "author": {
                "login": "leanprover-community-mathlib4-bot"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6O1QIazwAAAAM7K96Z",
              "createdAt": "2024-08-14T10:06:58Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABViJeVg",
                "name": "t-analysis"
              }
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6O1QIazwAAAANCnbf8",
              "createdAt": "2024-08-24T22:22:23Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "ReviewRequestedEvent",
              "id": "RRE_lADOFcwZ1c6O1QIazwAAAANC80H1",
              "createdAt": "2024-08-26T06:04:15Z",
              "requestedReviewer": {
                "id": "MDQ6VXNlcjE0MDkwNTkz",
                "login": "YaelDillies"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6HC871",
              "createdAt": "2024-08-28T09:30:21Z",
              "body": "",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6J-iIU",
              "createdAt": "2024-08-28T09:57:47Z",
              "body": "Thanks Ya√´l for the comments, I have made the modifications as you suggested. ",
              "author": {
                "login": "loefflerd"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6HEnNj",
              "createdAt": "2024-08-28T12:37:16Z",
              "body": "Thanks!\r\n\r\nmaintainer merge",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6J_0Cg",
              "createdAt": "2024-08-28T12:37:30Z",
              "body": "üöÄ Pull request has been placed on the maintainer queue by YaelDillies.",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6O1QIazwAAAANFM2tn",
              "createdAt": "2024-08-28T12:37:31Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABh1mAHA",
                "name": "maintainer-merge"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6KE1NS",
              "createdAt": "2024-08-29T01:01:39Z",
              "body": "bors r+",
              "author": {
                "login": "dupuisf"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6O1QIazwAAAANFthb-",
              "createdAt": "2024-08-29T01:01:51Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
                "name": "ready-to-merge"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6KFDYx",
              "createdAt": "2024-08-29T02:11:25Z",
              "body": "Pull request successfully merged into master.\n\nBuild succeeded:\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/10606948866/job/29398568519)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/10606948866/job/29398568839)",
              "author": {
                "login": "mathlib-bors"
              }
            },
            {
              "__typename": "RenamedTitleEvent"
            },
            {
              "__typename": "ClosedEvent",
              "id": "CE_lADOFcwZ1c6O1QIazwAAAANFu6uE",
              "createdAt": "2024-08-29T02:11:25Z"
            },
            {
              "__typename": "HeadRefDeletedEvent",
              "id": "HRDE_lADOFcwZ1c6O1QIazwAAAANFu6zv",
              "createdAt": "2024-08-29T02:11:28Z"
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "ReferencedEvent"
            }
          ]
        }
      }
    }
  }
}
