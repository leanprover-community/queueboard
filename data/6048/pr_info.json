{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 73,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "urkud"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "Assume `NeZero μ` instead of `μ.ae.NeBot` everywhere,\r\nand sometimes instead of `μ ≠ 0`.\r\n\r\n## API changes\r\n\r\n- `Convex.average_mem`, `Convex.set_average_mem`,\r\n  `ConvexOn.average_mem_epigraph`, `ConcaveOn.average_mem_hypograph`,\r\n  `ConvexOn.map_average_le`, `ConcaveOn.le_map_average`:\r\n  assume `[NeZero μ]` instead of `μ ≠ 0`;\r\n- `MeasureTheory.condexp_bot'`, `essSup_const'`, `essInf_const'`,\r\n  `MeasureTheory.laverage_const`, `MeasureTheory.laverage_one`,\r\n  `MeasureTheory.average_const`:\r\n  assume `[NeZero μ]` instead of `[μ.ae.NeBot]`\r\n- `MeasureTheory.Measure.measure_ne_zero`: replace with an instance;\r\n- remove `@[simp]` from `MeasureTheory.ae_restrict_neBot`,\r\n  use `≠ 0` in the RHS;\r\n- turn `MeasureTheory.IsProbabilityMeasure.ae_neBot`\r\n  into a theorem because `inferInstance` can find it now;\r\n- add instances:\r\n  - `[NeZero μ] : NeZero (μ univ)`;\r\n  - `[NeZero (μ s)] : NeZero (μ.restrict s)`;\r\n  - `[NeZero μ] : μ.ae.NeBot`;\r\n  - `[IsProbabilityMeasure μ] : NeZero μ`;\r\n  - `[IsFiniteMeasure μ] [NeZero μ] : IsProbabilityMeasure ((μ univ)⁻¹ • μ)`\r\n    this was a theorem `MeasureTheory.isProbabilityMeasureSmul` assuming `μ ≠ 0`;\r\n\r\n---\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n-->\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)",
        "changedFiles": 8,
        "closed": true,
        "closedAt": "2023-07-23T11:32:50Z",
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c5iJJAa",
              "body": "We should also apply this change to [MeasureTheory.Measure.measure_ne_zero](https://leanprover-community.github.io/mathlib4_docs/Mathlib/MeasureTheory/Measure/OpenPos.html#MeasureTheory.Measure.measure_ne_zero) right?",
              "createdAt": "2023-07-22T11:36:38Z",
              "author": {
                "login": "ocfnash"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5iJJcE",
              "body": "> We should also apply this change to [MeasureTheory.Measure.measure_ne_zero](https://leanprover-community.github.io/mathlib4_docs/Mathlib/MeasureTheory/Measure/OpenPos.html#MeasureTheory.Measure.measure_ne_zero) right?\r\n\r\nDone.",
              "createdAt": "2023-07-22T11:48:29Z",
              "author": {
                "login": "urkud"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5iKG0Y",
              "body": "Pull request successfully merged into master.\n\n  Build succeeded!\n\n  The publicly hosted instance of bors-ng is deprecated and will go away soon.\n\n  If you want to self-host your own instance, [instructions are here][instructions].\n  For more help, visit [the forum].\n\n  If you want to switch to GitHub's built-in merge queue, visit [their help page][gh].\n\n  [instructions]: https://github.com/bors-ng/bors-ng#how-to-set-up-your-own-real-instance\n  [the forum]: https://forum.bors.tech\n  [gh]: https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/configuring-pull-request-merges/managing-a-merge-queue\n\n\n\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/5636024635/job/15267656250)\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/5636024635/job/15267656284)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/5636024635/job/15267656208)",
              "createdAt": "2023-07-23T11:32:49Z",
              "author": {
                "login": "bors"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "c8c1043deabd488cd2f07cfe2652230406d02674",
                "additions": 71,
                "deletions": 81,
                "committedDate": "2023-07-21T19:18:10Z",
                "author": {
                  "name": "Yury G. Kudryashov",
                  "email": "urkud@urkud.name"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "46151e74553323eafafb6980a87efb6ba6e34318",
                "additions": 2,
                "deletions": 2,
                "committedDate": "2023-07-22T11:46:32Z",
                "author": {
                  "name": "Yury G. Kudryashov",
                  "email": "urkud@urkud.name"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "6ee4a47dcaed60bfd6b5ea2624823f255ec9b3a7",
                "additions": 2018,
                "deletions": 70,
                "committedDate": "2023-07-22T11:47:26Z",
                "author": {
                  "name": "Yury G. Kudryashov",
                  "email": "urkud@urkud.name"
                },
                "statusCheckRollup": null
              }
            }
          ]
        },
        "createdAt": "2023-07-21T20:05:40Z",
        "deletions": 83,
        "files": {
          "nodes": [
            {
              "path": "Mathlib/Analysis/Convex/Integral.lean",
              "additions": 27,
              "deletions": 28
            },
            {
              "path": "Mathlib/MeasureTheory/Constructions/BorelSpace/Basic.lean",
              "additions": 2,
              "deletions": 4
            },
            {
              "path": "Mathlib/MeasureTheory/Function/ConditionalExpectation/Basic.lean",
              "additions": 6,
              "deletions": 10
            },
            {
              "path": "Mathlib/MeasureTheory/Function/EssSup.lean",
              "additions": 6,
              "deletions": 8
            },
            {
              "path": "Mathlib/MeasureTheory/Function/LpSeminorm.lean",
              "additions": 3,
              "deletions": 4
            },
            {
              "path": "Mathlib/MeasureTheory/Integral/Average.lean",
              "additions": 7,
              "deletions": 14
            },
            {
              "path": "Mathlib/MeasureTheory/Measure/MeasureSpace.lean",
              "additions": 20,
              "deletions": 13
            },
            {
              "path": "Mathlib/MeasureTheory/Measure/OpenPos.lean",
              "additions": 2,
              "deletions": 2
            }
          ]
        },
        "headRefName": "YK-measure-neZero",
        "headRefOid": "6ee4a47dcaed60bfd6b5ea2624823f255ec9b3a7",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c5WIDnE",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
              "color": "06e039",
              "name": "ready-to-merge"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABViJqVA",
              "color": "33DBEC",
              "name": "t-measure-probability"
            }
          ]
        },
        "latestReviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5b7IA9",
              "body": "Thanks for doing this.\r\n\r\nI think there is room for a second refactor dealing with lemmas like `snorm_const` which could have an argument of the form `(hμ : μ ≠ 0)` turned into `[NeZero μ]`. Indeed if I search for the regex `(ν|μ) ≠ 0` I find 61 occurrences and I expect most / all would be better using `NeZero`.\r\n\r\nHowever I think this can happen separately: the changes here already constitute a strict improvement on what we have.\r\n\r\nbors merge",
              "state": "APPROVED",
              "author": {
                "login": "ocfnash"
              },
              "submittedAt": "2023-07-23T10:43:08Z"
            }
          ]
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "UNKNOWN",
        "mergeable": "UNKNOWN",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 6048,
        "potentialMergeCommit": null,
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": "APPROVED",
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5b7IA9",
              "body": "Thanks for doing this.\r\n\r\nI think there is room for a second refactor dealing with lemmas like `snorm_const` which could have an argument of the form `(hμ : μ ≠ 0)` turned into `[NeZero μ]`. Indeed if I search for the regex `(ν|μ) ≠ 0` I find 61 occurrences and I expect most / all would be better using `NeZero`.\r\n\r\nHowever I think this can happen separately: the changes here already constitute a strict improvement on what we have.\r\n\r\nbors merge",
              "state": "APPROVED",
              "author": {
                "login": "ocfnash"
              },
              "submittedAt": "2023-07-23T10:43:08Z"
            }
          ]
        },
        "reviewThreads": {
          "nodes": [
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5LyF9V",
                    "body": "Should `snorm_const` also be changed to consume `[NeZero μ]` rather than `(hμ : μ ≠ 0)`?",
                    "createdAt": "2023-07-23T10:36:27Z",
                    "author": {
                      "login": "ocfnash"
                    }
                  }
                ]
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjE4ODgxMw==",
              "login": "urkud"
            },
            {
              "id": "MDQ6VXNlcjc3MzQzNjQ=",
              "login": "ocfnash"
            },
            {
              "id": "U_kgDOB75MNQ",
              "login": "leanprover-community-mathlib4-bot"
            }
          ]
        },
        "state": "CLOSED",
        "statusCheckRollup": null,
        "title": "[Merged by Bors] - refactor: use `NeZero` for measures",
        "updatedAt": "2023-07-23T11:32:53Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/6048",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "c8c1043deabd488cd2f07cfe2652230406d02674"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5sQvFZzwAAAAJNZ5TE",
              "createdAt": "2023-07-21T20:06:27Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5sQvFZzwAAAAJNZ5TI",
              "createdAt": "2023-07-21T20:06:27Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABMJpquQ",
                "name": "after-port"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5sQvFZzwAAAAJNZ5TT",
              "createdAt": "2023-07-21T20:06:27Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABViJqVA",
                "name": "t-measure-probability"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5iJJAa",
              "createdAt": "2023-07-22T11:36:38Z",
              "body": "We should also apply this change to [MeasureTheory.Measure.measure_ne_zero](https://leanprover-community.github.io/mathlib4_docs/Mathlib/MeasureTheory/Measure/OpenPos.html#MeasureTheory.Measure.measure_ne_zero) right?",
              "author": {
                "login": "ocfnash"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "46151e74553323eafafb6980a87efb6ba6e34318"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "6ee4a47dcaed60bfd6b5ea2624823f255ec9b3a7"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5iJJcE",
              "createdAt": "2023-07-22T11:48:29Z",
              "body": "> We should also apply this change to [MeasureTheory.Measure.measure_ne_zero](https://leanprover-community.github.io/mathlib4_docs/Mathlib/MeasureTheory/Measure/OpenPos.html#MeasureTheory.Measure.measure_ne_zero) right?\r\n\r\nDone.",
              "author": {
                "login": "urkud"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5sQvFZzwAAAAJNjmfh",
              "createdAt": "2023-07-22T13:18:36Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABMJpquQ",
                "name": "after-port"
              }
            },
            {
              "__typename": "ReviewRequestedEvent",
              "id": "RRE_lADOFcwZ1c5sQvFZzwAAAAJNmdRR",
              "createdAt": "2023-07-23T00:05:37Z",
              "requestedReviewer": {
                "id": "MDQ6VXNlcjc3MzQzNjQ=",
                "login": "ocfnash"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5b7IA9",
              "createdAt": "2023-07-23T10:36:27Z",
              "body": "Thanks for doing this.\r\n\r\nI think there is room for a second refactor dealing with lemmas like `snorm_const` which could have an argument of the form `(hμ : μ ≠ 0)` turned into `[NeZero μ]`. Indeed if I search for the regex `(ν|μ) ≠ 0` I find 61 occurrences and I expect most / all would be better using `NeZero`.\r\n\r\nHowever I think this can happen separately: the changes here already constitute a strict improvement on what we have.\r\n\r\nbors merge",
              "author": {
                "login": "ocfnash"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5sQvFZzwAAAAJNpEDM",
              "createdAt": "2023-07-23T10:43:21Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
                "name": "ready-to-merge"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5sQvFZzwAAAAJNpEDb",
              "createdAt": "2023-07-23T10:43:22Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5iKG0Y",
              "createdAt": "2023-07-23T11:32:49Z",
              "body": "Pull request successfully merged into master.\n\n  Build succeeded!\n\n  The publicly hosted instance of bors-ng is deprecated and will go away soon.\n\n  If you want to self-host your own instance, [instructions are here][instructions].\n  For more help, visit [the forum].\n\n  If you want to switch to GitHub's built-in merge queue, visit [their help page][gh].\n\n  [instructions]: https://github.com/bors-ng/bors-ng#how-to-set-up-your-own-real-instance\n  [the forum]: https://forum.bors.tech\n  [gh]: https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/configuring-pull-request-merges/managing-a-merge-queue\n\n\n\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/5636024635/job/15267656250)\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/5636024635/job/15267656284)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/5636024635/job/15267656208)",
              "author": {
                "login": "bors"
              }
            },
            {
              "__typename": "RenamedTitleEvent"
            },
            {
              "__typename": "ClosedEvent",
              "id": "CE_lADOFcwZ1c5sQvFZzwAAAAJNpTx2",
              "createdAt": "2023-07-23T11:32:50Z"
            },
            {
              "__typename": "HeadRefDeletedEvent",
              "id": "HRDE_lADOFcwZ1c5sQvFZzwAAAAJNpTzE",
              "createdAt": "2023-07-23T11:32:53Z"
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5Nu0lg",
              "createdAt": "2023-07-29T12:53:27Z",
              "source": {
                "id": "PR_kwDOFcwZ1c5WPJAb",
                "title": "[Merged by Bors] - feat: The convolution of a locally integrable function f with a sequence of bump functions converges ae to f",
                "url": "https://github.com/leanprover-community/mathlib4/pull/6102"
              }
            },
            {
              "__typename": "ReferencedEvent"
            }
          ]
        }
      }
    }
  }
}
