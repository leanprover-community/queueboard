{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 68,
        "assignees": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjkxNDE1NjQ=",
              "login": "joneugster"
            }
          ]
        },
        "author": {
          "login": "madvorak"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "---\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nFor details on the \"pull request lifecycle\" in mathlib, please see:\r\nhttps://leanprover-community.github.io/contribute/index.html\r\n\r\nIn particular, note that most reviewers will only notice your PR\r\nif it passes the continuous integration checks.\r\nPlease ask for help on https://leanprover.zulipchat.com if needed.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nIf you are moving or deleting declarations, please include these lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nMoves:\r\n- Vector.* -> Mathlib.Vector.*\r\n- ...\r\n\r\nDeletions:\r\n- Nat.bit1_add_bit1\r\n- ...\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n\r\n-->\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 2,
        "closed": false,
        "closedAt": null,
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c6TlL_8",
              "body": "### PR summary [852f64389f](https://github.com/leanprover-community/mathlib4/pull/19023/commits/852f64389f4408cd992e2ce93876d1bc9e99e764)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n\n</details>\n\n---\n\n#### Declarations diff\n\nNo declarations were harmed in the making of this PR! üêô\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n---\n\n<details><summary>No changes to technical debt.</summary>\n\nYou can run this locally as\n```\n./scripts/technical-debt-metrics.sh pr_summary\n```\n* The `relative` value is the weighted *sum* of the differences with weight given by the *inverse* of the current value of the statistic.\n* The `absolute` value is the `relative` value divided by the total sum of the inverses of the current values (i.e. the weighted *average* of the differences).\n</details>",
              "createdAt": "2024-11-14T10:39:29Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6TpqMa",
              "body": "It looks like this changes the order of implicit arguments in at least some of the cases. Not sure how I feel about that relative to the (smallish) win of the change",
              "createdAt": "2024-11-14T18:48:32Z",
              "author": {
                "login": "Ruben-VandeVelde"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6TpzVx",
              "body": "I agree with Ruben. And in some cases, I actually prefer to see the information locally (e.g., there was at least one case `s` was implicit and `t` was explicit, but your change removed the former, making it slightly hard to see the distinction).\r\n\r\n@madvorak is there a particular reason this is important to you?",
              "createdAt": "2024-11-14T19:08:58Z",
              "author": {
                "login": "j-loreaux"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6TuMkb",
              "body": "> It looks like this changes the order of implicit arguments in at least some of the cases. Not sure how I feel about that relative to the (smallish) win of the change\r\n\r\nDo you think that the variables were *intentionally* repeated in order to re√∂rder the implicit arguments?",
              "createdAt": "2024-11-15T09:37:53Z",
              "author": {
                "login": "madvorak"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6TuOV2",
              "body": "> @madvorak is there a particular reason this is important to you?\r\n\r\nIt confused me when I wanted to add another lemma into the same file.\r\n\r\nMore generally, I believe that every thing should be written only once in respective scope.",
              "createdAt": "2024-11-15T09:40:12Z",
              "author": {
                "login": "madvorak"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6TuPrR",
              "body": "> there was at least one case `s` was implicit and `t` was explicit, but your change removed the former, making it slightly hard to see the distinction)\r\n\r\nAs long as we follow the principle that all explicit arguments must be written explicitly, it won't be a problem.",
              "createdAt": "2024-11-15T09:43:08Z",
              "author": {
                "login": "madvorak"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6T3npn",
              "body": "> More generally, I believe that every thing should be written only once in respective scope.\n\nThis is much less important now that the extra variables don't show up in the infoview. As a result I don't see why it's particularly confusing. How did it confuse you?",
              "createdAt": "2024-11-16T22:24:07Z",
              "author": {
                "login": "j-loreaux"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6T3nt9",
              "body": "> As long as we follow the principle that all explicit arguments must be written explicitly, it won't be a problem.\n\nThis is *not* a principle to which Mathlib adheres",
              "createdAt": "2024-11-16T22:24:58Z",
              "author": {
                "login": "j-loreaux"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6UcGhj",
              "body": "> How did it confuse you?\r\n\r\nSorry, I forgot to answer your question. The thing is that I am generally lazy and I don't always read all `variable` declarations above the new def/lemma/theorem I am adding. What I usually do in practice is that I copypaste the header of a similar def/lemma/theorem in the same section and edit it. As a result, if the present def/lemma/theorem redundantly redeclares some variables, I also end up redundantly redeclaring them without any intention to deviate from the default ordering of implicit arguments, which is embarrassing and propagates bad coding habits.",
              "createdAt": "2024-11-21T08:43:01Z",
              "author": {
                "login": "madvorak"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6aSK6D",
              "body": "I will not object to this being merged. However, let me point out in response to this:\r\n\r\n> Generally, stylistic cleanups are tricky because they bring almost no benefit compared to the reviewing effort. However, I think they should still be possible, and I generally agree to not repeat arguments from variable unless there is a reason to do so. (imo it introduces confusion and inconsistency about the order of arguments)\r\n\r\nIt's not only review effort that this imposes. Changing argument order also has the potential to disrupt downstream uses of these lemmas. When there is little harm to the current order, and it isn't part of a large refactor that uniformizes this kind of thing across some large subset of Mathlib according to well-defined rules, then I don't really think there is much benefit compared to the cost.\r\n\r\nBut like I said, I won't object to this being merged. The above is just my opinion, not a community guideline.",
              "createdAt": "2025-01-13T23:29:35Z",
              "author": {
                "login": "j-loreaux"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6aVL5G",
              "body": "I would like to point out that only implicit arguments are affected. That said, I know it may create problems.",
              "createdAt": "2025-01-14T07:56:29Z",
              "author": {
                "login": "madvorak"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "45ee18e0fa0f836302f4415e610eb97f62b441b4",
                "additions": 64,
                "deletions": 64,
                "committedDate": "2024-11-14T10:38:16Z",
                "author": {
                  "name": "madvorak",
                  "email": "martin.dvorak@matfyz.cz"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHratuaw",
                        "name": "Add topic label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11835520137/job/32978464363"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHratugQ",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11835520136/job/32978464385"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHratuiQ",
                        "name": "build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11835520148/job/32978464393"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHratB2w",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11835516650/job/32978452955"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHratB2g",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11835516655/job/32978452954"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHratwjQ",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11835520146/job/32978464909"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHratEMQ",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11835516650/job/32978453553"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHratDPA",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11835516655/job/32978453308"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHratutw",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11835520146/job/32978464439"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHratEdQ",
                        "name": "Build",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11835516655/job/32978453621"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHratC8g",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11835516650/job/32978453234"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHratFgg",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11835516650/job/32978453890"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHra4Vvw",
                        "name": "Post-CI job",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11835516655/job/32978638271"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHrauOgA",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/32978472576"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHrau2LA",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=19023&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "9774e3482c25dcfd23094b40cd1de7b27ff418a9",
                "additions": 7,
                "deletions": 6,
                "committedDate": "2024-11-14T11:26:24Z",
                "author": {
                  "name": "madvorak",
                  "email": "martin.dvorak@matfyz.cz"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHrc7RRQ",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11836264681/job/32980783429"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHrc7RXQ",
                        "name": "build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11836264665/job/32980783453"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHrc7OkA",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11836264154/job/32980782736"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHrc7O6Q",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11836264152/job/32980782825"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHrc7SvQ",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11836264677/job/32980783805"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHrc7MMw",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11836264154/job/32980782131"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHrc7N4g",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11836264152/job/32980782562"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHrc7Rdw",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11836264677/job/32980783479"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHrc7MYg",
                        "name": "Build",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11836264152/job/32980782178"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHrc7Nfw",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11836264154/job/32980782463"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHrc7P7w",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11836264154/job/32980783087"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHreR2aw",
                        "name": "Post-CI job",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11836264152/job/32982201963"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHrc7rWA",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/32980790104"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHrc8qDQ",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=19023&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "8fdede4d1f6656d5046d020121d46babd2a3c5b8",
                "additions": 1,
                "deletions": 1,
                "committedDate": "2024-11-14T16:10:42Z",
                "author": {
                  "name": "madvorak",
                  "email": "martin.dvorak@matfyz.cz"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHrr4riA",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11841084483/job/32996469640"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHrr4tEA",
                        "name": "build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11841084487/job/32996470032"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHrr4lUQ",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11841083847/job/32996468049"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHrr4pWA",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11841083850/job/32996469080"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHrr4rmA",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11841084485/job/32996469656"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHrr4ong",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11841083847/job/32996468894"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHrr4ntw",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11841083850/job/32996468663"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHrr4tNQ",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11841084485/job/32996470069"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHrr4m-A",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11841083847/job/32996468472"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHrr4lQQ",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11841083850/job/32996468033"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHrr4rYA",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11841083847/job/32996469600"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHrsXsHA",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11841083850/job/32996977692"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHrr5EOA",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/32996475960"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHrr6Z9Q",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=19023&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "fce160c238dcc693ec14ec1b46675a6b0d87f948",
                "additions": 134751,
                "deletions": 62170,
                "committedDate": "2025-01-12T12:01:53Z",
                "author": {
                  "name": "Jon Eugster",
                  "email": "eugster.jon@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIQ1iBnA",
                        "name": "set_pr_emoji",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12733343237/job/35489612188"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIQ1ZLoQ",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12733285064/job/35489467297"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIQ1ZK9g",
                        "name": "Add topic label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12733285058/job/35489467126"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIQ1Yx7Q",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12733282275/job/35489460717"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIQ1Yx-Q",
                        "name": "post-or-update-summary-comment",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12733282268/job/35489460729"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIQ1ZNKg",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12733285118/job/35489467690"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIQ1Yyaw",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12733282267/job/35489460843"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIQ1ZMRw",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12733285064/job/35489467463"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIQ1ZMgQ",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12733285118/job/35489467521"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIQ1YyCA",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12733282267/job/35489460744"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIQ1ZM0g",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12733285064/job/35489467602"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIQ2GhMw",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12733285118/job/35490210099"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIQ1Y71A",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/35489463252"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIQ1Yvmw",
                        "name": ".github/dependabot.yml",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dependabot-api.githubapp.com"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIQ1ZiRA",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=19023&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "852f64389f4408cd992e2ce93876d1bc9e99e764",
                "additions": 1,
                "deletions": 2,
                "committedDate": "2025-01-13T14:32:46Z",
                "author": {
                  "name": "Martin Dvo≈ô√°k",
                  "email": "martin.dvorak@matfyz.cz"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIRd2IUg",
                        "name": "set_pr_emoji",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12749440863/job/35531884626"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIRd0fAA",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12749433325/job/35531857664"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIRd2IEQ",
                        "name": "set_pr_emoji",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12749440871/job/35531884561"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIRd0f_w",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12749433595/job/35531857919"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIRd0euw",
                        "name": "post-or-update-summary-comment",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12749433620/job/35531857595"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIRd0dfw",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12749433491/job/35531857279"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIRd0eoQ",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12749433613/job/35531857569"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIRd0cYQ",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12749433325/job/35531856993"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIRd0gXQ",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12749433491/job/35531858013"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIRd0g5g",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12749433613/job/35531858150"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIRd0htQ",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12749433325/job/35531858357"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIRgd4tA",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12749433491/job/35534633140"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIRd0_2w",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/35531866075"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIRd2R2Q",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=19023&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            }
          ]
        },
        "createdAt": "2024-11-14T10:38:39Z",
        "deletions": 68,
        "files": {
          "nodes": [
            {
              "path": "Mathlib/Data/Set/Basic.lean",
              "additions": 67,
              "deletions": 67
            },
            {
              "path": "Mathlib/Order/Ideal.lean",
              "additions": 1,
              "deletions": 1
            }
          ]
        },
        "headRefName": "mdv-set-redun",
        "headRefOid": "852f64389f4408cd992e2ce93876d1bc9e99e764",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c6B5xfu",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c8AAAABtNO8rw",
              "color": "33DBEC",
              "name": "t-data"
            }
          ]
        },
        "latestReviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c6Xt9IU",
              "body": "Generally, stylistic cleanups are tricky because they bring almost no benefit compared to the reviewing effort. However, I think they should still be possible, and I generally agree to not repeat arguments from `variable` unless there is a reason to do so. (imo it introduces confusion and inconsistency about the order of arguments)\r\n\r\nI marked anything below where the cleanup changes the order of implicit arguments; I don't think this is bad, but wanted to mark it for the **maintainer** reviewing this.\r\n\r\n(!) There are a few suggestions below which you could incorporate, but otherwise I suggest merging this after merge conflicts have been resolved (and after double-checking @Ruben-VandeVelde and @j-loreaux  do not object)",
              "state": "COMMENTED",
              "author": {
                "login": "joneugster"
              },
              "submittedAt": "2025-01-12T11:26:02Z"
            }
          ]
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "BLOCKED",
        "mergeable": "MERGEABLE",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 19023,
        "potentialMergeCommit": {
          "oid": "f068abea4f8b26b657fbee116161a32d51f6e05c"
        },
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": null,
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c6Xt9IU",
              "body": "Generally, stylistic cleanups are tricky because they bring almost no benefit compared to the reviewing effort. However, I think they should still be possible, and I generally agree to not repeat arguments from `variable` unless there is a reason to do so. (imo it introduces confusion and inconsistency about the order of arguments)\r\n\r\nI marked anything below where the cleanup changes the order of implicit arguments; I don't think this is bad, but wanted to mark it for the **maintainer** reviewing this.\r\n\r\n(!) There are a few suggestions below which you could incorporate, but otherwise I suggest merging this after merge conflicts have been resolved (and after double-checking @Ruben-VandeVelde and @j-loreaux  do not object)",
              "state": "COMMENTED",
              "author": {
                "login": "joneugster"
              },
              "submittedAt": "2025-01-12T11:26:02Z"
            }
          ]
        },
        "reviewThreads": {
          "nodes": [
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5x_UtN",
                    "body": "changes order of `p` and `a`",
                    "createdAt": "2025-01-12T11:10:43Z",
                    "author": {
                      "login": "joneugster"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5x_UvW",
                    "body": "changes order of `p` and `s`",
                    "createdAt": "2025-01-12T11:11:29Z",
                    "author": {
                      "login": "joneugster"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5x_Uvz",
                    "body": "changes order of `p` and `s`",
                    "createdAt": "2025-01-12T11:11:42Z",
                    "author": {
                      "login": "joneugster"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5x_UzL",
                    "body": "```suggestion\r\ntheorem mem_of_eq_of_mem (hx : a = b) (h : b ‚àà s) : a ‚àà s :=\r\n```\r\nin order to not change the order of arguments",
                    "createdAt": "2025-01-12T11:13:00Z",
                    "author": {
                      "login": "joneugster"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5x_Uz_",
                    "body": "changes the order of `a` and `s‚ÇÅ,s‚ÇÇ`",
                    "createdAt": "2025-01-12T11:13:24Z",
                    "author": {
                      "login": "joneugster"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5x_U2m",
                    "body": "```suggestion\r\ntheorem mem_insert_of_mem (b : Œ±) : a ‚àà s ‚Üí a ‚àà insert b s :=\r\n```",
                    "createdAt": "2025-01-12T11:14:39Z",
                    "author": {
                      "login": "joneugster"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5x_U7R",
                    "body": "```suggestion\r\ntheorem eq_or_mem_of_mem_insert : a ‚àà insert b s ‚Üí a = b ‚à® a ‚àà s :=\r\n```",
                    "createdAt": "2025-01-12T11:16:00Z",
                    "author": {
                      "login": "joneugster"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5x_U8k",
                    "body": "```suggestion\r\ntheorem mem_insert_iff : a ‚àà insert b s ‚Üî a = b ‚à® a ‚àà s :=\r\n```",
                    "createdAt": "2025-01-12T11:16:38Z",
                    "author": {
                      "login": "joneugster"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5x_U-O",
                    "body": "changes the order of arguments.",
                    "createdAt": "2025-01-12T11:17:11Z",
                    "author": {
                      "login": "joneugster"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5x_U_G",
                    "body": "changes the order of arguments.",
                    "createdAt": "2025-01-12T11:17:25Z",
                    "author": {
                      "login": "joneugster"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5x_VAs",
                    "body": "changes the order of arguments",
                    "createdAt": "2025-01-12T11:17:37Z",
                    "author": {
                      "login": "joneugster"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5x_VBK",
                    "body": "changes the order of arguments",
                    "createdAt": "2025-01-12T11:17:48Z",
                    "author": {
                      "login": "joneugster"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5x_VBp",
                    "body": "changes the order of arguments",
                    "createdAt": "2025-01-12T11:18:03Z",
                    "author": {
                      "login": "joneugster"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5x_VBv",
                    "body": "changes the order of arguments",
                    "createdAt": "2025-01-12T11:18:06Z",
                    "author": {
                      "login": "joneugster"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5x_VIL",
                    "body": "changes the order of arguments",
                    "createdAt": "2025-01-12T11:20:14Z",
                    "author": {
                      "login": "joneugster"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5x_VIj",
                    "body": "changes the order of arguments",
                    "createdAt": "2025-01-12T11:20:24Z",
                    "author": {
                      "login": "joneugster"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5x_VIq",
                    "body": "changes the order of arguments",
                    "createdAt": "2025-01-12T11:20:28Z",
                    "author": {
                      "login": "joneugster"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5x_VJw",
                    "body": "changes the order of arguments",
                    "createdAt": "2025-01-12T11:20:55Z",
                    "author": {
                      "login": "joneugster"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5x_VLg",
                    "body": "```suggestion\r\n    {s : Set Œ±} : (f s).Nonempty ‚Üî s.Nonempty := by\r\n```",
                    "createdAt": "2025-01-12T11:21:48Z",
                    "author": {
                      "login": "joneugster"
                    }
                  }
                ]
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjY2NDMxMTY=",
              "login": "madvorak"
            },
            {
              "id": "MDQ6VXNlcjY1NTE0MTMx",
              "login": "Ruben-VandeVelde"
            },
            {
              "id": "MDQ6VXNlcjg5MjA1OTg=",
              "login": "j-loreaux"
            },
            {
              "id": "MDQ6VXNlcjkxNDE1NjQ=",
              "login": "joneugster"
            },
            {
              "id": "U_kgDOBcsTTQ",
              "login": "leanprover-community-bot-assistant"
            }
          ]
        },
        "state": "OPEN",
        "statusCheckRollup": {
          "contexts": {
            "nodes": [
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIRd2IUg",
                "name": "set_pr_emoji",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12749440863/job/35531884626"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIRd0fAA",
                "name": "Lint style (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12749433325/job/35531857664"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIRd2IEQ",
                "name": "set_pr_emoji",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12749440871/job/35531884561"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIRd0f_w",
                "name": "label-and-report-new-contributor",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12749433595/job/35531857919"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIRd0euw",
                "name": "post-or-update-summary-comment",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12749433620/job/35531857595"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIRd0dfw",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12749433491/job/35531857279"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIRd0eoQ",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12749433613/job/35531857569"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIRd0cYQ",
                "name": "Build (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12749433325/job/35531856993"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIRd0gXQ",
                "name": "Build",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12749433491/job/35531858013"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIRd0g5g",
                "name": "Check all files imported",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12749433613/job/35531858150"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIRd0htQ",
                "name": "Post-CI job (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12749433325/job/35531858357"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIRgd4tA",
                "name": "Post-CI job",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12749433491/job/35534633140"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIRd0_2w",
                "name": "New Contributor Check",
                "conclusion": "NEUTRAL",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/35531866075"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIRd2R2Q",
                "name": "Summary",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=19023&login=leanprover-community&repository=mathlib4"
              }
            ]
          }
        },
        "title": "chore(Data/Set/Basic): remove redundant redeclarations",
        "updatedAt": "2025-01-14T07:56:30Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/19023",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6TlL_8",
              "createdAt": "2024-11-14T10:39:29Z",
              "body": "### PR summary [852f64389f](https://github.com/leanprover-community/mathlib4/pull/19023/commits/852f64389f4408cd992e2ce93876d1bc9e99e764)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n\n</details>\n\n---\n\n#### Declarations diff\n\nNo declarations were harmed in the making of this PR! üêô\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n---\n\n<details><summary>No changes to technical debt.</summary>\n\nYou can run this locally as\n```\n./scripts/technical-debt-metrics.sh pr_summary\n```\n* The `relative` value is the weighted *sum* of the differences with weight given by the *inverse* of the current value of the statistic.\n* The `absolute` value is the `relative` value divided by the total sum of the inverses of the current values (i.e. the weighted *average* of the differences).\n</details>",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6ec4YszwAAAAOPvlss",
              "createdAt": "2024-11-14T10:39:39Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABtNO8rw",
                "name": "t-data"
              }
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6TpqMa",
              "createdAt": "2024-11-14T18:48:32Z",
              "body": "It looks like this changes the order of implicit arguments in at least some of the cases. Not sure how I feel about that relative to the (smallish) win of the change",
              "author": {
                "login": "Ruben-VandeVelde"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6TpzVx",
              "createdAt": "2024-11-14T19:08:58Z",
              "body": "I agree with Ruben. And in some cases, I actually prefer to see the information locally (e.g., there was at least one case `s` was implicit and `t` was explicit, but your change removed the former, making it slightly hard to see the distinction).\r\n\r\n@madvorak is there a particular reason this is important to you?",
              "author": {
                "login": "j-loreaux"
              }
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6TuMkb",
              "createdAt": "2024-11-15T09:37:53Z",
              "body": "> It looks like this changes the order of implicit arguments in at least some of the cases. Not sure how I feel about that relative to the (smallish) win of the change\r\n\r\nDo you think that the variables were *intentionally* repeated in order to re√∂rder the implicit arguments?",
              "author": {
                "login": "madvorak"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6TuOV2",
              "createdAt": "2024-11-15T09:40:12Z",
              "body": "> @madvorak is there a particular reason this is important to you?\r\n\r\nIt confused me when I wanted to add another lemma into the same file.\r\n\r\nMore generally, I believe that every thing should be written only once in respective scope.",
              "author": {
                "login": "madvorak"
              }
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6TuPrR",
              "createdAt": "2024-11-15T09:43:08Z",
              "body": "> there was at least one case `s` was implicit and `t` was explicit, but your change removed the former, making it slightly hard to see the distinction)\r\n\r\nAs long as we follow the principle that all explicit arguments must be written explicitly, it won't be a problem.",
              "author": {
                "login": "madvorak"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6T3npn",
              "createdAt": "2024-11-16T22:24:07Z",
              "body": "> More generally, I believe that every thing should be written only once in respective scope.\n\nThis is much less important now that the extra variables don't show up in the infoview. As a result I don't see why it's particularly confusing. How did it confuse you?",
              "author": {
                "login": "j-loreaux"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6T3nt9",
              "createdAt": "2024-11-16T22:24:58Z",
              "body": "> As long as we follow the principle that all explicit arguments must be written explicitly, it won't be a problem.\n\nThis is *not* a principle to which Mathlib adheres",
              "author": {
                "login": "j-loreaux"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6ec4YszwAAAAOReoZV",
              "createdAt": "2024-11-17T18:02:18Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6UcGhj",
              "createdAt": "2024-11-21T08:43:01Z",
              "body": "> How did it confuse you?\r\n\r\nSorry, I forgot to answer your question. The thing is that I am generally lazy and I don't always read all `variable` declarations above the new def/lemma/theorem I am adding. What I usually do in practice is that I copypaste the header of a similar def/lemma/theorem in the same section and edit it. As a result, if the present def/lemma/theorem redundantly redeclares some variables, I also end up redundantly redeclaring them without any intention to deviate from the default ordering of implicit arguments, which is embarrassing and propagates bad coding habits.",
              "author": {
                "login": "madvorak"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6ec4YszwAAAAOUmB76",
              "createdAt": "2024-11-21T08:43:10Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6ec4YszwAAAAOkRS6O",
              "createdAt": "2024-12-12T21:43:25Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6Xt9IU",
              "createdAt": "2025-01-12T11:10:43Z",
              "body": "Generally, stylistic cleanups are tricky because they bring almost no benefit compared to the reviewing effort. However, I think they should still be possible, and I generally agree to not repeat arguments from `variable` unless there is a reason to do so. (imo it introduces confusion and inconsistency about the order of arguments)\r\n\r\nI marked anything below where the cleanup changes the order of implicit arguments; I don't think this is bad, but wanted to mark it for the **maintainer** reviewing this.\r\n\r\n(!) There are a few suggestions below which you could incorporate, but otherwise I suggest merging this after merge conflicts have been resolved (and after double-checking @Ruben-VandeVelde and @j-loreaux  do not object)",
              "author": {
                "login": "joneugster"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6ec4YszwAAAAOzdZRs",
              "createdAt": "2025-01-12T11:30:17Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "AssignedEvent",
              "id": "AE_lADOFcwZ1c6ec4YszwAAAAOzdZS6",
              "createdAt": "2025-01-12T11:30:19Z",
              "assignee": {
                "id": "MDQ6VXNlcjkxNDE1NjQ=",
                "login": "joneugster"
              }
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6ec4YszwAAAAOzdrR2",
              "createdAt": "2025-01-12T12:09:27Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6ec4YszwAAAAO0EznY",
              "createdAt": "2025-01-13T14:33:14Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6ec4YszwAAAAO0Eznq",
              "createdAt": "2025-01-13T14:33:14Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKteTVQ",
                "name": "awaiting-CI"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6ec4YszwAAAAO0IWzV",
              "createdAt": "2025-01-13T15:16:37Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKteTVQ",
                "name": "awaiting-CI"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6aSK6D",
              "createdAt": "2025-01-13T23:29:35Z",
              "body": "I will not object to this being merged. However, let me point out in response to this:\r\n\r\n> Generally, stylistic cleanups are tricky because they bring almost no benefit compared to the reviewing effort. However, I think they should still be possible, and I generally agree to not repeat arguments from variable unless there is a reason to do so. (imo it introduces confusion and inconsistency about the order of arguments)\r\n\r\nIt's not only review effort that this imposes. Changing argument order also has the potential to disrupt downstream uses of these lemmas. When there is little harm to the current order, and it isn't part of a large refactor that uniformizes this kind of thing across some large subset of Mathlib according to well-defined rules, then I don't really think there is much benefit compared to the cost.\r\n\r\nBut like I said, I won't object to this being merged. The above is just my opinion, not a community guideline.",
              "author": {
                "login": "j-loreaux"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6aVL5G",
              "createdAt": "2025-01-14T07:56:29Z",
              "body": "I would like to point out that only implicit arguments are affected. That said, I know it may create problems.",
              "author": {
                "login": "madvorak"
              }
            }
          ]
        }
      }
    }
  }
}
