{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 353,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "vlad902"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "Generalize several hundred type classes throughout Mathlib. This is a large subset of those found by a new linter.\r\n\r\nAlso see discussion on Zulip here:\r\nhttps://leanprover.zulipchat.com/#narrow/channel/270676-lean4/topic/Elab.20to.20generalize.20type.20classes.20for.20theorems/near/498862988 https://leanprover.zulipchat.com/#narrow/channel/287929-mathlib4/topic/Elab.20to.20generalize.20type.20classes.20for.20theorems/near/501288855",
        "changedFiles": 230,
        "closed": false,
        "closedAt": null,
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c6gFzsN",
              "body": "### PR summary [df3ce3d246](https://github.com/leanprover-community/mathlib4/pull/22337/commits/df3ce3d246a00a94cd35488cc0b4cbf709afffe0)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`++---+ neg`\n`+--+ cast_finsupp_sum`\n`+--+ smul`\n`-+-+ add`\n`-+-+ addHom_ext`\n`-+-+ mul`\n`-+-+ smul_measure`\n`--++ inr_smul`\n`---+++-+ coe_smul`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>\n\n---\n\n<details><summary>No changes to technical debt.</summary>\n\nYou can run this locally as\n```\n./scripts/technical-debt-metrics.sh pr_summary\n```\n* The `relative` value is the weighted *sum* of the differences with weight given by the *inverse* of the current value of the statistic.\n* The `absolute` value is the `relative` value divided by the total sum of the inverses of the current values (i.e. the weighted *average* of the differences).\n</details>\n",
              "createdAt": "2025-02-26T18:35:31Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6gF0-H",
              "body": "!bench",
              "createdAt": "2025-02-26T18:37:14Z",
              "author": {
                "login": "vlad902"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6gF8o4",
              "body": "@vlad902 generally you don't want to run `!bench` before Mathlib CI passes because the benchmark won't have anything useful to say if CI doesn't succeed, and then it's just using up benchmarking resources for no reason. Therefore, you can add the `bench-after-CI` label, which will automatically benchmark the PR after CI completes successfully (so you don't have to remember to come back to `!bench` it yourself).\r\n\r\nFor right now, don't add this label, because CI might be successful.\r\n\r\n(Note: this is not criticism, just informational.)",
              "createdAt": "2025-02-26T18:50:27Z",
              "author": {
                "login": "j-loreaux"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6gF9Y4",
              "body": "Good to know, thank you!",
              "createdAt": "2025-02-26T18:51:53Z",
              "author": {
                "login": "vlad902"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6gGR4p",
              "body": "Here are the [benchmark results](https://speed.lean-lang.org/mathlib4/run-detail/e5c8b7f7-6fcb-4666-9668-184748bec89d) for commit df3ce3d246a00a94cd35488cc0b4cbf709afffe0.\nThe entire run failed.\nFound no significant differences.",
              "createdAt": "2025-02-26T19:29:48Z",
              "author": {
                "login": "leanprover-bot"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "df3ce3d246a00a94cd35488cc0b4cbf709afffe0",
                "additions": 353,
                "deletions": 353,
                "committedDate": "2025-02-26T18:30:05Z",
                "author": {
                  "name": "Vlad Tsyrklevich",
                  "email": "vlad@tsyrklevich.net"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI0XhDmA",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13550918495/job/37874058136"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI0XlAZA",
                        "name": "Add topic label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13550937213/job/37874122852"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI0XlAYw",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13550937198/job/37874122851"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI0XlALw",
                        "name": "post-or-update-summary-comment",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13550937193/job/37874122799"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI0XhCBg",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13550918497/job/37874057734"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI0XlAEg",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13550937200/job/37874122770"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI0XhDkg",
                        "name": "Build",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13550918497/job/37874058130"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI0XhBwA",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13550918495/job/37874057664"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI0XlB4g",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13550937200/job/37874123234"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI0XhFFA",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13550918495/job/37874058516"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI0Z4YGQ",
                        "name": "Post-CI job",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13550918497/job/37876537369"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI0XliEg",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/37874131474"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI0Xmy8g",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=22337&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            }
          ]
        },
        "createdAt": "2025-02-26T18:34:33Z",
        "deletions": 353,
        "files": {
          "nodes": [
            {
              "path": "Mathlib/Algebra/AddConstMap/Basic.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Algebra/Algebra/NonUnitalSubalgebra.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Algebra/Algebra/Quasispectrum.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Algebra/Algebra/Subalgebra/Basic.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Algebra/Algebra/Unitization.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Algebra/AlgebraicCard.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Algebra/BigOperators/Finsupp.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Algebra/BigOperators/Pi.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Algebra/BigOperators/RingEquiv.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Algebra/Category/ModuleCat/Basic.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Algebra/Central/Basic.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Algebra/CharP/Algebra.lean",
              "additions": 3,
              "deletions": 3
            },
            {
              "path": "Mathlib/Algebra/DirectSum/Basic.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Algebra/DualNumber.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Algebra/Exact.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Algebra/Field/IsField.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Algebra/Field/NegOnePow.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Algebra/Field/Periodic.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Algebra/GeomSum.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Algebra/Group/Hom/Instances.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Algebra/Group/Nat/Hom.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Algebra/Group/Submonoid/Operations.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Algebra/GroupWithZero/Units/Lemmas.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Algebra/Lie/Basic.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Algebra/Module/BigOperators.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Algebra/Module/Equiv/Defs.lean",
              "additions": 4,
              "deletions": 4
            },
            {
              "path": "Mathlib/Algebra/Module/LinearMap/Defs.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Algebra/Module/Submodule/Equiv.lean",
              "additions": 5,
              "deletions": 5
            },
            {
              "path": "Mathlib/Algebra/Module/Submodule/Pointwise.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Algebra/Module/ZLattice/Basic.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Algebra/MonoidAlgebra/Basic.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Algebra/MonoidAlgebra/Degree.lean",
              "additions": 3,
              "deletions": 3
            },
            {
              "path": "Mathlib/Algebra/Order/AbsoluteValue/Basic.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Algebra/Order/BigOperators/Group/List.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Algebra/Order/Floor.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Algebra/Order/Monoid/Unbundled/WithTop.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Algebra/Order/Ring/Idempotent.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Algebra/Order/Ring/Unbundled/Basic.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Algebra/Order/Sub/Unbundled/Hom.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Algebra/Polynomial/Basic.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Algebra/Polynomial/Eval/Coeff.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Algebra/Polynomial/FieldDivision.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Algebra/Polynomial/Monic.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Algebra/Polynomial/Reverse.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Algebra/Polynomial/Roots.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Algebra/PresentedMonoid/Basic.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Algebra/Quaternion.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Algebra/Ring/Basic.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Algebra/Ring/Equiv.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Algebra/Ring/Hom/Defs.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Algebra/Ring/Int/Defs.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Algebra/Ring/Parity.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Algebra/Ring/Subsemiring/Defs.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Algebra/RingQuot.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Algebra/Squarefree/Basic.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Algebra/Star/Basic.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Algebra/Star/NonUnitalSubalgebra.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Algebra/Star/Pointwise.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Algebra/Star/SelfAdjoint.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Algebra/Symmetrized.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Algebra/TrivSqZeroExt.lean",
              "additions": 6,
              "deletions": 6
            },
            {
              "path": "Mathlib/Algebra/Tropical/Basic.lean",
              "additions": 3,
              "deletions": 3
            },
            {
              "path": "Mathlib/Algebra/Tropical/BigOperators.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/AlgebraicGeometry/RationalMap.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/AlgebraicGeometry/ResidueField.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Analysis/Analytic/IsolatedZeros.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Analysis/Asymptotics/TVS.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Analysis/CStarAlgebra/ContinuousFunctionalCalculus/NonUnital.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Analysis/CStarAlgebra/ContinuousFunctionalCalculus/Unital.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Analysis/Calculus/Deriv/Slope.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Analysis/Calculus/LineDeriv/Basic.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Analysis/Hofer.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Analysis/InnerProductSpace/PiL2.lean",
              "additions": 4,
              "deletions": 4
            },
            {
              "path": "Mathlib/Analysis/LocallyConvex/Bounded.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Analysis/Matrix.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Analysis/MellinTransform.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Analysis/Normed/Field/Basic.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Analysis/Normed/Operator/Banach.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Analysis/RCLike/Basic.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Analysis/SpecialFunctions/ContinuousFunctionalCalculus/Rpow/Basic.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/CategoryTheory/Abelian/Pseudoelements.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/CategoryTheory/Galois/IsFundamentalgroup.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/CategoryTheory/Limits/Shapes/Preorder/HasIterationOfShape.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Combinatorics/SimpleGraph/AdjMatrix.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Data/Complex/Module.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Data/DFinsupp/BigOperators.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Data/Fin/Tuple/Sort.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Data/Finset/Pairwise.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Data/Finsupp/Basic.lean",
              "additions": 4,
              "deletions": 4
            },
            {
              "path": "Mathlib/Data/Finsupp/BigOperators.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Data/Finsupp/SMul.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Data/Finsupp/SMulWithZero.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Data/Holor.lean",
              "additions": 5,
              "deletions": 5
            },
            {
              "path": "Mathlib/Data/Int/Cast/Lemmas.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Data/List/Lex.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Data/Matrix/Block.lean",
              "additions": 6,
              "deletions": 6
            },
            {
              "path": "Mathlib/Data/Matrix/Hadamard.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Data/Matrix/Kronecker.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Data/Matrix/Mul.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Data/Nat/Cast/Basic.lean",
              "additions": 2,
              "deletions": 2
            }
          ]
        },
        "headRefName": "vlad.tsyrklevich/generalize-theorems1",
        "headRefOid": "df3ce3d246a00a94cd35488cc0b4cbf709afffe0",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c6MsN2f",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c8AAAABb5aSCQ",
              "color": "8BBA68",
              "name": "new-contributor"
            }
          ]
        },
        "latestReviews": {
          "nodes": []
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "BLOCKED",
        "mergeable": "MERGEABLE",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 22337,
        "potentialMergeCommit": {
          "oid": "b2ecd5b8a62e708b9ece19072041e77b582213b4"
        },
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": null,
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": []
        },
        "reviewThreads": {
          "nodes": []
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjEwODg4OTM=",
              "login": "vlad902"
            },
            {
              "id": "MDQ6VXNlcjg5MjA1OTg=",
              "login": "j-loreaux"
            },
            {
              "id": "MDQ6VXNlcjg1NjY4Mzk0",
              "login": "leanprover-bot"
            }
          ]
        },
        "state": "OPEN",
        "statusCheckRollup": {
          "contexts": {
            "nodes": [
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAI0XhDmA",
                "name": "Lint style (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13550918495/job/37874058136"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAI0XlAZA",
                "name": "Add topic label",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13550937213/job/37874122852"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAI0XlAYw",
                "name": "label-and-report-new-contributor",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13550937198/job/37874122851"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAI0XlALw",
                "name": "post-or-update-summary-comment",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13550937193/job/37874122799"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAI0XhCBg",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13550918497/job/37874057734"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAI0XlAEg",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13550937200/job/37874122770"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAI0XhDkg",
                "name": "Build",
                "conclusion": "FAILURE",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13550918497/job/37874058130"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAI0XhBwA",
                "name": "Build (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13550918495/job/37874057664"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAI0XlB4g",
                "name": "Check all files imported",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13550937200/job/37874123234"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAI0XhFFA",
                "name": "Post-CI job (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13550918495/job/37874058516"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAI0Z4YGQ",
                "name": "Post-CI job",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13550918497/job/37876537369"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAI0XliEg",
                "name": "New Contributor Check",
                "conclusion": "NEUTRAL",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/37874131474"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAI0Xmy8g",
                "name": "Summary",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=22337&login=leanprover-community&repository=mathlib4"
              }
            ]
          }
        },
        "title": "feat: generalize type classes in theorem declarations",
        "updatedAt": "2025-02-26T19:29:49Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/22337",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "df3ce3d246a00a94cd35488cc0b4cbf709afffe0"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6rzzaazwAAAAPWkYuR",
              "createdAt": "2025-02-26T18:34:47Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABb5aSCQ",
                "name": "new-contributor"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6gFzsN",
              "createdAt": "2025-02-26T18:35:31Z",
              "body": "### PR summary [df3ce3d246](https://github.com/leanprover-community/mathlib4/pull/22337/commits/df3ce3d246a00a94cd35488cc0b4cbf709afffe0)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`++---+ neg`\n`+--+ cast_finsupp_sum`\n`+--+ smul`\n`-+-+ add`\n`-+-+ addHom_ext`\n`-+-+ mul`\n`-+-+ smul_measure`\n`--++ inr_smul`\n`---+++-+ coe_smul`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>\n\n---\n\n<details><summary>No changes to technical debt.</summary>\n\nYou can run this locally as\n```\n./scripts/technical-debt-metrics.sh pr_summary\n```\n* The `relative` value is the weighted *sum* of the differences with weight given by the *inverse* of the current value of the statistic.\n* The `absolute` value is the `relative` value divided by the total sum of the inverses of the current values (i.e. the weighted *average* of the differences).\n</details>\n",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6gF0-H",
              "createdAt": "2025-02-26T18:37:14Z",
              "body": "!bench",
              "author": {
                "login": "vlad902"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6gF8o4",
              "createdAt": "2025-02-26T18:50:27Z",
              "body": "@vlad902 generally you don't want to run `!bench` before Mathlib CI passes because the benchmark won't have anything useful to say if CI doesn't succeed, and then it's just using up benchmarking resources for no reason. Therefore, you can add the `bench-after-CI` label, which will automatically benchmark the PR after CI completes successfully (so you don't have to remember to come back to `!bench` it yourself).\r\n\r\nFor right now, don't add this label, because CI might be successful.\r\n\r\n(Note: this is not criticism, just informational.)",
              "author": {
                "login": "j-loreaux"
              }
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6gF9Y4",
              "createdAt": "2025-02-26T18:51:53Z",
              "body": "Good to know, thank you!",
              "author": {
                "login": "vlad902"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6gGR4p",
              "createdAt": "2025-02-26T19:29:48Z",
              "body": "Here are the [benchmark results](https://speed.lean-lang.org/mathlib4/run-detail/e5c8b7f7-6fcb-4666-9668-184748bec89d) for commit df3ce3d246a00a94cd35488cc0b4cbf709afffe0.\nThe entire run failed.\nFound no significant differences.",
              "author": {
                "login": "leanprover-bot"
              }
            }
          ]
        }
      }
    }
  }
}
