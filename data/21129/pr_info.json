{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 14,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "chrisflav"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "Naming of universe variables has an impact on universe unification. It seems to matter that the universe variables of `R`, `S` and `T` appear before the universe variables of the generators  in alphabetical order.\r\n\r\n---\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nFor details on the \"pull request lifecycle\" in mathlib, please see:\r\nhttps://leanprover-community.github.io/contribute/index.html\r\n\r\nIn particular, note that most reviewers will only notice your PR\r\nif it passes the continuous integration checks.\r\nPlease ask for help on https://leanprover.zulipchat.com if needed.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nIf you are moving or deleting declarations, please include these lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nMoves:\r\n- Vector.* -> List.Vector.*\r\n- ...\r\n\r\nDeletions:\r\n- Nat.bit1_add_bit1\r\n- ...\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n\r\n-->\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 1,
        "closed": false,
        "closedAt": null,
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c6b7DyE",
              "body": "### PR summary [dbb8c6dfd3](https://github.com/leanprover-community/mathlib4/pull/21129/commits/dbb8c6dfd3be8e51d66f9acf1f8b97c8cb188cdc)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n\n</details>\n\n---\n\n#### Declarations diff\n\nNo declarations were harmed in the making of this PR! üêô\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n---\n\n<details><summary>No changes to technical debt.</summary>\n\nYou can run this locally as\n```\n./scripts/technical-debt-metrics.sh pr_summary\n```\n* The `relative` value is the weighted *sum* of the differences with weight given by the *inverse* of the current value of the statistic.\n* The `absolute` value is the `relative` value divided by the total sum of the inverses of the current values (i.e. the weighted *average* of the differences).\n</details>\n",
              "createdAt": "2025-01-27T14:43:21Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6b7FBZ",
              "body": "!bench",
              "createdAt": "2025-01-27T14:45:21Z",
              "author": {
                "login": "chrisflav"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6b7jFT",
              "body": "Here are the [benchmark results](https://speed.lean-lang.org/mathlib4/run-detail/78f74629-e510-4a9c-8eb5-8cd1c9c17055) for commit dbb8c6dfd3be8e51d66f9acf1f8b97c8cb188cdc.\nThere were [significant changes](https://speed.lean-lang.org/mathlib4/compare/fbb76a5c-e017-4dd4-8f85-395cdbbfcc0b/to/78f74629-e510-4a9c-8eb5-8cd1c9c17055) against commit efeadfb18697dff701318aa598fc7cd36099920a:\n```diff\n  Benchmark                                   Metric         Change\n  =================================================================\n+ ~Mathlib.RingTheory.Kaehler.JacobiZariski   instructions   -29.0%\n```",
              "createdAt": "2025-01-27T15:31:23Z",
              "author": {
                "login": "leanprover-bot"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6b7jar",
              "body": "|File|Instructions|%|\n|-|-:|:-:|\n|`build`|-225.54‚¨ù10‚Åπ|(-0.14%)|\n|`Mathlib.RingTheory.Kaehler.JacobiZariski`|-210.979‚¨ù10‚Åπ|(-29.00%)|\n[CI run](https://github.com/leanprover-community/mathlib4/actions/runs/12992471508)",
              "createdAt": "2025-01-27T15:31:55Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6b7p6F",
              "body": "üöÄ Pull request has been placed on the maintainer queue by grunweg.",
              "createdAt": "2025-01-27T15:42:14Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6b7rJj",
              "body": "> Wow, these are great speed-ups! These should definitely land soon.\r\n> \r\n> Do you understand _why_ this changes performance? If so, it would be good to document (and look for other instances in mathlib/perhaps even write a linter). If not, can you start a discussion on zulip?\r\n> \r\n> I'll be bold nominate for a quick merge, mostly to get the ball rolling. maintainer delegate?\r\n\r\nYou probably missed the discussion at https://leanprover.zulipchat.com/#narrow/channel/144837-PR-reviews/topic/.2321099.20use.20unification.20hints.20for.20generators.\r\n\r\nSo @mattrobball and @erdOne should have a look first.",
              "createdAt": "2025-01-27T15:44:09Z",
              "author": {
                "login": "chrisflav"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6b7sRs",
              "body": "I think changing the convention for naming universes in this file is not a good idea. I am pretty sure that the kernel is able to check equality of levels from the names directly and that is what allows it avoid many unfolding steps. I am less sure about the importance of the ordering. ",
              "createdAt": "2025-01-27T15:45:55Z",
              "author": {
                "login": "mattrobball"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6b7unS",
              "body": "> I think changing the convention for naming universes in this file is not a good idea. I am pretty sure that the kernel is able to check equality of levels from the names directly and that is what allows it avoid many unfolding steps. I am less sure about the importance of the ordering.\r\n\r\nIt definitely matters that the universes of `R`, `S` and `T` appear before the universes of `P`, `Q`, etc. alphabetically, just replace `a`, `b` and `c` by `x`, `y` and `z` respectively and many declarations even start to timeout with maxHeartbeats reached.",
              "createdAt": "2025-01-27T15:49:31Z",
              "author": {
                "login": "chrisflav"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6b7zsl",
              "body": "I should be clear since there are two possible orderings: 1. declaration ordering (ie what line number/column does a level appear) and 2. orderings on the names via the usual lexicographical ordering on strings. \r\n\r\nThe former doesn't seem to matter. The latter seems to matter both for the elaborator and the kernel. Lexical ordering gives equality in the kernel. ",
              "createdAt": "2025-01-27T15:57:15Z",
              "author": {
                "login": "mattrobball"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6b71bP",
              "body": "> I should be clear since there are two possible orderings: 1. declaration ordering (ie what line number/column does a level appear) and 2. orderings on the names via the usual lexicographical ordering on strings.\r\n> \r\n> The former doesn't seem to matter. The latter seems to matter both for the elaborator and the kernel. Lexical ordering gives equality in the kernel.\r\n\r\nSo what exactly do you suggest to change in this PR?",
              "createdAt": "2025-01-27T15:59:50Z",
              "author": {
                "login": "chrisflav"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "dbb8c6dfd3be8e51d66f9acf1f8b97c8cb188cdc",
                "additions": 14,
                "deletions": 20,
                "committedDate": "2025-01-27T14:41:43Z",
                "author": {
                  "name": "Christian Merten",
                  "email": "christian@merten.dev"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIb6bucA",
                        "name": "set_pr_emoji",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12992640691/job/36232949360"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIb2vqCQ",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12991483074/job/36229081609"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIb2xyzg",
                        "name": "Lint style",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12991493454/job/36229116622"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIb6kGvg",
                        "name": "Add ready-to-merge or delegated label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12992681802/job/36233086654"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIb2xvYw",
                        "name": "Add topic label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12991493417/job/36229115747"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIb2xvlw",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12991493418/job/36229115799"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIb6kGuw",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12992681812/job/36233086651"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIb2xvKA",
                        "name": "post-or-update-summary-comment",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12991493440/job/36229115688"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIb6kIzQ",
                        "name": "Fix style issues from lint",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12992681837/job/36233087181"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIb2vsIw",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12991483069/job/36229082147"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIb2vsog",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12991483074/job/36229082274"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIb2xv-A",
                        "name": "Check all files imported",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12991493454/job/36229115896"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIb2vqGg",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12991483069/job/36229081626"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIb2vunw",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12991483074/job/36229082783"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIb3WWCw",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12991483069/job/36229715467"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIb2yWYQ",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/36229125729"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIb2yOHQ",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=21129&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            }
          ]
        },
        "createdAt": "2025-01-27T14:42:25Z",
        "deletions": 20,
        "files": {
          "nodes": [
            {
              "path": "Mathlib/RingTheory/Kaehler/JacobiZariski.lean",
              "additions": 14,
              "deletions": 20
            }
          ]
        },
        "headRefName": "jacobi-zariski-universe",
        "headRefOid": "dbb8c6dfd3be8e51d66f9acf1f8b97c8cb188cdc",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c6JGGuT",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c8AAAABViJjTQ",
              "color": "33DBEC",
              "name": "t-algebra"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABh1mAHA",
              "color": "6BEB7E",
              "name": "maintainer-merge"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABnIXseA",
              "color": "39061E",
              "name": "performance-hack"
            }
          ]
        },
        "latestReviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c6Zh3yY",
              "body": "Wow, these are great speed-ups! These should definitely land soon.\r\n\r\nDo you understand *why* this changes performance? If so, it would be good to document (and look for other instances in mathlib/perhaps even write a linter). If not, can you start a discussion on zulip?\r\n\r\nI'll be bold nominate for a quick merge, mostly to get the ball rolling.\r\nmaintainer delegate?",
              "state": "COMMENTED",
              "author": {
                "login": "grunweg"
              },
              "submittedAt": "2025-01-27T15:41:51Z"
            }
          ]
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "BLOCKED",
        "mergeable": "MERGEABLE",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 21129,
        "potentialMergeCommit": {
          "oid": "051b7e956389eb752af5a0b5251a7366cfd10f32"
        },
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": null,
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c6Zh3yY",
              "body": "Wow, these are great speed-ups! These should definitely land soon.\r\n\r\nDo you understand *why* this changes performance? If so, it would be good to document (and look for other instances in mathlib/perhaps even write a linter). If not, can you start a discussion on zulip?\r\n\r\nI'll be bold nominate for a quick merge, mostly to get the ball rolling.\r\nmaintainer delegate?",
              "state": "COMMENTED",
              "author": {
                "login": "grunweg"
              },
              "submittedAt": "2025-01-27T15:41:51Z"
            }
          ]
        },
        "reviewThreads": {
          "nodes": [
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5zFLm4",
                    "body": "Can you please add a comment that this order is deliberate? Otherwise, somebody might want to come along and \"clean this up\".",
                    "createdAt": "2025-01-27T15:40:37Z",
                    "author": {
                      "login": "grunweg"
                    }
                  }
                ]
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "U_kgDOCB8vYg",
              "login": "chrisflav"
            },
            {
              "id": "MDQ6VXNlcjg1NjY4Mzk0",
              "login": "leanprover-bot"
            },
            {
              "id": "U_kgDOBfZl7g",
              "login": "mattrobball"
            },
            {
              "id": "MDQ6VXNlcjEwMTA1MDE2",
              "login": "grunweg"
            }
          ]
        },
        "state": "OPEN",
        "statusCheckRollup": {
          "contexts": {
            "nodes": [
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIb6bucA",
                "name": "set_pr_emoji",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12992640691/job/36232949360"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIb2vqCQ",
                "name": "Lint style (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12991483074/job/36229081609"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIb2xyzg",
                "name": "Lint style",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12991493454/job/36229116622"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIb6kGvg",
                "name": "Add ready-to-merge or delegated label",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12992681802/job/36233086654"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIb2xvYw",
                "name": "Add topic label",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12991493417/job/36229115747"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIb2xvlw",
                "name": "label-and-report-new-contributor",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12991493418/job/36229115799"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIb6kGuw",
                "name": "Ping maintainers on Zulip",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12992681812/job/36233086651"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIb2xvKA",
                "name": "post-or-update-summary-comment",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12991493440/job/36229115688"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIb6kIzQ",
                "name": "Fix style issues from lint",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12992681837/job/36233087181"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIb2vsIw",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12991483069/job/36229082147"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIb2vsog",
                "name": "Build (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12991483074/job/36229082274"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIb2xv-A",
                "name": "Check all files imported",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12991493454/job/36229115896"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIb2vqGg",
                "name": "Build",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12991483069/job/36229081626"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIb2vunw",
                "name": "Post-CI job (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12991483074/job/36229082783"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIb3WWCw",
                "name": "Post-CI job",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12991483069/job/36229715467"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIb2yWYQ",
                "name": "New Contributor Check",
                "conclusion": "NEUTRAL",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/36229125729"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIb2yOHQ",
                "name": "Summary",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=21129&login=leanprover-community&repository=mathlib4"
              }
            ]
          }
        },
        "title": "perf(RingTheory/Kaehler/JacobiZariski): reorder universe variables",
        "updatedAt": "2025-01-27T15:59:51Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/21129",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "dbb8c6dfd3be8e51d66f9acf1f8b97c8cb188cdc"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6b7DyE",
              "createdAt": "2025-01-27T14:43:21Z",
              "body": "### PR summary [dbb8c6dfd3](https://github.com/leanprover-community/mathlib4/pull/21129/commits/dbb8c6dfd3be8e51d66f9acf1f8b97c8cb188cdc)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n\n</details>\n\n---\n\n#### Declarations diff\n\nNo declarations were harmed in the making of this PR! üêô\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n---\n\n<details><summary>No changes to technical debt.</summary>\n\nYou can run this locally as\n```\n./scripts/technical-debt-metrics.sh pr_summary\n```\n* The `relative` value is the weighted *sum* of the differences with weight given by the *inverse* of the current value of the statistic.\n* The `absolute` value is the `relative` value divided by the total sum of the inverses of the current values (i.e. the weighted *average* of the differences).\n</details>\n",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6nrkIpzwAAAAO-YzBA",
              "createdAt": "2025-01-27T14:43:29Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABViJjTQ",
                "name": "t-algebra"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6b7FBZ",
              "createdAt": "2025-01-27T14:45:21Z",
              "body": "!bench",
              "author": {
                "login": "chrisflav"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6b7jFT",
              "createdAt": "2025-01-27T15:31:23Z",
              "body": "Here are the [benchmark results](https://speed.lean-lang.org/mathlib4/run-detail/78f74629-e510-4a9c-8eb5-8cd1c9c17055) for commit dbb8c6dfd3be8e51d66f9acf1f8b97c8cb188cdc.\nThere were [significant changes](https://speed.lean-lang.org/mathlib4/compare/fbb76a5c-e017-4dd4-8f85-395cdbbfcc0b/to/78f74629-e510-4a9c-8eb5-8cd1c9c17055) against commit efeadfb18697dff701318aa598fc7cd36099920a:\n```diff\n  Benchmark                                   Metric         Change\n  =================================================================\n+ ~Mathlib.RingTheory.Kaehler.JacobiZariski   instructions   -29.0%\n```",
              "author": {
                "login": "leanprover-bot"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6b7jar",
              "createdAt": "2025-01-27T15:31:55Z",
              "body": "|File|Instructions|%|\n|-|-:|:-:|\n|`build`|-225.54‚¨ù10‚Åπ|(-0.14%)|\n|`Mathlib.RingTheory.Kaehler.JacobiZariski`|-210.979‚¨ù10‚Åπ|(-29.00%)|\n[CI run](https://github.com/leanprover-community/mathlib4/actions/runs/12992471508)",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "RenamedTitleEvent"
            },
            {
              "__typename": "ReadyForReviewEvent",
              "id": "RFRE_lADOFcwZ1c6nrkIpzwAAAAO-b3vn",
              "createdAt": "2025-01-27T15:36:13Z"
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6nrkIpzwAAAAO-cETO",
              "createdAt": "2025-01-27T15:39:36Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABnIXseA",
                "name": "performance-hack"
              }
            },
            {
              "__typename": "RenamedTitleEvent"
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6Zh3yY",
              "createdAt": "2025-01-27T15:40:37Z",
              "body": "Wow, these are great speed-ups! These should definitely land soon.\r\n\r\nDo you understand *why* this changes performance? If so, it would be good to document (and look for other instances in mathlib/perhaps even write a linter). If not, can you start a discussion on zulip?\r\n\r\nI'll be bold nominate for a quick merge, mostly to get the ball rolling.\r\nmaintainer delegate?",
              "author": {
                "login": "grunweg"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6b7p6F",
              "createdAt": "2025-01-27T15:42:14Z",
              "body": "üöÄ Pull request has been placed on the maintainer queue by grunweg.",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6nrkIpzwAAAAO-cNv_",
              "createdAt": "2025-01-27T15:42:15Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABh1mAHA",
                "name": "maintainer-merge"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6b7rJj",
              "createdAt": "2025-01-27T15:44:09Z",
              "body": "> Wow, these are great speed-ups! These should definitely land soon.\r\n> \r\n> Do you understand _why_ this changes performance? If so, it would be good to document (and look for other instances in mathlib/perhaps even write a linter). If not, can you start a discussion on zulip?\r\n> \r\n> I'll be bold nominate for a quick merge, mostly to get the ball rolling. maintainer delegate?\r\n\r\nYou probably missed the discussion at https://leanprover.zulipchat.com/#narrow/channel/144837-PR-reviews/topic/.2321099.20use.20unification.20hints.20for.20generators.\r\n\r\nSo @mattrobball and @erdOne should have a look first.",
              "author": {
                "login": "chrisflav"
              }
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6b7sRs",
              "createdAt": "2025-01-27T15:45:55Z",
              "body": "I think changing the convention for naming universes in this file is not a good idea. I am pretty sure that the kernel is able to check equality of levels from the names directly and that is what allows it avoid many unfolding steps. I am less sure about the importance of the ordering. ",
              "author": {
                "login": "mattrobball"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6b7unS",
              "createdAt": "2025-01-27T15:49:31Z",
              "body": "> I think changing the convention for naming universes in this file is not a good idea. I am pretty sure that the kernel is able to check equality of levels from the names directly and that is what allows it avoid many unfolding steps. I am less sure about the importance of the ordering.\r\n\r\nIt definitely matters that the universes of `R`, `S` and `T` appear before the universes of `P`, `Q`, etc. alphabetically, just replace `a`, `b` and `c` by `x`, `y` and `z` respectively and many declarations even start to timeout with maxHeartbeats reached.",
              "author": {
                "login": "chrisflav"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6b7zsl",
              "createdAt": "2025-01-27T15:57:15Z",
              "body": "I should be clear since there are two possible orderings: 1. declaration ordering (ie what line number/column does a level appear) and 2. orderings on the names via the usual lexicographical ordering on strings. \r\n\r\nThe former doesn't seem to matter. The latter seems to matter both for the elaborator and the kernel. Lexical ordering gives equality in the kernel. ",
              "author": {
                "login": "mattrobball"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6b71bP",
              "createdAt": "2025-01-27T15:59:50Z",
              "body": "> I should be clear since there are two possible orderings: 1. declaration ordering (ie what line number/column does a level appear) and 2. orderings on the names via the usual lexicographical ordering on strings.\r\n> \r\n> The former doesn't seem to matter. The latter seems to matter both for the elaborator and the kernel. Lexical ordering gives equality in the kernel.\r\n\r\nSo what exactly do you suggest to change in this PR?",
              "author": {
                "login": "chrisflav"
              }
            }
          ]
        }
      }
    }
  }
}
