{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 938,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "j-loreaux"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "Many of the existing induction lemmas for subobjects (e.g., `Subsemigroup.closure_induction`) were written with a motive that does not depend on the induction argument (e.g., `x ∈ Subsemigroup.closure s`), like so:\r\n\r\n```lean\r\ntheorem Subsemigroup.closure_induction {M : Type u_1} [Mul M] {s : Set M}\r\n    {p : M → Prop} {x : M} (h : x ∈ Subsemigroup.closure s)\r\n    (mem : ∀ x ∈ s, p x) (mul : ∀ (x y : M), p x → p y → p (x * y)) :\r\n    p x\r\n```\r\n\r\nThis prevents Lean from correctly inferring the motive when applying the `induction` tactic. As such, these lemmas don't serve much purpose, and we gradually acquired their dependent counterparts as variations with a `'`, like this one:\r\n\r\n```lean\r\ntheorem Subsemigroup.closure_induction' {M : Type u_1} [Mul M] (s : Set M)\r\n    {p : (x : M) → x ∈ Subsemigroup.closure s → Prop}\r\n    (mem : ∀ (x : M) (h : x ∈ s), p x ⋯)\r\n    (mul : ∀ (x : M) (hx : x ∈ Subsemigroup.closure s) (y : M)\r\n    (hy : y ∈ Subsemigroup.closure s), p x hx → p y hy → p (x * y) (mul_mem hx hy))\r\n    {x : M} (hx : x ∈ Subsemigroup.closure s) :\r\n    p x hx\r\n```\r\n\r\nThis PR moves the primed versions to the un-primed names, and removes the non-dependent lemmas, while also ensuring the dependent versions exist and are uniform for all these various subobjects.\r\n\r\nMoves:\r\n\r\n- Subsemigroup.closure_induction' -> Subsemigroup.closure_induction\r\n- AddSubsemigroup.closure_induction' -> AddSubsemigroup.closure_induction\r\n- Submonoid.closure_induction' -> Submonoid.closure_induction\r\n- AddSubmonoid.closure_induction' -> AddSubmonoid.closure_induction\r\n- Subgroup.closure_induction' -> Subgroup.closure_induction\r\n- AddSubgroup.closure_induction' -> AddSubgroup.closure_induction\r\n- Submodule.span_induction' -> Submodule.span_induction\r\n- Submodule.closure_induction' -> Submodule.closure_induction\r\n- NonUnitalAlgebra.adjoin_induction' -> NonUnitalAlgebra.adjoin_induction\r\n- NonUnitalStarAlgebra.adjoin_induction' -> NonUnitalStarAlgebra.adjoin_induction\r\n- Subsemiring.closure_induction' -> Subsemiring.closure_induction\r\n- Subring.closure_induction' -> Subring.closure_induction\r\n- Algebra.adjoin_induction'' -> Algebra.adjoin_induction\r\n\r\n---\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nFor details on the \"pull request lifecycle\" in mathlib, please see:\r\nhttps://leanprover-community.github.io/contribute/index.html\r\n\r\nIn particular, note that most reviewers will only notice your PR\r\nif it passes the continuous integration checks.\r\nPlease ask for help on https://leanprover.zulipchat.com if needed.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nIf you are moving or deleting declarations, please include these lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nMoves:\r\n- Vector.* -> Mathlib.Vector.*\r\n- ...\r\n\r\nDeletions:\r\n- Nat.bit1_add_bit1\r\n- ...\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n\r\n-->\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 67,
        "closed": true,
        "closedAt": "2024-10-15T23:21:20Z",
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c6PEELS",
              "body": "### PR summary [217d8387b3](https://github.com/leanprover-community/mathlib4/pull/17543/commits/217d8387b36ee893f3ae73d27ab52b33bc00107d)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ adjoin_induction_subtype`\n`++++++------ closure_induction'`\n`+++---++++---- closure_induction₂`\n`+++----+++++---- closure_induction`\n`++-++-- adjoin_induction`\n`++-- dense_induction`\n`++--- adjoin_induction'`\n`-++--+ adjoin_induction₂`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>",
              "createdAt": "2024-10-08T15:44:44Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6PK5ud",
              "body": "It's great that we add these dependent induction lemmas, but I think it's sometimes nice to also have access to the non-dependent ones, since they're sometimes easier to work with. For example, when it's necessary to specify the motive to a dependent induction in the case where the application is not dependent, you often end up with things looking syntactically really confusing. I'd personally slightly prefer keeping the old ones around, under other names. But if it turns out that adjusting mathlib to your change is easy enough, then it's probably fine...",
              "createdAt": "2024-10-09T10:58:08Z",
              "author": {
                "login": "b-mehta"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6PLwxK",
              "body": "You should never have to specify the motive explicitly though? Usually when you do, this is because:\r\n* The induction principle was not dependent, and should have been\r\n* The induction principle has the arguments in the wrong order\r\n* `elab_as_elim` is missing from the theorem\r\n* You tried to use `apply` with an `elab_as_elim`",
              "createdAt": "2024-10-09T12:46:14Z",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6PMbsa",
              "body": "> You should never have to specify the motive explicitly though? \r\n\r\nNote that the current state of this PR has exactly one adaptation going from the non-dependent to the dependent one, in `dense_induction`. And the motive is specified explicitly here, in a non-dependent way: exactly the situation I'm worried about. \r\nIt's possible that this is an isolated example, but I just want to flag it because it does get annoying in practice.\r\n",
              "createdAt": "2024-10-09T13:47:32Z",
              "author": {
                "login": "b-mehta"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6POk2p",
              "body": "@b-mehta I *think* that `refine` can get confused, but that's primarily because `dense_induction` is weird in that the term on which we are doing induction (namely `x`) doesn't reference `s` in it's type, so it's a bit underdetermined. Nevertheless, I think Eric is right, so long as you actually use the `induction` tactic. For instance, this works for `Subsemigroup.dense_induction`.\r\n```lean\r\ntheorem dense_induction {p : M → Prop} {s : Set M} (hs : closure s = ⊤)\r\n    (mem : ∀ x ∈ s, p x)\r\n    (mul : ∀ x y, p x → p y → p (x * y))\r\n    (x : M) : p x := by\r\n  induction hs.symm ▸ mem_top x using closure_induction with\r\n  | mem x hx => exact mem x hx\r\n  | mul x _ y _ hpx hpy => exact mul x y hpx hpy\r\n```\r\n\r\nOverall, while it was a lot of work to go through changing things, it wasn't terrible. This `dense_induction` issue hardly ever came up (at least in terms of *new* places where I needed to specify the motive). You're welcome to have a look and let me know what you think.\r\n",
              "createdAt": "2024-10-09T18:05:33Z",
              "author": {
                "login": "j-loreaux"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6PPLQc",
              "body": "I think all the primed induction principles should be kept as deprecated aliases, to not break downstream code that already uses them.",
              "createdAt": "2024-10-09T18:54:08Z",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6PQo3-",
              "body": "> I think all the primed induction principles should be kept as deprecated aliases, to not break downstream code that already uses them.\r\n\r\nI considered that, but I think it might be really confusing if we *only* swap the names on some of them.",
              "createdAt": "2024-10-09T21:58:53Z",
              "author": {
                "login": "j-loreaux"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6PQw7C",
              "body": "> > I think all the primed induction principles should be kept as deprecated aliases, to not break downstream code that already uses them.\r\n> \r\n> I considered that, but I think it might be really confusing if we _only_ swap the names on some of them.\r\n\r\nI'm not suggesting we swap the names, but that both the primed and unprimed versions refer to the dependent ones. That way people don't have to guess to work out that they just need to remove the `'`.",
              "createdAt": "2024-10-09T22:28:34Z",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6PS9uR",
              "body": "> I'm not suggesting we swap the names, but that both the primed and unprimed versions refer to the dependent ones. That way people don't have to guess to work out that they just need to remove the `'`\r\n\r\nDone",
              "createdAt": "2024-10-10T06:05:56Z",
              "author": {
                "login": "j-loreaux"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6P7tCx",
              "body": "maintainer merge",
              "createdAt": "2024-10-15T19:02:24Z",
              "author": {
                "login": "b-mehta"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6P7tNB",
              "body": "🚀 Pull request has been placed on the maintainer queue by b-mehta.",
              "createdAt": "2024-10-15T19:02:45Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6P9iHf",
              "body": "Given that this PR is huge, I thoroughly approve of the changes, my questions above are quite superficial and probably easily answered, and this might pick up merge conflicts if we leave it too long, my instinct is to merge first and ask questions later.\r\n\r\nbors merge",
              "createdAt": "2024-10-15T22:22:16Z",
              "author": {
                "login": "kbuzzard"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6P9wel",
              "body": "Pull request successfully merged into master.\n\nBuild succeeded:\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/11355371773/job/31584562609)\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/11355371773/job/31584562939)",
              "createdAt": "2024-10-15T23:21:19Z",
              "author": {
                "login": "mathlib-bors"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "213cb18da7a103aac1084e486efde2fdb412c361",
                "additions": 52,
                "deletions": 48,
                "committedDate": "2024-10-08T14:32:33Z",
                "author": {
                  "name": "Jireh Loreaux",
                  "email": "loreaujy@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHRhiOWg",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11237721584/job/31240785498"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHRhiOUg",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11237721586/job/31240785490"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHRhiRng",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11237721584/job/31240786334"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHRhiQCA",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11237721586/job/31240785928"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHRhiRgA",
                        "name": "Build",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11237721586/job/31240786304"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHRhiP9A",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11237721584/job/31240785908"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHRhiTUw",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11237721584/job/31240786771"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHRhuC-w",
                        "name": "Post-CI job",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11237721586/job/31240979195"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "309fd33d76d9865279ab68faa2fb334ad5700f6d",
                "additions": 11,
                "deletions": 11,
                "committedDate": "2024-10-08T14:49:02Z",
                "author": {
                  "name": "Jireh Loreaux",
                  "email": "loreaujy@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHRn1Qvg",
                        "name": "Add ready-to-merge label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11239708429/job/31247388862"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHRn2eRQ",
                        "name": "Add ready-to-merge label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11239714832/job/31247408709"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHRn1PBw",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11239708416/job/31247388423"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHRn2ekQ",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11239714837/job/31247408785"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHRn1O5A",
                        "name": "Fix style issues from lint",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11239708430/job/31247388388"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHRn2eXQ",
                        "name": "Fix style issues from lint",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11239714830/job/31247408733"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHRlmvdQ",
                        "name": "Add topic label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11239008369/job/31245053813"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHRlmvuQ",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11239008365/job/31245053881"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHRlmv2Q",
                        "name": "build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11239008377/job/31245053913"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHRiehTg",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11238016321/job/31241773390"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHRiejjw",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11238016348/job/31241773967"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHRlmxjw",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11239008368/job/31245054351"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHRn1O7A",
                        "name": "Add delegated label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11239708429/job/31247388396"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHRn2gfQ",
                        "name": "Add delegated label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11239714832/job/31247409277"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHRielKA",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11238016321/job/31241774376"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHRiehcw",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11238016348/job/31241773427"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHRlmwKg",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11239008368/job/31245053994"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHRiefkQ",
                        "name": "Build",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11238016348/job/31241772945"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHRiejhQ",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11238016321/job/31241773957"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHRienCQ",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11238016321/job/31241774857"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHRi9SpQ",
                        "name": "Post-CI job",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11238016348/job/31242277541"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHRlnjEA",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/31245067024"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHRlo_iw",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=17543&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "cb4e3fa7a7b80bb063e3dbac99a9c53458ce0156",
                "additions": 12,
                "deletions": 19,
                "committedDate": "2024-10-08T17:19:04Z",
                "author": {
                  "name": "Jireh Loreaux",
                  "email": "loreaujy@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "20b85f87a67aa5978d0178a3232a6f8327061fbb",
                "additions": 4,
                "deletions": 4,
                "committedDate": "2024-10-08T19:00:48Z",
                "author": {
                  "name": "Jireh Loreaux",
                  "email": "loreaujy@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "4d8ce3ba0af58960b2fafeb22f3d25add2355ecb",
                "additions": 20,
                "deletions": 35,
                "committedDate": "2024-10-08T19:01:40Z",
                "author": {
                  "name": "Jireh Loreaux",
                  "email": "loreaujy@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "46b219a8487eabf29f81d8e84c493934020a9d6e",
                "additions": 71,
                "deletions": 71,
                "committedDate": "2024-10-09T17:18:37Z",
                "author": {
                  "name": "Jireh Loreaux",
                  "email": "loreaujy@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "260ae177028febebd0e11adbcf8761f718e8f4e6",
                "additions": 29,
                "deletions": 12,
                "committedDate": "2024-10-09T17:19:10Z",
                "author": {
                  "name": "Jireh Loreaux",
                  "email": "loreaujy@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "8a467f4bd55b2622be42a3d43d80b183c9967b87",
                "additions": 79,
                "deletions": 63,
                "committedDate": "2024-10-09T17:19:24Z",
                "author": {
                  "name": "Jireh Loreaux",
                  "email": "loreaujy@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "51b381663b84c122906e5dc96711422e326de93f",
                "additions": 60,
                "deletions": 54,
                "committedDate": "2024-10-09T17:19:38Z",
                "author": {
                  "name": "Jireh Loreaux",
                  "email": "loreaujy@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "6804fe6b535468e1638c9e27aa5d6839fd2cccbe",
                "additions": 92,
                "deletions": 83,
                "committedDate": "2024-10-09T17:19:51Z",
                "author": {
                  "name": "Jireh Loreaux",
                  "email": "loreaujy@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "0db929628325d94c21b11e8169a0dedd06526810",
                "additions": 68,
                "deletions": 65,
                "committedDate": "2024-10-09T17:21:02Z",
                "author": {
                  "name": "Jireh Loreaux",
                  "email": "loreaujy@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "a98fc9c393216cb1812c0b0ac1f156708dd1b883",
                "additions": 5,
                "deletions": 4,
                "committedDate": "2024-10-09T17:21:29Z",
                "author": {
                  "name": "Jireh Loreaux",
                  "email": "loreaujy@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "6242358a551691b64ed94f7715c894579d3bfa5c",
                "additions": 73,
                "deletions": 65,
                "committedDate": "2024-10-09T17:21:41Z",
                "author": {
                  "name": "Jireh Loreaux",
                  "email": "loreaujy@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "75a4fe49e3c25bb6e5b8eb6b72c2616b91acdafa",
                "additions": 52,
                "deletions": 40,
                "committedDate": "2024-10-09T17:21:57Z",
                "author": {
                  "name": "Jireh Loreaux",
                  "email": "loreaujy@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "f99040a128af97e3ea1aad97fe6a133bbe124822",
                "additions": 115,
                "deletions": 112,
                "committedDate": "2024-10-09T17:22:36Z",
                "author": {
                  "name": "Jireh Loreaux",
                  "email": "loreaujy@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "a676437959e75aa0f40dc7b5119643f01a9065cc",
                "additions": 14,
                "deletions": 13,
                "committedDate": "2024-10-09T17:22:58Z",
                "author": {
                  "name": "Jireh Loreaux",
                  "email": "loreaujy@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "100819f9ba1d4beed0d925f67e0775acaef2064f",
                "additions": 8,
                "deletions": 5,
                "committedDate": "2024-10-09T17:23:12Z",
                "author": {
                  "name": "Jireh Loreaux",
                  "email": "loreaujy@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "2b519f09b3f0d64ab94e371d91781c1160861116",
                "additions": 80,
                "deletions": 78,
                "committedDate": "2024-10-09T17:23:25Z",
                "author": {
                  "name": "Jireh Loreaux",
                  "email": "loreaujy@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "a762bef47171c184daaac6f0afc93b7794eac567",
                "additions": 3,
                "deletions": 3,
                "committedDate": "2024-10-09T17:23:36Z",
                "author": {
                  "name": "Jireh Loreaux",
                  "email": "loreaujy@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "8460b35fc70e1b61db772f54e89d177e862e5ec2",
                "additions": 8,
                "deletions": 8,
                "committedDate": "2024-10-09T17:23:57Z",
                "author": {
                  "name": "Jireh Loreaux",
                  "email": "loreaujy@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "7c4cad091905b5377fbe54483f508116f941cb20",
                "additions": 4,
                "deletions": 4,
                "committedDate": "2024-10-09T17:24:05Z",
                "author": {
                  "name": "Jireh Loreaux",
                  "email": "loreaujy@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "dbe7ef0166e44a42ea6fda8e198508c5efe6fd98",
                "additions": 5,
                "deletions": 5,
                "committedDate": "2024-10-09T17:25:27Z",
                "author": {
                  "name": "Jireh Loreaux",
                  "email": "loreaujy@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHSj1n6w",
                        "name": "Add ready-to-merge label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11260024591/job/31310309355"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHSnsy6g",
                        "name": "Add ready-to-merge label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11261280948/job/31314359018"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHSnyrWQ",
                        "name": "Add ready-to-merge label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11261308682/job/31314455385"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHSvVTjA",
                        "name": "Add ready-to-merge label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11263755911/job/31322362764"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHSvmSuw",
                        "name": "Add ready-to-merge label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11263843306/job/31322641083"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHSj1lkA",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11260024605/job/31310308752"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHSnsxlQ",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11261280965/job/31314358677"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHSnyo5Q",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11261308686/job/31314454757"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHSvVSxA",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11263755909/job/31322362564"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHSvmSVA",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11263843327/job/31322640980"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHSj1mBA",
                        "name": "Fix style issues from lint",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11260024612/job/31310308868"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHSnsxNw",
                        "name": "Fix style issues from lint",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11261280952/job/31314358583"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHSnyokw",
                        "name": "Fix style issues from lint",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11261308685/job/31314454675"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHSvVTLw",
                        "name": "Fix style issues from lint",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11263755910/job/31322362671"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHSvmSgg",
                        "name": "Fix style issues from lint",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11263843319/job/31322641026"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHSju6VA",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11259987257/job/31310199380"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHSju6jg",
                        "name": "build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11259987273/job/31310199438"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHSju2cw",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11259986662/job/31310198387"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHSju2rg",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11259986673/job/31310198446"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHSju7qQ",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11259987262/job/31310199721"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHSj1lfw",
                        "name": "Add delegated label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11260024591/job/31310308735"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHSnsxOg",
                        "name": "Add delegated label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11261280948/job/31314358586"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHSnypbw",
                        "name": "Add delegated label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11261308682/job/31314454895"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHSvVVeQ",
                        "name": "Add delegated label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11263755911/job/31322363257"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHSvmOUA",
                        "name": "Add delegated label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11263843306/job/31322639952"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHSju4AQ",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11259986662/job/31310198785"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHSju30g",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11259986673/job/31310198738"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHSju6kg",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11259987262/job/31310199442"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHSju1BA",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11259986662/job/31310198020"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHSju1Rg",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11259986673/job/31310198086"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHSju5Uw",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11259986662/job/31310199123"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHSlybNg",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11259986673/job/31312354102"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHSjvo9w",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/31310211319"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHSjwTUg",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=17543&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "147f9fe94b262cb3b9f104db4605f73ebd3477ca",
                "additions": 113,
                "deletions": 111,
                "committedDate": "2024-10-09T22:12:53Z",
                "author": {
                  "name": "Jireh Loreaux",
                  "email": "loreaujy@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHSwKoUA",
                        "name": "Add ready-to-merge label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11264048929/job/31323236432"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHS5r5HQ",
                        "name": "Add ready-to-merge label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11267683348/job/31333218589"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHSwKpTg",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11264048931/job/31323236686"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHS5r39g",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11267683342/job/31333218294"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHSwKohQ",
                        "name": "Fix style issues from lint",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11264048930/job/31323236485"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHS5r3_g",
                        "name": "Fix style issues from lint",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11267683349/job/31333218302"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHSvqenw",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11263866482/job/31322709663"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHSvqfWw",
                        "name": "build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11263866491/job/31322709851"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHSvqeuA",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11263866374/job/31322709688"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHSvqe2A",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11263866376/job/31322709720"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHSvqf5A",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11263866484/job/31322709988"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHSwKpbQ",
                        "name": "Add delegated label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11264048929/job/31323236717"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHS5r4kA",
                        "name": "Add delegated label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11267683348/job/31333218448"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHSvqf7Q",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11263866374/job/31322709997"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHSvqf6Q",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11263866376/job/31322709993"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHSvqelQ",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11263866484/job/31322709653"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHSvqdsw",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11263866374/job/31322709427"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHSvqdzg",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11263866376/job/31322709454"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHSvqhCQ",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11263866374/job/31322710281"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHSw93Jw",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11263866376/job/31324075815"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHSvq62A",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/31322716888"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHSvrXAQ",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=17543&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "d8ab2152c5053485ea9ba0a7b14c68b9a49aaf28",
                "additions": 91,
                "deletions": 34,
                "committedDate": "2024-10-10T06:01:17Z",
                "author": {
                  "name": "Jireh Loreaux",
                  "email": "loreaujy@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHS7ZkZA",
                        "name": "Add ready-to-merge label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11268372506/job/31335015524"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHTGfung",
                        "name": "Add ready-to-merge label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11272208557/job/31346650782"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHTG1E4A",
                        "name": "Add ready-to-merge label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11272322549/job/31347000544"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHTG-3hg",
                        "name": "Add ready-to-merge label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11272375817/job/31347160966"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHTHHsjw",
                        "name": "Add ready-to-merge label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11272422259/job/31347305615"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHTMOpmg",
                        "name": "Add ready-to-merge label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11274142638/job/31352662426"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHTMzKRA",
                        "name": "Add ready-to-merge label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11274336305/job/31353260612"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHTP8tbQ",
                        "name": "Add ready-to-merge label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11275348794/job/31356562797"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHTQGtYQ",
                        "name": "Add ready-to-merge label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11275397116/job/31356726625"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHTQHdXQ",
                        "name": "Add ready-to-merge label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11275401656/job/31356738909"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHTRAS4Q",
                        "name": "Add ready-to-merge label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11275672574/job/31357670113"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHTVQG6g",
                        "name": "Add ready-to-merge label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11276996311/job/31362123498"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHS7ZkMA",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11268372483/job/31335015472"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHTGftAA",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11272208552/job/31346650368"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHTG1DTQ",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11272322523/job/31347000141"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHTG-26w",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11272375828/job/31347160811"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHTHHruw",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11272422266/job/31347305403"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHTMOmhQ",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11274142639/job/31352661637"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHTMzKUQ",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11274336302/job/31353260625"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHTP8qEw",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11275348773/job/31356561939"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHTQGp_A",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11275397103/job/31356725756"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHTQHbKg",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11275401663/job/31356738346"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHTRARaw",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11275672565/job/31357669739"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHTVQEHQ",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11276996313/job/31362122781"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHS7ZjDQ",
                        "name": "Fix style issues from lint",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11268372491/job/31335015181"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHTGfrmQ",
                        "name": "Fix style issues from lint",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11272208554/job/31346650009"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHTG1DnQ",
                        "name": "Fix style issues from lint",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11272322521/job/31347000221"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHTG-2dA",
                        "name": "Fix style issues from lint",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11272375818/job/31347160692"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHTHHtBA",
                        "name": "Fix style issues from lint",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11272422268/job/31347305732"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHTMOmmw",
                        "name": "Fix style issues from lint",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11274142650/job/31352661659"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHTMzKjg",
                        "name": "Fix style issues from lint",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11274336307/job/31353260686"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHTP8pTw",
                        "name": "Fix style issues from lint",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11275348774/job/31356561743"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHTQGrqQ",
                        "name": "Fix style issues from lint",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11275397118/job/31356726185"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHTQHbHw",
                        "name": "Fix style issues from lint",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11275401674/job/31356738335"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHTRATZg",
                        "name": "Fix style issues from lint",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11275672569/job/31357670246"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHTVQE7A",
                        "name": "Fix style issues from lint",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11276996307/job/31362122988"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHS7RQWQ",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11268322943/job/31334879321"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHS7RQZw",
                        "name": "build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11268322950/job/31334879335"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHS7RMcQ",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11268322609/job/31334878321"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHS7RNyA",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11268322611/job/31334878664"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHS7RRWA",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11268322953/job/31334879576"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHS7Zivw",
                        "name": "Add delegated label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11268372506/job/31335015103"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHTGfsCw",
                        "name": "Add delegated label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11272208557/job/31346650123"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHTG1HSw",
                        "name": "Add delegated label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11272322549/job/31347001163"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHTG-1FA",
                        "name": "Add delegated label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11272375817/job/31347160340"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHTHHuQw",
                        "name": "Add delegated label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11272422259/job/31347306051"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHTMOmiw",
                        "name": "Add delegated label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11274142638/job/31352661643"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHTMzMDg",
                        "name": "Add delegated label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11274336305/job/31353261070"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHTP8rWg",
                        "name": "Add delegated label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11275348794/job/31356562266"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHTQGrNg",
                        "name": "Add delegated label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11275397116/job/31356726070"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHTQHa4Q",
                        "name": "Add delegated label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11275401656/job/31356738273"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHTRAVeA",
                        "name": "Add delegated label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11275672574/job/31357670776"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHTVQENw",
                        "name": "Add delegated label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11276996311/job/31362122807"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHS7RNsw",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11268322609/job/31334878643"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHS7ROcw",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11268322611/job/31334878835"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHS7RQpA",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11268322953/job/31334879396"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHS7RObQ",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11268322609/job/31334878829"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHS7RMjQ",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11268322611/job/31334878349"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHS7RPLw",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11268322609/job/31334879023"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHS8npnw",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11268322611/job/31336294815"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHS7RqtQ",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/31334886069"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHS7SZEQ",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=17543&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "57e7881b9d1e4af1db07f6f84935a829ca8f301c",
                "additions": 203,
                "deletions": 204,
                "committedDate": "2024-10-11T21:15:27Z",
                "author": {
                  "name": "Jireh Loreaux",
                  "email": "loreaujy@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "a927476521ee4cfa4e009b418e6ff19f51a4caad",
                "additions": 57,
                "deletions": 57,
                "committedDate": "2024-10-15T14:49:57Z",
                "author": {
                  "name": "Jireh Loreaux",
                  "email": "loreaujy@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHWUrGAw",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11348629134/job/31562843651"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHWUrKbQ",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11348629130/job/31562844781"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHWUrMGQ",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11348629134/job/31562845209"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHWUrM1A",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11348629130/job/31562845396"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHWUrHzw",
                        "name": "Build",
                        "conclusion": "CANCELLED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11348629130/job/31562844111"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHWUrJKQ",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11348629134/job/31562844457"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHWVYE1Q",
                        "name": "Post-CI job",
                        "conclusion": "CANCELLED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11348629130/job/31563580629"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHWUrN7w",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11348629134/job/31562845679"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHWUtIqQ",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=17543&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "faf383cf4d57ecc5df2364eb2151aca3b398b0bf",
                "additions": 20279,
                "deletions": 13158,
                "committedDate": "2024-10-15T15:01:02Z",
                "author": {
                  "name": "Jireh Loreaux",
                  "email": "loreaujy@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHWVby-Q",
                        "name": "Add ready-to-merge label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11348864151/job/31563641593"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHWViSig",
                        "name": "Add ready-to-merge label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11348895656/job/31563747978"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHWVbu9Q",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11348864156/job/31563640565"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHWViQIA",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11348895654/job/31563747360"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHWVbvAQ",
                        "name": "Fix style issues from lint",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11348864152/job/31563640577"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHWViPPA",
                        "name": "Fix style issues from lint",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11348895686/job/31563747132"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHWVUQBQ",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11348825907/job/31563517957"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHWVUQ9w",
                        "name": "build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11348825924/job/31563518199"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHWVUNdw",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11348825750/job/31563517303"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHWVUPWQ",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11348825751/job/31563517785"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHWVUPOA",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11348825888/job/31563517752"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHWVbxDw",
                        "name": "Add delegated label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11348864151/job/31563641103"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHWViPVQ",
                        "name": "Add delegated label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11348895656/job/31563747157"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHWVURzA",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11348825750/job/31563518412"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHWVUSGw",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11348825751/job/31563518491"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHWVURuQ",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11348825888/job/31563518393"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHWVUNWQ",
                        "name": "Build",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11348825751/job/31563517273"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHWVUPPg",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11348825750/job/31563517758"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHWVUTwg",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11348825750/job/31563518914"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHWWIxcQ",
                        "name": "Post-CI job",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11348825751/job/31564378481"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHWVVQrg",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/31563534510"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHWVWzdQ",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=17543&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "217d8387b36ee893f3ae73d27ab52b33bc00107d",
                "additions": 0,
                "deletions": 1,
                "committedDate": "2024-10-15T15:18:25Z",
                "author": {
                  "name": "Jireh Loreaux",
                  "email": "loreaujy@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHWowTrA",
                        "name": "Add ready-to-merge label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11355143147/job/31583900588"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHWo0W_A",
                        "name": "Add ready-to-merge label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11355165445/job/31583966972"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHWo94TQ",
                        "name": "Add ready-to-merge label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11355217160/job/31584122957"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHWowTTQ",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11355143151/job/31583900493"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHWo0XIA",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11355165454/job/31583967008"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHWo94QQ",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11355217148/job/31584122945"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHWowTqQ",
                        "name": "Fix style issues from lint",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11355143143/job/31583900585"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHWo0XJg",
                        "name": "Fix style issues from lint",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11355165453/job/31583967014"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHWo94bw",
                        "name": "Fix style issues from lint",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11355217147/job/31584122991"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHWWXNDA",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11349161605/job/31564614924"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHWWXMJw",
                        "name": "build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11349161587/job/31564614695"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHWWXBhg",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11349160667/job/31564611974"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHWWXK3w",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11349160711/job/31564614367"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHWWXN3Q",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11349161594/job/31564615133"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHWowVGQ",
                        "name": "Add delegated label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11355143147/job/31583900953"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHWo0X_g",
                        "name": "Add delegated label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11355165445/job/31583967230"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHWo95aQ",
                        "name": "Add delegated label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11355217160/job/31584123241"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHWWXDwA",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11349160667/job/31564612544"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHWWXInA",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11349160711/job/31564613788"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHWWXMHA",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11349161594/job/31564614684"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHWWXFvQ",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11349160667/job/31564613053"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHWWXFfQ",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11349160711/job/31564612989"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHWWXH0Q",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11349160667/job/31564613585"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHWXzVYQ",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11349160711/job/31566124385"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHWWX9Yw",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/31564627299"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHWWZa3g",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=17543&login=leanprover-community&repository=mathlib4"
                      },
                      {
                        "__typename": "StatusContext",
                        "id": "SC_kwDOFcwZ1c8AAAAHcuH1WQ",
                        "context": "bors",
                        "state": "SUCCESS",
                        "targetUrl": "https://mathlib-bors-ca18eefec4cb.herokuapp.com/batches/6441",
                        "description": "Build succeeded"
                      }
                    ]
                  }
                }
              }
            }
          ]
        },
        "createdAt": "2024-10-08T15:44:00Z",
        "deletions": 817,
        "files": {
          "nodes": [
            {
              "path": "Mathlib/Algebra/Algebra/NonUnitalSubalgebra.lean",
              "additions": 75,
              "deletions": 68
            },
            {
              "path": "Mathlib/Algebra/Algebra/Subalgebra/Pointwise.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Algebra/Algebra/Tower.lean",
              "additions": 9,
              "deletions": 9
            },
            {
              "path": "Mathlib/Algebra/DirectLimit.lean",
              "additions": 8,
              "deletions": 10
            },
            {
              "path": "Mathlib/Algebra/Group/Subgroup/Basic.lean",
              "additions": 56,
              "deletions": 50
            },
            {
              "path": "Mathlib/Algebra/Group/Subgroup/Pointwise.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Algebra/Group/Submonoid/Basic.lean",
              "additions": 47,
              "deletions": 31
            },
            {
              "path": "Mathlib/Algebra/Group/Submonoid/Membership.lean",
              "additions": 14,
              "deletions": 21
            },
            {
              "path": "Mathlib/Algebra/Group/Submonoid/Operations.lean",
              "additions": 2,
              "deletions": 7
            },
            {
              "path": "Mathlib/Algebra/Group/Submonoid/Pointwise.lean",
              "additions": 5,
              "deletions": 5
            },
            {
              "path": "Mathlib/Algebra/Group/Subsemigroup/Basic.lean",
              "additions": 40,
              "deletions": 26
            },
            {
              "path": "Mathlib/Algebra/Group/Subsemigroup/Membership.lean",
              "additions": 3,
              "deletions": 3
            },
            {
              "path": "Mathlib/Algebra/Group/Subsemigroup/Operations.lean",
              "additions": 2,
              "deletions": 4
            },
            {
              "path": "Mathlib/Algebra/Lie/BaseChange.lean",
              "additions": 7,
              "deletions": 6
            },
            {
              "path": "Mathlib/Algebra/Lie/Character.lean",
              "additions": 3,
              "deletions": 3
            },
            {
              "path": "Mathlib/Algebra/Lie/IdealOperations.lean",
              "additions": 3,
              "deletions": 3
            },
            {
              "path": "Mathlib/Algebra/Lie/TraceForm.lean",
              "additions": 5,
              "deletions": 4
            },
            {
              "path": "Mathlib/Algebra/Lie/Weights/Chain.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Algebra/Lie/Weights/Killing.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Algebra/Module/Submodule/Bilinear.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Algebra/Module/Submodule/Pointwise.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Algebra/Order/Ring/Star.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Algebra/Order/Star/Basic.lean",
              "additions": 9,
              "deletions": 9
            },
            {
              "path": "Mathlib/Algebra/Ring/Subring/Basic.lean",
              "additions": 98,
              "deletions": 85
            },
            {
              "path": "Mathlib/Algebra/Ring/Subsemiring/Basic.lean",
              "additions": 65,
              "deletions": 56
            },
            {
              "path": "Mathlib/Algebra/RingQuot.lean",
              "additions": 3,
              "deletions": 3
            },
            {
              "path": "Mathlib/Algebra/Star/NonUnitalSubalgebra.lean",
              "additions": 10,
              "deletions": 6
            },
            {
              "path": "Mathlib/Algebra/Star/Subalgebra.lean",
              "additions": 54,
              "deletions": 42
            },
            {
              "path": "Mathlib/Analysis/CStarAlgebra/ContinuousFunctionalCalculus/Instances.lean",
              "additions": 4,
              "deletions": 4
            },
            {
              "path": "Mathlib/Analysis/Fourier/AddCircle.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Analysis/InnerProductSpace/StarOrder.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/FieldTheory/Finite/GaloisField.lean",
              "additions": 4,
              "deletions": 4
            },
            {
              "path": "Mathlib/GroupTheory/Coxeter/Basic.lean",
              "additions": 2,
              "deletions": 1
            },
            {
              "path": "Mathlib/GroupTheory/Nilpotent.lean",
              "additions": 4,
              "deletions": 3
            },
            {
              "path": "Mathlib/GroupTheory/Perm/ClosureSwap.lean",
              "additions": 2,
              "deletions": 1
            },
            {
              "path": "Mathlib/LinearAlgebra/CliffordAlgebra/Even.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/LinearAlgebra/FiniteSpan.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/LinearAlgebra/RootSystem/Defs.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/LinearAlgebra/Span.lean",
              "additions": 79,
              "deletions": 73
            },
            {
              "path": "Mathlib/LinearAlgebra/TensorProduct/RightExactness.lean",
              "additions": 6,
              "deletions": 6
            },
            {
              "path": "Mathlib/LinearAlgebra/TensorProduct/Tower.lean",
              "additions": 4,
              "deletions": 3
            },
            {
              "path": "Mathlib/NumberTheory/Cyclotomic/Basic.lean",
              "additions": 14,
              "deletions": 12
            },
            {
              "path": "Mathlib/NumberTheory/NumberField/CanonicalEmbedding/Basic.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/RingTheory/Adjoin/Basic.lean",
              "additions": 79,
              "deletions": 68
            },
            {
              "path": "Mathlib/RingTheory/Adjoin/Tower.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/RingTheory/DedekindDomain/Ideal.lean",
              "additions": 3,
              "deletions": 3
            },
            {
              "path": "Mathlib/RingTheory/Derivation/Basic.lean",
              "additions": 3,
              "deletions": 2
            },
            {
              "path": "Mathlib/RingTheory/EssentialFiniteness.lean",
              "additions": 7,
              "deletions": 7
            },
            {
              "path": "Mathlib/RingTheory/FinitePresentation.lean",
              "additions": 6,
              "deletions": 6
            },
            {
              "path": "Mathlib/RingTheory/FiniteType.lean",
              "additions": 12,
              "deletions": 12
            },
            {
              "path": "Mathlib/RingTheory/Finiteness.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/RingTheory/FractionalIdeal/Extended.lean",
              "additions": 6,
              "deletions": 5
            },
            {
              "path": "Mathlib/RingTheory/FractionalIdeal/Operations.lean",
              "additions": 6,
              "deletions": 6
            },
            {
              "path": "Mathlib/RingTheory/Ideal/Maps.lean",
              "additions": 3,
              "deletions": 3
            },
            {
              "path": "Mathlib/RingTheory/Ideal/Operations.lean",
              "additions": 6,
              "deletions": 6
            },
            {
              "path": "Mathlib/RingTheory/IntegralClosure/IsIntegralClosure/Basic.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/RingTheory/Kaehler/Basic.lean",
              "additions": 9,
              "deletions": 9
            },
            {
              "path": "Mathlib/RingTheory/Localization/Submodule.lean",
              "additions": 3,
              "deletions": 3
            },
            {
              "path": "Mathlib/RingTheory/MvPolynomial/Localization.lean",
              "additions": 3,
              "deletions": 3
            },
            {
              "path": "Mathlib/RingTheory/NonUnitalSubring/Basic.lean",
              "additions": 78,
              "deletions": 63
            },
            {
              "path": "Mathlib/RingTheory/NonUnitalSubsemiring/Basic.lean",
              "additions": 29,
              "deletions": 12
            },
            {
              "path": "Mathlib/RingTheory/Polynomial/Basic.lean",
              "additions": 8,
              "deletions": 8
            },
            {
              "path": "Mathlib/RingTheory/Polynomial/Bernstein.lean",
              "additions": 3,
              "deletions": 3
            },
            {
              "path": "Mathlib/RingTheory/TwoSidedIdeal/Operations.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Topology/Algebra/StarSubalgebra.lean",
              "additions": 4,
              "deletions": 7
            },
            {
              "path": "Mathlib/Topology/ContinuousMap/StarOrdered.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Topology/ContinuousMap/StoneWeierstrass.lean",
              "additions": 3,
              "deletions": 3
            }
          ]
        },
        "headRefName": "j-loreaux/induction-prime",
        "headRefOid": "217d8387b36ee893f3ae73d27ab52b33bc00107d",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c59-DM0",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
              "color": "06e039",
              "name": "ready-to-merge"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABViJjTQ",
              "color": "33DBEC",
              "name": "t-algebra"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABh1mAHA",
              "color": "6BEB7E",
              "name": "maintainer-merge"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABlkjS4g",
              "color": "0EFB96",
              "name": "tech debt"
            }
          ]
        },
        "latestReviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c6NT3K4",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "kbuzzard"
              },
              "submittedAt": "2024-10-15T22:16:12Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6MtYEg",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "b-mehta"
              },
              "submittedAt": "2024-10-10T15:17:01Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6MqFYI",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2024-10-10T10:41:44Z"
            }
          ]
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "UNKNOWN",
        "mergeable": "UNKNOWN",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 17543,
        "potentialMergeCommit": null,
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": "APPROVED",
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c6MXm7z",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2024-10-08T16:27:56Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6MXnIU",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2024-10-08T16:28:19Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6MiMxt",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "j-loreaux"
              },
              "submittedAt": "2024-10-09T17:27:53Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6MjE8n",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2024-10-09T18:55:17Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6MjHyM",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2024-10-09T18:57:26Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6Mkoz7",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "j-loreaux"
              },
              "submittedAt": "2024-10-09T22:03:38Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6MkpFD",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "j-loreaux"
              },
              "submittedAt": "2024-10-09T22:10:51Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6MkvQh",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2024-10-09T22:29:19Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6MmsOl",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "j-loreaux"
              },
              "submittedAt": "2024-10-10T04:55:35Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6MnKSP",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "j-loreaux"
              },
              "submittedAt": "2024-10-10T06:05:31Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6Mpxz2",
              "body": "",
              "state": "APPROVED",
              "author": {
                "login": "b-mehta"
              },
              "submittedAt": "2024-10-10T10:27:22Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6Mp_ds",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2024-10-10T10:35:05Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6MqB6y",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2024-10-10T10:38:29Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6MqFYI",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2024-10-10T10:41:44Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6MrXlL",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "j-loreaux"
              },
              "submittedAt": "2024-10-10T12:36:11Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6MrelG",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "b-mehta"
              },
              "submittedAt": "2024-10-10T12:47:36Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6MsKZy",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "j-loreaux"
              },
              "submittedAt": "2024-10-10T13:45:09Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6MsPAH",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "j-loreaux"
              },
              "submittedAt": "2024-10-10T13:47:59Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6MsPRl",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "b-mehta"
              },
              "submittedAt": "2024-10-10T13:48:13Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6MsijU",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "j-loreaux"
              },
              "submittedAt": "2024-10-10T14:03:53Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6MtYEg",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "b-mehta"
              },
              "submittedAt": "2024-10-10T15:17:01Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6NPj_9",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "j-loreaux"
              },
              "submittedAt": "2024-10-15T15:03:04Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6NPlIV",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "j-loreaux"
              },
              "submittedAt": "2024-10-15T15:04:42Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6NT1ff",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "kbuzzard"
              },
              "submittedAt": "2024-10-15T22:09:38Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6NT1_m",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "kbuzzard"
              },
              "submittedAt": "2024-10-15T22:11:33Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6NT3K4",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "kbuzzard"
              },
              "submittedAt": "2024-10-15T22:16:12Z"
            }
          ]
        },
        "reviewThreads": {
          "nodes": [
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5q0ojc",
                    "body": "I'm curious if you can drop the `(subset_closure hz)` here; I think it can be found by unification?",
                    "createdAt": "2024-10-08T16:27:56Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5q7MS1",
                    "body": "yes, it can.",
                    "createdAt": "2024-10-09T17:27:53Z",
                    "author": {
                      "login": "j-loreaux"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5q0oq0",
                    "body": "```suggestion\r\n    (mul_left : ∀ x hx y hy z hz, p x z hx hz → p y z hy hz → p (x * y) z (mul_mem hx hy) hz)\r\n    (mul_right : ∀ x hx y hy z hz, p z x hz hx → p z y hz hy → p z (x * y) hz (mul_mem hx hy))\r\n```",
                    "createdAt": "2024-10-08T16:28:19Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5q7vJ_",
                    "body": "This doesn't look like the standard indentation style to me:\r\n```suggestion\r\n  induction hy using adjoin_induction with\r\n  | mem z hz =>\r\n    induction hx using adjoin_induction with\r\n    | mem _ h => exact mem_mem _ h _ hz\r\n    | zero => exact zero_left _ _\r\n    | mul _ _ _ _ h₁ h₂ => exact mul_left _ _ _ _ _ _ h₁ h₂\r\n    | add _ _ _ _ h₁ h₂ => exact add_left _ _ _ _ _ _ h₁ h₂\r\n    | smul _ _ _ h => exact smul_left _ _ _ _ _ h\r\n  | zero => exact zero_right x hx\r\n  | mul _ _ _ _ h₁ h₂ => exact mul_right _ _ _ _ _ _ h₁ h₂\r\n  | add _ _ _ _ h₁ h₂ => exact add_right _ _ _ _ _ _ h₁ h₂\r\n  | smul _ _ _ h => exact smul_right _ _ _ _ _ h\r\n```",
                    "createdAt": "2024-10-09T18:55:17Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5q7w-S",
                    "body": "Is this the only \"weird\" induction principle? If so, I think an `example` after it showing how to use it would be a good idea.",
                    "createdAt": "2024-10-09T18:57:26Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5q8ssI",
                    "body": "Should `s` be explicit, do you think? This would allow the user to defer the proof of `closure s = ⊤` into the arms of the induction without creating a metavariable.",
                    "createdAt": "2024-10-09T22:03:38Z",
                    "author": {
                      "login": "j-loreaux"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5q8w6l",
                    "body": "What would the `example` look like if this were explicit?",
                    "createdAt": "2024-10-09T22:29:18Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5q-Dib",
                    "body": "`induction x using dense_induction s`",
                    "createdAt": "2024-10-10T04:55:35Z",
                    "author": {
                      "login": "j-loreaux"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5q-T7f",
                    "body": "I've made `s` explicit and added an example.",
                    "createdAt": "2024-10-10T06:05:31Z",
                    "author": {
                      "login": "j-loreaux"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5q8s3X",
                    "body": "```suggestion\r\n  | mem z hz => induction hx using closure_induction with\r\n    | mem _ h => exact mem _ h _ hz\r\n    | one => exact one_left _ (subset_closure hz)\r\n    | mul _ _ _ _ h₁ h₂ => exact mul_left _ _ _ _ _ _ h₁ h₂\r\n    | inv _ _ h => exact inv_left _ _ _ (subset_closure hz) h\r\n  | one => exact one_right x hx\r\n  | mul _ _ _ _ h₁ h₂ => exact mul_right _ _ _ _ _ hx h₁ h₂\r\n  | inv _ _ h => exact inv_right _ _ _ _ h\r\n```",
                    "createdAt": "2024-10-09T22:04:32Z",
                    "author": {
                      "login": "j-loreaux"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5q8s8t",
                    "body": "```suggestion\r\n  | mem z hz => induction hx using closure_induction with\r\n    | mem _ h => exact mem _ h _ hz\r\n    | one => exact one_left _ (subset_closure hz)\r\n    | mul _ _ _ _ h₁ h₂ => exact mul_left _ _ _ _ _ _ h₁ h₂\r\n  | one => exact one_right x hx\r\n  | mul _ _ _ _ h₁ h₂ => exact mul_right _ _ _ _ _ hx h₁ h₂\r\n```",
                    "createdAt": "2024-10-09T22:05:04Z",
                    "author": {
                      "login": "j-loreaux"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5q8tB-",
                    "body": "```suggestion\r\n  | mem z hz => induction hy using closure_induction with\r\n    | mem _ h => exact mem _ hz _ h\r\n    | mul _ _ _ _ h₁ h₂ => exact mul_right _ _ _ _ _ _ h₁ h₂\r\n  | mul _ _ _ _ h₁ h₂ => exact mul_left _ _ _ _ _ hy h₁ h₂\r\n```",
                    "createdAt": "2024-10-09T22:05:33Z",
                    "author": {
                      "login": "j-loreaux"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5q8tOV",
                    "body": "```suggestion\r\n  | mem z hz => induction hx using closure_induction with\r\n    | mem _ h => exact mem_mem _ h _ hz\r\n    | zero => exact zero_left _ _\r\n    | one => exact one_left _ _\r\n    | mul _ _ _ _ h₁ h₂ => exact mul_left _ _ _ _ _ _ h₁ h₂\r\n    | add _ _ _ _ h₁ h₂ => exact add_left _ _ _ _ _ _ h₁ h₂\r\n    | neg _ _ h => exact neg_left _ _ _ _ h\r\n  | zero => exact zero_right x hx\r\n  | one => exact one_right x hx\r\n  | mul _ _ _ _ h₁ h₂ => exact mul_right _ _ _ _ _ _ h₁ h₂\r\n  | add _ _ _ _ h₁ h₂ => exact add_right _ _ _ _ _ _ h₁ h₂\r\n  | neg _ _ h => exact neg_right _ _ _ _ h\r\n```",
                    "createdAt": "2024-10-09T22:06:21Z",
                    "author": {
                      "login": "j-loreaux"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5q8tUQ",
                    "body": "```suggestion\r\n      | mem x hx =>\r\n        induction hx using Submonoid.closure_induction with\r\n        | mem _ h => exact subset_closure h\r\n```",
                    "createdAt": "2024-10-09T22:06:56Z",
                    "author": {
                      "login": "j-loreaux"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5q8taG",
                    "body": "```suggestion\r\n  | mem z hz => induction hx using closure_induction with\r\n    | mem _ h => exact mem_mem _ h _ hz\r\n    | zero => exact zero_left _ _\r\n    | one => exact one_left _ _\r\n    | mul _ _ _ _ h₁ h₂ => exact mul_left _ _ _ _ _ _ h₁ h₂\r\n    | add _ _ _ _ h₁ h₂ => exact add_left _ _ _ _ _ _ h₁ h₂\r\n  | zero => exact zero_right x hx\r\n  | one => exact one_right x hx\r\n  | mul _ _ _ _ h₁ h₂ => exact mul_right _ _ _ _ _ _ h₁ h₂\r\n  | add _ _ _ _ h₁ h₂ => exact add_right _ _ _ _ _ _ h₁ h₂\r\n```",
                    "createdAt": "2024-10-09T22:07:31Z",
                    "author": {
                      "login": "j-loreaux"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5q8tfv",
                    "body": "```suggestion\r\n  | mem z hz => induction ha using adjoin_induction with\r\n    | mem _ h => exact mem_mem _ h _ hz\r\n    | algebraMap _ => exact algebraMap_left _ _ hz\r\n    | mul _ _ _ _ h₁ h₂ => exact mul_left _ _ _ _ _ _ h₁ h₂\r\n    | add _ _ _ _ h₁ h₂ => exact add_left _ _ _ _ _ _ h₁ h₂\r\n    | star _ _ h => exact star_left _ _ _ _ h\r\n  | algebraMap r =>\r\n    induction ha using adjoin_induction with\r\n    | mem _ h => exact algebraMap_right _ _ h\r\n    | algebraMap _ => exact algebraMap_both _ _\r\n    | mul _ _ _ _ h₁ h₂ => exact mul_left _ _ _ _ _ _ h₁ h₂\r\n    | add _ _ _ _ h₁ h₂ => exact add_left _ _ _ _ _ _ h₁ h₂\r\n    | star _ _ h => exact star_left _ _ _ _ h\r\n  | mul _ _ _ _ h₁ h₂ => exact mul_right _ _ _ _ _ _ h₁ h₂\r\n  | add _ _ _ _ h₁ h₂ => exact add_right _ _ _ _ _ _ h₁ h₂\r\n  | star _ _ h => exact star_right _ _ _ _ h\r\n```",
                    "createdAt": "2024-10-09T22:08:04Z",
                    "author": {
                      "login": "j-loreaux"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5q8tlW",
                    "body": "```suggestion\r\n  | mem z hz => induction ha using span_induction with\r\n    | mem _ h => exact mem_mem _ h _ hz\r\n    | zero => exact zero_left _ _\r\n    | add _ _ _ _ h₁ h₂ => exact add_left _ _ _ _ _ _ h₁ h₂\r\n    | smul _ _ _ h => exact smul_left _ _ _ _ _ h\r\n  | zero => exact zero_right a ha\r\n  | add _ _ _ _ h₁ h₂ => exact add_right _ _ _ _ _ _ h₁ h₂\r\n  | smul _ _ _ h => exact smul_right _ _ _ _ _ h\r\n```",
                    "createdAt": "2024-10-09T22:08:35Z",
                    "author": {
                      "login": "j-loreaux"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5q8trh",
                    "body": "```suggestion\r\n  | mem z hz => induction hx using adjoin_induction with\r\n    | mem _ h => exact mem_mem _ h _ hz\r\n    | algebraMap _ => exact algebraMap_left _ _ hz\r\n    | mul _ _ _ _ h₁ h₂ => exact mul_left _ _ _ _ _ _ h₁ h₂\r\n    | add _ _ _ _ h₁ h₂ => exact add_left _ _ _ _ _ _ h₁ h₂\r\n  | algebraMap r =>\r\n    induction hx using adjoin_induction with\r\n    | mem _ h => exact algebraMap_right _ _ h\r\n    | algebraMap _ => exact algebraMap_both _ _\r\n    | mul _ _ _ _ h₁ h₂ => exact mul_left _ _ _ _ _ _ h₁ h₂\r\n    | add _ _ _ _ h₁ h₂ => exact add_left _ _ _ _ _ _ h₁ h₂\r\n  | mul _ _ _ _ h₁ h₂ => exact mul_right _ _ _ _ _ _ h₁ h₂\r\n  | add _ _ _ _ h₁ h₂ => exact add_right _ _ _ _ _ _ h₁ h₂\r\n```",
                    "createdAt": "2024-10-09T22:09:09Z",
                    "author": {
                      "login": "j-loreaux"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5q8tyL",
                    "body": "```suggestion\r\n    | mem x hx => exact mem x hx\r\n    | zero => exact zero\r\n    | add x y hx hy h₁ h₂ => exact add _ _ h₁ h₂\r\n    | neg x hx h => exact neg _ h\r\n    | mul x y hx hy h₁ h₂ => exact mul _ _ h₁ h₂\r\n```",
                    "createdAt": "2024-10-09T22:09:45Z",
                    "author": {
                      "login": "j-loreaux"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5q8t1y",
                    "body": "```suggestion\r\n  | mem z hz => induction hx using closure_induction with\r\n    | mem _ h => exact mem_mem _ h _ hz\r\n    | zero => exact zero_left _ _\r\n    | mul _ _ _ _ h₁ h₂ => exact mul_left _ _ _ _ _ _ h₁ h₂\r\n    | add _ _ _ _ h₁ h₂ => exact add_left _ _ _ _ _ _ h₁ h₂\r\n    | neg _ _ h => exact neg_left _ _ _ _ h\r\n  | zero => exact zero_right x hx\r\n  | mul _ _ _ _ h₁ h₂ => exact mul_right _ _ _ _ _ _ h₁ h₂\r\n  | add _ _ _ _ h₁ h₂ => exact add_right _ _ _ _ _ _ h₁ h₂\r\n  | neg _ _ h => exact neg_right _ _ _ _ h\r\n```",
                    "createdAt": "2024-10-09T22:10:08Z",
                    "author": {
                      "login": "j-loreaux"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5q8t7P",
                    "body": "```suggestion\r\n  | mem z hz => induction hx using closure_induction with\r\n    | mem _ h => exact mem_mem _ h _ hz\r\n    | zero => exact zero_left _ _\r\n    | mul _ _ _ _ h₁ h₂ => exact mul_left _ _ _ _ _ _ h₁ h₂\r\n    | add _ _ _ _ h₁ h₂ => exact add_left _ _ _ _ _ _ h₁ h₂\r\n  | zero => exact zero_right x hx\r\n  | mul _ _ _ _ h₁ h₂ => exact mul_right _ _ _ _ _ _ h₁ h₂\r\n  | add _ _ _ _ h₁ h₂ => exact add_right _ _ _ _ _ _ h₁ h₂\r\n```",
                    "createdAt": "2024-10-09T22:10:39Z",
                    "author": {
                      "login": "j-loreaux"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5q_5uZ",
                    "body": "```suggestion\r\n    dense_induction _ hs hmul fun y => by rw [one_mul, h1, one_mul]\r\n```\r\nuntested, but this looks like the sort of explicit insertion that isn't really doing anything?",
                    "createdAt": "2024-10-10T10:14:34Z",
                    "author": {
                      "login": "b-mehta"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5rArrX",
                    "body": "I thought the same thing. It's necessary, but I'm not sure why. Note that it was already there.",
                    "createdAt": "2024-10-10T12:36:11Z",
                    "author": {
                      "login": "j-loreaux"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5rAwAU",
                    "body": "Maybe it forces the elaboration order to change, which turns out to be necessary here",
                    "createdAt": "2024-10-10T12:47:36Z",
                    "author": {
                      "login": "b-mehta"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5q_87g",
                    "body": "It's the proliferation of underscores in things like this that I was also worried about - we go from writing `mul` as the term to writing `(fun _ _ _ _ ↦ mul _ _)` instead. Like I say, I don't think this is a huge problem, but it can make these induction lemmas more awkward to use in practice: here and in the proof of `closureCommMonoidOfComm` (which is the next thing in the git diff in this file), it's quite a bit less clear what's going on. In fact, for the not-particularly-similar case of finite sums, I wanted to introduce a non-dependent version for exactly this reason (Finset.sum_nbij), which turned out to be really practical. \r\n\r\nAgain though, I won't block on this, the change in this PR is clearly overall positive.",
                    "createdAt": "2024-10-10T10:23:03Z",
                    "author": {
                      "login": "b-mehta"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5rAB5X",
                    "body": "I think the idea is that you probably should be using `induction _ using closure_induction` instead of `refine closure_induction ..` in which case the underscore proliferation is less bad; but @j-loreaux deliberately did not make that change in this PR to reduce the overall diff.",
                    "createdAt": "2024-10-10T10:35:05Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5rBJw9",
                    "body": "Indeed, for the most part I didn't switch to `induction _ using closure_induction` in order to keep the diff small (Although in the case of `closureCommMonoidOfComm`, it's just that it was low in the hierarchy and I didn't realize yet that those should be switched for readability).\r\n\r\nAs for `iSup_induction`, part of the problem is that it's *not* dependent, when it should be. Note that there is `iSup_induction'` which *is* dependent. I didn't do the replacement for those lemmas as well because I was trying to keep the changes pared down to the `closure/adjoin/span_induction` lemmas.\r\n\r\nHere is a proof of the dependent version of `iSup_induction`. Note that using `key` to deal with the motive is essential, but this is not surprising because `⨆ i, S i` isn't defeq to `closure s` for some `s`. That's essentially why `iSup_induction` is it's own lemma in the first place.\r\n```lean\r\ntheorem iSup_induction {ι : Sort*} (S : ι → Submonoid M) {C : (x : M) → (x ∈ ⨆ i, S i) → Prop}\r\n    (mem : ∀ (i) (x) (hx : x ∈ S i), C x (mem_iSup_of_mem i hx)) (one : C 1 (one_mem _))\r\n    (mul : ∀ x hx y hy, C x hx → C y hy → C (x * y) (mul_mem hx hy))\r\n    {x : M} (hx : x ∈ ⨆ i, S i) : C x hx := by\r\n  have key {y} : y ∈ ⨆ i, S i ↔ y ∈ closure (⋃ i, (S i : Set M)) := by simp only [iSup_eq_closure]\r\n  show C x (key.mpr (key.mp hx))\r\n  refine closure_induction ?_ ?_ ?_ (key.mp hx)\r\n  all_goals simpa [← key, forall_comm (β := ι)]\r\n```",
                    "createdAt": "2024-10-10T13:45:09Z",
                    "author": {
                      "login": "j-loreaux"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5rBLzD",
                    "body": "Indeed, `iSup_induction` isn't dependent, but that's exactly the situation I'm worried about: when you need to prove something which is not dependent, but all you have access to is a dependent induction",
                    "createdAt": "2024-10-10T13:48:13Z",
                    "author": {
                      "login": "b-mehta"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5rBTQz",
                    "body": "But why do we want the non-dependent versions at all? They don't `elab_as_elim` properly because Lean can't compute the motive.",
                    "createdAt": "2024-10-10T14:03:52Z",
                    "author": {
                      "login": "j-loreaux"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5rB5cw",
                    "body": "Oh, for applications where you want to prove something that's not an induction lemma, you just want to use the induction lemma to help you get there. In these cases, the motive could be (and is often) non-dependent",
                    "createdAt": "2024-10-10T15:17:01Z",
                    "author": {
                      "login": "b-mehta"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5rXrS1",
                    "body": "We discussed this and agreed that this was not an issue for *induction principles*, but for other lemmas it can be quite useful to have non-dependent versions.",
                    "createdAt": "2024-10-15T15:04:42Z",
                    "author": {
                      "login": "j-loreaux"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5rAC3l",
                    "body": "I claim we should probably deprecate this; it was only useful in the absence of the dependent principle.",
                    "createdAt": "2024-10-10T10:38:29Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5rXqoC",
                    "body": "I left one of these (for `StarSubalgebra`) around without deprecation because it was being used in a way where it was actually necessary (i.e., using the non-subtype version would have been very painful).",
                    "createdAt": "2024-10-15T15:03:04Z",
                    "author": {
                      "login": "j-loreaux"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5rAEgF",
                    "body": "To me it seems a little inconsistent that the induction principle / motive takes `a b ha hb`, but the `add` and `smul` induction hypotheses takes `a ha b hb`. Maybe this is too annoying to change in this PR, but it would be make them consistent one way or the other eventually.\r\n\r\nI slightly favor the `a b ha hb` ordering, since in context this is used as `a b ha hb iha ihb` which is a little more consistent than `a ha b hb iha ihb`. `a ha iha b hb ihb` would of course also be an option.",
                    "createdAt": "2024-10-10T10:41:44Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5rBLsy",
                    "body": "oof, yeah, that's going to be an annoying change, but I can do it if we agree on the ordering. Are you okay with `a b ha hb iha ihb`?",
                    "createdAt": "2024-10-10T13:47:59Z",
                    "author": {
                      "login": "j-loreaux"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5raXOf",
                    "body": "I don't want to hold up the merging of this PR (I'm currently ploughing through it all just to check there's nothing which stands out as weird) but could you have used `-` instead of `_hx` here?",
                    "createdAt": "2024-10-15T22:09:38Z",
                    "author": {
                      "login": "kbuzzard"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5raXka",
                    "body": "?",
                    "createdAt": "2024-10-15T22:11:33Z",
                    "author": {
                      "login": "kbuzzard"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5raYYf",
                    "body": "Why are we having to use `(hx :=` here and in a few other places? Is this evidence that some implicit argument should be explicit? This PR certainly wasn't scared to add many new `_` inputs! (due to its nature).",
                    "createdAt": "2024-10-15T22:16:12Z",
                    "author": {
                      "login": "kbuzzard"
                    }
                  }
                ]
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjg5MjA1OTg=",
              "login": "j-loreaux"
            },
            {
              "id": "MDQ6VXNlcjI5OTU5MjI2",
              "login": "b-mehta"
            },
            {
              "id": "MDQ6VXNlcjQyNTI2MA==",
              "login": "eric-wieser"
            },
            {
              "id": "MDQ6VXNlcjMxODY3ODI3",
              "login": "kbuzzard"
            },
            {
              "id": "U_kgDOBcsTTQ",
              "login": "leanprover-community-bot-assistant"
            }
          ]
        },
        "state": "CLOSED",
        "statusCheckRollup": {
          "contexts": {
            "nodes": [
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHWowTrA",
                "name": "Add ready-to-merge label",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11355143147/job/31583900588"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHWo0W_A",
                "name": "Add ready-to-merge label",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11355165445/job/31583966972"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHWo94TQ",
                "name": "Add ready-to-merge label",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11355217160/job/31584122957"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHWowTTQ",
                "name": "Ping maintainers on Zulip",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11355143151/job/31583900493"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHWo0XIA",
                "name": "Ping maintainers on Zulip",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11355165454/job/31583967008"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHWo94QQ",
                "name": "Ping maintainers on Zulip",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11355217148/job/31584122945"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHWowTqQ",
                "name": "Fix style issues from lint",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11355143143/job/31583900585"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHWo0XJg",
                "name": "Fix style issues from lint",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11355165453/job/31583967014"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHWo94bw",
                "name": "Fix style issues from lint",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11355217147/job/31584122991"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHWWXNDA",
                "name": "label-and-report-new-contributor",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11349161605/job/31564614924"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHWWXMJw",
                "name": "build",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11349161587/job/31564614695"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHWWXBhg",
                "name": "Cancel Previous Runs (CI)",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11349160667/job/31564611974"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHWWXK3w",
                "name": "Cancel Previous Runs (CI)",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11349160711/job/31564614367"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHWWXN3Q",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11349161594/job/31564615133"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHWowVGQ",
                "name": "Add delegated label",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11355143147/job/31583900953"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHWo0X_g",
                "name": "Add delegated label",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11355165445/job/31583967230"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHWo95aQ",
                "name": "Add delegated label",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11355217160/job/31584123241"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHWWXDwA",
                "name": "Lint style (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11349160667/job/31564612544"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHWWXInA",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11349160711/job/31564613788"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHWWXMHA",
                "name": "Check all files imported",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11349161594/job/31564614684"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHWWXFvQ",
                "name": "Build (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11349160667/job/31564613053"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHWWXFfQ",
                "name": "Build",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11349160711/job/31564612989"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHWWXH0Q",
                "name": "Post-CI job (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11349160667/job/31564613585"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHWXzVYQ",
                "name": "Post-CI job",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11349160711/job/31566124385"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHWWX9Yw",
                "name": "New Contributor Check",
                "conclusion": "NEUTRAL",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/31564627299"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHWWZa3g",
                "name": "Summary",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=17543&login=leanprover-community&repository=mathlib4"
              },
              {
                "__typename": "StatusContext",
                "id": "SC_kwDOFcwZ1c8AAAAHcuH1WQ",
                "context": "bors",
                "state": "SUCCESS",
                "targetUrl": "https://mathlib-bors-ca18eefec4cb.herokuapp.com/batches/6441",
                "description": "Build succeeded"
              }
            ]
          }
        },
        "title": "[Merged by Bors] - refactor: migrate to dependent induction lemmas",
        "updatedAt": "2024-10-15T23:21:23Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/17543",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6ZZbWwzwAAAANjyzku",
              "createdAt": "2024-10-08T15:44:00Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABVDlAdQ",
                "name": "RFC"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6ZZbWwzwAAAANjyzk6",
              "createdAt": "2024-10-08T15:44:00Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABlkjS4g",
                "name": "tech debt"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6PEELS",
              "createdAt": "2024-10-08T15:44:44Z",
              "body": "### PR summary [217d8387b3](https://github.com/leanprover-community/mathlib4/pull/17543/commits/217d8387b36ee893f3ae73d27ab52b33bc00107d)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ adjoin_induction_subtype`\n`++++++------ closure_induction'`\n`+++---++++---- closure_induction₂`\n`+++----+++++---- closure_induction`\n`++-++-- adjoin_induction`\n`++-- dense_induction`\n`++--- adjoin_induction'`\n`-++--+ adjoin_induction₂`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6ZZbWwzwAAAANjy3uh",
              "createdAt": "2024-10-08T15:45:12Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABViJjTQ",
                "name": "t-algebra"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6MXm7z",
              "createdAt": "2024-10-08T16:27:56Z",
              "body": "",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6MXnIU",
              "createdAt": "2024-10-08T16:28:19Z",
              "body": "",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6PK5ud",
              "createdAt": "2024-10-09T10:58:08Z",
              "body": "It's great that we add these dependent induction lemmas, but I think it's sometimes nice to also have access to the non-dependent ones, since they're sometimes easier to work with. For example, when it's necessary to specify the motive to a dependent induction in the case where the application is not dependent, you often end up with things looking syntactically really confusing. I'd personally slightly prefer keeping the old ones around, under other names. But if it turns out that adjusting mathlib to your change is easy enough, then it's probably fine...",
              "author": {
                "login": "b-mehta"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6PLwxK",
              "createdAt": "2024-10-09T12:46:14Z",
              "body": "You should never have to specify the motive explicitly though? Usually when you do, this is because:\r\n* The induction principle was not dependent, and should have been\r\n* The induction principle has the arguments in the wrong order\r\n* `elab_as_elim` is missing from the theorem\r\n* You tried to use `apply` with an `elab_as_elim`",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6PMbsa",
              "createdAt": "2024-10-09T13:47:32Z",
              "body": "> You should never have to specify the motive explicitly though? \r\n\r\nNote that the current state of this PR has exactly one adaptation going from the non-dependent to the dependent one, in `dense_induction`. And the motive is specified explicitly here, in a non-dependent way: exactly the situation I'm worried about. \r\nIt's possible that this is an isolated example, but I just want to flag it because it does get annoying in practice.\r\n",
              "author": {
                "login": "b-mehta"
              }
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6POk2p",
              "createdAt": "2024-10-09T18:05:33Z",
              "body": "@b-mehta I *think* that `refine` can get confused, but that's primarily because `dense_induction` is weird in that the term on which we are doing induction (namely `x`) doesn't reference `s` in it's type, so it's a bit underdetermined. Nevertheless, I think Eric is right, so long as you actually use the `induction` tactic. For instance, this works for `Subsemigroup.dense_induction`.\r\n```lean\r\ntheorem dense_induction {p : M → Prop} {s : Set M} (hs : closure s = ⊤)\r\n    (mem : ∀ x ∈ s, p x)\r\n    (mul : ∀ x y, p x → p y → p (x * y))\r\n    (x : M) : p x := by\r\n  induction hs.symm ▸ mem_top x using closure_induction with\r\n  | mem x hx => exact mem x hx\r\n  | mul x _ y _ hpx hpy => exact mul x y hpx hpy\r\n```\r\n\r\nOverall, while it was a lot of work to go through changing things, it wasn't terrible. This `dense_induction` issue hardly ever came up (at least in terms of *new* places where I needed to specify the motive). You're welcome to have a look and let me know what you think.\r\n",
              "author": {
                "login": "j-loreaux"
              }
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6ZZbWwzwAAAANk33D1",
              "createdAt": "2024-10-09T18:14:02Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABVDlAdQ",
                "name": "RFC"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6PPLQc",
              "createdAt": "2024-10-09T18:54:08Z",
              "body": "I think all the primed induction principles should be kept as deprecated aliases, to not break downstream code that already uses them.",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6MjE8n",
              "createdAt": "2024-10-09T18:55:16Z",
              "body": "",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6MjHyM",
              "createdAt": "2024-10-09T18:57:26Z",
              "body": "",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6PQo3-",
              "createdAt": "2024-10-09T21:58:53Z",
              "body": "> I think all the primed induction principles should be kept as deprecated aliases, to not break downstream code that already uses them.\r\n\r\nI considered that, but I think it might be really confusing if we *only* swap the names on some of them.",
              "author": {
                "login": "j-loreaux"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6MkpFD",
              "createdAt": "2024-10-09T22:04:32Z",
              "body": "",
              "author": {
                "login": "j-loreaux"
              }
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6PQw7C",
              "createdAt": "2024-10-09T22:28:34Z",
              "body": "> > I think all the primed induction principles should be kept as deprecated aliases, to not break downstream code that already uses them.\r\n> \r\n> I considered that, but I think it might be really confusing if we _only_ swap the names on some of them.\r\n\r\nI'm not suggesting we swap the names, but that both the primed and unprimed versions refer to the dependent ones. That way people don't have to guess to work out that they just need to remove the `'`.",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6PS9uR",
              "createdAt": "2024-10-10T06:05:56Z",
              "body": "> I'm not suggesting we swap the names, but that both the primed and unprimed versions refer to the dependent ones. That way people don't have to guess to work out that they just need to remove the `'`\r\n\r\nDone",
              "author": {
                "login": "j-loreaux"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6Mpxz2",
              "createdAt": "2024-10-10T10:14:34Z",
              "body": "",
              "author": {
                "login": "b-mehta"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6MqB6y",
              "createdAt": "2024-10-10T10:38:29Z",
              "body": "",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6MqFYI",
              "createdAt": "2024-10-10T10:41:44Z",
              "body": "",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6ZZbWwzwAAAANoaPqv",
              "createdAt": "2024-10-14T13:51:07Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6ZZbWwzwAAAANp0PZo",
              "createdAt": "2024-10-15T15:43:50Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6P7tCx",
              "createdAt": "2024-10-15T19:02:24Z",
              "body": "maintainer merge",
              "author": {
                "login": "b-mehta"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6P7tNB",
              "createdAt": "2024-10-15T19:02:45Z",
              "body": "🚀 Pull request has been placed on the maintainer queue by b-mehta.",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6ZZbWwzwAAAANp-KB9",
              "createdAt": "2024-10-15T19:02:45Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABh1mAHA",
                "name": "maintainer-merge"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6NT1ff",
              "createdAt": "2024-10-15T22:09:38Z",
              "body": "",
              "author": {
                "login": "kbuzzard"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6NT1_m",
              "createdAt": "2024-10-15T22:11:33Z",
              "body": "",
              "author": {
                "login": "kbuzzard"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6NT3K4",
              "createdAt": "2024-10-15T22:16:12Z",
              "body": "",
              "author": {
                "login": "kbuzzard"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6P9iHf",
              "createdAt": "2024-10-15T22:22:16Z",
              "body": "Given that this PR is huge, I thoroughly approve of the changes, my questions above are quite superficial and probably easily answered, and this might pick up merge conflicts if we leave it too long, my instinct is to merge first and ask questions later.\r\n\r\nbors merge",
              "author": {
                "login": "kbuzzard"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6ZZbWwzwAAAANqHtUV",
              "createdAt": "2024-10-15T22:22:26Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
                "name": "ready-to-merge"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6P9wel",
              "createdAt": "2024-10-15T23:21:19Z",
              "body": "Pull request successfully merged into master.\n\nBuild succeeded:\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/11355371773/job/31584562609)\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/11355371773/job/31584562939)",
              "author": {
                "login": "mathlib-bors"
              }
            },
            {
              "__typename": "RenamedTitleEvent"
            },
            {
              "__typename": "ClosedEvent",
              "id": "CE_lADOFcwZ1c6ZZbWwzwAAAANqJQnG",
              "createdAt": "2024-10-15T23:21:20Z"
            },
            {
              "__typename": "HeadRefDeletedEvent",
              "id": "HRDE_lADOFcwZ1c6ZZbWwzwAAAANqJQq5",
              "createdAt": "2024-10-15T23:21:23Z"
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5hFIPY",
              "createdAt": "2024-10-29T23:55:03Z",
              "source": {
                "id": "PR_kwDOFcwZ1c6AS1QZ",
                "title": "feat(FieldTheory): minimal polynomials determine an algebraic extension (Isaacs 1980)",
                "url": "https://github.com/leanprover-community/mathlib4/pull/18412"
              }
            },
            {
              "__typename": "ReferencedEvent"
            }
          ]
        }
      }
    }
  }
}
