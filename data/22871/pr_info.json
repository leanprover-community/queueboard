{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 117,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "loefflerd"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "Rename `norm_mul` of NormedRing and cousins to `norm_mul_le`, and `norm_mul'` of `NormedDivisionRing` to `norm_mul`. Split off from #22842.\r\n\r\n---\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nFor details on the \"pull request lifecycle\" in mathlib, please see:\r\nhttps://leanprover-community.github.io/contribute/index.html\r\n\r\nIn particular, note that most reviewers will only notice your PR\r\nif it passes the continuous integration checks.\r\nPlease ask for help on https://leanprover.zulipchat.com if needed.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nIf you are moving or deleting declarations, please include these lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nMoves:\r\n- Vector.* -> List.Vector.*\r\n- ...\r\n\r\nDeletions:\r\n- Nat.bit1_add_bit1\r\n- ...\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n\r\n-->\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 29,
        "closed": false,
        "closedAt": null,
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c6h-oD6",
              "body": "### PR summary [9e78c83161](https://github.com/leanprover-community/mathlib4/pull/22871/commits/9e78c8316177759785fbf15cfad05c1ef69e0f59)\n\n<details><summary>\n\n#### Import changes for modified files\n\n</summary>\n\nDependency changes\n\n| File | Base Count | Head Count | Change |\n| --- | --- | --- | --- |\n| Mathlib.Analysis.Normed.Field.Basic | 1204 | 1203 | -1 (-0.08%) |\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n|<details><summary>12 files</summary> `Mathlib.Analysis.Asymptotics.Defs` `Mathlib.Analysis.Asymptotics.Lemmas` `Mathlib.Analysis.Meromorphic.Divisor.Basic` `Mathlib.Analysis.Normed.Field.Basic` `Mathlib.Analysis.Normed.Field.Instances` `Mathlib.Analysis.Normed.Field.Ultra` `Mathlib.Analysis.Normed.Group.NullSubmodule` `Mathlib.Analysis.Normed.MulAction` `Mathlib.Analysis.Normed.Operator.ContinuousLinearMap` `Mathlib.Order.Filter.ZeroAndBoundedAtFilter` `Mathlib.Topology.Algebra.InfiniteSum.Field` `Mathlib.Topology.MetricSpace.CauSeqFilter`</details>|-1|\n\n</details>\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ instance : NormedSpace ùïú C‚ÇÄ(Œ±, Œ≤)`\n`+ toSeminormedRing`\n`- instance : NormedSpace ùïú C‚ÇÄ(Œ±, Œ≤) where norm_smul_le k f := (norm_smul_le k f.toBCF :)`\n`- toSemiNormedRing`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>\n\n---\n\n<details><summary>No changes to technical debt.</summary>\n\nYou can run this locally as\n```\n./scripts/technical-debt-metrics.sh pr_summary\n```\n* The `relative` value is the weighted *sum* of the differences with weight given by the *inverse* of the current value of the statistic.\n* The `absolute` value is the `relative` value divided by the total sum of the inverses of the current values (i.e. the weighted *average* of the differences).\n</details>\n",
              "createdAt": "2025-03-12T11:23:58Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6iArx9",
              "body": "I made the rename (de-priming `NormedDivisionRing.norm_mul'`) that we discussed on the other PR. Ready for review again.",
              "createdAt": "2025-03-12T14:28:55Z",
              "author": {
                "login": "loefflerd"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "9e78c8316177759785fbf15cfad05c1ef69e0f59",
                "additions": 117,
                "deletions": 144,
                "committedDate": "2025-03-12T15:47:10Z",
                "author": {
                  "name": "David Loeffler",
                  "email": "d.loeffler.01@cantab.net"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI_5pAlg",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13815657009/job/38648037526"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI_5pICA",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13815657832/job/38648039432"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI_5pHAA",
                        "name": "post-or-update-summary-comment",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13815657823/job/38648039168"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI_5uOmQ",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13815657011/job/38648123033"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI_5pHKQ",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13815657820/job/38648039209"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI_5uRKA",
                        "name": "Build",
                        "conclusion": null,
                        "status": "IN_PROGRESS",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13815657011/job/38648123688"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI_5o-Kg",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13815657009/job/38648036906"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI_5pJmQ",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13815657820/job/38648039833"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI_5pDHg",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13815657009/job/38648038174"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI_5puBw",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/38648049159"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAI_5rmgg",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=22871&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            }
          ]
        },
        "createdAt": "2025-03-12T11:22:42Z",
        "deletions": 144,
        "files": {
          "nodes": [
            {
              "path": "Mathlib/Analysis/CStarAlgebra/CStarMatrix.lean",
              "additions": 4,
              "deletions": 3
            },
            {
              "path": "Mathlib/Analysis/CStarAlgebra/Matrix.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Analysis/CStarAlgebra/lpSpace.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Analysis/Complex/Basic.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Analysis/LocallyConvex/BalancedCoreHull.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Analysis/Matrix.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Analysis/Normed/Algebra/Spectrum.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Analysis/Normed/Algebra/TrivSqZeroExt.lean",
              "additions": 12,
              "deletions": 13
            },
            {
              "path": "Mathlib/Analysis/Normed/Algebra/Unitization.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Analysis/Normed/Algebra/UnitizationL1.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Analysis/Normed/Field/Basic.lean",
              "additions": 8,
              "deletions": 12
            },
            {
              "path": "Mathlib/Analysis/Normed/Field/Lemmas.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Analysis/Normed/Group/Quotient.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Analysis/Normed/Lp/lpSpace.lean",
              "additions": 4,
              "deletions": 7
            },
            {
              "path": "Mathlib/Analysis/Normed/Module/Basic.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Analysis/Normed/Module/Completion.lean",
              "additions": 4,
              "deletions": 7
            },
            {
              "path": "Mathlib/Analysis/Normed/Order/Basic.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Analysis/Normed/Ring/Basic.lean",
              "additions": 32,
              "deletions": 33
            },
            {
              "path": "Mathlib/Analysis/Normed/Ring/Lemmas.lean",
              "additions": 12,
              "deletions": 15
            },
            {
              "path": "Mathlib/Analysis/NormedSpace/OperatorNorm/Basic.lean",
              "additions": 3,
              "deletions": 10
            },
            {
              "path": "Mathlib/Analysis/NormedSpace/OperatorNorm/NormedSpace.lean",
              "additions": 3,
              "deletions": 2
            },
            {
              "path": "Mathlib/Analysis/Quaternion.lean",
              "additions": 1,
              "deletions": 3
            },
            {
              "path": "Mathlib/NumberTheory/Padics/PadicIntegers.lean",
              "additions": 4,
              "deletions": 5
            },
            {
              "path": "Mathlib/NumberTheory/Padics/PadicNumbers.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Topology/Algebra/Valued/NormedValued.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Topology/ContinuousMap/Bounded/Basic.lean",
              "additions": 8,
              "deletions": 12
            },
            {
              "path": "Mathlib/Topology/ContinuousMap/Compact.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Topology/ContinuousMap/ContinuousMapZero.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Topology/ContinuousMap/ZeroAtInfty.lean",
              "additions": 4,
              "deletions": 4
            }
          ]
        },
        "headRefName": "DL_norm_mul_rename",
        "headRefOid": "9e78c8316177759785fbf15cfad05c1ef69e0f59",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c6OU8oW",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c8AAAABViJeVg",
              "color": "33DBEC",
              "name": "t-analysis"
            }
          ]
        },
        "latestReviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c6fquhe",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2025-03-12T14:41:35Z"
            }
          ]
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "BLOCKED",
        "mergeable": "MERGEABLE",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 22871,
        "potentialMergeCommit": {
          "oid": "d7076fc01e04beb45730179d26d8cb4d9bf3dfd7"
        },
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": null,
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c6fopy5",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2025-03-12T12:12:37Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6foyHy",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "loefflerd"
              },
              "submittedAt": "2025-03-12T12:23:05Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6fpRmX",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2025-03-12T12:59:20Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6fpTSY",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2025-03-12T13:01:36Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6fqsVY",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2025-03-12T14:39:03Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6fqth3",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2025-03-12T14:40:27Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6fquhe",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2025-03-12T14:41:35Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6frBJw",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "loefflerd"
              },
              "submittedAt": "2025-03-12T15:06:19Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6frWWd",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "loefflerd"
              },
              "submittedAt": "2025-03-12T15:25:40Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6frZiY",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "loefflerd"
              },
              "submittedAt": "2025-03-12T15:29:02Z"
            }
          ]
        },
        "reviewThreads": {
          "nodes": [
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c52sb8U",
                    "body": "I'd be tempted to leave this in place, so that `nnnorm_mul_le` and `norm_mul_le` are in the same namespace. You can `protected` the field to prevent issues with clashes.",
                    "createdAt": "2025-03-12T12:12:37Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c52sg5M",
                    "body": "Currently `NonUnitalSeminormedRing.norm_mul_le` (the structure field) is `export`ed, hence visible in the root namespace without opening anything. So is there really a benefit in providing a root-level lemma that repeats the definition?",
                    "createdAt": "2025-03-12T12:23:04Z",
                    "author": {
                      "login": "loefflerd"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c52syQj",
                    "body": ">  So is there really a benefit in providing a root-level lemma that repeats the definition?\r\n\r\nWe do this in a handful of other places. Not doing it leads to things like `exact?`, `show_term` etc including the namespace, which is usually not what we want.",
                    "createdAt": "2025-03-12T12:59:20Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c52szIv",
                    "body": "I think this is especially confusing since the `norm_mul_le` field is duplicated between typeclasses, and so to a casual reader its not necessarily obvious which one is the preferred one. (in the past I tried to switch things to use `extends`, but I ran out of time and gave up)",
                    "createdAt": "2025-03-12T13:01:35Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c52ti8x",
                    "body": "I think this is just\r\n```suggestion\r\ntheorem nnnorm_mul_le (a b : Œ±) : ‚Äña * b‚Äñ‚Çä ‚â§ ‚Äña‚Äñ‚Çä * ‚Äñb‚Äñ‚Çä := norm_mul_le a b\r\n```\r\nthe `simpa` is not doing anything.",
                    "createdAt": "2025-03-12T14:39:03Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c52tjqj",
                    "body": "does\r\n```suggestion\r\ninstance toNormedAlgebra : NormedAlgebra ùïú (E ‚ÜíL[ùïú] E) where\r\n```\r\nwork?\r\n\r\nEither way, this change feels unrelated to the rest of the PR.",
                    "createdAt": "2025-03-12T14:40:26Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c52tvWs",
                    "body": "It doesn't work, but `where norm_smul_le := norm_smul_le` works. It's not closely related, it's just a minor golf I noticed while working on the immediately adjacent line. ",
                    "createdAt": "2025-03-12T15:00:27Z",
                    "author": {
                      "login": "loefflerd"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c52t7d4",
                    "body": "I found a nicer formulation which re-uses fields from earlier instances rather than re-declaring them. Hope that's OK.",
                    "createdAt": "2025-03-12T15:25:40Z",
                    "author": {
                      "login": "loefflerd"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c52tkRu",
                    "body": "```suggestion\r\n  __ := PadicInt.instCommRing\r\n```\r\nI don't think `_` is guaranteed to do anything useful here.\r\n\r\n(also, this seems kind of out of scope for this change)",
                    "createdAt": "2025-03-12T14:41:35Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c52twMg",
                    "body": "Well, it avoids having to hard-code the name of the earlier instance; I thought it was considered better style to avoid explicitly referring to the names of instances where possible. I've seen style like\r\n```\r\n__ : CommRing ‚Ñ§_[p] := inferInstance\r\n```\r\nor \r\n```\r\n__ := inferInstanceAs (CommRing ‚Ñ§_[p])\r\n```\r\nelsewhere in the codebase.",
                    "createdAt": "2025-03-12T15:02:12Z",
                    "author": {
                      "login": "loefflerd"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c52t9S8",
                    "body": "I went with your suggestion, it's not a point worth debating here.",
                    "createdAt": "2025-03-12T15:29:02Z",
                    "author": {
                      "login": "loefflerd"
                    }
                  }
                ]
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjM0Mzk2ODg=",
              "login": "loefflerd"
            },
            {
              "id": "MDQ6VXNlcjQyNTI2MA==",
              "login": "eric-wieser"
            }
          ]
        },
        "state": "OPEN",
        "statusCheckRollup": {
          "contexts": {
            "nodes": [
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAI_5pAlg",
                "name": "Lint style (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13815657009/job/38648037526"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAI_5pICA",
                "name": "label-and-report-new-contributor",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13815657832/job/38648039432"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAI_5pHAA",
                "name": "post-or-update-summary-comment",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13815657823/job/38648039168"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAI_5uOmQ",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13815657011/job/38648123033"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAI_5pHKQ",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13815657820/job/38648039209"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAI_5uRKA",
                "name": "Build",
                "conclusion": null,
                "status": "IN_PROGRESS",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13815657011/job/38648123688"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAI_5o-Kg",
                "name": "Build (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13815657009/job/38648036906"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAI_5pJmQ",
                "name": "Check all files imported",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13815657820/job/38648039833"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAI_5pDHg",
                "name": "Post-CI job (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13815657009/job/38648038174"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAI_5puBw",
                "name": "New Contributor Check",
                "conclusion": "NEUTRAL",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/38648049159"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAI_5rmgg",
                "name": "Summary",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=22871&login=leanprover-community&repository=mathlib4"
              }
            ]
          }
        },
        "title": "chore (Analysis/Normed): rename `norm_mul` to `norm_mul_le`",
        "updatedAt": "2025-03-12T15:48:53Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/22871",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6h-oD6",
              "createdAt": "2025-03-12T11:23:58Z",
              "body": "### PR summary [9e78c83161](https://github.com/leanprover-community/mathlib4/pull/22871/commits/9e78c8316177759785fbf15cfad05c1ef69e0f59)\n\n<details><summary>\n\n#### Import changes for modified files\n\n</summary>\n\nDependency changes\n\n| File | Base Count | Head Count | Change |\n| --- | --- | --- | --- |\n| Mathlib.Analysis.Normed.Field.Basic | 1204 | 1203 | -1 (-0.08%) |\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n|<details><summary>12 files</summary> `Mathlib.Analysis.Asymptotics.Defs` `Mathlib.Analysis.Asymptotics.Lemmas` `Mathlib.Analysis.Meromorphic.Divisor.Basic` `Mathlib.Analysis.Normed.Field.Basic` `Mathlib.Analysis.Normed.Field.Instances` `Mathlib.Analysis.Normed.Field.Ultra` `Mathlib.Analysis.Normed.Group.NullSubmodule` `Mathlib.Analysis.Normed.MulAction` `Mathlib.Analysis.Normed.Operator.ContinuousLinearMap` `Mathlib.Order.Filter.ZeroAndBoundedAtFilter` `Mathlib.Topology.Algebra.InfiniteSum.Field` `Mathlib.Topology.MetricSpace.CauSeqFilter`</details>|-1|\n\n</details>\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ instance : NormedSpace ùïú C‚ÇÄ(Œ±, Œ≤)`\n`+ toSeminormedRing`\n`- instance : NormedSpace ùïú C‚ÇÄ(Œ±, Œ≤) where norm_smul_le k f := (norm_smul_le k f.toBCF :)`\n`- toSemiNormedRing`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>\n\n---\n\n<details><summary>No changes to technical debt.</summary>\n\nYou can run this locally as\n```\n./scripts/technical-debt-metrics.sh pr_summary\n```\n* The `relative` value is the weighted *sum* of the differences with weight given by the *inverse* of the current value of the statistic.\n* The `absolute` value is the `relative` value divided by the total sum of the inverses of the current values (i.e. the weighted *average* of the differences).\n</details>\n",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6fopy5",
              "createdAt": "2025-03-12T12:12:37Z",
              "body": "",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6tqmiqzwAAAAPkNE9x",
              "createdAt": "2025-03-12T13:11:37Z"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6iArx9",
              "createdAt": "2025-03-12T14:28:55Z",
              "body": "I made the rename (de-priming `NormedDivisionRing.norm_mul'`) that we discussed on the other PR. Ready for review again.",
              "author": {
                "login": "loefflerd"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6tqmiqzwAAAAPkTMIR",
              "createdAt": "2025-03-12T14:36:41Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABViJeVg",
                "name": "t-analysis"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6fqsVY",
              "createdAt": "2025-03-12T14:39:03Z",
              "body": "",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6fqth3",
              "createdAt": "2025-03-12T14:40:26Z",
              "body": "",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6fquhe",
              "createdAt": "2025-03-12T14:41:35Z",
              "body": "",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "9e78c8316177759785fbf15cfad05c1ef69e0f59"
              }
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6tqmiqzwAAAAPkYMiD",
              "createdAt": "2025-03-12T15:47:50Z"
            }
          ]
        }
      }
    }
  }
}
