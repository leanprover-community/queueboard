{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 119,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "digama0"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "The `compileSizeOf` addition inadvertently broke the `tryToCompileAllInductives` test (which is disabled on master because it is too expensive); if you actually run it there are hundreds of failures (`421 / 1134` success), where it should only have failed a small handful of times. The reason for the failure is that compiling a `T.sizeOf` function requires `U.rec` and `U.sizeOf` if the definition of inductive type `T` uses `U`, so now we process them recursively.\r\n\r\nIn addition there are a few more fixes for completeness:\r\n\r\n* The `UInt8`, `UInt16` etc types were generating invalid IR because `Expr.proj` doesn't work on them. We can work around this by using `UInt8.val` etc instead.\r\n* The `Float` type needs a further hack because `Float.val` also fails; we implement this and `Float.mk` using `unsafeCast`, which is fine since they are conversions to and from `floatSpec.float` which is an opaque type.\r\n* `instSizeOfName` and `Name.sizeOf` were manually implemented as `noncomputable` so they need a `compile_def%`.\r\n\r\nAll together this unblocks essentially all the inductive types in `Lean`, and now the `tryToCompileAllInductives` test has 1131 / 1134 successes, where the three failures are `Acc.below`, `HEq` and `Acc` which are all expected because large-eliminating Props are not implemented. (We could special case implement these like with `UInt8` et al, but these represent a general class of unimplemented inductives while `UInt8` is special cased by the code generator.)\r\n\r\n\r\n---\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n-->\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 2,
        "closed": true,
        "closedAt": "2023-06-23T06:08:11Z",
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c5e01ne",
              "body": "LGTM, but I haven't really interacted with this code before, so maybe @gebner might also want to take a look.",
              "createdAt": "2023-06-14T10:15:28Z",
              "author": {
                "login": "fpvandoorn"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5flh1A",
              "body": "Yeah, this is much better than manually figuring out which inductives to compile.\r\n\r\nbors r+",
              "createdAt": "2023-06-23T04:45:14Z",
              "author": {
                "login": "gebner"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5flu-c",
              "body": "Pull request successfully merged into master.\n\n  Build succeeded!\n\n  The publicly hosted instance of bors-ng is deprecated and will go away soon.\n\n  If you want to self-host your own instance, [instructions are here][instructions].\n  For more help, visit [the forum].\n\n  If you want to switch to GitHub's built-in merge queue, visit [their help page][gh].\n\n  [instructions]: https://github.com/bors-ng/bors-ng#how-to-set-up-your-own-real-instance\n  [the forum]: https://forum.bors.tech\n  [gh]: https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/configuring-pull-request-merges/managing-a-merge-queue\n\n\n\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/5352932129/jobs/9708331944)\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/5352932129/jobs/9708331808)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/5352932129/jobs/9708331861)",
              "createdAt": "2023-06-23T06:08:10Z",
              "author": {
                "login": "bors"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "74277da5929470100ba7d0bc51e112b2caff802a",
                "additions": 119,
                "deletions": 45,
                "committedDate": "2023-06-14T20:52:03Z",
                "author": {
                  "name": "Mario Carneiro",
                  "email": "di.gama@gmail.com"
                },
                "statusCheckRollup": null
              }
            }
          ]
        },
        "createdAt": "2023-06-14T07:45:40Z",
        "deletions": 45,
        "files": {
          "nodes": [
            {
              "path": "Mathlib/Util/CompileInductive.lean",
              "additions": 116,
              "deletions": 42
            },
            {
              "path": "test/CompileInductive.lean",
              "additions": 3,
              "deletions": 3
            }
          ]
        },
        "headRefName": "compile_more",
        "headRefOid": "74277da5929470100ba7d0bc51e112b2caff802a",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c5S9gym",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
              "color": "06e039",
              "name": "ready-to-merge"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABKAKYew",
              "color": "33DBEC",
              "name": "t-meta"
            }
          ]
        },
        "latestReviews": {
          "nodes": []
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "UNKNOWN",
        "mergeable": "UNKNOWN",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 5039,
        "potentialMergeCommit": null,
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": null,
        "reviewRequests": {
          "nodes": [
            {
              "requestedReviewer": {
                "id": "MDQ6VXNlcjMxMzkyOQ==",
                "login": "gebner"
              }
            }
          ]
        },
        "reviews": {
          "nodes": []
        },
        "reviewThreads": {
          "nodes": []
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjg2ODU4OA==",
              "login": "digama0"
            },
            {
              "id": "MDQ6VXNlcjczNzYwMTI=",
              "login": "fpvandoorn"
            },
            {
              "id": "MDQ6VXNlcjMxMzkyOQ==",
              "login": "gebner"
            },
            {
              "id": "MDQ6VXNlcjQ3Nzk1Ng==",
              "login": "kim-em"
            }
          ]
        },
        "state": "CLOSED",
        "statusCheckRollup": null,
        "title": "[Merged by Bors] - fix: compile inductives recursively",
        "updatedAt": "2023-06-23T06:08:16Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/5039",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5orpWLzwAAAAI3ucLX",
              "createdAt": "2023-06-14T07:46:17Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5e01ne",
              "createdAt": "2023-06-14T10:15:28Z",
              "body": "LGTM, but I haven't really interacted with this code before, so maybe @gebner might also want to take a look.",
              "author": {
                "login": "fpvandoorn"
              }
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "74277da5929470100ba7d0bc51e112b2caff802a"
              }
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c5orpWLzwAAAAI4OSDh",
              "createdAt": "2023-06-14T20:52:10Z"
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5orpWLzwAAAAI7dIa3",
              "createdAt": "2023-06-21T04:00:00Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKAKYew",
                "name": "t-meta"
              }
            },
            {
              "__typename": "ReviewRequestedEvent",
              "id": "RRE_lADOFcwZ1c5orpWLzwAAAAI7dK84",
              "createdAt": "2023-06-21T04:02:20Z",
              "requestedReviewer": {
                "id": "MDQ6VXNlcjMxMzkyOQ==",
                "login": "gebner"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5flh1A",
              "createdAt": "2023-06-23T04:45:14Z",
              "body": "Yeah, this is much better than manually figuring out which inductives to compile.\r\n\r\nbors r+",
              "author": {
                "login": "gebner"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5orpWLzwAAAAI9A1jC",
              "createdAt": "2023-06-23T04:45:27Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
                "name": "ready-to-merge"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5orpWLzwAAAAI9A1kP",
              "createdAt": "2023-06-23T04:45:29Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5flu-c",
              "createdAt": "2023-06-23T06:08:10Z",
              "body": "Pull request successfully merged into master.\n\n  Build succeeded!\n\n  The publicly hosted instance of bors-ng is deprecated and will go away soon.\n\n  If you want to self-host your own instance, [instructions are here][instructions].\n  For more help, visit [the forum].\n\n  If you want to switch to GitHub's built-in merge queue, visit [their help page][gh].\n\n  [instructions]: https://github.com/bors-ng/bors-ng#how-to-set-up-your-own-real-instance\n  [the forum]: https://forum.bors.tech\n  [gh]: https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/configuring-pull-request-merges/managing-a-merge-queue\n\n\n\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/5352932129/jobs/9708331944)\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/5352932129/jobs/9708331808)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/5352932129/jobs/9708331861)",
              "author": {
                "login": "bors"
              }
            },
            {
              "__typename": "RenamedTitleEvent"
            },
            {
              "__typename": "ClosedEvent",
              "id": "CE_lADOFcwZ1c5orpWLzwAAAAI9CY4p",
              "createdAt": "2023-06-23T06:08:12Z"
            },
            {
              "__typename": "HeadRefDeletedEvent",
              "id": "HRDE_lADOFcwZ1c5orpWLzwAAAAI9CY9c",
              "createdAt": "2023-06-23T06:08:16Z"
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "ReferencedEvent"
            }
          ]
        }
      }
    }
  }
}
