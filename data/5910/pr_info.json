{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 211,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "sgouezel"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "The notion of Bochner integral of a function taking values in a normed space `E` requires that `E` is complete. This means that whenever we write down an integral, the term contains the assertion that `E` is complete.\r\n\r\nIn this PR, we remove the completeness requirement from the definition, using the junk value `0` when the space is not complete. Mathematically this does not make any difference, as all reasonable applications will be with a complete `E`. But it means that terms involving integrals become a little bit simpler and that completeness will not have to be checked by the system when applying a bunch of basic lemmas on integrals.\r\n\r\n---\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n-->\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 13,
        "closed": true,
        "closedAt": "2023-07-17T04:23:36Z",
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c5hka2m",
              "body": "Which definition makes more sense: zero for a non-complete codomain or zero if the limit does not exist?",
              "createdAt": "2023-07-16T01:04:25Z",
              "author": {
                "login": "urkud"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5hk9Uf",
              "body": "I don't think mathematically any definition outside of complete targets makes sense, so the goal is to find some definition that minimizes side conditions in as many common lemmas as possible. For this goal, taking integral zero when the target is not complete looks like a good compromise: with this, lemmas like `integral_add` and friends don't need completeness of the target -- while this would not be true with the other definition: if `f` and `g` are integrable (in the sense that their norm is integrable), and `f` is a limit of simple functions with converging integrals while this is not the case for `g`, then this is not the case either of `f + g` and you would get `∫ f + g = 0` while `∫ f + ∫ g = ∫ f` is nonzero.\r\n\r\nSo I'd rather stay with the current definition in the PR.",
              "createdAt": "2023-07-16T12:58:03Z",
              "author": {
                "login": "sgouezel"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5hl3IM",
              "body": "Thanks! I think that we can merge it without waiting till `mathlib` is open for refactors: all the old lemmas are here with the same or weaker TC assumptions.\r\nbors merge",
              "createdAt": "2023-07-17T03:07:35Z",
              "author": {
                "login": "urkud"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5hmBRQ",
              "body": "Pull request successfully merged into master.\n\n  Build succeeded!\n\n  The publicly hosted instance of bors-ng is deprecated and will go away soon.\n\n  If you want to self-host your own instance, [instructions are here][instructions].\n  For more help, visit [the forum].\n\n  If you want to switch to GitHub's built-in merge queue, visit [their help page][gh].\n\n  [instructions]: https://github.com/bors-ng/bors-ng#how-to-set-up-your-own-real-instance\n  [the forum]: https://forum.bors.tech\n  [gh]: https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/configuring-pull-request-merges/managing-a-merge-queue\n\n\n\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/5571583622/jobs/10176752658)\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/5571583622/jobs/10176752723)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/5571583622/jobs/10176752778)",
              "createdAt": "2023-07-17T04:23:35Z",
              "author": {
                "login": "bors"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "3eb23333358a7f70ef3b96be6dc7045a365d0216",
                "additions": 257,
                "deletions": 205,
                "committedDate": "2023-07-14T11:39:30Z",
                "author": {
                  "name": "sgouezel",
                  "email": "sebastien.gouezel@univ-rennes1.fr"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "04253927eb9ab4cf5205e05335cd59f71bde0039",
                "additions": 4,
                "deletions": 3,
                "committedDate": "2023-07-14T11:54:22Z",
                "author": {
                  "name": "sgouezel",
                  "email": "sebastien.gouezel@univ-rennes1.fr"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "439aa6a8afaa512cfe4f75bb072ce80486b9fd3a",
                "additions": 1,
                "deletions": 1,
                "committedDate": "2023-07-14T12:21:30Z",
                "author": {
                  "name": "sgouezel",
                  "email": "sebastien.gouezel@univ-rennes1.fr"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "f0ecadc8a809b349bac82bcfd1da226fdabb665b",
                "additions": 1,
                "deletions": 1,
                "committedDate": "2023-07-14T12:50:54Z",
                "author": {
                  "name": "sgouezel",
                  "email": "sebastien.gouezel@univ-rennes1.fr"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "13436bad06a1ad0982a38ee6bf804668b16bd8bc",
                "additions": 2,
                "deletions": 2,
                "committedDate": "2023-07-14T13:11:45Z",
                "author": {
                  "name": "sgouezel",
                  "email": "sebastien.gouezel@univ-rennes1.fr"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "71658e22c9ee460e43c2ee7e3ddd713ce4bcddcc",
                "additions": 1,
                "deletions": 1,
                "committedDate": "2023-07-14T13:30:08Z",
                "author": {
                  "name": "sgouezel",
                  "email": "sebastien.gouezel@univ-rennes1.fr"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "5648953fabb1293da879f44df436c9bd70fb0596",
                "additions": 27,
                "deletions": 25,
                "committedDate": "2023-07-14T16:48:20Z",
                "author": {
                  "name": "sgouezel",
                  "email": "sebastien.gouezel@univ-rennes1.fr"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "ba15b5e2e48572510fd4646258efa705caa9cdc8",
                "additions": 1,
                "deletions": 1,
                "committedDate": "2023-07-14T17:07:24Z",
                "author": {
                  "name": "sgouezel",
                  "email": "sebastien.gouezel@univ-rennes1.fr"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "c4b9dac7280393a0c980528fd561793e2d80ee17",
                "additions": 0,
                "deletions": 2,
                "committedDate": "2023-07-14T17:14:31Z",
                "author": {
                  "name": "sgouezel",
                  "email": "sebastien.gouezel@univ-rennes1.fr"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "6ae17f97ee3eb63dff7a94ee25fb3980befed106",
                "additions": 103,
                "deletions": 102,
                "committedDate": "2023-07-14T18:33:11Z",
                "author": {
                  "name": "sgouezel",
                  "email": "sebastien.gouezel@univ-rennes1.fr"
                },
                "statusCheckRollup": null
              }
            }
          ]
        },
        "createdAt": "2023-07-14T18:33:40Z",
        "deletions": 157,
        "files": {
          "nodes": [
            {
              "path": "Mathlib/Analysis/Convolution.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Analysis/Fourier/FourierTransform.lean",
              "additions": 3,
              "deletions": 5
            },
            {
              "path": "Mathlib/Analysis/Fourier/RiemannLebesgueLemma.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Analysis/SpecialFunctions/Gamma/Beta.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Analysis/SpecialFunctions/Gaussian.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/MeasureTheory/Integral/Bochner.lean",
              "additions": 181,
              "deletions": 126
            },
            {
              "path": "Mathlib/MeasureTheory/Integral/CircleTransform.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/MeasureTheory/Integral/SetIntegral.lean",
              "additions": 8,
              "deletions": 7
            },
            {
              "path": "Mathlib/MeasureTheory/Measure/Lebesgue/Integral.lean",
              "additions": 3,
              "deletions": 3
            },
            {
              "path": "Mathlib/MeasureTheory/Measure/ProbabilityMeasure.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Probability/IdentDistrib.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Probability/Kernel/Basic.lean",
              "additions": 5,
              "deletions": 5
            },
            {
              "path": "Mathlib/Probability/Martingale/Convergence.lean",
              "additions": 2,
              "deletions": 2
            }
          ]
        },
        "headRefName": "SG_integral",
        "headRefOid": "6ae17f97ee3eb63dff7a94ee25fb3980befed106",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c5Vi3nw",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
              "color": "06e039",
              "name": "ready-to-merge"
            }
          ]
        },
        "latestReviews": {
          "nodes": []
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "UNKNOWN",
        "mergeable": "UNKNOWN",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 5910,
        "potentialMergeCommit": null,
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": null,
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": []
        },
        "reviewThreads": {
          "nodes": []
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjEwODE4NDM0",
              "login": "sgouezel"
            },
            {
              "id": "MDQ6VXNlcjE4ODgxMw==",
              "login": "urkud"
            }
          ]
        },
        "state": "CLOSED",
        "statusCheckRollup": null,
        "title": "[Merged by Bors] - feat(MeasureTheory.Integral.Bochner): drop completeness requirement from the definition",
        "updatedAt": "2023-07-17T04:23:40Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/5910",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "3eb23333358a7f70ef3b96be6dc7045a365d0216"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "04253927eb9ab4cf5205e05335cd59f71bde0039"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "439aa6a8afaa512cfe4f75bb072ce80486b9fd3a"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "f0ecadc8a809b349bac82bcfd1da226fdabb665b"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "13436bad06a1ad0982a38ee6bf804668b16bd8bc"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "71658e22c9ee460e43c2ee7e3ddd713ce4bcddcc"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "5648953fabb1293da879f44df436c9bd70fb0596"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "ba15b5e2e48572510fd4646258efa705caa9cdc8"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "c4b9dac7280393a0c980528fd561793e2d80ee17"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "6ae17f97ee3eb63dff7a94ee25fb3980befed106"
              }
            },
            {
              "__typename": "RenamedTitleEvent"
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5rm1QKzwAAAAJJpw1h",
              "createdAt": "2023-07-14T20:27:05Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5hka2m",
              "createdAt": "2023-07-16T01:04:25Z",
              "body": "Which definition makes more sense: zero for a non-complete codomain or zero if the limit does not exist?",
              "author": {
                "login": "urkud"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5hk9Uf",
              "createdAt": "2023-07-16T12:58:03Z",
              "body": "I don't think mathematically any definition outside of complete targets makes sense, so the goal is to find some definition that minimizes side conditions in as many common lemmas as possible. For this goal, taking integral zero when the target is not complete looks like a good compromise: with this, lemmas like `integral_add` and friends don't need completeness of the target -- while this would not be true with the other definition: if `f` and `g` are integrable (in the sense that their norm is integrable), and `f` is a limit of simple functions with converging integrals while this is not the case for `g`, then this is not the case either of `f + g` and you would get `∫ f + g = 0` while `∫ f + ∫ g = ∫ f` is nonzero.\r\n\r\nSo I'd rather stay with the current definition in the PR.",
              "author": {
                "login": "sgouezel"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5hl3IM",
              "createdAt": "2023-07-17T03:07:35Z",
              "body": "Thanks! I think that we can merge it without waiting till `mathlib` is open for refactors: all the old lemmas are here with the same or weaker TC assumptions.\r\nbors merge",
              "author": {
                "login": "urkud"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5rm1QKzwAAAAJKEELb",
              "createdAt": "2023-07-17T03:07:47Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
                "name": "ready-to-merge"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5rm1QKzwAAAAJKEEMF",
              "createdAt": "2023-07-17T03:07:48Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5hmBRQ",
              "createdAt": "2023-07-17T04:23:35Z",
              "body": "Pull request successfully merged into master.\n\n  Build succeeded!\n\n  The publicly hosted instance of bors-ng is deprecated and will go away soon.\n\n  If you want to self-host your own instance, [instructions are here][instructions].\n  For more help, visit [the forum].\n\n  If you want to switch to GitHub's built-in merge queue, visit [their help page][gh].\n\n  [instructions]: https://github.com/bors-ng/bors-ng#how-to-set-up-your-own-real-instance\n  [the forum]: https://forum.bors.tech\n  [gh]: https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/configuring-pull-request-merges/managing-a-merge-queue\n\n\n\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/5571583622/jobs/10176752658)\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/5571583622/jobs/10176752723)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/5571583622/jobs/10176752778)",
              "author": {
                "login": "bors"
              }
            },
            {
              "__typename": "RenamedTitleEvent"
            },
            {
              "__typename": "ClosedEvent",
              "id": "CE_lADOFcwZ1c5rm1QKzwAAAAJKFOeB",
              "createdAt": "2023-07-17T04:23:37Z"
            },
            {
              "__typename": "HeadRefDeletedEvent",
              "id": "HRDE_lADOFcwZ1c5rm1QKzwAAAAJKFOiX",
              "createdAt": "2023-07-17T04:23:40Z"
            },
            {
              "__typename": "ReferencedEvent"
            }
          ]
        }
      }
    }
  }
}
