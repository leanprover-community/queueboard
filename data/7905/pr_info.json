{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 111,
        "assignees": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjIxMTY1NzA=",
              "login": "Vierkantor"
            }
          ]
        },
        "author": {
          "login": "FR-vdash-bot"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "This eliminates `(fun a ↦ β) α` in the type when applying a `FunLike`.\r\n\r\n\r\n---\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n-->\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n\r\n[Zulip](https://leanprover.zulipchat.com/#narrow/stream/144837-PR-reviews/topic/.237905.20instance.20for.20non-dependent.20.60FunLike.60/near/398658194)\r\n",
        "changedFiles": 87,
        "closed": true,
        "closedAt": "2023-11-15T22:36:11Z",
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c5qHzua",
              "body": "!bench",
              "createdAt": "2023-10-26T05:19:17Z",
              "author": {
                "login": "FR-vdash-bot"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5qH8dl",
              "body": "Here are the [benchmark results](http://speed.lean-fro.org/mathlib4/run-detail/abc28065-9262-40f5-a91c-567242ab43a5) for commit 4d6319bf965c6ac93f2e85ccfd1c8b4c73264de0.\nThere were [significant changes](http://speed.lean-fro.org/mathlib4/compare/a4a5dfe6-788e-440a-934c-867f09d2ec4c/to/abc28065-9262-40f5-a91c-567242ab43a5) against commit bf077b111ca30b6793deafddf07fd8949cb92a3a:\n```diff\n  Benchmark                                                    Metric             Change\n  ======================================================================================\n+ build                                                        linting             -6.2%\n+ build                                                        tactic execution    -5.1%\n+ lint                                                         instructions        -6.1%\n+ ~Mathlib.Algebra.Category.ModuleCat.ChangeOfRings            instructions        -8.5%\n+ ~Mathlib.Algebra.Category.Ring.Constructions                 instructions       -38.4%\n+ ~Mathlib.Algebra.DirectLimit                                 instructions       -19.6%\n+ ~Mathlib.Algebra.Homology.ModuleCat                          instructions       -32.2%\n+ ~Mathlib.Algebra.Jordan.Basic                                instructions        -5.9%\n+ ~Mathlib.Algebra.Lie.Weights.Basic                           instructions       -12.6%\n+ ~Mathlib.AlgebraicGeometry.EllipticCurve.Point               instructions        -4.5%\n+ ~Mathlib.AlgebraicGeometry.Morphisms.QuasiSeparated          instructions       -19.6%\n+ ~Mathlib.AlgebraicGeometry.Morphisms.RingHomProperties       instructions        -7.1%\n+ ~Mathlib.AlgebraicGeometry.ProjectiveSpectrum.Scheme         instructions        -7.1%\n+ ~Mathlib.AlgebraicGeometry.Properties                        instructions        -9.2%\n+ ~Mathlib.AlgebraicGeometry.Spec                              instructions       -11.5%\n+ ~Mathlib.Analysis.NormedSpace.Multilinear                    instructions        -1.8%\n+ ~Mathlib.Analysis.NormedSpace.OperatorNorm                   instructions        -2.0%\n+ ~Mathlib.CategoryTheory.Abelian.InjectiveResolution          instructions        -1.6%\n+ ~Mathlib.CategoryTheory.LiftingProperties.Adjunction         instructions       -22.3%\n+ ~Mathlib.CategoryTheory.Monoidal.Internal.Module             instructions        -6.8%\n+ ~Mathlib.Combinatorics.HalesJewett                           instructions       -83.1%\n+ ~Mathlib.FieldTheory.AbelRuffini                             instructions        -6.1%\n+ ~Mathlib.Geometry.Manifold.Algebra.LeftInvariantDerivation   instructions        -4.2%\n- ~Mathlib.Geometry.Manifold.VectorBundle.SmoothSection        instructions       153.3%\n+ ~Mathlib.Geometry.RingedSpace.PresheafedSpace.Gluing         instructions        -3.5%\n+ ~Mathlib.GroupTheory.HNNExtension                            instructions        -7.0%\n+ ~Mathlib.LinearAlgebra.CliffordAlgebra.Contraction           instructions        -8.2%\n+ ~Mathlib.LinearAlgebra.CliffordAlgebra.Even                  instructions       -13.6%\n+ ~Mathlib.LinearAlgebra.DFinsupp                              instructions       -12.2%\n+ ~Mathlib.LinearAlgebra.Dual                                  instructions        -4.0%\n+ ~Mathlib.LinearAlgebra.FreeModule.PID                        instructions       -50.9%\n+ ~Mathlib.LinearAlgebra.Multilinear.Basic                     instructions        -9.9%\n+ ~Mathlib.MeasureTheory.Integral.SetToL1                      instructions        -5.0%\n+ ~Mathlib.NumberTheory.NumberField.Units                      instructions        -3.6%\n+ ~Mathlib.RepresentationTheory.Character                      instructions       -28.9%\n+ ~Mathlib.RepresentationTheory.GroupCohomology.Resolution     instructions       -56.1%\n+ ~Mathlib.RingTheory.DedekindDomain.AdicValuation             instructions       -24.1%\n+ ~Mathlib.RingTheory.IsTensorProduct                          instructions        -9.3%\n+ ~Mathlib.RingTheory.Kaehler                                  instructions        -2.9%\n+ ~Mathlib.RingTheory.PowerSeries.Basic                        instructions       -12.4%\n+ ~Mathlib.RingTheory.RootsOfUnity.Basic                       instructions        -6.1%\n+ ~Mathlib.RingTheory.Trace                                    instructions        -6.5%\n```",
              "createdAt": "2023-10-26T06:04:30Z",
              "author": {
                "login": "leanprover-bot"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5qIj4y",
              "body": "!bench",
              "createdAt": "2023-10-26T08:14:36Z",
              "author": {
                "login": "FR-vdash-bot"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5qIwgP",
              "body": "Here are the [benchmark results](http://speed.lean-fro.org/mathlib4/run-detail/ee9bd47a-357a-49c9-9133-dfb0a5066845) for commit 18d65c828c1a0e44c50456e0f3b32dfa34e187c0.\nThere were [significant changes](http://speed.lean-fro.org/mathlib4/compare/a4a5dfe6-788e-440a-934c-867f09d2ec4c/to/ee9bd47a-357a-49c9-9133-dfb0a5066845) against commit bf077b111ca30b6793deafddf07fd8949cb92a3a:\n```diff\n  Benchmark                                                    Metric             Change\n  ======================================================================================\n+ build                                                        linting             -6.7%\n+ build                                                        tactic execution    -5.4%\n+ lint                                                         instructions        -6.1%\n+ ~Mathlib.Algebra.Category.ModuleCat.ChangeOfRings            instructions        -8.5%\n+ ~Mathlib.Algebra.Category.Ring.Constructions                 instructions       -38.4%\n+ ~Mathlib.Algebra.DirectLimit                                 instructions       -19.6%\n+ ~Mathlib.Algebra.Homology.ModuleCat                          instructions       -32.1%\n+ ~Mathlib.Algebra.Jordan.Basic                                instructions        -5.8%\n+ ~Mathlib.Algebra.Lie.Weights.Basic                           instructions       -12.6%\n+ ~Mathlib.AlgebraicGeometry.EllipticCurve.Point               instructions        -4.5%\n+ ~Mathlib.AlgebraicGeometry.Morphisms.QuasiSeparated          instructions       -19.6%\n+ ~Mathlib.AlgebraicGeometry.Morphisms.RingHomProperties       instructions        -7.1%\n+ ~Mathlib.AlgebraicGeometry.ProjectiveSpectrum.Scheme         instructions        -7.1%\n+ ~Mathlib.AlgebraicGeometry.Properties                        instructions        -9.2%\n+ ~Mathlib.AlgebraicGeometry.Spec                              instructions       -11.5%\n+ ~Mathlib.Analysis.NormedSpace.OperatorNorm                   instructions        -2.0%\n+ ~Mathlib.CategoryTheory.Abelian.InjectiveResolution          instructions        -1.6%\n+ ~Mathlib.CategoryTheory.LiftingProperties.Adjunction         instructions       -22.3%\n+ ~Mathlib.CategoryTheory.Monoidal.Internal.Module             instructions        -6.8%\n+ ~Mathlib.Combinatorics.HalesJewett                           instructions       -83.1%\n+ ~Mathlib.FieldTheory.AbelRuffini                             instructions        -6.1%\n+ ~Mathlib.Geometry.Manifold.Algebra.LeftInvariantDerivation   instructions        -4.2%\n+ ~Mathlib.Geometry.RingedSpace.PresheafedSpace.Gluing         instructions        -3.4%\n+ ~Mathlib.GroupTheory.HNNExtension                            instructions        -7.0%\n+ ~Mathlib.LinearAlgebra.CliffordAlgebra.Contraction           instructions        -8.2%\n+ ~Mathlib.LinearAlgebra.CliffordAlgebra.Even                  instructions       -13.6%\n+ ~Mathlib.LinearAlgebra.DFinsupp                              instructions       -12.3%\n+ ~Mathlib.LinearAlgebra.Dual                                  instructions        -4.0%\n+ ~Mathlib.LinearAlgebra.FreeModule.PID                        instructions       -50.9%\n+ ~Mathlib.LinearAlgebra.Multilinear.Basic                     instructions        -9.9%\n+ ~Mathlib.MeasureTheory.Integral.SetToL1                      instructions        -4.9%\n+ ~Mathlib.NumberTheory.NumberField.Units                      instructions        -3.6%\n+ ~Mathlib.RepresentationTheory.Character                      instructions       -28.9%\n+ ~Mathlib.RepresentationTheory.GroupCohomology.Resolution     instructions       -56.0%\n+ ~Mathlib.RingTheory.DedekindDomain.AdicValuation             instructions       -24.2%\n+ ~Mathlib.RingTheory.IsTensorProduct                          instructions        -9.3%\n+ ~Mathlib.RingTheory.Kaehler                                  instructions        -2.9%\n+ ~Mathlib.RingTheory.PowerSeries.Basic                        instructions       -12.4%\n+ ~Mathlib.RingTheory.RootsOfUnity.Basic                       instructions        -6.1%\n+ ~Mathlib.RingTheory.Trace                                    instructions        -6.5%\n```",
              "createdAt": "2023-10-26T08:47:44Z",
              "author": {
                "login": "leanprover-bot"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5qJnjL",
              "body": "> I have an idea, let me see how far I get...\r\n\r\nAnswer: not far enough. `expandCoe` does a `headBeta` on the expression, which means that this shortcut instance does work but any tricks inside the original instance's type does not. So the way to go is indeed either a change in Lean core or to have this shortcut instance.",
              "createdAt": "2023-10-26T11:09:44Z",
              "author": {
                "login": "Vierkantor"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5qJsw0",
              "body": "What would the change to Lean core look like?",
              "createdAt": "2023-10-26T11:25:47Z",
              "author": {
                "login": "ericrbg"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5qLTjZ",
              "body": "> What would the change to Lean core look like?\r\n\r\nI think we'd need to modify [`expandCoe`](https://github.com/leanprover/lean4/blob/6c5f79c0df01e9cd74ac4ee411ec392a5ac1b5d3/src/Lean/Meta/Coe.lean#L32) to do more aggressive `β` reduction. (But I haven't tried out if that indeed works.)",
              "createdAt": "2023-10-26T15:24:34Z",
              "author": {
                "login": "Vierkantor"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5q55bl",
              "body": "Following discussion on [Zulip](https://leanprover.zulipchat.com/#narrow/stream/144837-PR-reviews/topic/.237905.20instance.20for.20non-dependent.20.60FunLike.60) and testing in #8185, you should delete the new instance and replace `FunLike.hasCoeToFun` with \r\n```lean \r\ninstance (priority := 100) hasCoeToFun : CoeFun F (fun _ ↦ ∀ a : α, β a) where\r\n  coe := @FunLike.coe _ _ β _ -- need to make explicit to beta reduce for non-dependent functions\r\n```\r\nthis will expose the function signature to beta reduction and yield the same benefits without the duplicate instance. ",
              "createdAt": "2023-11-04T21:44:56Z",
              "author": {
                "login": "mattrobball"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5rxey8",
              "body": "@negiizhao Please let us know your thoughts on this PR. Your insight on the performance impact from the extra beta expansion, your identification of a viable fix, and the hard work in making Mathlib build are the vast majority of the work here. \r\n\r\nGiven the benefits, it would be nice to get this merged asap. 🙏 ",
              "createdAt": "2023-11-13T13:07:44Z",
              "author": {
                "login": "mattrobball"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5ryXcI",
              "body": "What is the difference between the files in this PR and #8185? Can we close this one in favor of #8185?",
              "createdAt": "2023-11-13T15:19:49Z",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5sBiON",
              "body": "Great! 😊 Can you adjust the title and body of the PR and quickly compare to the fixes in #8185 to make sure things are as minimal as possible before merging? Thanks!\n\nbors delegate+",
              "createdAt": "2023-11-15T11:25:44Z",
              "author": {
                "login": "mattrobball"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5sBiPv",
              "body": ":v: negiizhao can now approve this pull request. To approve and merge a pull request, simply reply with `bors r+`. More detailed instructions are available [here](https://bors.tech/documentation/getting-started/#reviewing-pull-requests).",
              "createdAt": "2023-11-15T11:25:47Z",
              "author": {
                "login": "mathlib-bors"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5sCUO6",
              "body": "!bench",
              "createdAt": "2023-11-15T13:34:10Z",
              "author": {
                "login": "FR-vdash-bot"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5sCpsj",
              "body": "Here are the [benchmark results](http://speed.lean-fro.org/mathlib4/run-detail/30464d9a-d5fd-489f-b9e5-92731f2c6aff) for commit 6267d0a8a6f40df41577f381879a00065f4f5dff.\nThere were [significant changes](http://speed.lean-fro.org/mathlib4/compare/948b078d-cf16-48b2-9187-075a8321fed8/to/30464d9a-d5fd-489f-b9e5-92731f2c6aff) against commit 91e2d0262ffc96bd9321ce396fc50932e95fa6e9:\n```diff\n  Benchmark                                                    Metric         Change\n  ==================================================================================\n+ build                                                        linting         -8.9%\n+ lint                                                         instructions    -7.7%\n+ lint                                                         wall-clock      -7.7%\n+ ~Mathlib.Algebra.Category.ModuleCat.ChangeOfRings            instructions    -7.8%\n+ ~Mathlib.Algebra.Category.Ring.Constructions                 instructions   -39.0%\n+ ~Mathlib.Algebra.DirectLimit                                 instructions   -19.7%\n+ ~Mathlib.Algebra.Homology.ModuleCat                          instructions   -32.0%\n+ ~Mathlib.Algebra.Jordan.Basic                                instructions    -5.9%\n+ ~Mathlib.Algebra.Lie.Weights.Basic                           instructions   -10.0%\n+ ~Mathlib.Algebra.Module.PID                                  instructions    -5.1%\n+ ~Mathlib.AlgebraicGeometry.EllipticCurve.Point               instructions    -4.6%\n+ ~Mathlib.AlgebraicGeometry.ProjectiveSpectrum.Scheme         instructions    -7.3%\n+ ~Mathlib.AlgebraicGeometry.Properties                        instructions    -9.9%\n+ ~Mathlib.AlgebraicGeometry.Spec                              instructions   -11.7%\n+ ~Mathlib.Analysis.NormedSpace.Multilinear                    instructions    -3.9%\n+ ~Mathlib.Analysis.NormedSpace.OperatorNorm                   instructions    -2.1%\n+ ~Mathlib.CategoryTheory.LiftingProperties.Adjunction         instructions   -23.0%\n+ ~Mathlib.CategoryTheory.Monoidal.Internal.Module             instructions    -6.7%\n+ ~Mathlib.Combinatorics.HalesJewett                           instructions   -82.2%\n+ ~Mathlib.Data.Sum.Lattice                                    instructions   -40.8%\n+ ~Mathlib.FieldTheory.AbelRuffini                             instructions    -6.2%\n+ ~Mathlib.FieldTheory.Adjoin                                  instructions    -4.2%\n+ ~Mathlib.Geometry.Manifold.Algebra.LeftInvariantDerivation   instructions    -4.3%\n+ ~Mathlib.Geometry.RingedSpace.PresheafedSpace.Gluing         instructions    -2.2%\n+ ~Mathlib.GroupTheory.HNNExtension                            instructions    -7.5%\n+ ~Mathlib.GroupTheory.PushoutI                                instructions   -10.0%\n+ ~Mathlib.LinearAlgebra.CliffordAlgebra.Contraction           instructions    -8.0%\n+ ~Mathlib.LinearAlgebra.CliffordAlgebra.Even                  instructions   -13.7%\n+ ~Mathlib.LinearAlgebra.DFinsupp                              instructions   -13.9%\n+ ~Mathlib.LinearAlgebra.Dual                                  instructions    -4.4%\n- ~Mathlib.LinearAlgebra.FinsuppVectorSpace                    instructions    11.0%\n+ ~Mathlib.LinearAlgebra.FreeModule.PID                        instructions   -45.5%\n+ ~Mathlib.LinearAlgebra.Multilinear.Basic                     instructions    -8.7%\n+ ~Mathlib.MeasureTheory.Integral.SetToL1                      instructions    -4.9%\n+ ~Mathlib.NumberTheory.NumberField.Units                      instructions    -4.1%\n+ ~Mathlib.RepresentationTheory.Action                         instructions    -1.6%\n+ ~Mathlib.RepresentationTheory.Character                      instructions   -28.0%\n+ ~Mathlib.RepresentationTheory.GroupCohomology.Resolution     instructions   -66.7%\n+ ~Mathlib.RepresentationTheory.Rep                            instructions    -4.9%\n+ ~Mathlib.RingTheory.AdjoinRoot                               instructions    -3.5%\n+ ~Mathlib.RingTheory.DedekindDomain.AdicValuation             instructions   -25.0%\n+ ~Mathlib.RingTheory.IsTensorProduct                          instructions   -10.0%\n+ ~Mathlib.RingTheory.Kaehler                                  instructions    -4.4%\n+ ~Mathlib.RingTheory.PowerSeries.Basic                        instructions   -12.7%\n+ ~Mathlib.RingTheory.RootsOfUnity.Basic                       instructions    -7.4%\n+ ~Mathlib.RingTheory.Trace                                    instructions    -6.6%\n+ ~Mathlib.Topology.Sheaves.Stalks                             instructions    -5.1%\n```",
              "createdAt": "2023-11-15T14:29:03Z",
              "author": {
                "login": "leanprover-bot"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5sCr1P",
              "body": "I'm happy with this now, thanks! I'd like to jump into an editor once the cache is ready and fiddle with a couple proofs; please ping me if this PR is green and I haven't already done so. If I don't respond, I'm fine with it being merged in 8 hours.",
              "createdAt": "2023-11-15T14:33:57Z",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5sFGMh",
              "body": "bors merge",
              "createdAt": "2023-11-15T21:18:53Z",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5sFebu",
              "body": "Pull request successfully merged into master.\n\nBuild succeeded:\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/6883093857/job/18722934735)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/6883093857/job/18722935152)\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/6883093857/job/18722935388)",
              "createdAt": "2023-11-15T22:36:10Z",
              "author": {
                "login": "mathlib-bors"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "67a8504136f44ee33dcddb527fab653c0bd05d5f",
                "additions": 4,
                "deletions": 4,
                "committedDate": "2023-10-24T20:08:44Z",
                "author": {
                  "name": "negiizhao",
                  "email": "egresf@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "ec8fbfe334604124e6c25a3dc03503522fd3a11a",
                "additions": 4,
                "deletions": 4,
                "committedDate": "2023-10-24T21:01:11Z",
                "author": {
                  "name": "negiizhao",
                  "email": "egresf@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "1db101613d37207f30d4c8f231badef4837eb854",
                "additions": 13,
                "deletions": 17,
                "committedDate": "2023-10-24T21:58:34Z",
                "author": {
                  "name": "negiizhao",
                  "email": "egresf@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "1d7a1cfc40c66d13a6bdfda31b89e02e9ad3d11c",
                "additions": 17,
                "deletions": 22,
                "committedDate": "2023-10-25T17:58:32Z",
                "author": {
                  "name": "negiizhao",
                  "email": "egresf@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "d45d7aba82104e8d46bb1951411bd5317559bae0",
                "additions": 6,
                "deletions": 12,
                "committedDate": "2023-10-25T18:34:10Z",
                "author": {
                  "name": "negiizhao",
                  "email": "egresf@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "2170722c5eb5b6e19cb2d62102f69f1a226b4759",
                "additions": 17,
                "deletions": 32,
                "committedDate": "2023-10-25T19:21:03Z",
                "author": {
                  "name": "negiizhao",
                  "email": "egresf@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "d9b0ceeb384522a96fdba6581a347d3d6d78244f",
                "additions": 6,
                "deletions": 13,
                "committedDate": "2023-10-25T19:35:04Z",
                "author": {
                  "name": "negiizhao",
                  "email": "egresf@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "2e8d23423f7296bd355e9bcabdb0cb4d59b03a6d",
                "additions": 14,
                "deletions": 18,
                "committedDate": "2023-10-25T20:40:12Z",
                "author": {
                  "name": "negiizhao",
                  "email": "egresf@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "f4a4e7999edac719a94fc4e22cc93e8cf418a6e8",
                "additions": 17,
                "deletions": 26,
                "committedDate": "2023-10-25T22:39:33Z",
                "author": {
                  "name": "negiizhao",
                  "email": "egresf@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "1dc6a94d7b132c40758ab53f18d2da3ae76e2627",
                "additions": 16,
                "deletions": 20,
                "committedDate": "2023-10-26T03:31:33Z",
                "author": {
                  "name": "negiizhao",
                  "email": "egresf@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "4d6319bf965c6ac93f2e85ccfd1c8b4c73264de0",
                "additions": 2,
                "deletions": 2,
                "committedDate": "2023-10-26T05:11:31Z",
                "author": {
                  "name": "negiizhao",
                  "email": "egresf@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "18d65c828c1a0e44c50456e0f3b32dfa34e187c0",
                "additions": 2,
                "deletions": 0,
                "committedDate": "2023-10-26T07:45:20Z",
                "author": {
                  "name": "negiizhao",
                  "email": "egresf@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "3414e9be6063d4dde60e894f2edf3ca4c9852d4c",
                "additions": 7,
                "deletions": 3,
                "committedDate": "2023-10-26T09:47:50Z",
                "author": {
                  "name": "negiizhao",
                  "email": "egresf@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "10184518617bf21bb52d702f8af1ac5a42aae628",
                "additions": 4,
                "deletions": 0,
                "committedDate": "2023-10-26T10:10:12Z",
                "author": {
                  "name": "negiizhao",
                  "email": "egresf@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "176dadf90ae130cad202c55c27440c01ef7c4145",
                "additions": 14,
                "deletions": 5,
                "committedDate": "2023-10-26T11:37:37Z",
                "author": {
                  "name": "negiizhao",
                  "email": "egresf@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "3e44aca83ec8b6b75f409c89a221076af8a92ca9",
                "additions": 22528,
                "deletions": 9251,
                "committedDate": "2023-11-02T16:56:57Z",
                "author": {
                  "name": "Matthew Ballard",
                  "email": "matt@mrb.email"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "8e4680ce760e9c145389c3afab2fa9aea0b908e2",
                "additions": 1,
                "deletions": 1,
                "committedDate": "2023-11-02T18:33:55Z",
                "author": {
                  "name": "Matthew Ballard",
                  "email": "matt@mrb.email"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "be379028e46e44df6fbd7f598fece3a87dc8d7b6",
                "additions": 8,
                "deletions": 9,
                "committedDate": "2023-11-15T10:03:12Z",
                "author": {
                  "name": "negiizhao",
                  "email": "egresf@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "770cf0c5eb81d858018fde2369988deac6212cab",
                "additions": 0,
                "deletions": 4,
                "committedDate": "2023-11-15T10:14:09Z",
                "author": {
                  "name": "negiizhao",
                  "email": "egresf@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "ee13762cab438c587f15fb8dc3622602bdfc9b8f",
                "additions": 24167,
                "deletions": 12902,
                "committedDate": "2023-11-15T10:24:46Z",
                "author": {
                  "name": "negiizhao",
                  "email": "egresf@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "05cf3f6b86853de0d5b53abaa308222cc3dbada2",
                "additions": 0,
                "deletions": 2,
                "committedDate": "2023-11-15T11:16:43Z",
                "author": {
                  "name": "negiizhao",
                  "email": "egresf@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "4752f1c0b420e38496a8f93e3ddd075074b41cbe",
                "additions": 2,
                "deletions": 11,
                "committedDate": "2023-11-15T13:01:07Z",
                "author": {
                  "name": "negiizhao",
                  "email": "egresf@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "40912e769d996d85d16a04e58b418a94a63f47a8",
                "additions": 2,
                "deletions": 3,
                "committedDate": "2023-11-15T13:25:22Z",
                "author": {
                  "name": "negiizhao",
                  "email": "egresf@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "6267d0a8a6f40df41577f381879a00065f4f5dff",
                "additions": 7,
                "deletions": 2,
                "committedDate": "2023-11-15T13:33:11Z",
                "author": {
                  "name": "negiizhao",
                  "email": "egresf@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "b1bebb12c560ccc5a007de4d4ecbb548b85e767b",
                "additions": 8,
                "deletions": 16,
                "committedDate": "2023-11-15T14:23:06Z",
                "author": {
                  "name": "negiizhao",
                  "email": "egresf@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "bd9dd94a7cbf807f27d0946e62317cfc73e0b6ce",
                "additions": 2,
                "deletions": 2,
                "committedDate": "2023-11-15T14:27:10Z",
                "author": {
                  "name": "negiizhao",
                  "email": "egresf@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "2b7a1d56412c66b959b1c77edff21000d14ef79e",
                "additions": 3,
                "deletions": 2,
                "committedDate": "2023-11-15T15:51:12Z",
                "author": {
                  "name": "Eric Wieser",
                  "email": "wieser.eric@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "73fdc27d738cd180fe58c3b2b78bbd21526d175b",
                "additions": 5,
                "deletions": 5,
                "committedDate": "2023-11-15T16:09:38Z",
                "author": {
                  "name": "Eric Wieser",
                  "email": "wieser.eric@gmail.com"
                },
                "statusCheckRollup": null
              }
            }
          ]
        },
        "createdAt": "2023-10-24T20:09:26Z",
        "deletions": 164,
        "files": {
          "nodes": [
            {
              "path": "Archive/Sensitivity.lean",
              "additions": 0,
              "deletions": 1
            },
            {
              "path": "Mathlib/Algebra/Algebra/RestrictScalars.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Algebra/Category/ModuleCat/ChangeOfRings.lean",
              "additions": 4,
              "deletions": 4
            },
            {
              "path": "Mathlib/Algebra/DirectLimit.lean",
              "additions": 1,
              "deletions": 4
            },
            {
              "path": "Mathlib/Algebra/Group/Hom/Defs.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Algebra/Homology/ModuleCat.lean",
              "additions": 1,
              "deletions": 2
            },
            {
              "path": "Mathlib/Algebra/Module/Torsion.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Algebra/Order/Monoid/ToMulBot.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Algebra/Polynomial/BigOperators.lean",
              "additions": 3,
              "deletions": 2
            },
            {
              "path": "Mathlib/Algebra/Quaternion.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Algebra/Ring/BooleanRing.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/AlgebraicGeometry/GammaSpecAdjunction.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/AlgebraicGeometry/PrimeSpectrum/Basic.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/AlgebraicGeometry/Scheme.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/AlgebraicGeometry/Spec.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/AlgebraicGeometry/StructureSheaf.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Analysis/Calculus/AffineMap.lean",
              "additions": 0,
              "deletions": 1
            },
            {
              "path": "Mathlib/Analysis/Convex/Between.lean",
              "additions": 0,
              "deletions": 1
            },
            {
              "path": "Mathlib/Analysis/Fourier/AddCircle.lean",
              "additions": 0,
              "deletions": 1
            },
            {
              "path": "Mathlib/Analysis/Fourier/FourierTransform.lean",
              "additions": 1,
              "deletions": 3
            },
            {
              "path": "Mathlib/Analysis/SpecialFunctions/Complex/Arg.lean",
              "additions": 0,
              "deletions": 1
            },
            {
              "path": "Mathlib/CategoryTheory/Limits/Opposites.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/CategoryTheory/SingleObj.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Data/Finset/Image.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Data/Finsupp/Basic.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Data/Finsupp/Defs.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Data/Finsupp/Pointwise.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Data/FunLike/Basic.lean",
              "additions": 2,
              "deletions": 1
            },
            {
              "path": "Mathlib/Data/IsROrC/Basic.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Data/MvPolynomial/Basic.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Data/Nat/Factorization/Basic.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Data/Polynomial/RingDivision.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Data/ZMod/Basic.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/FieldTheory/Fixed.lean",
              "additions": 0,
              "deletions": 1
            },
            {
              "path": "Mathlib/FieldTheory/IntermediateField.lean",
              "additions": 1,
              "deletions": 3
            },
            {
              "path": "Mathlib/FieldTheory/Laurent.lean",
              "additions": 1,
              "deletions": 2
            },
            {
              "path": "Mathlib/FieldTheory/Minpoly/Basic.lean",
              "additions": 3,
              "deletions": 5
            },
            {
              "path": "Mathlib/FieldTheory/RatFunc.lean",
              "additions": 1,
              "deletions": 3
            },
            {
              "path": "Mathlib/Geometry/RingedSpace/LocallyRingedSpace/HasColimits.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Geometry/RingedSpace/Stalks.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/GroupTheory/FreeGroup/Basic.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/GroupTheory/Perm/Cycle/Basic.lean",
              "additions": 0,
              "deletions": 2
            },
            {
              "path": "Mathlib/GroupTheory/SpecificGroups/Alternating.lean",
              "additions": 1,
              "deletions": 2
            },
            {
              "path": "Mathlib/LinearAlgebra/CliffordAlgebra/Contraction.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/LinearAlgebra/ExteriorAlgebra/Basic.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/LinearAlgebra/ExteriorAlgebra/Grading.lean",
              "additions": 1,
              "deletions": 2
            },
            {
              "path": "Mathlib/LinearAlgebra/QuadraticForm/TensorProduct.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/LinearAlgebra/StdBasis.lean",
              "additions": 0,
              "deletions": 1
            },
            {
              "path": "Mathlib/LinearAlgebra/TensorAlgebra/Basic.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/LinearAlgebra/TensorAlgebra/ToTensorPower.lean",
              "additions": 3,
              "deletions": 3
            },
            {
              "path": "Mathlib/Logic/Equiv/Set.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Logic/Equiv/TransferInstance.lean",
              "additions": 1,
              "deletions": 4
            },
            {
              "path": "Mathlib/MeasureTheory/Function/UniformIntegrable.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/MeasureTheory/Integral/SetToL1.lean",
              "additions": 0,
              "deletions": 8
            },
            {
              "path": "Mathlib/NumberTheory/ArithmeticFunction.lean",
              "additions": 1,
              "deletions": 3
            },
            {
              "path": "Mathlib/NumberTheory/ClassNumber/Finite.lean",
              "additions": 1,
              "deletions": 9
            },
            {
              "path": "Mathlib/NumberTheory/FunctionField.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/NumberTheory/NumberField/Units.lean",
              "additions": 4,
              "deletions": 3
            },
            {
              "path": "Mathlib/Order/WithBot.lean",
              "additions": 1,
              "deletions": 3
            },
            {
              "path": "Mathlib/Probability/ProbabilityMassFunction/Monad.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/RingTheory/AdjoinRoot.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/RingTheory/DedekindDomain/AdicValuation.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/RingTheory/EisensteinCriterion.lean",
              "additions": 1,
              "deletions": 3
            },
            {
              "path": "Mathlib/RingTheory/FractionalIdeal.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/RingTheory/HahnSeries.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/RingTheory/IsTensorProduct.lean",
              "additions": 1,
              "deletions": 3
            },
            {
              "path": "Mathlib/RingTheory/LaurentSeries.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/RingTheory/Localization/Basic.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/RingTheory/Localization/FractionRing.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/RingTheory/Localization/Integral.lean",
              "additions": 3,
              "deletions": 5
            },
            {
              "path": "Mathlib/RingTheory/Perfection.lean",
              "additions": 5,
              "deletions": 5
            },
            {
              "path": "Mathlib/RingTheory/Polynomial/Cyclotomic/Expand.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/RingTheory/RingHom/Surjective.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/RingTheory/RootsOfUnity/Basic.lean",
              "additions": 0,
              "deletions": 1
            },
            {
              "path": "Mathlib/RingTheory/Trace.lean",
              "additions": 1,
              "deletions": 3
            },
            {
              "path": "Mathlib/RingTheory/WittVector/Frobenius.lean",
              "additions": 2,
              "deletions": 3
            },
            {
              "path": "Mathlib/RingTheory/WittVector/FrobeniusFractionField.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/RingTheory/WittVector/Identities.lean",
              "additions": 0,
              "deletions": 2
            },
            {
              "path": "Mathlib/RingTheory/WittVector/MulCoeff.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/RingTheory/WittVector/StructurePolynomial.lean",
              "additions": 0,
              "deletions": 1
            },
            {
              "path": "Mathlib/SetTheory/Ordinal/Basic.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Topology/Category/Profinite/Nobeling.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Topology/Category/TopCat/Limits/Products.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Topology/Category/TopCat/Limits/Pullbacks.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Topology/Gluing.lean",
              "additions": 0,
              "deletions": 1
            },
            {
              "path": "Mathlib/Topology/Sheaves/Stalks.lean",
              "additions": 1,
              "deletions": 2
            },
            {
              "path": "test/FunLike.lean",
              "additions": 6,
              "deletions": 0
            }
          ]
        },
        "headRefName": "FR_funlike_shortcut",
        "headRefOid": "73fdc27d738cd180fe58c3b2b78bbd21526d175b",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c5drg1e",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
              "color": "06e039",
              "name": "ready-to-merge"
            }
          ]
        },
        "latestReviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5lSQEH",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "ericrbg"
              },
              "submittedAt": "2023-10-26T10:44:20Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5lSKvk",
              "body": "I'm impressed by the results, but I must say I'm not convinced that this is the way to go with respect to readability/ease of use. I count 46 files with code improvements and 40 files with code regressions (such as `rw` becoming `erw`, extra arguments needing to be specified, etc.). To have to make a manual choice between the two `hasCoeToFun` and `ndHasCoeToFun` instances seems likely to cause confusion.\r\n\r\nIdeally we'd assign `hasCoeToFun` a type that beta-reduces more eagerly so there is no duplication at all. I have an idea, let me see how far I get...",
              "state": "COMMENTED",
              "author": {
                "login": "Vierkantor"
              },
              "submittedAt": "2023-10-26T10:45:36Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5nS5Tk",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-11-15T21:18:46Z"
            }
          ]
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "UNKNOWN",
        "mergeable": "UNKNOWN",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 7905,
        "potentialMergeCommit": null,
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": [
                {
                  "login": "alreadydone"
                },
                {
                  "login": "fpvandoorn"
                }
              ]
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": null,
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5lSJXU",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-10-26T10:27:55Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5lSJja",
              "body": "Can you add a file in `test/` that demonstrates that the inferred type of non-dependent funlikes is improved?",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-10-26T10:28:22Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5lSKNt",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-10-26T10:29:54Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5lSMXK",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-10-26T10:35:12Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5lSMoa",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-10-26T10:35:53Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5lSM-A",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-10-26T10:36:43Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5lSNV2",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-10-26T10:37:37Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5lSORg",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "FR-vdash-bot"
              },
              "submittedAt": "2023-10-26T10:39:58Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5lSO8G",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "FR-vdash-bot"
              },
              "submittedAt": "2023-10-26T10:41:35Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5lSPcG",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-10-26T10:42:48Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5lSQEH",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "ericrbg"
              },
              "submittedAt": "2023-10-26T10:44:20Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5lSKvk",
              "body": "I'm impressed by the results, but I must say I'm not convinced that this is the way to go with respect to readability/ease of use. I count 46 files with code improvements and 40 files with code regressions (such as `rw` becoming `erw`, extra arguments needing to be specified, etc.). To have to make a manual choice between the two `hasCoeToFun` and `ndHasCoeToFun` instances seems likely to cause confusion.\r\n\r\nIdeally we'd assign `hasCoeToFun` a type that beta-reduces more eagerly so there is no duplication at all. I have an idea, let me see how far I get...",
              "state": "COMMENTED",
              "author": {
                "login": "Vierkantor"
              },
              "submittedAt": "2023-10-26T10:45:36Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5lSRaL",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-10-26T10:47:36Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5lSRqX",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-10-26T10:48:14Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5lSU3j",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "FR-vdash-bot"
              },
              "submittedAt": "2023-10-26T10:56:15Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5l_zKH",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-11-02T20:57:27Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5nPQNN",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-11-15T13:38:18Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5nPQ8k",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-11-15T13:39:56Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5nPReh",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-11-15T13:41:07Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5nPTrX",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-11-15T13:45:31Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5nPUHP",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-11-15T13:46:30Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5nPUZ2",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-11-15T13:47:08Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5nPVyz",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "FR-vdash-bot"
              },
              "submittedAt": "2023-11-15T13:50:09Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5nPY6i",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-11-15T13:54:49Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5nPbaV",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "FR-vdash-bot"
              },
              "submittedAt": "2023-11-15T13:59:36Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5nPdFj",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "FR-vdash-bot"
              },
              "submittedAt": "2023-11-15T14:02:43Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5nPdMo",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-11-15T14:02:56Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5nPfDy",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-11-15T14:06:46Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5nPfdV",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "FR-vdash-bot"
              },
              "submittedAt": "2023-11-15T14:07:35Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5nPjWn",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "FR-vdash-bot"
              },
              "submittedAt": "2023-11-15T14:15:07Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5nPsfq",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-11-15T14:31:15Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5nQeLI",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-11-15T15:59:46Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5nS5Tk",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-11-15T21:18:46Z"
            }
          ]
        },
        "reviewThreads": {
          "nodes": [
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5R1Wp7",
                    "body": "```suggestion\r\n/-- A version of FunLike.hasCoeToFun for non-dependent functions, which gives a performance boost, and avoids unwanted missing beta-reduction. -/\r\ninstance (priority := 110) hasCoeToFunNonDependent : CoeFun F fun _ ↦ α → β where coe := FunLike.coe\r\n```",
                    "createdAt": "2023-10-26T10:27:55Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5R1XL8",
                    "body": "Did any files end up needing this?\r\n```suggestion\r\n`attribute [local instance high] FunLike.hasCoeToFun` for better performance when you are using lots of dependent `FunLike` typeclasses.\r\n```\r\nto make it clear that this is only a performance concern.",
                    "createdAt": "2023-10-26T10:29:54Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5R1Zzn",
                    "body": "I added it in `Mathlib.Geometry.Manifold.VectorBundle.SmoothSection`. It was the file that slowed down significantly in the first benchmark.",
                    "createdAt": "2023-10-26T10:39:58Z",
                    "author": {
                      "login": "FR-vdash-bot"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5R1a_P",
                    "body": "Note it down there too, I think",
                    "createdAt": "2023-10-26T10:44:20Z",
                    "author": {
                      "login": "ericrbg"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5R1XgL",
                    "body": "```suggestion\r\n/-- Non-Dependent variant of `FunLike.hasCoeToFun`.\r\n\r\nWe give this higher priority because it is simpler and therefore significantly speeds up usages of `FunLike`. -/\r\ninstance (priority := 110) ndHasCoeToFun : CoeFun F fun _ ↦ α → β where coe := FunLike.coe\r\n```",
                    "createdAt": "2023-10-26T10:31:11Z",
                    "author": {
                      "login": "Vierkantor"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5R1b4Q",
                    "body": "I think our comments crossed, https://github.com/leanprover-community/mathlib4/pull/7905#discussion_r1372940923",
                    "createdAt": "2023-10-26T10:47:36Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5R1X7d",
                    "body": "Could you explain in the comment why the dependent version isn't just a fallback for the non-dependent version? (I assume it's because of `outParam`s.)",
                    "createdAt": "2023-10-26T10:32:42Z",
                    "author": {
                      "login": "Vierkantor"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5R1cCp",
                    "body": "I think this should really just be giving performance advice, https://github.com/leanprover-community/mathlib4/pull/7905#discussion_r1372943100",
                    "createdAt": "2023-10-26T10:48:14Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5R1YPD",
                    "body": "Small terminology fix:\r\n```suggestion\r\nLean will try to synthesize non-dependent `FunLike` instances first by default. Use the command\r\n`attribute [local instance high] FunLike.hasCoeToFun` if you want dependent `FunLike` instances\r\n```",
                    "createdAt": "2023-10-26T10:33:52Z",
                    "author": {
                      "login": "Vierkantor"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5R1Yka",
                    "body": "This one is rather worrying",
                    "createdAt": "2023-10-26T10:35:12Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5R1Yu2",
                    "body": "Why did this go?",
                    "createdAt": "2023-10-26T10:35:53Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5R1aQo",
                    "body": "The `synTaut` linter reports it's a syntactic tautology.",
                    "createdAt": "2023-10-26T10:41:35Z",
                    "author": {
                      "login": "FR-vdash-bot"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5R1alJ",
                    "body": "Then there is a coercion missing; the statement should really be `FunLike.coe (f • g) = f • FunLike.coe g`, though written with `\\u` isntead of `FunLike.coe` to allow your nondependent instance to fire.",
                    "createdAt": "2023-10-26T10:42:48Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5R1Y8-",
                    "body": "Why was this de-`simp`ed? Does the same comment apply as elsewhere about `simpNF` getting confused?",
                    "createdAt": "2023-10-26T10:36:43Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5R1eJ_",
                    "body": "Is a lemma with proof parameters that do not appear directly on the LHS (but in LHS there's a proof that uses it) appropriate as a `simp` lemma? If it should be, then I'll add a note.",
                    "createdAt": "2023-10-26T10:56:15Z",
                    "author": {
                      "login": "FR-vdash-bot"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5TGgPZ",
                    "body": "Yes, I think this is still fine as a simp lemma, since `simp` creates `x ⤳ y` as a side-goal. Did the linter complain?",
                    "createdAt": "2023-11-15T13:39:56Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5TGjf5",
                    "body": "Yes, `simpNF` linter complains. I think this is because `x ⤳ y` doesn't appear directly on the LHS.",
                    "createdAt": "2023-11-15T13:50:09Z",
                    "author": {
                      "login": "FR-vdash-bot"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5TGlJV",
                    "body": "Is `x ⤳ y` a proof as you said it was, or is it data?",
                    "createdAt": "2023-11-15T13:54:49Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5TGpQ5",
                    "body": "It's a proof https://leanprover-community.github.io/mathlib4_docs/Mathlib/Topology/Inseparable.html#Specializes",
                    "createdAt": "2023-11-15T14:07:35Z",
                    "author": {
                      "login": "FR-vdash-bot"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5R1ZMt",
                    "body": "I preferred the original statement of this lemma.",
                    "createdAt": "2023-10-26T10:37:37Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5STNBF",
                    "body": "(due to equalities of types being evil)",
                    "createdAt": "2023-11-02T20:57:27Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5TGfv5",
                    "body": "Let's be explicit here:\r\n```suggestion\r\ntheorem coe_pointwise_smul [Semiring β] (f : α → β) (g : α →₀ β) : ⇑(f • g) = f • ⇑g :=\r\n```",
                    "createdAt": "2023-11-15T13:38:18Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5TGglo",
                    "body": "I think we should get rid of this, since type equalities are evil. Does the proof below break without it?\r\n\r\n(if not, then it doesn't belong in this PR anyway)",
                    "createdAt": "2023-11-15T13:41:07Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5TGmuh",
                    "body": "For the same reason as above, the version with `h : n = m` is no longer a simp lemma. But removing it won't break things.",
                    "createdAt": "2023-11-15T13:59:36Z",
                    "author": {
                      "login": "FR-vdash-bot"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5TGn2A",
                    "body": "I think all of the removed `simp` attributes should come with a comment referring to 7905; as far as I can tell, all of them look a bit iffy.",
                    "createdAt": "2023-11-15T14:02:56Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5THRpT",
                    "body": "This looks like a bug to me, https://github.com/leanprover/std4/issues/365.\r\n\r\nI suggest you replace all of these with `simpNF`, and add a comment referencing `std4#365`.",
                    "createdAt": "2023-11-15T15:59:45Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5TIy-Y",
                    "body": "I've gone ahead and done that",
                    "createdAt": "2023-11-15T21:18:46Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5TGh_H",
                    "body": "This one looks a bit worrying",
                    "createdAt": "2023-11-15T13:45:31Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5TGnxJ",
                    "body": "It's not necessary now (I can just revert it if necessary), but this will be faster.",
                    "createdAt": "2023-11-15T14:02:42Z",
                    "author": {
                      "login": "FR-vdash-bot"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5TGpBR",
                    "body": "I think best to revert anything that isn't direct fallout of this change. Any other cleanups can go in a separate PR if you think they're still a good idea",
                    "createdAt": "2023-11-15T14:06:46Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5TGiXe",
                    "body": "This one is a bit weird; I'll take a look once a cache is ready.",
                    "createdAt": "2023-11-15T13:46:30Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5TGijs",
                    "body": "Was this rejected by `simpNF`? If so, in favor of what lemma?",
                    "createdAt": "2023-11-15T13:47:08Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5TGrsY",
                    "body": "`⟨x, ⟨h, rfl⟩⟩ : f x ∈ f '' s` is a proof.",
                    "createdAt": "2023-11-15T14:15:07Z",
                    "author": {
                      "login": "FR-vdash-bot"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5TGxZo",
                    "body": "That's not supposed to matter... Either way, I'm happy with the comments for now, this PR is clearly a big improvement in general.",
                    "createdAt": "2023-11-15T14:31:15Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  }
                ]
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjE5NjM0Nzc4",
              "login": "FR-vdash-bot"
            },
            {
              "id": "MDQ6VXNlcjg1NjY4Mzk0",
              "login": "leanprover-bot"
            },
            {
              "id": "MDQ6VXNlcjIxMTY1NzA=",
              "login": "Vierkantor"
            },
            {
              "id": "MDQ6VXNlcjM3OTg0ODUx",
              "login": "ericrbg"
            },
            {
              "id": "U_kgDOBfZl7g",
              "login": "mattrobball"
            },
            {
              "id": "MDQ6VXNlcjQyNTI2MA==",
              "login": "eric-wieser"
            },
            {
              "id": "U_kgDOB75MNQ",
              "login": "leanprover-community-mathlib4-bot"
            }
          ]
        },
        "state": "CLOSED",
        "statusCheckRollup": null,
        "title": "[Merged by Bors] - perf(FunLike.Basic): beta reduce `CoeFun.coe`",
        "updatedAt": "2023-11-15T22:36:15Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/7905",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "67a8504136f44ee33dcddb527fab653c0bd05d5f"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c500zI2zwAAAAKBRspO",
              "createdAt": "2023-10-24T20:09:26Z",
              "label": {
                "id": "MDU6TGFiZWwzMjcxMjQ0NzU5",
                "name": "WIP"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5PBwdl",
              "createdAt": "2023-10-24T20:13:55Z",
              "source": {
                "id": "PR_kwDOFcwZ1c5driOC",
                "title": "chore: typeclass for non-dependent `FunLike`",
                "url": "https://github.com/leanprover-community/mathlib4/pull/7906"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "ec8fbfe334604124e6c25a3dc03503522fd3a11a"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "1db101613d37207f30d4c8f231badef4837eb854"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "1d7a1cfc40c66d13a6bdfda31b89e02e9ad3d11c"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "d45d7aba82104e8d46bb1951411bd5317559bae0"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "2170722c5eb5b6e19cb2d62102f69f1a226b4759"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "d9b0ceeb384522a96fdba6581a347d3d6d78244f"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "2e8d23423f7296bd355e9bcabdb0cb4d59b03a6d"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "f4a4e7999edac719a94fc4e22cc93e8cf418a6e8"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "1dc6a94d7b132c40758ab53f18d2da3ae76e2627"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "4d6319bf965c6ac93f2e85ccfd1c8b4c73264de0"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5qHzua",
              "createdAt": "2023-10-26T05:19:17Z",
              "body": "!bench",
              "author": {
                "login": "FR-vdash-bot"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5qH8dl",
              "createdAt": "2023-10-26T06:04:30Z",
              "body": "Here are the [benchmark results](http://speed.lean-fro.org/mathlib4/run-detail/abc28065-9262-40f5-a91c-567242ab43a5) for commit 4d6319bf965c6ac93f2e85ccfd1c8b4c73264de0.\nThere were [significant changes](http://speed.lean-fro.org/mathlib4/compare/a4a5dfe6-788e-440a-934c-867f09d2ec4c/to/abc28065-9262-40f5-a91c-567242ab43a5) against commit bf077b111ca30b6793deafddf07fd8949cb92a3a:\n```diff\n  Benchmark                                                    Metric             Change\n  ======================================================================================\n+ build                                                        linting             -6.2%\n+ build                                                        tactic execution    -5.1%\n+ lint                                                         instructions        -6.1%\n+ ~Mathlib.Algebra.Category.ModuleCat.ChangeOfRings            instructions        -8.5%\n+ ~Mathlib.Algebra.Category.Ring.Constructions                 instructions       -38.4%\n+ ~Mathlib.Algebra.DirectLimit                                 instructions       -19.6%\n+ ~Mathlib.Algebra.Homology.ModuleCat                          instructions       -32.2%\n+ ~Mathlib.Algebra.Jordan.Basic                                instructions        -5.9%\n+ ~Mathlib.Algebra.Lie.Weights.Basic                           instructions       -12.6%\n+ ~Mathlib.AlgebraicGeometry.EllipticCurve.Point               instructions        -4.5%\n+ ~Mathlib.AlgebraicGeometry.Morphisms.QuasiSeparated          instructions       -19.6%\n+ ~Mathlib.AlgebraicGeometry.Morphisms.RingHomProperties       instructions        -7.1%\n+ ~Mathlib.AlgebraicGeometry.ProjectiveSpectrum.Scheme         instructions        -7.1%\n+ ~Mathlib.AlgebraicGeometry.Properties                        instructions        -9.2%\n+ ~Mathlib.AlgebraicGeometry.Spec                              instructions       -11.5%\n+ ~Mathlib.Analysis.NormedSpace.Multilinear                    instructions        -1.8%\n+ ~Mathlib.Analysis.NormedSpace.OperatorNorm                   instructions        -2.0%\n+ ~Mathlib.CategoryTheory.Abelian.InjectiveResolution          instructions        -1.6%\n+ ~Mathlib.CategoryTheory.LiftingProperties.Adjunction         instructions       -22.3%\n+ ~Mathlib.CategoryTheory.Monoidal.Internal.Module             instructions        -6.8%\n+ ~Mathlib.Combinatorics.HalesJewett                           instructions       -83.1%\n+ ~Mathlib.FieldTheory.AbelRuffini                             instructions        -6.1%\n+ ~Mathlib.Geometry.Manifold.Algebra.LeftInvariantDerivation   instructions        -4.2%\n- ~Mathlib.Geometry.Manifold.VectorBundle.SmoothSection        instructions       153.3%\n+ ~Mathlib.Geometry.RingedSpace.PresheafedSpace.Gluing         instructions        -3.5%\n+ ~Mathlib.GroupTheory.HNNExtension                            instructions        -7.0%\n+ ~Mathlib.LinearAlgebra.CliffordAlgebra.Contraction           instructions        -8.2%\n+ ~Mathlib.LinearAlgebra.CliffordAlgebra.Even                  instructions       -13.6%\n+ ~Mathlib.LinearAlgebra.DFinsupp                              instructions       -12.2%\n+ ~Mathlib.LinearAlgebra.Dual                                  instructions        -4.0%\n+ ~Mathlib.LinearAlgebra.FreeModule.PID                        instructions       -50.9%\n+ ~Mathlib.LinearAlgebra.Multilinear.Basic                     instructions        -9.9%\n+ ~Mathlib.MeasureTheory.Integral.SetToL1                      instructions        -5.0%\n+ ~Mathlib.NumberTheory.NumberField.Units                      instructions        -3.6%\n+ ~Mathlib.RepresentationTheory.Character                      instructions       -28.9%\n+ ~Mathlib.RepresentationTheory.GroupCohomology.Resolution     instructions       -56.1%\n+ ~Mathlib.RingTheory.DedekindDomain.AdicValuation             instructions       -24.1%\n+ ~Mathlib.RingTheory.IsTensorProduct                          instructions        -9.3%\n+ ~Mathlib.RingTheory.Kaehler                                  instructions        -2.9%\n+ ~Mathlib.RingTheory.PowerSeries.Basic                        instructions       -12.4%\n+ ~Mathlib.RingTheory.RootsOfUnity.Basic                       instructions        -6.1%\n+ ~Mathlib.RingTheory.Trace                                    instructions        -6.5%\n```",
              "author": {
                "login": "leanprover-bot"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "18d65c828c1a0e44c50456e0f3b32dfa34e187c0"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5qIj4y",
              "createdAt": "2023-10-26T08:14:36Z",
              "body": "!bench",
              "author": {
                "login": "FR-vdash-bot"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c500zI2zwAAAAKCUn7Q",
              "createdAt": "2023-10-26T08:15:03Z",
              "label": {
                "id": "MDU6TGFiZWwzMjcxMjQ0NzU5",
                "name": "WIP"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c500zI2zwAAAAKCUn7Y",
              "createdAt": "2023-10-26T08:15:03Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5qIwgP",
              "createdAt": "2023-10-26T08:47:44Z",
              "body": "Here are the [benchmark results](http://speed.lean-fro.org/mathlib4/run-detail/ee9bd47a-357a-49c9-9133-dfb0a5066845) for commit 18d65c828c1a0e44c50456e0f3b32dfa34e187c0.\nThere were [significant changes](http://speed.lean-fro.org/mathlib4/compare/a4a5dfe6-788e-440a-934c-867f09d2ec4c/to/ee9bd47a-357a-49c9-9133-dfb0a5066845) against commit bf077b111ca30b6793deafddf07fd8949cb92a3a:\n```diff\n  Benchmark                                                    Metric             Change\n  ======================================================================================\n+ build                                                        linting             -6.7%\n+ build                                                        tactic execution    -5.4%\n+ lint                                                         instructions        -6.1%\n+ ~Mathlib.Algebra.Category.ModuleCat.ChangeOfRings            instructions        -8.5%\n+ ~Mathlib.Algebra.Category.Ring.Constructions                 instructions       -38.4%\n+ ~Mathlib.Algebra.DirectLimit                                 instructions       -19.6%\n+ ~Mathlib.Algebra.Homology.ModuleCat                          instructions       -32.1%\n+ ~Mathlib.Algebra.Jordan.Basic                                instructions        -5.8%\n+ ~Mathlib.Algebra.Lie.Weights.Basic                           instructions       -12.6%\n+ ~Mathlib.AlgebraicGeometry.EllipticCurve.Point               instructions        -4.5%\n+ ~Mathlib.AlgebraicGeometry.Morphisms.QuasiSeparated          instructions       -19.6%\n+ ~Mathlib.AlgebraicGeometry.Morphisms.RingHomProperties       instructions        -7.1%\n+ ~Mathlib.AlgebraicGeometry.ProjectiveSpectrum.Scheme         instructions        -7.1%\n+ ~Mathlib.AlgebraicGeometry.Properties                        instructions        -9.2%\n+ ~Mathlib.AlgebraicGeometry.Spec                              instructions       -11.5%\n+ ~Mathlib.Analysis.NormedSpace.OperatorNorm                   instructions        -2.0%\n+ ~Mathlib.CategoryTheory.Abelian.InjectiveResolution          instructions        -1.6%\n+ ~Mathlib.CategoryTheory.LiftingProperties.Adjunction         instructions       -22.3%\n+ ~Mathlib.CategoryTheory.Monoidal.Internal.Module             instructions        -6.8%\n+ ~Mathlib.Combinatorics.HalesJewett                           instructions       -83.1%\n+ ~Mathlib.FieldTheory.AbelRuffini                             instructions        -6.1%\n+ ~Mathlib.Geometry.Manifold.Algebra.LeftInvariantDerivation   instructions        -4.2%\n+ ~Mathlib.Geometry.RingedSpace.PresheafedSpace.Gluing         instructions        -3.4%\n+ ~Mathlib.GroupTheory.HNNExtension                            instructions        -7.0%\n+ ~Mathlib.LinearAlgebra.CliffordAlgebra.Contraction           instructions        -8.2%\n+ ~Mathlib.LinearAlgebra.CliffordAlgebra.Even                  instructions       -13.6%\n+ ~Mathlib.LinearAlgebra.DFinsupp                              instructions       -12.3%\n+ ~Mathlib.LinearAlgebra.Dual                                  instructions        -4.0%\n+ ~Mathlib.LinearAlgebra.FreeModule.PID                        instructions       -50.9%\n+ ~Mathlib.LinearAlgebra.Multilinear.Basic                     instructions        -9.9%\n+ ~Mathlib.MeasureTheory.Integral.SetToL1                      instructions        -4.9%\n+ ~Mathlib.NumberTheory.NumberField.Units                      instructions        -3.6%\n+ ~Mathlib.RepresentationTheory.Character                      instructions       -28.9%\n+ ~Mathlib.RepresentationTheory.GroupCohomology.Resolution     instructions       -56.0%\n+ ~Mathlib.RingTheory.DedekindDomain.AdicValuation             instructions       -24.2%\n+ ~Mathlib.RingTheory.IsTensorProduct                          instructions        -9.3%\n+ ~Mathlib.RingTheory.Kaehler                                  instructions        -2.9%\n+ ~Mathlib.RingTheory.PowerSeries.Basic                        instructions       -12.4%\n+ ~Mathlib.RingTheory.RootsOfUnity.Basic                       instructions        -6.1%\n+ ~Mathlib.RingTheory.Trace                                    instructions        -6.5%\n```",
              "author": {
                "login": "leanprover-bot"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "3414e9be6063d4dde60e894f2edf3ca4c9852d4c"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "10184518617bf21bb52d702f8af1ac5a42aae628"
              }
            },
            {
              "__typename": "AssignedEvent",
              "id": "AE_lADOFcwZ1c500zI2zwAAAAKCaXKN",
              "createdAt": "2023-10-26T10:26:44Z",
              "assignee": {
                "id": "MDQ6VXNlcjIxMTY1NzA=",
                "login": "Vierkantor"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5lSJXU",
              "createdAt": "2023-10-26T10:27:55Z",
              "body": "",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5lSJja",
              "createdAt": "2023-10-26T10:28:22Z",
              "body": "Can you add a file in `test/` that demonstrates that the inferred type of non-dependent funlikes is improved?",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5lSKNt",
              "createdAt": "2023-10-26T10:29:53Z",
              "body": "",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5lSMXK",
              "createdAt": "2023-10-26T10:35:12Z",
              "body": "",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5lSMoa",
              "createdAt": "2023-10-26T10:35:52Z",
              "body": "",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5lSM-A",
              "createdAt": "2023-10-26T10:36:42Z",
              "body": "",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5lSNV2",
              "createdAt": "2023-10-26T10:37:37Z",
              "body": "",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5lSKvk",
              "createdAt": "2023-10-26T10:31:11Z",
              "body": "I'm impressed by the results, but I must say I'm not convinced that this is the way to go with respect to readability/ease of use. I count 46 files with code improvements and 40 files with code regressions (such as `rw` becoming `erw`, extra arguments needing to be specified, etc.). To have to make a manual choice between the two `hasCoeToFun` and `ndHasCoeToFun` instances seems likely to cause confusion.\r\n\r\nIdeally we'd assign `hasCoeToFun` a type that beta-reduces more eagerly so there is no duplication at all. I have an idea, let me see how far I get...",
              "author": {
                "login": "Vierkantor"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5qJnjL",
              "createdAt": "2023-10-26T11:09:44Z",
              "body": "> I have an idea, let me see how far I get...\r\n\r\nAnswer: not far enough. `expandCoe` does a `headBeta` on the expression, which means that this shortcut instance does work but any tricks inside the original instance's type does not. So the way to go is indeed either a change in Lean core or to have this shortcut instance.",
              "author": {
                "login": "Vierkantor"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5qJsw0",
              "createdAt": "2023-10-26T11:25:47Z",
              "body": "What would the change to Lean core look like?",
              "author": {
                "login": "ericrbg"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "176dadf90ae130cad202c55c27440c01ef7c4145"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5qLTjZ",
              "createdAt": "2023-10-26T15:24:34Z",
              "body": "> What would the change to Lean core look like?\r\n\r\nI think we'd need to modify [`expandCoe`](https://github.com/leanprover/lean4/blob/6c5f79c0df01e9cd74ac4ee411ec392a5ac1b5d3/src/Lean/Meta/Coe.lean#L32) to do more aggressive `β` reduction. (But I haven't tried out if that indeed works.)",
              "author": {
                "login": "Vierkantor"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c500zI2zwAAAAKFkZJ0",
              "createdAt": "2023-11-01T10:36:29Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "3e44aca83ec8b6b75f409c89a221076af8a92ca9"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c500zI2zwAAAAKGhM_F",
              "createdAt": "2023-11-02T17:05:27Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "8e4680ce760e9c145389c3afab2fa9aea0b908e2"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5q55bl",
              "createdAt": "2023-11-04T21:44:56Z",
              "body": "Following discussion on [Zulip](https://leanprover.zulipchat.com/#narrow/stream/144837-PR-reviews/topic/.237905.20instance.20for.20non-dependent.20.60FunLike.60) and testing in #8185, you should delete the new instance and replace `FunLike.hasCoeToFun` with \r\n```lean \r\ninstance (priority := 100) hasCoeToFun : CoeFun F (fun _ ↦ ∀ a : α, β a) where\r\n  coe := @FunLike.coe _ _ β _ -- need to make explicit to beta reduce for non-dependent functions\r\n```\r\nthis will expose the function signature to beta reduction and yield the same benefits without the duplicate instance. ",
              "author": {
                "login": "mattrobball"
              }
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5POOzR",
              "createdAt": "2023-11-06T11:35:56Z",
              "source": {
                "id": "PR_kwDOFcwZ1c5cQbgT",
                "title": "perf: try to speed up ideal quotient =?= submodule quotient",
                "url": "https://github.com/leanprover-community/mathlib4/pull/7584"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c500zI2zwAAAAKLzvwu",
              "createdAt": "2023-11-12T22:38:33Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c500zI2zwAAAAKMJQqC",
              "createdAt": "2023-11-13T12:30:18Z"
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5PVsCB",
              "createdAt": "2023-11-13T12:57:51Z",
              "source": {
                "id": "PR_kwDOFcwZ1c5fS5Xj",
                "title": "perf: improve elaboration of `FunLike.coe`",
                "url": "https://github.com/leanprover-community/mathlib4/pull/8384"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5rxey8",
              "createdAt": "2023-11-13T13:07:44Z",
              "body": "@negiizhao Please let us know your thoughts on this PR. Your insight on the performance impact from the extra beta expansion, your identification of a viable fix, and the hard work in making Mathlib build are the vast majority of the work here. \r\n\r\nGiven the benefits, it would be nice to get this merged asap. 🙏 ",
              "author": {
                "login": "mattrobball"
              }
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5ryXcI",
              "createdAt": "2023-11-13T15:19:49Z",
              "body": "What is the difference between the files in this PR and #8185? Can we close this one in favor of #8185?",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5PW1ZS",
              "createdAt": "2023-11-14T07:49:32Z",
              "source": {
                "id": "PR_kwDOFcwZ1c5fT0Nt",
                "title": "[Merged by Bors] - fix(Mathlib/Algebra/Lie/DirectSum): remove unused `R` argument from lemmas",
                "url": "https://github.com/leanprover-community/mathlib4/pull/8388"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "be379028e46e44df6fbd7f598fece3a87dc8d7b6"
              }
            },
            {
              "__typename": "RenamedTitleEvent"
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "770cf0c5eb81d858018fde2369988deac6212cab"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "ee13762cab438c587f15fb8dc3622602bdfc9b8f"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "05cf3f6b86853de0d5b53abaa308222cc3dbada2"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c500zI2zwAAAAKNopWR",
              "createdAt": "2023-11-15T11:19:56Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5sBiON",
              "createdAt": "2023-11-15T11:25:44Z",
              "body": "Great! 😊 Can you adjust the title and body of the PR and quickly compare to the fixes in #8185 to make sure things are as minimal as possible before merging? Thanks!\n\nbors delegate+",
              "author": {
                "login": "mattrobball"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5sBiPv",
              "createdAt": "2023-11-15T11:25:47Z",
              "body": ":v: negiizhao can now approve this pull request. To approve and merge a pull request, simply reply with `bors r+`. More detailed instructions are available [here](https://bors.tech/documentation/getting-started/#reviewing-pull-requests).",
              "author": {
                "login": "mathlib-bors"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "4752f1c0b420e38496a8f93e3ddd075074b41cbe"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "40912e769d996d85d16a04e58b418a94a63f47a8"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "6267d0a8a6f40df41577f381879a00065f4f5dff"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5sCUO6",
              "createdAt": "2023-11-15T13:34:10Z",
              "body": "!bench",
              "author": {
                "login": "FR-vdash-bot"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5nPQNN",
              "createdAt": "2023-11-15T13:38:18Z",
              "body": "",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5nPReh",
              "createdAt": "2023-11-15T13:41:06Z",
              "body": "",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5nPTrX",
              "createdAt": "2023-11-15T13:45:31Z",
              "body": "",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5nPUHP",
              "createdAt": "2023-11-15T13:46:30Z",
              "body": "",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5nPUZ2",
              "createdAt": "2023-11-15T13:47:08Z",
              "body": "",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "b1bebb12c560ccc5a007de4d4ecbb548b85e767b"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "bd9dd94a7cbf807f27d0946e62317cfc73e0b6ce"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5sCpsj",
              "createdAt": "2023-11-15T14:29:03Z",
              "body": "Here are the [benchmark results](http://speed.lean-fro.org/mathlib4/run-detail/30464d9a-d5fd-489f-b9e5-92731f2c6aff) for commit 6267d0a8a6f40df41577f381879a00065f4f5dff.\nThere were [significant changes](http://speed.lean-fro.org/mathlib4/compare/948b078d-cf16-48b2-9187-075a8321fed8/to/30464d9a-d5fd-489f-b9e5-92731f2c6aff) against commit 91e2d0262ffc96bd9321ce396fc50932e95fa6e9:\n```diff\n  Benchmark                                                    Metric         Change\n  ==================================================================================\n+ build                                                        linting         -8.9%\n+ lint                                                         instructions    -7.7%\n+ lint                                                         wall-clock      -7.7%\n+ ~Mathlib.Algebra.Category.ModuleCat.ChangeOfRings            instructions    -7.8%\n+ ~Mathlib.Algebra.Category.Ring.Constructions                 instructions   -39.0%\n+ ~Mathlib.Algebra.DirectLimit                                 instructions   -19.7%\n+ ~Mathlib.Algebra.Homology.ModuleCat                          instructions   -32.0%\n+ ~Mathlib.Algebra.Jordan.Basic                                instructions    -5.9%\n+ ~Mathlib.Algebra.Lie.Weights.Basic                           instructions   -10.0%\n+ ~Mathlib.Algebra.Module.PID                                  instructions    -5.1%\n+ ~Mathlib.AlgebraicGeometry.EllipticCurve.Point               instructions    -4.6%\n+ ~Mathlib.AlgebraicGeometry.ProjectiveSpectrum.Scheme         instructions    -7.3%\n+ ~Mathlib.AlgebraicGeometry.Properties                        instructions    -9.9%\n+ ~Mathlib.AlgebraicGeometry.Spec                              instructions   -11.7%\n+ ~Mathlib.Analysis.NormedSpace.Multilinear                    instructions    -3.9%\n+ ~Mathlib.Analysis.NormedSpace.OperatorNorm                   instructions    -2.1%\n+ ~Mathlib.CategoryTheory.LiftingProperties.Adjunction         instructions   -23.0%\n+ ~Mathlib.CategoryTheory.Monoidal.Internal.Module             instructions    -6.7%\n+ ~Mathlib.Combinatorics.HalesJewett                           instructions   -82.2%\n+ ~Mathlib.Data.Sum.Lattice                                    instructions   -40.8%\n+ ~Mathlib.FieldTheory.AbelRuffini                             instructions    -6.2%\n+ ~Mathlib.FieldTheory.Adjoin                                  instructions    -4.2%\n+ ~Mathlib.Geometry.Manifold.Algebra.LeftInvariantDerivation   instructions    -4.3%\n+ ~Mathlib.Geometry.RingedSpace.PresheafedSpace.Gluing         instructions    -2.2%\n+ ~Mathlib.GroupTheory.HNNExtension                            instructions    -7.5%\n+ ~Mathlib.GroupTheory.PushoutI                                instructions   -10.0%\n+ ~Mathlib.LinearAlgebra.CliffordAlgebra.Contraction           instructions    -8.0%\n+ ~Mathlib.LinearAlgebra.CliffordAlgebra.Even                  instructions   -13.7%\n+ ~Mathlib.LinearAlgebra.DFinsupp                              instructions   -13.9%\n+ ~Mathlib.LinearAlgebra.Dual                                  instructions    -4.4%\n- ~Mathlib.LinearAlgebra.FinsuppVectorSpace                    instructions    11.0%\n+ ~Mathlib.LinearAlgebra.FreeModule.PID                        instructions   -45.5%\n+ ~Mathlib.LinearAlgebra.Multilinear.Basic                     instructions    -8.7%\n+ ~Mathlib.MeasureTheory.Integral.SetToL1                      instructions    -4.9%\n+ ~Mathlib.NumberTheory.NumberField.Units                      instructions    -4.1%\n+ ~Mathlib.RepresentationTheory.Action                         instructions    -1.6%\n+ ~Mathlib.RepresentationTheory.Character                      instructions   -28.0%\n+ ~Mathlib.RepresentationTheory.GroupCohomology.Resolution     instructions   -66.7%\n+ ~Mathlib.RepresentationTheory.Rep                            instructions    -4.9%\n+ ~Mathlib.RingTheory.AdjoinRoot                               instructions    -3.5%\n+ ~Mathlib.RingTheory.DedekindDomain.AdicValuation             instructions   -25.0%\n+ ~Mathlib.RingTheory.IsTensorProduct                          instructions   -10.0%\n+ ~Mathlib.RingTheory.Kaehler                                  instructions    -4.4%\n+ ~Mathlib.RingTheory.PowerSeries.Basic                        instructions   -12.7%\n+ ~Mathlib.RingTheory.RootsOfUnity.Basic                       instructions    -7.4%\n+ ~Mathlib.RingTheory.Trace                                    instructions    -6.6%\n+ ~Mathlib.Topology.Sheaves.Stalks                             instructions    -5.1%\n```",
              "author": {
                "login": "leanprover-bot"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5sCr1P",
              "createdAt": "2023-11-15T14:33:57Z",
              "body": "I'm happy with this now, thanks! I'd like to jump into an editor once the cache is ready and fiddle with a couple proofs; please ping me if this PR is green and I haven't already done so. If I don't respond, I'm fine with it being merged in 8 hours.",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "2b7a1d56412c66b959b1c77edff21000d14ef79e"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "73fdc27d738cd180fe58c3b2b78bbd21526d175b"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5sFGMh",
              "createdAt": "2023-11-15T21:18:53Z",
              "body": "bors merge",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c500zI2zwAAAAKOARdj",
              "createdAt": "2023-11-15T21:19:04Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
                "name": "ready-to-merge"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c500zI2zwAAAAKOARfC",
              "createdAt": "2023-11-15T21:19:05Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5sFebu",
              "createdAt": "2023-11-15T22:36:10Z",
              "body": "Pull request successfully merged into master.\n\nBuild succeeded:\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/6883093857/job/18722934735)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/6883093857/job/18722935152)\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/6883093857/job/18722935388)",
              "author": {
                "login": "mathlib-bors"
              }
            },
            {
              "__typename": "RenamedTitleEvent"
            },
            {
              "__typename": "ClosedEvent",
              "id": "CE_lADOFcwZ1c500zI2zwAAAAKOC-vL",
              "createdAt": "2023-11-15T22:36:11Z"
            },
            {
              "__typename": "HeadRefDeletedEvent",
              "id": "HRDE_lADOFcwZ1c500zI2zwAAAAKOC-6l",
              "createdAt": "2023-11-15T22:36:15Z"
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5Pb6v9",
              "createdAt": "2023-11-18T17:39:22Z",
              "source": {
                "id": "PR_kwDOFcwZ1c5f0s6o",
                "title": "[Merged by Bors] - chore: address porting note in Archive/Imo/Imo1994Q1 -- linarith works now",
                "url": "https://github.com/leanprover-community/mathlib4/pull/8496"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "ReferencedEvent"
            }
          ]
        }
      }
    }
  }
}
