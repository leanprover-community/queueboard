{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 292,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "linesthatinterlace"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "Redefine `Set.infesep` and `Set.infsep` to be `EMetric.infsep` and `Metric.infsep`\r\n\r\n---\r\nWhen I created `infsep` two years ago, I think it was an error to overuse dot notation in the way that I did, because it just\r\nmakes it inconsistent with other, similar constructions elsewhere like `Metric.diam`, etc.\r\n\r\nAs such, this refactor removes the dot notation of the original file, and makes some other smaller improvements as part\r\nof streamlining the file, such as removing `[Finite s]` lemmas and keeping only `s.Finite` lemmas.\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n-->\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 1,
        "closed": false,
        "closedAt": null,
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c55kLUc",
              "body": "please mark as `awaiting-review` and merge master if it's ready for review",
              "createdAt": "2024-04-05T11:09:16Z",
              "author": {
                "login": "fpvandoorn"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c55kL1e",
              "body": "Apologies, have been in writing up hell. Not had much time to attend to my PRs.",
              "createdAt": "2024-04-05T11:10:25Z",
              "author": {
                "login": "linesthatinterlace"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c55kNcw",
              "body": "No problem! I'll mark it as `awaiting-author` for now. Please change the labels once it's ready for review.",
              "createdAt": "2024-04-05T11:13:21Z",
              "author": {
                "login": "fpvandoorn"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6WkmKc",
              "body": "I actually think this is a step back: `infsep` makes sense in an emetric space. It's not the same situation as `Metric.ball` vs `EMetric.ball`",
              "createdAt": "2024-12-08T15:13:04Z",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6Wkoun",
              "body": "> I actually think this is a step back: `infsep` makes sense in an emetric space. It's not the same situation as `Metric.ball` vs `EMetric.ball`\n\nHow do you mean?",
              "createdAt": "2024-12-08T15:37:42Z",
              "author": {
                "login": "linesthatinterlace"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6bHw3g",
              "body": "The distinction between the `Metric` and `EMetric` namespaces is that the latter should be for functions that only make sense in extended metric spaces. I guess it is the case for `infsep` (but eg isn't the case for `diam`, so `EMetric.diam` is nonsensical).",
              "createdAt": "2025-01-20T14:01:04Z",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6bIBbj",
              "body": "Does it not make sense in an extended metric? It seems to for me.",
              "createdAt": "2025-01-20T14:29:40Z",
              "author": {
                "login": "linesthatinterlace"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6bJg6T",
              "body": "(I've agreed with you that `EMetric.infsep` makes sense)\r\n\r\nYes, but the distinction isn't \"Does it make sense in an `EMetricSpace`?\" but rather \"Does it not make sense in a `MetricSpace`?\"",
              "createdAt": "2025-01-20T17:33:55Z",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6bJiDq",
              "body": "Ah, I understand. Agreed then.",
              "createdAt": "2025-01-20T17:36:55Z",
              "author": {
                "login": "linesthatinterlace"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "2a9d3b2c9f4fc7e391f0b8c07a9e21444ef1649e",
                "additions": 292,
                "deletions": 361,
                "committedDate": "2024-01-30T17:10:58Z",
                "author": {
                  "name": "Wrenna Robson",
                  "email": "wren.robson@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE5WJQ4Q",
                        "name": "Add annotations",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7714923355/job/21028294881"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE5WJQ8A",
                        "name": "label-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7714923354/job/21028294896"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE5WA-oQ",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7714882410/job/21028159137"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE5WBBgw",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7714882414/job/21028159875"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE5WJRSg",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7714923357/job/21028294986"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE5WBBAg",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7714882410/job/21028159746"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE5WBCcA",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7714882414/job/21028160112"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE5WJSig",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7714923357/job/21028295306"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE5WA_yg",
                        "name": "Check all files imported (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7714882410/job/21028159434"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE5WBAng",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7714882414/job/21028159646"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE5WBDJg",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7714882410/job/21028160294"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE5WA-TQ",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7714882414/job/21028159053"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE5WBCGA",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7714882410/job/21028160024"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE5WA_qw",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7714882414/job/21028159403"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE5WBEPg",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7714882410/job/21028160574"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE5XCX7w",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7714882414/job/21029230575"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAE5WKg-A",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=10129&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            }
          ]
        },
        "createdAt": "2024-01-30T17:15:38Z",
        "deletions": 361,
        "files": {
          "nodes": [
            {
              "path": "Mathlib/Topology/MetricSpace/Infsep.lean",
              "additions": 292,
              "deletions": 361
            }
          ]
        },
        "headRefName": "infsep_refactor",
        "headRefOid": "2a9d3b2c9f4fc7e391f0b8c07a9e21444ef1649e",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c5leqSL",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c7P265b",
              "color": "f9d0c4",
              "name": "awaiting-author"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
              "color": "f99094",
              "name": "merge-conflict"
            }
          ]
        },
        "latestReviews": {
          "nodes": []
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "DIRTY",
        "mergeable": "CONFLICTING",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 10129,
        "potentialMergeCommit": null,
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": null,
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": []
        },
        "reviewThreads": {
          "nodes": []
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjM0MDI1NTky",
              "login": "linesthatinterlace"
            },
            {
              "id": "MDQ6VXNlcjczNzYwMTI=",
              "login": "fpvandoorn"
            },
            {
              "id": "MDQ6VXNlcjE0MDkwNTkz",
              "login": "YaelDillies"
            },
            {
              "id": "U_kgDOB75MNQ",
              "login": "leanprover-community-mathlib4-bot"
            }
          ]
        },
        "state": "OPEN",
        "statusCheckRollup": {
          "contexts": {
            "nodes": [
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAE5WJQ4Q",
                "name": "Add annotations",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7714923355/job/21028294881"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAE5WJQ8A",
                "name": "label-new-contributor",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7714923354/job/21028294896"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAE5WA-oQ",
                "name": "Cancel Previous Runs (CI)",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7714882410/job/21028159137"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAE5WBBgw",
                "name": "Cancel Previous Runs (CI)",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7714882414/job/21028159875"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAE5WJRSg",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7714923357/job/21028294986"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAE5WBBAg",
                "name": "Lint style (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7714882410/job/21028159746"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAE5WBCcA",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7714882414/job/21028160112"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAE5WJSig",
                "name": "Check all files imported",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7714923357/job/21028295306"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAE5WA_yg",
                "name": "Check all files imported (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7714882410/job/21028159434"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAE5WBAng",
                "name": "Check all files imported",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7714882414/job/21028159646"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAE5WBDJg",
                "name": "check workflows (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7714882410/job/21028160294"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAE5WA-TQ",
                "name": "check workflows",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7714882414/job/21028159053"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAE5WBCGA",
                "name": "Build (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7714882410/job/21028160024"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAE5WA_qw",
                "name": "Build",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7714882414/job/21028159403"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAE5WBEPg",
                "name": "Post-CI job (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7714882410/job/21028160574"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAE5XCX7w",
                "name": "Post-CI job",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/7714882414/job/21029230575"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAE5WKg-A",
                "name": "Summary",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=10129&login=leanprover-community&repository=mathlib4"
              }
            ]
          }
        },
        "title": "fix(Topology/MetricSpace/InfSep): Make `infsep` consistent with `diam`, `infdist`",
        "updatedAt": "2025-01-20T17:36:57Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/10129",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "2a9d3b2c9f4fc7e391f0b8c07a9e21444ef1649e"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c59qyedzwAAAALEUHig",
              "createdAt": "2024-02-21T23:27:01Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c55kLUc",
              "createdAt": "2024-04-05T11:09:16Z",
              "body": "please mark as `awaiting-review` and merge master if it's ready for review",
              "author": {
                "login": "fpvandoorn"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c55kL1e",
              "createdAt": "2024-04-05T11:10:25Z",
              "body": "Apologies, have been in writing up hell. Not had much time to attend to my PRs.",
              "author": {
                "login": "linesthatinterlace"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c59qyedzwAAAALhcPH4",
              "createdAt": "2024-04-05T11:12:57Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c55kNcw",
              "createdAt": "2024-04-05T11:13:21Z",
              "body": "No problem! I'll mark it as `awaiting-author` for now. Please change the labels once it's ready for review.",
              "author": {
                "login": "fpvandoorn"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6WkmKc",
              "createdAt": "2024-12-08T15:13:04Z",
              "body": "I actually think this is a step back: `infsep` makes sense in an emetric space. It's not the same situation as `Metric.ball` vs `EMetric.ball`",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6Wkoun",
              "createdAt": "2024-12-08T15:37:42Z",
              "body": "> I actually think this is a step back: `infsep` makes sense in an emetric space. It's not the same situation as `Metric.ball` vs `EMetric.ball`\n\nHow do you mean?",
              "author": {
                "login": "linesthatinterlace"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6bHw3g",
              "createdAt": "2025-01-20T14:01:04Z",
              "body": "The distinction between the `Metric` and `EMetric` namespaces is that the latter should be for functions that only make sense in extended metric spaces. I guess it is the case for `infsep` (but eg isn't the case for `diam`, so `EMetric.diam` is nonsensical).",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6bIBbj",
              "createdAt": "2025-01-20T14:29:40Z",
              "body": "Does it not make sense in an extended metric? It seems to for me.",
              "author": {
                "login": "linesthatinterlace"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6bJg6T",
              "createdAt": "2025-01-20T17:33:55Z",
              "body": "(I've agreed with you that `EMetric.infsep` makes sense)\r\n\r\nYes, but the distinction isn't \"Does it make sense in an `EMetricSpace`?\" but rather \"Does it not make sense in a `MetricSpace`?\"",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6bJiDq",
              "createdAt": "2025-01-20T17:36:55Z",
              "body": "Ah, I understand. Agreed then.",
              "author": {
                "login": "linesthatinterlace"
              }
            }
          ]
        }
      }
    }
  }
}
