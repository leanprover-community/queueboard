{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 45,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "TwoFX"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "This PR changes the definition\r\n```lean\r\nabbrev fromPUnit (X : C) : Discrete PUnit.{v + 1} ⥤ C :=\r\n  (Functor.const _).obj X\r\n```\r\nto\r\n```lean\r\nabbrev fromPUnit (X : C) : Discrete PUnit.{w + 1} ⥤ C :=\r\n  (Functor.const _).obj X\r\n```\r\nand then redefines\r\n```lean\r\ndef StructuredArrow (S : D) (T : C ⥤ D) :=\r\n  Comma (Functor.fromPUnit S) T\r\n```\r\nto\r\n```lean\r\ndef StructuredArrow (S : D) (T : C ⥤ D) :=\r\n  Comma (Functor.fromPUnit.{0} S) T\r\n```\r\n\r\nThe effect of this is that given `{C : Type u₁} [Category.{v₁} C] {D : Type u₂} [Category.{v₂} D] (S : D) (T : C ⥤ D)`, the morphisms of `StructuredArrow S T` no longer live in `max v₁ v₂`, but in `v₁`, as they should. Thus, this PR is basically a better version of #6388.\r\n\r\nMy guess for why we used to have the larger universe is that back in the day, the universes for limits were much more restricted, so stating the results of `Limits/Comma.lean` was not possible if the morphisms of `StructuredArrow` live in `v₁`. Luckily, by now it is possible to state everything correctly, and this PR adjusts `Limits/Comma.lean` and `Limits/Over.lean` accordingly.\r\n\r\n---\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n-->\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 5,
        "closed": true,
        "closedAt": "2023-08-28T22:49:46Z",
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c5lHYoy",
              "body": "I also believe this is a nice improvement. Thanks!\r\n\r\nbors merge",
              "createdAt": "2023-08-28T21:25:54Z",
              "author": {
                "login": "joelriou"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5lHwHB",
              "body": "Pull request successfully merged into master.\n\n  Build succeeded!\n\n  The publicly hosted instance of bors-ng is deprecated and will go away soon.\n\n  If you want to self-host your own instance, [instructions are here][instructions].\n  For more help, visit [the forum].\n\n  If you want to switch to GitHub's built-in merge queue, visit [their help page][gh].\n\n  [instructions]: https://github.com/bors-ng/bors-ng#how-to-set-up-your-own-real-instance\n  [the forum]: https://forum.bors.tech\n  [gh]: https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/configuring-pull-request-merges/managing-a-merge-queue\n\n\n\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/6005219707/job/16287488045)\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/6005219707/job/16287487645)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/6005219707/job/16287487890)",
              "createdAt": "2023-08-28T22:49:44Z",
              "author": {
                "login": "bors"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "c3d3b401cc16fcef473e13334a4e3f4fa373a092",
                "additions": 1,
                "deletions": 1,
                "committedDate": "2023-08-06T10:19:57Z",
                "author": {
                  "name": "Markus Himmel",
                  "email": "markus@himmel-villmar.de"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "2dadbcb2feb64b099cede24821342c176206c0ed",
                "additions": 22,
                "deletions": 17,
                "committedDate": "2023-08-06T11:33:10Z",
                "author": {
                  "name": "Markus Himmel",
                  "email": "markus@himmel-villmar.de"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "e3126ad183c6e1074d8cc31750881a8f1592d076",
                "additions": 8,
                "deletions": 8,
                "committedDate": "2023-08-06T11:35:22Z",
                "author": {
                  "name": "Markus Himmel",
                  "email": "markus@himmel-villmar.de"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "86954c88d37259cbda48b8f56b5db40df8c23464",
                "additions": 0,
                "deletions": 6,
                "committedDate": "2023-08-06T12:03:37Z",
                "author": {
                  "name": "Markus Himmel",
                  "email": "markus@himmel-villmar.de"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "3fa417542f244777c49c24f6f8467018add9efad",
                "additions": 18121,
                "deletions": 14114,
                "committedDate": "2023-08-13T12:23:00Z",
                "author": {
                  "name": "Markus Himmel",
                  "email": "markus@himmel-villmar.de"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "5030843b7f1f8b366126f6b80a8eba4a47258fde",
                "additions": 11,
                "deletions": 11,
                "committedDate": "2023-08-13T12:28:04Z",
                "author": {
                  "name": "Markus Himmel",
                  "email": "markus@himmel-villmar.de"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "ad8dd0fefbbaf22d3e4cd2e9ea163893b694397d",
                "additions": 4,
                "deletions": 0,
                "committedDate": "2023-08-13T13:50:32Z",
                "author": {
                  "name": "Markus Himmel",
                  "email": "markus@himmel-villmar.de"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "fe51b9a1906385859c30be86f53c6733729c7c65",
                "additions": 16064,
                "deletions": 7121,
                "committedDate": "2023-08-25T20:03:13Z",
                "author": {
                  "name": "Markus Himmel",
                  "email": "markus@himmel-villmar.de"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "2b034b16fa6964886ae81c67db3c0a408fab1b85",
                "additions": 2,
                "deletions": 2,
                "committedDate": "2023-08-25T20:04:42Z",
                "author": {
                  "name": "Markus Himmel",
                  "email": "markus@himmel-villmar.de"
                },
                "statusCheckRollup": null
              }
            }
          ]
        },
        "createdAt": "2023-08-06T12:12:39Z",
        "deletions": 42,
        "files": {
          "nodes": [
            {
              "path": "Mathlib/CategoryTheory/Closed/Zero.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/CategoryTheory/Limits/Comma.lean",
              "additions": 22,
              "deletions": 17
            },
            {
              "path": "Mathlib/CategoryTheory/Limits/Over.lean",
              "additions": 8,
              "deletions": 8
            },
            {
              "path": "Mathlib/CategoryTheory/PUnit.lean",
              "additions": 7,
              "deletions": 7
            },
            {
              "path": "Mathlib/CategoryTheory/StructuredArrow.lean",
              "additions": 6,
              "deletions": 8
            }
          ]
        },
        "headRefName": "puniverse",
        "headRefOid": "2b034b16fa6964886ae81c67db3c0a408fab1b85",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c5XRQCx",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
              "color": "06e039",
              "name": "ready-to-merge"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABViJTYQ",
              "color": "33dbec",
              "name": "t-category-theory"
            }
          ]
        },
        "latestReviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5dn-3Z",
              "body": "In general I think that this is probably the right approach; I think it's good to have a bit more control over exactly which universes you're allowing limits over rather than just announcing `[HasLimits X]`.",
              "state": "APPROVED",
              "author": {
                "login": "kbuzzard"
              },
              "submittedAt": "2023-08-09T23:25:48Z"
            }
          ]
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "UNKNOWN",
        "mergeable": "UNKNOWN",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 6397,
        "potentialMergeCommit": null,
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": "APPROVED",
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5dn-3Z",
              "body": "In general I think that this is probably the right approach; I think it's good to have a bit more control over exactly which universes you're allowing limits over rather than just announcing `[HasLimits X]`.",
              "state": "APPROVED",
              "author": {
                "login": "kbuzzard"
              },
              "submittedAt": "2023-08-09T23:25:48Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5d7Ucf",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "TwoFX"
              },
              "submittedAt": "2023-08-13T13:51:33Z"
            }
          ]
        },
        "reviewThreads": {
          "nodes": [
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5M2fEW",
                    "body": "How about \r\n```\r\nabbrev fromUnit (X : C) : Discrete Unit ⥤ C :=\r\n``` \r\ninstead then? (plus some comment about why you don't want this to be polymorphic). ",
                    "createdAt": "2023-08-09T23:24:17Z",
                    "author": {
                      "login": "kbuzzard"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5NDnoA",
                    "body": "I ended up making the universe of `PUnit` fully explicit everywhere in the file and then fixing the universe when defining the category of (co)structured arrows. This made more sense to me than having a single result about `Unit` when the rest of the file is about `PUnit`.",
                    "createdAt": "2023-08-13T13:51:33Z",
                    "author": {
                      "login": "TwoFX"
                    }
                  }
                ]
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjIwNjUzNTI=",
              "login": "TwoFX"
            },
            {
              "id": "MDQ6VXNlcjM3NzcyOTQ5",
              "login": "joelriou"
            },
            {
              "id": "MDQ6VXNlcjMxODY3ODI3",
              "login": "kbuzzard"
            }
          ]
        },
        "state": "CLOSED",
        "statusCheckRollup": null,
        "title": "[Merged by Bors] - refactor: move morphisms in StructuredArrow to a lower universe",
        "updatedAt": "2023-08-28T22:49:51Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/6397",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "c3d3b401cc16fcef473e13334a4e3f4fa373a092"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "2dadbcb2feb64b099cede24821342c176206c0ed"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "e3126ad183c6e1074d8cc31750881a8f1592d076"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "86954c88d37259cbda48b8f56b5db40df8c23464"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5tkHpxzwAAAAJVEn7d",
              "createdAt": "2023-08-06T12:12:39Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5tkHpxzwAAAAJVEn7g",
              "createdAt": "2023-08-06T12:12:39Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABViJTYQ",
                "name": "t-category-theory"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5dn-3Z",
              "createdAt": "2023-08-09T23:24:17Z",
              "body": "In general I think that this is probably the right approach; I think it's good to have a bit more control over exactly which universes you're allowing limits over rather than just announcing `[HasLimits X]`.",
              "author": {
                "login": "kbuzzard"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "3fa417542f244777c49c24f6f8467018add9efad"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5tkHpxzwAAAAJYzZb6",
              "createdAt": "2023-08-13T12:27:49Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5tkHpxzwAAAAJYzZb_",
              "createdAt": "2023-08-13T12:27:49Z",
              "label": {
                "id": "MDU6TGFiZWwzMjcxMjQ0NzU5",
                "name": "WIP"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "5030843b7f1f8b366126f6b80a8eba4a47258fde"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5tkHpxzwAAAAJYzaLv",
              "createdAt": "2023-08-13T12:29:59Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKteTVQ",
                "name": "awaiting-CI"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5tkHpxzwAAAAJYzv-d",
              "createdAt": "2023-08-13T13:21:53Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKteTVQ",
                "name": "awaiting-CI"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5tkHpxzwAAAAJYz6sH",
              "createdAt": "2023-08-13T13:47:56Z",
              "label": {
                "id": "MDU6TGFiZWwzMjcxMjQ0NzU5",
                "name": "WIP"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5tkHpxzwAAAAJYz6sI",
              "createdAt": "2023-08-13T13:47:57Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "ad8dd0fefbbaf22d3e4cd2e9ea163893b694397d"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "fe51b9a1906385859c30be86f53c6733729c7c65"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "2b034b16fa6964886ae81c67db3c0a408fab1b85"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5lHYoy",
              "createdAt": "2023-08-28T21:25:54Z",
              "body": "I also believe this is a nice improvement. Thanks!\r\n\r\nbors merge",
              "author": {
                "login": "joelriou"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5tkHpxzwAAAAJgztL5",
              "createdAt": "2023-08-28T21:26:08Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
                "name": "ready-to-merge"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5tkHpxzwAAAAJgztN9",
              "createdAt": "2023-08-28T21:26:09Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5lHwHB",
              "createdAt": "2023-08-28T22:49:44Z",
              "body": "Pull request successfully merged into master.\n\n  Build succeeded!\n\n  The publicly hosted instance of bors-ng is deprecated and will go away soon.\n\n  If you want to self-host your own instance, [instructions are here][instructions].\n  For more help, visit [the forum].\n\n  If you want to switch to GitHub's built-in merge queue, visit [their help page][gh].\n\n  [instructions]: https://github.com/bors-ng/bors-ng#how-to-set-up-your-own-real-instance\n  [the forum]: https://forum.bors.tech\n  [gh]: https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/configuring-pull-request-merges/managing-a-merge-queue\n\n\n\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/6005219707/job/16287488045)\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/6005219707/job/16287487645)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/6005219707/job/16287487890)",
              "author": {
                "login": "bors"
              }
            },
            {
              "__typename": "RenamedTitleEvent"
            },
            {
              "__typename": "ClosedEvent",
              "id": "CE_lADOFcwZ1c5tkHpxzwAAAAJg1qFJ",
              "createdAt": "2023-08-28T22:49:46Z"
            },
            {
              "__typename": "HeadRefDeletedEvent",
              "id": "HRDE_lADOFcwZ1c5tkHpxzwAAAAJg1qKq",
              "createdAt": "2023-08-28T22:49:51Z"
            }
          ]
        }
      }
    }
  }
}
