{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 295,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "sgouezel"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "---\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nFor details on the \"pull request lifecycle\" in mathlib, please see:\r\nhttps://leanprover-community.github.io/contribute/index.html\r\n\r\nIn particular, note that most reviewers will only notice your PR\r\nif it passes the continuous integration checks.\r\nPlease ask for help on https://leanprover.zulipchat.com if needed.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nIf you are moving or deleting declarations, please include these lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nMoves:\r\n- Vector.* -> Mathlib.Vector.*\r\n- ...\r\n\r\nDeletions:\r\n- Nat.bit1_add_bit1\r\n- ...\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n\r\n-->\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 3,
        "closed": false,
        "closedAt": null,
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c6OYiYp",
              "body": "### PR summary [622139c156](https://github.com/leanprover-community/mathlib4/pull/17358/commits/622139c156736bb38574f5206e5405570c79ceb7)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ Smooth.tangentMap`\n`+ contMDiffAt_prod_module_iff`\n`+ contMDiffOn_prod_iff`\n`+ contMDiffOn_prod_module_iff`\n`+ contMDiffWithinAt_prod_module_iff`\n`+ contMDiff_prod_module_iff`\n`+ equivTangentBundleProd`\n`+ equivTangentBundleProd_eq_tangentMap_prod_tangentMap`\n`+ mfderiv_prod_eq_add_apply`\n`+ mfderiv_prod_eq_add_comp`\n`+ smooth_equivTangentBundleProd`\n`+ smooth_equivTangentBundleProd_symm`\n`+ tangentMap_prod_left`\n`+ tangentMap_prod_right`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>",
              "createdAt": "2024-10-02T14:28:52Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6OejnH",
              "body": "There is a construction sometimes called `üù±`, which, given vector bundles `E‚ÇÅ` over `M‚ÇÅ` and `E‚ÇÇ` over `M‚ÇÇ`, constructs a vector bundle over `M‚ÇÅ √ó M‚ÇÇ`.  This construction could be built out of the vector-bundle construction tools we already have in the library: let `p‚ÇÅ : M‚ÇÅ √ó M‚ÇÇ ‚Üí M‚ÇÅ` denote projection onto the first co-ordinate, let `p‚ÇÇ` denote projection onto the second co-ordinate; then define `E‚ÇÅ üù± E‚ÇÇ` to be `p‚ÇÅ ^* E‚ÇÅ ‚äï p‚ÇÇ ^* E‚ÇÇ` (where I am using `^*` to denote pullback).\r\n\r\nWould it make sense to state your result for `TangentBundle I M üù± TangentBundle I' M'` rather than `(TangentBundle I M) √ó (TangentBundle I' M')`?  Then your `Equiv` is actually an `Equiv` between two vector bundles over the same base `M √ó M'`.\r\n\r\nYou could even express your isomorphism as a section of the Hom-bundle from  `TangentBundle (I √ó I') (M √ó M')` to `TangentBundle I M üù± TangentBundle I' M'` (and prove that if such a section is a pointwise isomorphism of fibres then it gives rise to a bijection between the total spaces).",
              "createdAt": "2024-10-03T02:29:01Z",
              "author": {
                "login": "hrmacbeth"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6OfdUn",
              "body": "Yes, I thought about that. But to me it looks more a way to reformulate the statement in a nice setting, than to a way to streamline the proof: the difficulty is to show that a map into the tangent bundle of a product is smooth, and for that I don't see a silver bullet. In fact, the proof I use follows essentially the intuition you give -- it's just more nontrivial than I would have thought, but maybe that's the way it has to be.\r\n\r\nFor my application, I really need the isomorphism with the product (to show that invariant vector fields on Lie groups are smooth), so for now I think I'll keep it like that.",
              "createdAt": "2024-10-03T06:18:32Z",
              "author": {
                "login": "sgouezel"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6Oi_fa",
              "body": "If you don't mind, let me follow up to understand better. I would think of the smoothness proof as breaking into three parts:\r\n- smoothness of the section of the Hom-vector bundle (vector bundle of fibrewise homomorphisms from `TangentBundle (I √ó I') (M √ó M')` to `TangentBundle I M üù± TangentBundle I' M'`)\r\n- if E, F are vector bundles over M and œÜ is a smooth section of Hom(E, F) then the induced map from the total space of E to the total space of F is also smooth\r\n- if E, F are vector bundles (over different spaces), then the natural map from \"total space of `E üù± F`\" to the product of \"total space of E\" and \"total space of F\" is smooth.\r\n\r\nDo you have a sense of which of these three steps is the awkward one?",
              "createdAt": "2024-10-03T14:15:45Z",
              "author": {
                "login": "hrmacbeth"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6OjIZ6",
              "body": "Note that there are two directions of smoothness in my goal: smoothness of `TangentBundle (I x I') (M x M') -> (TangentBundle I M) x (TangentBundle I' M')`, and the reverse direction. Only the reverse direction is nontrivial. In your sketch, I think the messy part is the reverse direction of your third point, i.e., showing smoothness of the map `(TotalSpace E) x (TotalSpace F) -> TotalSpace (E üù± F)` (because it does not break up nicely in the product of two maps). But maybe it's worth fighting the mess just once in this general situation than doing it specifically for tangent bundles -- and maybe this would separate the issues and end up with something nicer. ",
              "createdAt": "2024-10-03T14:30:15Z",
              "author": {
                "login": "sgouezel"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6OjJV1",
              "body": "(Maybe the reverse direction of the first point is also a little bit messy, by the way :-)",
              "createdAt": "2024-10-03T14:31:48Z",
              "author": {
                "login": "sgouezel"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6Okl9_",
              "body": "Ah, I see!  I had indeed missed that the backward direction was the hard one!\r\n\r\nTo show smoothness of `(TotalSpace E) x (TotalSpace F) ‚Üí TotalSpace (E üù± F)`, we need the following two constructions (which in fact could themselves be unified, but that's probably not worth it):\r\n\r\n> **Universal property of the pullback bundle:** Given a vector bundle `V` over `A` and a smooth map p : B ‚Üí A, and given maps f : X ‚Üí total(V) and g : X ‚Üí B with ‚àÄ x, p_V(f(x)) = p(g(x)), to construct a smooth map : X ‚Üí total(p ^* V).\r\n\r\n[apply this with A := M, V := E, B := M x N, X := total(E) x N, p‚ÇÅ : M x N ‚Üí M the projection onto the first factor, to get a smooth map from total(E) x N to total(p‚ÇÅ ^* E)]\r\n\r\n> **Universal property of the direct sum of two vector bundles:** Given vector bundles V and W over A, and maps f : X ‚Üí total(V) and g : X ‚Üí total(W) with ‚àÄ x, p_V(f(x)) = p_W(g(x)), to construct a smooth map f ‚äï g : X ‚Üí total(V ‚äï W).\r\n\r\n[apply this with A := M x N, V := p‚ÇÅ ^* E, W := p‚ÇÇ ^* F, X := total(E) x total(F), so f : total(E) x total(F) ‚Üí total(p‚ÇÅ ^* E) and g : total(E) x total(F) ‚Üí total(p‚ÇÇ ^* F), which we want to glue to get f ‚äï g : total(E) x total(F) ‚Üí total(p‚ÇÅ ^* E ‚äï p‚ÇÇ ^* F).]",
              "createdAt": "2024-10-03T17:32:11Z",
              "author": {
                "login": "hrmacbeth"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6OleV5",
              "body": "I wrote down the statements which I think are true and sufficient: https://github.com/leanprover-community/mathlib4/tree/HM-universal-properties-vb\r\n\r\nIt makes my head hurt enough that I'm not sure :)",
              "createdAt": "2024-10-03T19:38:03Z",
              "author": {
                "login": "hrmacbeth"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6Ox47l",
              "body": "Nice! Your approach is definitely much more promising that what I'm doing -- both more satisfactory and more general, avoiding the specificities of the tangent bundle to highlight what is really going on in the general situation.",
              "createdAt": "2024-10-06T13:34:27Z",
              "author": {
                "login": "sgouezel"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "622139c156736bb38574f5206e5405570c79ceb7",
                "additions": 295,
                "deletions": 4,
                "committedDate": "2024-10-02T14:00:40Z",
                "author": {
                  "name": "sgouezel",
                  "email": "sebastien.gouezel@univ-rennes1.fr"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHNlI2jg",
                        "name": "Add topic label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11145771618/job/30976128654"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHNlI2xg",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11145771620/job/30976128710"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHNlI2tA",
                        "name": "build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11145771637/job/30976128692"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHNjlnMA",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11145276333/job/30974502704"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHNjlnYQ",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11145276330/job/30974502753"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHNlI4gw",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11145771621/job/30976129155"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHNjlqdw",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11145276333/job/30974503543"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHNjlpYg",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11145276330/job/30974503266"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHNlI2rg",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11145771621/job/30976128686"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHNjlo7Q",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11145276333/job/30974503149"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHNjlrLQ",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11145276330/job/30974503725"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHNjlsMA",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11145276333/job/30974503984"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHNkRGyQ",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11145276330/job/30975215305"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHNlJb1w",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/30976138199"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHNlKuTw",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=17358&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            }
          ]
        },
        "createdAt": "2024-10-02T14:28:07Z",
        "deletions": 4,
        "files": {
          "nodes": [
            {
              "path": "Mathlib/Geometry/Manifold/ContMDiff/Product.lean",
              "additions": 34,
              "deletions": 2
            },
            {
              "path": "Mathlib/Geometry/Manifold/ContMDiffMFDeriv.lean",
              "additions": 215,
              "deletions": 0
            },
            {
              "path": "Mathlib/Geometry/Manifold/MFDeriv/SpecificFunctions.lean",
              "additions": 46,
              "deletions": 2
            }
          ]
        },
        "headRefName": "SG_tangent_prod",
        "headRefOid": "622139c156736bb38574f5206e5405570c79ceb7",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c59Ylu3",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "MDU6TGFiZWwzMjcxMjQ0NzU5",
              "color": "e899cd",
              "name": "WIP"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
              "color": "f99094",
              "name": "merge-conflict"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABViJYYw",
              "color": "33dbec",
              "name": "t-differential-geometry"
            }
          ]
        },
        "latestReviews": {
          "nodes": []
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "UNKNOWN",
        "mergeable": "UNKNOWN",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 17358,
        "potentialMergeCommit": null,
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": null,
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": []
        },
        "reviewThreads": {
          "nodes": []
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjEwODE4NDM0",
              "login": "sgouezel"
            },
            {
              "id": "MDQ6VXNlcjI1MzE2MTYy",
              "login": "hrmacbeth"
            },
            {
              "id": "U_kgDOBcsTTQ",
              "login": "leanprover-community-bot-assistant"
            }
          ]
        },
        "state": "OPEN",
        "statusCheckRollup": {
          "contexts": {
            "nodes": [
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHNlI2jg",
                "name": "Add topic label",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11145771618/job/30976128654"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHNlI2xg",
                "name": "label-and-report-new-contributor",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11145771620/job/30976128710"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHNlI2tA",
                "name": "build",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11145771637/job/30976128692"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHNjlnMA",
                "name": "Cancel Previous Runs (CI)",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11145276333/job/30974502704"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHNjlnYQ",
                "name": "Cancel Previous Runs (CI)",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11145276330/job/30974502753"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHNlI4gw",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11145771621/job/30976129155"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHNjlqdw",
                "name": "Lint style (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11145276333/job/30974503543"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHNjlpYg",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11145276330/job/30974503266"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHNlI2rg",
                "name": "Check all files imported",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11145771621/job/30976128686"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHNjlo7Q",
                "name": "Build (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11145276333/job/30974503149"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHNjlrLQ",
                "name": "Build",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11145276330/job/30974503725"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHNjlsMA",
                "name": "Post-CI job (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11145276333/job/30974503984"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHNkRGyQ",
                "name": "Post-CI job",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11145276330/job/30975215305"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHNlJb1w",
                "name": "New Contributor Check",
                "conclusion": "NEUTRAL",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/30976138199"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHNlKuTw",
                "name": "Summary",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=17358&login=leanprover-community&repository=mathlib4"
              }
            ]
          }
        },
        "title": "feat: the tangent bundle of a product is isomorphic to the product of the tangent bundles",
        "updatedAt": "2024-10-24T20:43:25Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/17358",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6YspKkzwAAAANfp8Uq",
              "createdAt": "2024-10-02T14:28:07Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABViJYYw",
                "name": "t-differential-geometry"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6OYiYp",
              "createdAt": "2024-10-02T14:28:52Z",
              "body": "### PR summary [622139c156](https://github.com/leanprover-community/mathlib4/pull/17358/commits/622139c156736bb38574f5206e5405570c79ceb7)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ Smooth.tangentMap`\n`+ contMDiffAt_prod_module_iff`\n`+ contMDiffOn_prod_iff`\n`+ contMDiffOn_prod_module_iff`\n`+ contMDiffWithinAt_prod_module_iff`\n`+ contMDiff_prod_module_iff`\n`+ equivTangentBundleProd`\n`+ equivTangentBundleProd_eq_tangentMap_prod_tangentMap`\n`+ mfderiv_prod_eq_add_apply`\n`+ mfderiv_prod_eq_add_comp`\n`+ smooth_equivTangentBundleProd`\n`+ smooth_equivTangentBundleProd_symm`\n`+ tangentMap_prod_left`\n`+ tangentMap_prod_right`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6OejnH",
              "createdAt": "2024-10-03T02:29:01Z",
              "body": "There is a construction sometimes called `üù±`, which, given vector bundles `E‚ÇÅ` over `M‚ÇÅ` and `E‚ÇÇ` over `M‚ÇÇ`, constructs a vector bundle over `M‚ÇÅ √ó M‚ÇÇ`.  This construction could be built out of the vector-bundle construction tools we already have in the library: let `p‚ÇÅ : M‚ÇÅ √ó M‚ÇÇ ‚Üí M‚ÇÅ` denote projection onto the first co-ordinate, let `p‚ÇÇ` denote projection onto the second co-ordinate; then define `E‚ÇÅ üù± E‚ÇÇ` to be `p‚ÇÅ ^* E‚ÇÅ ‚äï p‚ÇÇ ^* E‚ÇÇ` (where I am using `^*` to denote pullback).\r\n\r\nWould it make sense to state your result for `TangentBundle I M üù± TangentBundle I' M'` rather than `(TangentBundle I M) √ó (TangentBundle I' M')`?  Then your `Equiv` is actually an `Equiv` between two vector bundles over the same base `M √ó M'`.\r\n\r\nYou could even express your isomorphism as a section of the Hom-bundle from  `TangentBundle (I √ó I') (M √ó M')` to `TangentBundle I M üù± TangentBundle I' M'` (and prove that if such a section is a pointwise isomorphism of fibres then it gives rise to a bijection between the total spaces).",
              "author": {
                "login": "hrmacbeth"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6OfdUn",
              "createdAt": "2024-10-03T06:18:32Z",
              "body": "Yes, I thought about that. But to me it looks more a way to reformulate the statement in a nice setting, than to a way to streamline the proof: the difficulty is to show that a map into the tangent bundle of a product is smooth, and for that I don't see a silver bullet. In fact, the proof I use follows essentially the intuition you give -- it's just more nontrivial than I would have thought, but maybe that's the way it has to be.\r\n\r\nFor my application, I really need the isomorphism with the product (to show that invariant vector fields on Lie groups are smooth), so for now I think I'll keep it like that.",
              "author": {
                "login": "sgouezel"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6Oi_fa",
              "createdAt": "2024-10-03T14:15:45Z",
              "body": "If you don't mind, let me follow up to understand better. I would think of the smoothness proof as breaking into three parts:\r\n- smoothness of the section of the Hom-vector bundle (vector bundle of fibrewise homomorphisms from `TangentBundle (I √ó I') (M √ó M')` to `TangentBundle I M üù± TangentBundle I' M'`)\r\n- if E, F are vector bundles over M and œÜ is a smooth section of Hom(E, F) then the induced map from the total space of E to the total space of F is also smooth\r\n- if E, F are vector bundles (over different spaces), then the natural map from \"total space of `E üù± F`\" to the product of \"total space of E\" and \"total space of F\" is smooth.\r\n\r\nDo you have a sense of which of these three steps is the awkward one?",
              "author": {
                "login": "hrmacbeth"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6OjIZ6",
              "createdAt": "2024-10-03T14:30:15Z",
              "body": "Note that there are two directions of smoothness in my goal: smoothness of `TangentBundle (I x I') (M x M') -> (TangentBundle I M) x (TangentBundle I' M')`, and the reverse direction. Only the reverse direction is nontrivial. In your sketch, I think the messy part is the reverse direction of your third point, i.e., showing smoothness of the map `(TotalSpace E) x (TotalSpace F) -> TotalSpace (E üù± F)` (because it does not break up nicely in the product of two maps). But maybe it's worth fighting the mess just once in this general situation than doing it specifically for tangent bundles -- and maybe this would separate the issues and end up with something nicer. ",
              "author": {
                "login": "sgouezel"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6OjJV1",
              "createdAt": "2024-10-03T14:31:48Z",
              "body": "(Maybe the reverse direction of the first point is also a little bit messy, by the way :-)",
              "author": {
                "login": "sgouezel"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6Okl9_",
              "createdAt": "2024-10-03T17:32:11Z",
              "body": "Ah, I see!  I had indeed missed that the backward direction was the hard one!\r\n\r\nTo show smoothness of `(TotalSpace E) x (TotalSpace F) ‚Üí TotalSpace (E üù± F)`, we need the following two constructions (which in fact could themselves be unified, but that's probably not worth it):\r\n\r\n> **Universal property of the pullback bundle:** Given a vector bundle `V` over `A` and a smooth map p : B ‚Üí A, and given maps f : X ‚Üí total(V) and g : X ‚Üí B with ‚àÄ x, p_V(f(x)) = p(g(x)), to construct a smooth map : X ‚Üí total(p ^* V).\r\n\r\n[apply this with A := M, V := E, B := M x N, X := total(E) x N, p‚ÇÅ : M x N ‚Üí M the projection onto the first factor, to get a smooth map from total(E) x N to total(p‚ÇÅ ^* E)]\r\n\r\n> **Universal property of the direct sum of two vector bundles:** Given vector bundles V and W over A, and maps f : X ‚Üí total(V) and g : X ‚Üí total(W) with ‚àÄ x, p_V(f(x)) = p_W(g(x)), to construct a smooth map f ‚äï g : X ‚Üí total(V ‚äï W).\r\n\r\n[apply this with A := M x N, V := p‚ÇÅ ^* E, W := p‚ÇÇ ^* F, X := total(E) x total(F), so f : total(E) x total(F) ‚Üí total(p‚ÇÅ ^* E) and g : total(E) x total(F) ‚Üí total(p‚ÇÇ ^* F), which we want to glue to get f ‚äï g : total(E) x total(F) ‚Üí total(p‚ÇÅ ^* E ‚äï p‚ÇÇ ^* F).]",
              "author": {
                "login": "hrmacbeth"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6OleV5",
              "createdAt": "2024-10-03T19:38:03Z",
              "body": "I wrote down the statements which I think are true and sufficient: https://github.com/leanprover-community/mathlib4/tree/HM-universal-properties-vb\r\n\r\nIt makes my head hurt enough that I'm not sure :)",
              "author": {
                "login": "hrmacbeth"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6Ox47l",
              "createdAt": "2024-10-06T13:34:27Z",
              "body": "Nice! Your approach is definitely much more promising that what I'm doing -- both more satisfactory and more general, avoiding the specificities of the tangent bundle to highlight what is really going on in the general situation.",
              "author": {
                "login": "sgouezel"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6YspKkzwAAAANiF5VK",
              "createdAt": "2024-10-06T13:34:33Z",
              "label": {
                "id": "MDU6TGFiZWwzMjcxMjQ0NzU5",
                "name": "WIP"
              }
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5cXN9u",
              "createdAt": "2024-10-10T18:46:33Z",
              "source": {
                "id": "PR_kwDOFcwZ1c5-QmNy",
                "title": "feat: universal properties of vector bundle constructions",
                "url": "https://github.com/leanprover-community/mathlib4/pull/17627"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6YspKkzwAAAAN1o9EX",
              "createdAt": "2024-10-24T20:43:25Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            }
          ]
        }
      }
    }
  }
}
