{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 164,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "eric-wieser"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "Mathlib already knows that the tensor product of two rings is a ring. This splits the instance into multiple intermediate pieces so as to conclude analogous results for non-unital and non-associative rings.\r\n\r\n---\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n-->\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n\r\n~~I don't want to merge this yet because I suspect it will make performance worse in open PRs I care more about.~~\r\n",
        "changedFiles": 3,
        "closed": true,
        "closedAt": "2023-09-27T17:54:36Z",
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c5nLzzN",
              "body": "!bench",
              "createdAt": "2023-09-22T09:59:01Z",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5nMDPD",
              "body": "Here are the [benchmark results](http://speed.lean-fro.org/mathlib4/run-detail/88848488-925b-46b2-8d0d-fbd403643f21) for commit 6319e651d19d143b76365353c7f9453f552539d9.\nThe entire run failed.\nFound no significant differences.",
              "createdAt": "2023-09-22T10:50:16Z",
              "author": {
                "login": "leanprover-bot"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5nQVGA",
              "body": "!bench",
              "createdAt": "2023-09-23T14:46:09Z",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5nQXSq",
              "body": "Here are the [benchmark results](http://speed.lean-fro.org/mathlib4/run-detail/9bbe5f74-6772-48ae-8c62-e58a4e512395) for commit e23f26dd4208bb212da547e2ed3aaff0dd4bd4da.\nThere were [significant changes](http://speed.lean-fro.org/mathlib4/compare/5273f6b7-92a3-4f3e-a201-e4839eaba63a/to/9bbe5f74-6772-48ae-8c62-e58a4e512395) against commit 1d02ef7075e23700fa7e893bd6835ee513faf961:\n```diff\n  Benchmark                                           Metric         Change\n  =========================================================================\n- build                                               wall-clock      37.1%\n+ lint                                                wall-clock      -6.5%\n+ ~Mathlib.LinearAlgebra.CliffordAlgebra.BaseChange   instructions    -6.3%\n+ ~Mathlib.LinearAlgebra.Coevaluation                 instructions    -8.5%\n+ ~Mathlib.LinearAlgebra.TensorProduct.Opposite       instructions   -23.4%\n+ ~Mathlib.RingTheory.MatrixAlgebra                   instructions   -25.1%\n```",
              "createdAt": "2023-09-23T15:30:04Z",
              "author": {
                "login": "leanprover-bot"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5nQfmU",
              "body": "!bench",
              "createdAt": "2023-09-23T18:00:52Z",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5nQhtQ",
              "body": "Here are the [benchmark results](http://speed.lean-fro.org/mathlib4/run-detail/1b7e2499-d287-47eb-ab2e-3ef832ae9b11) for commit b90a2a52e4728d6ef85b6b7126c23f0b5eaa2345.\nThere were [significant changes](http://speed.lean-fro.org/mathlib4/compare/5273f6b7-92a3-4f3e-a201-e4839eaba63a/to/1b7e2499-d287-47eb-ab2e-3ef832ae9b11) against commit 1d02ef7075e23700fa7e893bd6835ee513faf961:\n```diff\n  Benchmark                                           Metric         Change\n  =========================================================================\n- build                                               wall-clock      46.5%\n+ lint                                                wall-clock      -8.5%\n+ ~Mathlib.LinearAlgebra.CliffordAlgebra.BaseChange   instructions    -6.3%\n+ ~Mathlib.LinearAlgebra.Coevaluation                 instructions    -8.5%\n+ ~Mathlib.LinearAlgebra.TensorProduct.Opposite       instructions   -23.4%\n+ ~Mathlib.RingTheory.MatrixAlgebra                   instructions   -25.1%\n```",
              "createdAt": "2023-09-23T18:45:30Z",
              "author": {
                "login": "leanprover-bot"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5nQiw7",
              "body": "!bench",
              "createdAt": "2023-09-23T19:09:20Z",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5nQkMH",
              "body": "Here are the [benchmark results](http://speed.lean-fro.org/mathlib4/run-detail/8b44db75-21ae-4f2e-8e29-be82f8cd468e) for commit 8da9893f71d4762e8e34e312ac0a0f56bc10593c.\nThere were [significant changes](http://speed.lean-fro.org/mathlib4/compare/35fe1414-9424-48e4-84d4-1ca488d1e62e/to/8b44db75-21ae-4f2e-8e29-be82f8cd468e) against commit f0d1951adc1e4952c440136325f5ca8617ab491a:\n```diff\n  Benchmark                                           Metric         Change\n  =========================================================================\n+ ~Mathlib.LinearAlgebra.CliffordAlgebra.BaseChange   instructions    -6.2%\n+ ~Mathlib.LinearAlgebra.Coevaluation                 instructions    -8.4%\n+ ~Mathlib.LinearAlgebra.TensorProduct.Opposite       instructions   -23.4%\n+ ~Mathlib.RingTheory.MatrixAlgebra                   instructions   -25.0%\n```",
              "createdAt": "2023-09-23T19:43:39Z",
              "author": {
                "login": "leanprover-bot"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5nQmye",
              "body": "> ```diff\r\n> + ~Mathlib.LinearAlgebra.TensorProduct.Opposite\r\n> ```\r\n\r\n~I think probably I should be generalizing this file to non-unital rings too~ Nevermind, this would require writing a lot of new definitions, not just generalizing existing ones. So I don't plan to do it in this PR (or at all, unless someone actually needs it).",
              "createdAt": "2023-09-23T20:49:07Z",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5nlEt1",
              "body": "bors merge",
              "createdAt": "2023-09-27T17:01:43Z",
              "author": {
                "login": "j-loreaux"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5nlVlp",
              "body": "Pull request successfully merged into master.\n\n  Build succeeded!\n\n  The publicly hosted instance of bors-ng is deprecated and will go away soon.\n\n  If you want to self-host your own instance, [instructions are here][instructions].\n  For more help, visit [the forum].\n\n  If you want to switch to GitHub's built-in merge queue, visit [their help page][gh].\n\n  [instructions]: https://github.com/bors-ng/bors-ng#how-to-set-up-your-own-real-instance\n  [the forum]: https://forum.bors.tech\n  [gh]: https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/configuring-pull-request-merges/managing-a-merge-queue\n\n\n\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/6329110617/job/17188732212)\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/6329110617/job/17188733111)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/6329110617/job/17188732595)",
              "createdAt": "2023-09-27T17:54:35Z",
              "author": {
                "login": "bors"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "1afb4dcd95e81a98a2cf2fe2b639f24e649449b9",
                "additions": 100,
                "deletions": 63,
                "committedDate": "2023-09-11T17:41:59Z",
                "author": {
                  "name": "Eric Wieser",
                  "email": "wieser.eric@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "fb3e2965603317621564de9fe14f5d503be2b7bb",
                "additions": 1,
                "deletions": 1,
                "committedDate": "2023-09-11T17:43:21Z",
                "author": {
                  "name": "Eric Wieser",
                  "email": "wieser.eric@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "b37142a54a582764d230497a1ec25162a4090621",
                "additions": 42,
                "deletions": 15,
                "committedDate": "2023-09-11T17:50:10Z",
                "author": {
                  "name": "Eric Wieser",
                  "email": "wieser.eric@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "3967b1c0e2a37df7e0dfc14d924bc3dae1712ab4",
                "additions": 7301,
                "deletions": 3595,
                "committedDate": "2023-09-14T16:21:58Z",
                "author": {
                  "name": "Eric Wieser",
                  "email": "wieser.eric@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "783170c28508583b90ecd011ff072bfcfd4886ee",
                "additions": 1,
                "deletions": 1,
                "committedDate": "2023-09-14T16:39:12Z",
                "author": {
                  "name": "Eric Wieser",
                  "email": "wieser.eric@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "0fffff8cbc030db14be8af2225bd09661f7a0afe",
                "additions": 0,
                "deletions": 2,
                "committedDate": "2023-09-14T16:39:46Z",
                "author": {
                  "name": "Eric Wieser",
                  "email": "wieser.eric@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "7f9f8071c6ce4cb4f9129f06c50365627a31d5ce",
                "additions": 48,
                "deletions": 34,
                "committedDate": "2023-09-14T16:53:34Z",
                "author": {
                  "name": "Eric Wieser",
                  "email": "wieser.eric@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "7b163a0fb65c2331e13d6cfdfa161e0cd9a70d7d",
                "additions": 1,
                "deletions": 1,
                "committedDate": "2023-09-22T01:42:38Z",
                "author": {
                  "name": "Eric Wieser",
                  "email": "wieser.eric@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "6319e651d19d143b76365353c7f9453f552539d9",
                "additions": 11854,
                "deletions": 6174,
                "committedDate": "2023-09-22T09:57:28Z",
                "author": {
                  "name": "Eric Wieser",
                  "email": "wieser.eric@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "e23f26dd4208bb212da547e2ed3aaff0dd4bd4da",
                "additions": 3,
                "deletions": 1,
                "committedDate": "2023-09-22T21:21:37Z",
                "author": {
                  "name": "Eric Wieser",
                  "email": "wieser.eric@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "b90a2a52e4728d6ef85b6b7126c23f0b5eaa2345",
                "additions": 0,
                "deletions": 0,
                "committedDate": "2023-09-23T18:00:42Z",
                "author": {
                  "name": "Eric Wieser",
                  "email": "wieser.eric@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "8da9893f71d4762e8e34e312ac0a0f56bc10593c",
                "additions": 984,
                "deletions": 307,
                "committedDate": "2023-09-23T18:43:20Z",
                "author": {
                  "name": "Eric Wieser",
                  "email": "wieser.eric@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "f53c1dd2ebccab3826b88dc3b39c6510ba8c3205",
                "additions": 24,
                "deletions": 16,
                "committedDate": "2023-09-26T21:51:35Z",
                "author": {
                  "name": "Eric Wieser",
                  "email": "wieser.eric@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "779c69a127fbb551e4def505f892bbd40f297fb0",
                "additions": 14,
                "deletions": 24,
                "committedDate": "2023-09-26T22:31:25Z",
                "author": {
                  "name": "Eric Wieser",
                  "email": "wieser.eric@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "7bba64b396fe3c08eea8f38ff7885cc50627c1ef",
                "additions": 1895,
                "deletions": 1037,
                "committedDate": "2023-09-27T08:54:02Z",
                "author": {
                  "name": "Eric Wieser",
                  "email": "wieser.eric@gmail.com"
                },
                "statusCheckRollup": null
              }
            }
          ]
        },
        "createdAt": "2023-09-11T17:42:48Z",
        "deletions": 80,
        "files": {
          "nodes": [
            {
              "path": "Mathlib/LinearAlgebra/CliffordAlgebra/BaseChange.lean",
              "additions": 3,
              "deletions": 1
            },
            {
              "path": "Mathlib/RingTheory/Kaehler.lean",
              "additions": 0,
              "deletions": 1
            },
            {
              "path": "Mathlib/RingTheory/TensorProduct.lean",
              "additions": 161,
              "deletions": 78
            }
          ]
        },
        "headRefName": "eric-wieser/tensor-non-unital",
        "headRefOid": "7bba64b396fe3c08eea8f38ff7885cc50627c1ef",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c5aDDqx",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
              "color": "06e039",
              "name": "ready-to-merge"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABViJjTQ",
              "color": "33DBEC",
              "name": "t-algebra"
            }
          ]
        },
        "latestReviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5iLffh",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "j-loreaux"
              },
              "submittedAt": "2023-09-27T16:55:54Z"
            }
          ]
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "UNKNOWN",
        "mergeable": "UNKNOWN",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 7106,
        "potentialMergeCommit": null,
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": null,
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5iB5J6",
              "body": "This looks good, and I can't complain about a speed *improvement*, surprising though it may be.\r\n\r\nThere's another lurking `CommRing R` type class that should be generalized in the `CommRing` section, but I couldn't highlight it in the GitHub interface (line 505).\r\n\r\nYou can choose to say this should be in a future PR, but it would be nice to have some morphisms involving the tensor product in the non-unital (even non-assoc) case too.",
              "state": "COMMENTED",
              "author": {
                "login": "j-loreaux"
              },
              "submittedAt": "2023-09-26T16:35:57Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5iCOcO",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-09-26T16:42:37Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5iCRDK",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-09-26T16:47:05Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5iEKPd",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-09-26T21:50:27Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5iEMRn",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-09-26T21:59:10Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5iEMVD",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-09-26T21:59:22Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5iERzv",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-09-26T22:19:22Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5iLffh",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "j-loreaux"
              },
              "submittedAt": "2023-09-27T16:55:54Z"
            }
          ]
        },
        "reviewThreads": {
          "nodes": [
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5Pt-iy",
                    "body": "Can you make / link a Zulip thread about this? Maybe you can nerd-snipe Kevin into tracking down the issue for you? :rofl:",
                    "createdAt": "2023-09-26T16:01:44Z",
                    "author": {
                      "login": "j-loreaux"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5Pvcr-",
                    "body": "https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/simp.20fails.20with.20.22failed.20to.20synthesize.20Subsingleton.22/near/393339126",
                    "createdAt": "2023-09-26T22:19:22Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5PuALh",
                    "body": "The API probably exists for this in the tensor product stuff elsewhere, but could you also provide the non-defeq version here?\r\n```\r\ntheorem natCast_right (n : ℕ) : (n : A ⊗[R] B) = (1 : A) ⊗ₜ (n : B) := sorry\r\n```",
                    "createdAt": "2023-09-26T16:06:41Z",
                    "author": {
                      "login": "j-loreaux"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5PuM1R",
                    "body": "I'd prefer to declare this out of scope; none of the declarations in this PR are new (besides the intermediate instances). I'm happy to do that in a follow-up.",
                    "createdAt": "2023-09-26T16:42:37Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5PvZKV",
                    "body": "#7391",
                    "createdAt": "2023-09-26T21:59:10Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5PuCq2",
                    "body": "I know it wasn't there before either, but is there a reason we don't have the `includeRightRingHom` version (besides just that it doesn't have nice defeq proofs)?",
                    "createdAt": "2023-09-26T16:14:08Z",
                    "author": {
                      "login": "j-loreaux"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5PvXpz",
                    "body": "Because `includeRight` is a stronger result (an `AlgHom`). The only reason we have the left ring hom is that we need it to build the algebra instance, and so we can't state the the `AlgHom` immediately.",
                    "createdAt": "2023-09-26T21:50:26Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5PuFg9",
                    "body": "This is no longer true in the provided instance below.",
                    "createdAt": "2023-09-26T16:23:57Z",
                    "author": {
                      "login": "j-loreaux"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5PuI1r",
                    "body": "```suggestion\r\nvariable [CommSemiring R]\r\n```",
                    "createdAt": "2023-09-26T16:27:44Z",
                    "author": {
                      "login": "j-loreaux"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5PuOjG",
                    "body": "I'm not sure if this generalization is sensible (tensoring rings over a base semiring), and its certainly orthogonal to the rest of this PR (which generalizes the operands not the base ring). I suspect it has performance costs, which is another argument for doing it in a separate PR so that it can be profiled separately.",
                    "createdAt": "2023-09-26T16:47:05Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5Pzl3w",
                    "body": "It's fine to wait on this for a separate PR.",
                    "createdAt": "2023-09-27T16:55:54Z",
                    "author": {
                      "login": "j-loreaux"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5PuI8h",
                    "body": "```suggestion\r\nvariable [CommSemiring R]\r\n```",
                    "createdAt": "2023-09-26T16:28:07Z",
                    "author": {
                      "login": "j-loreaux"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5PuJB0",
                    "body": "```suggestion\r\nvariable [CommSemiring R]\r\n```",
                    "createdAt": "2023-09-26T16:28:26Z",
                    "author": {
                      "login": "j-loreaux"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5PuJHw",
                    "body": "```suggestion\r\nvariable [CommSemiring R]\r\n```",
                    "createdAt": "2023-09-26T16:28:45Z",
                    "author": {
                      "login": "j-loreaux"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5PuKIt",
                    "body": "As with `natCast_def`, can you please provide `intCast_right`? (Of course, maybe use a different name, I'm not sure what is best.)",
                    "createdAt": "2023-09-26T16:32:23Z",
                    "author": {
                      "login": "j-loreaux"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5PvZMk",
                    "body": "#7391",
                    "createdAt": "2023-09-26T21:59:22Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  }
                ]
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjQyNTI2MA==",
              "login": "eric-wieser"
            },
            {
              "id": "MDQ6VXNlcjg1NjY4Mzk0",
              "login": "leanprover-bot"
            },
            {
              "id": "MDQ6VXNlcjg5MjA1OTg=",
              "login": "j-loreaux"
            },
            {
              "id": "U_kgDOB75MNQ",
              "login": "leanprover-community-mathlib4-bot"
            }
          ]
        },
        "state": "CLOSED",
        "statusCheckRollup": null,
        "title": "[Merged by Bors] - feat(RingTheory/TensorProduct): non-unital algebras",
        "updatedAt": "2023-09-27T17:54:39Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/7106",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "1afb4dcd95e81a98a2cf2fe2b639f24e649449b9"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5wtfbtzwAAAAJoJMZc",
              "createdAt": "2023-09-11T17:42:48Z",
              "label": {
                "id": "MDU6TGFiZWwzMjcxMjQ0NzU5",
                "name": "WIP"
              }
            },
            {
              "__typename": "ReviewRequestedEvent",
              "id": "RRE_lADOFcwZ1c5wtfbtzwAAAAJoJMZk",
              "createdAt": "2023-09-11T17:42:49Z",
              "requestedReviewer": {
                "id": "MDQ6VXNlcjg5MjA1OTg=",
                "login": "j-loreaux"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "fb3e2965603317621564de9fe14f5d503be2b7bb"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "b37142a54a582764d230497a1ec25162a4090621"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5wtfbtzwAAAAJqVjjo",
              "createdAt": "2023-09-14T15:36:30Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "3967b1c0e2a37df7e0dfc14d924bc3dae1712ab4"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5wtfbtzwAAAAJqXrrS",
              "createdAt": "2023-09-14T16:26:03Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "783170c28508583b90ecd011ff072bfcfd4886ee"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "0fffff8cbc030db14be8af2225bd09661f7a0afe"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "7f9f8071c6ce4cb4f9129f06c50365627a31d5ce"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "7b163a0fb65c2331e13d6cfdfa161e0cd9a70d7d"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5wtfbtzwAAAAJuZz58",
              "createdAt": "2023-09-22T01:46:01Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABViJjTQ",
                "name": "t-algebra"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5wtfbtzwAAAAJudTNs",
              "createdAt": "2023-09-22T05:09:39Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "6319e651d19d143b76365353c7f9453f552539d9"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5nLzzN",
              "createdAt": "2023-09-22T09:59:01Z",
              "body": "!bench",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5wtfbtzwAAAAJunAhY",
              "createdAt": "2023-09-22T10:09:46Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5nMDPD",
              "createdAt": "2023-09-22T10:50:16Z",
              "body": "Here are the [benchmark results](http://speed.lean-fro.org/mathlib4/run-detail/88848488-925b-46b2-8d0d-fbd403643f21) for commit 6319e651d19d143b76365353c7f9453f552539d9.\nThe entire run failed.\nFound no significant differences.",
              "author": {
                "login": "leanprover-bot"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "e23f26dd4208bb212da547e2ed3aaff0dd4bd4da"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5nQVGA",
              "createdAt": "2023-09-23T14:46:09Z",
              "body": "!bench",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5nQXSq",
              "createdAt": "2023-09-23T15:30:04Z",
              "body": "Here are the [benchmark results](http://speed.lean-fro.org/mathlib4/run-detail/9bbe5f74-6772-48ae-8c62-e58a4e512395) for commit e23f26dd4208bb212da547e2ed3aaff0dd4bd4da.\nThere were [significant changes](http://speed.lean-fro.org/mathlib4/compare/5273f6b7-92a3-4f3e-a201-e4839eaba63a/to/9bbe5f74-6772-48ae-8c62-e58a4e512395) against commit 1d02ef7075e23700fa7e893bd6835ee513faf961:\n```diff\n  Benchmark                                           Metric         Change\n  =========================================================================\n- build                                               wall-clock      37.1%\n+ lint                                                wall-clock      -6.5%\n+ ~Mathlib.LinearAlgebra.CliffordAlgebra.BaseChange   instructions    -6.3%\n+ ~Mathlib.LinearAlgebra.Coevaluation                 instructions    -8.5%\n+ ~Mathlib.LinearAlgebra.TensorProduct.Opposite       instructions   -23.4%\n+ ~Mathlib.RingTheory.MatrixAlgebra                   instructions   -25.1%\n```",
              "author": {
                "login": "leanprover-bot"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "b90a2a52e4728d6ef85b6b7126c23f0b5eaa2345"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5nQfmU",
              "createdAt": "2023-09-23T18:00:52Z",
              "body": "!bench",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "8da9893f71d4762e8e34e312ac0a0f56bc10593c"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5nQhtQ",
              "createdAt": "2023-09-23T18:45:30Z",
              "body": "Here are the [benchmark results](http://speed.lean-fro.org/mathlib4/run-detail/1b7e2499-d287-47eb-ab2e-3ef832ae9b11) for commit b90a2a52e4728d6ef85b6b7126c23f0b5eaa2345.\nThere were [significant changes](http://speed.lean-fro.org/mathlib4/compare/5273f6b7-92a3-4f3e-a201-e4839eaba63a/to/1b7e2499-d287-47eb-ab2e-3ef832ae9b11) against commit 1d02ef7075e23700fa7e893bd6835ee513faf961:\n```diff\n  Benchmark                                           Metric         Change\n  =========================================================================\n- build                                               wall-clock      46.5%\n+ lint                                                wall-clock      -8.5%\n+ ~Mathlib.LinearAlgebra.CliffordAlgebra.BaseChange   instructions    -6.3%\n+ ~Mathlib.LinearAlgebra.Coevaluation                 instructions    -8.5%\n+ ~Mathlib.LinearAlgebra.TensorProduct.Opposite       instructions   -23.4%\n+ ~Mathlib.RingTheory.MatrixAlgebra                   instructions   -25.1%\n```",
              "author": {
                "login": "leanprover-bot"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5nQiw7",
              "createdAt": "2023-09-23T19:09:20Z",
              "body": "!bench",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5nQkMH",
              "createdAt": "2023-09-23T19:43:39Z",
              "body": "Here are the [benchmark results](http://speed.lean-fro.org/mathlib4/run-detail/8b44db75-21ae-4f2e-8e29-be82f8cd468e) for commit 8da9893f71d4762e8e34e312ac0a0f56bc10593c.\nThere were [significant changes](http://speed.lean-fro.org/mathlib4/compare/35fe1414-9424-48e4-84d4-1ca488d1e62e/to/8b44db75-21ae-4f2e-8e29-be82f8cd468e) against commit f0d1951adc1e4952c440136325f5ca8617ab491a:\n```diff\n  Benchmark                                           Metric         Change\n  =========================================================================\n+ ~Mathlib.LinearAlgebra.CliffordAlgebra.BaseChange   instructions    -6.2%\n+ ~Mathlib.LinearAlgebra.Coevaluation                 instructions    -8.4%\n+ ~Mathlib.LinearAlgebra.TensorProduct.Opposite       instructions   -23.4%\n+ ~Mathlib.RingTheory.MatrixAlgebra                   instructions   -25.0%\n```",
              "author": {
                "login": "leanprover-bot"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5nQmye",
              "createdAt": "2023-09-23T20:49:07Z",
              "body": "> ```diff\r\n> + ~Mathlib.LinearAlgebra.TensorProduct.Opposite\r\n> ```\r\n\r\n~I think probably I should be generalizing this file to non-unital rings too~ Nevermind, this would require writing a lot of new definitions, not just generalizing existing ones. So I don't plan to do it in this PR (or at all, unless someone actually needs it).",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5wtfbtzwAAAAJvG-P4",
              "createdAt": "2023-09-23T21:07:56Z",
              "label": {
                "id": "MDU6TGFiZWwzMjcxMjQ0NzU5",
                "name": "WIP"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5wtfbtzwAAAAJvG-P5",
              "createdAt": "2023-09-23T21:07:56Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5iB5J6",
              "createdAt": "2023-09-26T16:01:44Z",
              "body": "This looks good, and I can't complain about a speed *improvement*, surprising though it may be.\r\n\r\nThere's another lurking `CommRing R` type class that should be generalized in the `CommRing` section, but I couldn't highlight it in the GitHub interface (line 505).\r\n\r\nYou can choose to say this should be in a future PR, but it would be nice to have some morphisms involving the tensor product in the non-unital (even non-assoc) case too.",
              "author": {
                "login": "j-loreaux"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5wtfbtzwAAAAJwhpR8",
              "createdAt": "2023-09-26T16:49:18Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5wtfbtzwAAAAJwhpSG",
              "createdAt": "2023-09-26T16:49:19Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "f53c1dd2ebccab3826b88dc3b39c6510ba8c3205"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5wtfbtzwAAAAJwsKsj",
              "createdAt": "2023-09-26T22:19:37Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5wtfbtzwAAAAJwsKsp",
              "createdAt": "2023-09-26T22:19:37Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "779c69a127fbb551e4def505f892bbd40f297fb0"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5wtfbtzwAAAAJwz7gr",
              "createdAt": "2023-09-27T05:11:40Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "7bba64b396fe3c08eea8f38ff7885cc50627c1ef"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5wtfbtzwAAAAJw7jr_",
              "createdAt": "2023-09-27T08:55:16Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5nlEt1",
              "createdAt": "2023-09-27T17:01:43Z",
              "body": "bors merge",
              "author": {
                "login": "j-loreaux"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5wtfbtzwAAAAJxQwGO",
              "createdAt": "2023-09-27T17:01:55Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
                "name": "ready-to-merge"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5wtfbtzwAAAAJxQwIC",
              "createdAt": "2023-09-27T17:01:56Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5nlVlp",
              "createdAt": "2023-09-27T17:54:35Z",
              "body": "Pull request successfully merged into master.\n\n  Build succeeded!\n\n  The publicly hosted instance of bors-ng is deprecated and will go away soon.\n\n  If you want to self-host your own instance, [instructions are here][instructions].\n  For more help, visit [the forum].\n\n  If you want to switch to GitHub's built-in merge queue, visit [their help page][gh].\n\n  [instructions]: https://github.com/bors-ng/bors-ng#how-to-set-up-your-own-real-instance\n  [the forum]: https://forum.bors.tech\n  [gh]: https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/configuring-pull-request-merges/managing-a-merge-queue\n\n\n\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/6329110617/job/17188732212)\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/6329110617/job/17188733111)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/6329110617/job/17188732595)",
              "author": {
                "login": "bors"
              }
            },
            {
              "__typename": "RenamedTitleEvent"
            },
            {
              "__typename": "ClosedEvent",
              "id": "CE_lADOFcwZ1c5wtfbtzwAAAAJxSftL",
              "createdAt": "2023-09-27T17:54:36Z"
            },
            {
              "__typename": "HeadRefDeletedEvent",
              "id": "HRDE_lADOFcwZ1c5wtfbtzwAAAAJxSfzt",
              "createdAt": "2023-09-27T17:54:39Z"
            }
          ]
        }
      }
    }
  }
}
