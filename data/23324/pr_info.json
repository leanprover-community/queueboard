{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 482,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "Parcly-Taxel"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "Based on a comment by @apnelson1 on [Zulip](https://leanprover.zulipchat.com/#narrow/channel/287929-mathlib4/topic/The.20plan.20to.20remove.20induction'/near/508274747).\r\n\r\nThe relevant instances were identified by adding the following to `Mathlib.Tactic.Cases`\r\n```diff\r\ndiff --git a/Mathlib/Tactic/Cases.lean b/Mathlib/Tactic/Cases.lean\r\nindex 4a60db6c551..29ec70424c7 100644\r\n--- a/Mathlib/Tactic/Cases.lean\r\n+++ b/Mathlib/Tactic/Cases.lean\r\n@@ -122,6 +122,16 @@ elab (name := induction') \"induction' \" tgts:(Parser.Tactic.elimTarget,+)\r\n         g.assign result.elimApp\r\n         let subgoals ‚Üê ElimApp.evalNames elimInfo result.alts withArg\r\n           (generalized := fvarIds) (toClear := targetFVarIds) (toTag := toTag)\r\n+        let body ‚Üê inferType targets[0]!\r\n+        let names : Array Format := if withArg.1.getArgs.size > 1 then\r\n+          (withArg.1.getArgs[1]!).getArgs.map Syntax.prettyPrint else Array.empty\r\n+        let gens : Array Format := if genArg.1.getArgs.size > 1 then\r\n+          (genArg.1.getArgs[1]!).getArgs.map Syntax.prettyPrint else Array.empty\r\n+        let inductor : Format := if usingArg.1.getArgs.size > 1 then\r\n+          Syntax.prettyPrint usingArg.1.getArgs[1]! else \"~\"\r\n+        if 5 ‚â§ names.size then\r\n+          logInfoAt tgts m!\"{body.getAppFn.setPPExplicit true} {inductor} {gens} {names} \\\r\n+            {subgoals.toList.length}\"\r\n         setGoals <| (subgoals ++ result.others).toList ++ gs\r\n \r\n /-- The `cases'` tactic is similar to the `cases` tactic in Lean 4 core, but the syntax for giving\r\n```\r\nand then examining [the output](https://github.com/leanprover-community/mathlib4/actions/runs/14085064444/job/39446843657).",
        "changedFiles": 68,
        "closed": false,
        "closedAt": null,
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c6kGBgw",
              "body": "### PR summary [ee9947abd3](https://github.com/leanprover-community/mathlib4/pull/23324/commits/ee9947abd3c91276de4fef536453f95fb4b84e99)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n\n</details>\n\n---\n\n#### Declarations diff\n\nNo declarations were harmed in the making of this PR! üêô\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n---\n\n<details><summary>No changes to technical debt.</summary>\n\nYou can run this locally as\n```\n./scripts/technical-debt-metrics.sh pr_summary\n```\n* The `relative` value is the weighted *sum* of the differences with weight given by the *inverse* of the current value of the statistic.\n* The `absolute` value is the `relative` value divided by the total sum of the inverses of the current values (i.e. the weighted *average* of the differences).\n</details>\n",
              "createdAt": "2025-03-26T01:53:15Z",
              "author": {
                "login": "github-actions"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "ee9947abd3c91276de4fef536453f95fb4b84e99",
                "additions": 482,
                "deletions": 365,
                "committedDate": "2025-03-26T16:40:00Z",
                "author": {
                  "name": "Parcly Taxel",
                  "email": "reddeloostw@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJL_z41A",
                        "name": "set_pr_emoji",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14088777739/job/39459813588"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJL_sshA",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14088744091/job/39459695748"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJMCFTvQ",
                        "name": "Add ready-to-merge or delegated label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14089463681/job/39462196157"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJMCehHg",
                        "name": "Add ready-to-merge or delegated label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14089584866/job/39462609182"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJMDYi9w",
                        "name": "Add ready-to-merge or delegated label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14089869405/job/39463559927"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJMb8XOw",
                        "name": "Add ready-to-merge or delegated label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14098154257/job/39489312571"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJNGgmvg",
                        "name": "Add ready-to-merge or delegated label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14112314094/job/39533946558"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJL_swQw",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14088744618/job/39459696707"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJMCFTrQ",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14089463663/job/39462196141"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJMCehJA",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14089584868/job/39462609188"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJMDYiIQ",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14089869411/job/39463559713"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJMb8XHw",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14098154256/job/39489312543"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJNGgmgQ",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14112314071/job/39533946497"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJL_swYg",
                        "name": "post-or-update-summary-comment",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14088744613/job/39459696738"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJL_srmA",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14088744083/job/39459695512"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJL_sqXw",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14088744091/job/39459695199"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJL_sp7Q",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14088744083/job/39459695085"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJL_surw",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14088744091/job/39459696303"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJMCYezw",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14088744083/job/39462510287"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJL_twnQ",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/39459713181"
                      }
                    ]
                  }
                }
              }
            }
          ]
        },
        "createdAt": "2025-03-26T01:52:19Z",
        "deletions": 365,
        "files": {
          "nodes": [
            {
              "path": "Mathlib/Algebra/Module/Submodule/Pointwise.lean",
              "additions": 7,
              "deletions": 6
            },
            {
              "path": "Mathlib/Algebra/MvPolynomial/Derivation.lean",
              "additions": 4,
              "deletions": 3
            },
            {
              "path": "Mathlib/Algebra/MvPolynomial/Equiv.lean",
              "additions": 3,
              "deletions": 2
            },
            {
              "path": "Mathlib/Algebra/MvPolynomial/Eval.lean",
              "additions": 9,
              "deletions": 7
            },
            {
              "path": "Mathlib/Algebra/MvPolynomial/PDeriv.lean",
              "additions": 10,
              "deletions": 8
            },
            {
              "path": "Mathlib/Algebra/Order/BigOperators/Group/List.lean",
              "additions": 3,
              "deletions": 3
            },
            {
              "path": "Mathlib/Algebra/Polynomial/Module/Basic.lean",
              "additions": 5,
              "deletions": 3
            },
            {
              "path": "Mathlib/Algebra/Polynomial/PartialFractions.lean",
              "additions": 4,
              "deletions": 2
            },
            {
              "path": "Mathlib/Algebra/Squarefree/Basic.lean",
              "additions": 5,
              "deletions": 4
            },
            {
              "path": "Mathlib/Analysis/BoxIntegral/Integrability.lean",
              "additions": 5,
              "deletions": 3
            },
            {
              "path": "Mathlib/Analysis/Complex/UpperHalfPlane/Basic.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Analysis/InnerProductSpace/Projection.lean",
              "additions": 6,
              "deletions": 4
            },
            {
              "path": "Mathlib/CategoryTheory/Groupoid/FreeGroupoid.lean",
              "additions": 4,
              "deletions": 3
            },
            {
              "path": "Mathlib/CategoryTheory/IsConnected.lean",
              "additions": 4,
              "deletions": 3
            },
            {
              "path": "Mathlib/CategoryTheory/Localization/Construction.lean",
              "additions": 4,
              "deletions": 3
            },
            {
              "path": "Mathlib/CategoryTheory/PathCategory/Basic.lean",
              "additions": 7,
              "deletions": 6
            },
            {
              "path": "Mathlib/Computability/Ackermann.lean",
              "additions": 17,
              "deletions": 16
            },
            {
              "path": "Mathlib/Computability/EpsilonNFA.lean",
              "additions": 9,
              "deletions": 6
            },
            {
              "path": "Mathlib/Computability/PartrecCode.lean",
              "additions": 10,
              "deletions": 12
            },
            {
              "path": "Mathlib/Computability/PostTuringMachine.lean",
              "additions": 9,
              "deletions": 6
            },
            {
              "path": "Mathlib/Data/Finset/Lattice/Fold.lean",
              "additions": 5,
              "deletions": 3
            },
            {
              "path": "Mathlib/Data/List/Duplicate.lean",
              "additions": 8,
              "deletions": 7
            },
            {
              "path": "Mathlib/Data/List/Permutation.lean",
              "additions": 4,
              "deletions": 3
            },
            {
              "path": "Mathlib/Data/List/Sections.lean",
              "additions": 5,
              "deletions": 4
            },
            {
              "path": "Mathlib/Data/List/Sort.lean",
              "additions": 4,
              "deletions": 3
            },
            {
              "path": "Mathlib/Data/List/Sublists.lean",
              "additions": 11,
              "deletions": 7
            },
            {
              "path": "Mathlib/Data/List/Zip.lean",
              "additions": 3,
              "deletions": 3
            },
            {
              "path": "Mathlib/Data/Ordmap/Ordset.lean",
              "additions": 14,
              "deletions": 11
            },
            {
              "path": "Mathlib/Data/PFunctor/Multivariate/M.lean",
              "additions": 10,
              "deletions": 8
            },
            {
              "path": "Mathlib/GroupTheory/CoprodI.lean",
              "additions": 10,
              "deletions": 7
            },
            {
              "path": "Mathlib/GroupTheory/FiniteAbelian/Basic.lean",
              "additions": 10,
              "deletions": 8
            },
            {
              "path": "Mathlib/GroupTheory/FreeGroup/Basic.lean",
              "additions": 13,
              "deletions": 11
            },
            {
              "path": "Mathlib/GroupTheory/FreeGroup/NielsenSchreier.lean",
              "additions": 9,
              "deletions": 8
            },
            {
              "path": "Mathlib/GroupTheory/FreeGroup/Reduce.lean",
              "additions": 4,
              "deletions": 3
            },
            {
              "path": "Mathlib/MeasureTheory/Function/ConditionalExpectation/Basic.lean",
              "additions": 4,
              "deletions": 3
            },
            {
              "path": "Mathlib/MeasureTheory/Function/SimpleFunc.lean",
              "additions": 10,
              "deletions": 6
            },
            {
              "path": "Mathlib/MeasureTheory/Integral/Lebesgue.lean",
              "additions": 5,
              "deletions": 3
            },
            {
              "path": "Mathlib/MeasureTheory/Integral/SetIntegral.lean",
              "additions": 4,
              "deletions": 3
            },
            {
              "path": "Mathlib/MeasureTheory/Integral/VitaliCaratheodory.lean",
              "additions": 10,
              "deletions": 7
            },
            {
              "path": "Mathlib/MeasureTheory/MeasurableSpace/Card.lean",
              "additions": 7,
              "deletions": 5
            },
            {
              "path": "Mathlib/MeasureTheory/Measure/Hausdorff.lean",
              "additions": 8,
              "deletions": 7
            },
            {
              "path": "Mathlib/MeasureTheory/PiSystem.lean",
              "additions": 5,
              "deletions": 3
            },
            {
              "path": "Mathlib/ModelTheory/Encoding.lean",
              "additions": 4,
              "deletions": 3
            },
            {
              "path": "Mathlib/ModelTheory/Semantics.lean",
              "additions": 14,
              "deletions": 12
            },
            {
              "path": "Mathlib/ModelTheory/Substructures.lean",
              "additions": 3,
              "deletions": 3
            },
            {
              "path": "Mathlib/ModelTheory/Syntax.lean",
              "additions": 3,
              "deletions": 3
            },
            {
              "path": "Mathlib/Probability/Kernel/Defs.lean",
              "additions": 4,
              "deletions": 3
            },
            {
              "path": "Mathlib/Probability/Moments/Basic.lean",
              "additions": 14,
              "deletions": 9
            },
            {
              "path": "Mathlib/RingTheory/EssentialFiniteness.lean",
              "additions": 6,
              "deletions": 4
            },
            {
              "path": "Mathlib/RingTheory/FiniteType.lean",
              "additions": 28,
              "deletions": 16
            },
            {
              "path": "Mathlib/RingTheory/Flat/Equalizer.lean",
              "additions": 4,
              "deletions": 4
            },
            {
              "path": "Mathlib/RingTheory/IsTensorProduct.lean",
              "additions": 4,
              "deletions": 4
            },
            {
              "path": "Mathlib/RingTheory/Kaehler/JacobiZariski.lean",
              "additions": 20,
              "deletions": 13
            },
            {
              "path": "Mathlib/RingTheory/Kaehler/Polynomial.lean",
              "additions": 5,
              "deletions": 4
            },
            {
              "path": "Mathlib/RingTheory/Multiplicity.lean",
              "additions": 6,
              "deletions": 5
            },
            {
              "path": "Mathlib/RingTheory/Nakayama.lean",
              "additions": 6,
              "deletions": 5
            },
            {
              "path": "Mathlib/RingTheory/Polynomial/Ideal.lean",
              "additions": 8,
              "deletions": 5
            },
            {
              "path": "Mathlib/RingTheory/PowerSeries/Order.lean",
              "additions": 4,
              "deletions": 3
            },
            {
              "path": "Mathlib/RingTheory/Presentation.lean",
              "additions": 11,
              "deletions": 8
            },
            {
              "path": "Mathlib/RingTheory/Smooth/StandardSmooth.lean",
              "additions": 6,
              "deletions": 4
            },
            {
              "path": "Mathlib/RingTheory/TensorProduct/MvPolynomial.lean",
              "additions": 5,
              "deletions": 4
            },
            {
              "path": "Mathlib/RingTheory/Unramified/Finite.lean",
              "additions": 4,
              "deletions": 4
            },
            {
              "path": "Mathlib/SetTheory/Lists.lean",
              "additions": 5,
              "deletions": 4
            },
            {
              "path": "Mathlib/SetTheory/Ordinal/FixedPoint.lean",
              "additions": 14,
              "deletions": 8
            },
            {
              "path": "Mathlib/SetTheory/Ordinal/Notation.lean",
              "additions": 4,
              "deletions": 4
            },
            {
              "path": "Mathlib/SetTheory/Ordinal/Principal.lean",
              "additions": 7,
              "deletions": 4
            },
            {
              "path": "Mathlib/SetTheory/PGame/Algebra.lean",
              "additions": 1,
              "deletions": 2
            },
            {
              "path": "Mathlib/SetTheory/PGame/Order.lean",
              "additions": 3,
              "deletions": 3
            }
          ]
        },
        "headRefName": "deprime-data-list",
        "headRefOid": "ee9947abd3c91276de4fef536453f95fb4b84e99",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c6QIfHM",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c8AAAABlkjS4g",
              "color": "0EFB96",
              "name": "tech debt"
            }
          ]
        },
        "latestReviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c6iAvvB",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2025-03-26T17:37:18Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6iSLMn",
              "body": "I am not sure that 5 is a large enough number for this to be a no-brainer. I would personally rather see opinions on scope of `induction'` removal actively solicited on Zulip (perhaps in the form of a poll) before I am happy with this kind of PR being merged. ",
              "state": "COMMENTED",
              "author": {
                "login": "apnelson1"
              },
              "submittedAt": "2025-03-27T16:55:36Z"
            }
          ]
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "BLOCKED",
        "mergeable": "MERGEABLE",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 23324,
        "potentialMergeCommit": {
          "oid": "24e897781eca4eae27768d00c0b17c88c0d33aed"
        },
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": null,
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c6iAfrg",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2025-03-26T17:16:31Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6iAjzG",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "Parcly-Taxel"
              },
              "submittedAt": "2025-03-26T17:22:53Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6iAvvB",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2025-03-26T17:37:18Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6iFiIt",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "Parcly-Taxel"
              },
              "submittedAt": "2025-03-27T03:23:16Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6iSLMn",
              "body": "I am not sure that 5 is a large enough number for this to be a no-brainer. I would personally rather see opinions on scope of `induction'` removal actively solicited on Zulip (perhaps in the form of a poll) before I am happy with this kind of PR being merged. ",
              "state": "COMMENTED",
              "author": {
                "login": "apnelson1"
              },
              "submittedAt": "2025-03-27T16:55:36Z"
            }
          ]
        },
        "reviewThreads": {
          "nodes": [
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c54FRI6",
                    "body": "Let's make a PR to correct these names (separately)",
                    "createdAt": "2025-03-26T17:16:31Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c54FTrO",
                    "body": "I think they're fine enough. What names do you propose for the cases?",
                    "createdAt": "2025-03-26T17:22:53Z",
                    "author": {
                      "login": "Parcly-Taxel"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c54FbMG",
                    "body": "The convention is to drop the `h_`; consider `induction n`, where we write `| zero` and `| succ n ih` not `| h_zero` and `| h_succ`.\r\n\r\nSo \"name the hypothesis (concisely) as if it was a lemma\" applies to induction principles; `... -> motive (a + b * c)` would be `add_mul`, for instance.",
                    "createdAt": "2025-03-26T17:37:18Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c54Iqrh",
                    "body": "#23358",
                    "createdAt": "2025-03-27T03:23:16Z",
                    "author": {
                      "login": "Parcly-Taxel"
                    }
                  }
                ]
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjU0MTc1NDYz",
              "login": "Parcly-Taxel"
            },
            {
              "id": "MDQ6VXNlcjQyNTI2MA==",
              "login": "eric-wieser"
            },
            {
              "id": "MDQ6VXNlcjcxNjYwNzcx",
              "login": "apnelson1"
            }
          ]
        },
        "state": "OPEN",
        "statusCheckRollup": {
          "contexts": {
            "nodes": [
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJL_z41A",
                "name": "set_pr_emoji",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14088777739/job/39459813588"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJL_sshA",
                "name": "Lint style (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14088744091/job/39459695748"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJMCFTvQ",
                "name": "Add ready-to-merge or delegated label",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14089463681/job/39462196157"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJMCehHg",
                "name": "Add ready-to-merge or delegated label",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14089584866/job/39462609182"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJMDYi9w",
                "name": "Add ready-to-merge or delegated label",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14089869405/job/39463559927"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJMb8XOw",
                "name": "Add ready-to-merge or delegated label",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14098154257/job/39489312571"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJNGgmvg",
                "name": "Add ready-to-merge or delegated label",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14112314094/job/39533946558"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJL_swQw",
                "name": "label-and-report-new-contributor",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14088744618/job/39459696707"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJMCFTrQ",
                "name": "Ping maintainers on Zulip",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14089463663/job/39462196141"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJMCehJA",
                "name": "Ping maintainers on Zulip",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14089584868/job/39462609188"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJMDYiIQ",
                "name": "Ping maintainers on Zulip",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14089869411/job/39463559713"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJMb8XHw",
                "name": "Ping maintainers on Zulip",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14098154256/job/39489312543"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJNGgmgQ",
                "name": "Ping maintainers on Zulip",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14112314071/job/39533946497"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJL_swYg",
                "name": "post-or-update-summary-comment",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14088744613/job/39459696738"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJL_srmA",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14088744083/job/39459695512"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJL_sqXw",
                "name": "Build (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14088744091/job/39459695199"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJL_sp7Q",
                "name": "Build",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14088744083/job/39459695085"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJL_surw",
                "name": "Post-CI job (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14088744091/job/39459696303"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJMCYezw",
                "name": "Post-CI job",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14088744083/job/39462510287"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJL_twnQ",
                "name": "New Contributor Check",
                "conclusion": "NEUTRAL",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/39459713181"
              }
            ]
          }
        },
        "title": "chore: deprime `induction'` with 5+ named variables",
        "updatedAt": "2025-03-27T16:55:36Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/23324",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6vuaoWzwAAAAP0WqPt",
              "createdAt": "2025-03-26T01:52:19Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABlkjS4g",
                "name": "tech debt"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6vuaoWzwAAAAP0WqPv",
              "createdAt": "2025-03-26T01:52:19Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABtNO8rw",
                "name": "t-data"
              }
            },
            {
              "__typename": "ReviewRequestedEvent",
              "id": "RRE_lADOFcwZ1c6vuaoWzwAAAAP0WqPy",
              "createdAt": "2025-03-26T01:52:19Z",
              "requestedReviewer": {
                "id": "MDQ6VXNlcjQyNTI2MA==",
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "ReviewRequestedEvent",
              "id": "RRE_lADOFcwZ1c6vuaoWzwAAAAP0WqP6",
              "createdAt": "2025-03-26T01:52:19Z",
              "requestedReviewer": {
                "id": "MDQ6VXNlcjQ3Nzk1Ng==",
                "login": "kim-em"
              }
            },
            {
              "__typename": "ReviewRequestedEvent",
              "id": "RRE_lADOFcwZ1c6vuaoWzwAAAAP0WqQC",
              "createdAt": "2025-03-26T01:52:19Z",
              "requestedReviewer": {
                "id": "MDQ6VXNlcjU2MzY3MDU=",
                "login": "jcommelin"
              }
            },
            {
              "__typename": "ReviewRequestedEvent",
              "id": "RRE_lADOFcwZ1c6vuaoWzwAAAAP0WqQK",
              "createdAt": "2025-03-26T01:52:19Z",
              "requestedReviewer": {
                "id": "MDQ6VXNlcjg5MjA1OTg=",
                "login": "j-loreaux"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6kGBgw",
              "createdAt": "2025-03-26T01:53:15Z",
              "body": "### PR summary [ee9947abd3](https://github.com/leanprover-community/mathlib4/pull/23324/commits/ee9947abd3c91276de4fef536453f95fb4b84e99)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n\n</details>\n\n---\n\n#### Declarations diff\n\nNo declarations were harmed in the making of this PR! üêô\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n---\n\n<details><summary>No changes to technical debt.</summary>\n\nYou can run this locally as\n```\n./scripts/technical-debt-metrics.sh pr_summary\n```\n* The `relative` value is the weighted *sum* of the differences with weight given by the *inverse* of the current value of the statistic.\n* The `absolute` value is the `relative` value divided by the total sum of the inverses of the current values (i.e. the weighted *average* of the differences).\n</details>\n",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "ee9947abd3c91276de4fef536453f95fb4b84e99"
              }
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6vuaoWzwAAAAP1EpJ_",
              "createdAt": "2025-03-26T16:40:20Z"
            },
            {
              "__typename": "RenamedTitleEvent"
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6vuaoWzwAAAAP1EvNI",
              "createdAt": "2025-03-26T16:41:58Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABtNO8rw",
                "name": "t-data"
              }
            },
            {
              "__typename": "ReviewRequestRemovedEvent",
              "id": "RRRE_lADOFcwZ1c6vuaoWzwAAAAP1E3Rm",
              "createdAt": "2025-03-26T16:44:06Z",
              "requestedReviewer": {
                "id": "MDQ6VXNlcjQyNTI2MA==",
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "ReviewRequestRemovedEvent",
              "id": "RRRE_lADOFcwZ1c6vuaoWzwAAAAP1E3R9",
              "createdAt": "2025-03-26T16:44:06Z",
              "requestedReviewer": {
                "id": "MDQ6VXNlcjQ3Nzk1Ng==",
                "login": "kim-em"
              }
            },
            {
              "__typename": "ReviewRequestRemovedEvent",
              "id": "RRRE_lADOFcwZ1c6vuaoWzwAAAAP1E3SD",
              "createdAt": "2025-03-26T16:44:06Z",
              "requestedReviewer": {
                "id": "MDQ6VXNlcjU2MzY3MDU=",
                "login": "jcommelin"
              }
            },
            {
              "__typename": "ReviewRequestRemovedEvent",
              "id": "RRRE_lADOFcwZ1c6vuaoWzwAAAAP1E3SN",
              "createdAt": "2025-03-26T16:44:06Z",
              "requestedReviewer": {
                "id": "MDQ6VXNlcjg5MjA1OTg=",
                "login": "j-loreaux"
              }
            },
            {
              "__typename": "ReviewRequestedEvent",
              "id": "RRE_lADOFcwZ1c6vuaoWzwAAAAP1E3Se",
              "createdAt": "2025-03-26T16:44:06Z",
              "requestedReviewer": {
                "id": "MDQ6VXNlcjcxNjYwNzcx",
                "login": "apnelson1"
              }
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6iAfrg",
              "createdAt": "2025-03-26T17:16:31Z",
              "body": "",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c6E_W-h",
              "createdAt": "2025-03-27T03:22:46Z",
              "source": {
                "id": "PR_kwDOFcwZ1c6QTcQV",
                "title": "chore: review of induction branch names",
                "url": "https://github.com/leanprover-community/mathlib4/pull/23358"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6iSLMn",
              "createdAt": "2025-03-27T16:55:36Z",
              "body": "I am not sure that 5 is a large enough number for this to be a no-brainer. I would personally rather see opinions on scope of `induction'` removal actively solicited on Zulip (perhaps in the form of a poll) before I am happy with this kind of PR being merged. ",
              "author": {
                "login": "apnelson1"
              }
            }
          ]
        }
      }
    }
  }
}
