{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 25,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "MohanadAhmed"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "This PR implements a suggestion by @urkud on [Zulip thread](https://leanprover.zulipchat.com/#narrow/stream/113488-general/topic/PartialOrder.20and.20StarOrderedRing.20on.20IsROrC) on how to get a `StarOrderedRing` on the `IsROrC` class. In that discussion the suggested step were:\r\n\r\n1. Add PartialOrder K to the list of extends and add le_iff_re_im : z ≤ w ↔ re z ≤ re w ∧ im z = im w to the list of axioms.\r\n2. Prove StarOrderedRing instance for any IsROrC. \r\n3. Add (almost trivial) le_iff_re_im proofs to IsROrC instances for real and complex numbers.\r\n\r\nThis PR does exactly these three steps\r\n\r\n---\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n-->\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 4,
        "closed": false,
        "closedAt": null,
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c5jDw5g",
              "body": "(Sometimes github makes a mess of the history after a merge; switching the base branch to something else and back fixed it)",
              "createdAt": "2023-08-02T10:08:42Z",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5jDya2",
              "body": "> (Sometimes github makes a mess of the history after a merge; switching the base branch to something else and back fixed it)\r\n\r\nIs there a way for me to reset it and just start from the current master? @eric-wieser ",
              "createdAt": "2023-08-02T10:13:01Z",
              "author": {
                "login": "MohanadAhmed"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "39db9d1cadb6995bbbb7ca2164b0dbf619300b71",
                "additions": 29,
                "deletions": 0,
                "committedDate": "2023-07-27T15:57:35Z",
                "author": {
                  "name": "Mohanad Ahmed",
                  "email": "m.a.m.elhassan@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "0b58842cfeb8127ec8dd4e17a257b227330b74c9",
                "additions": 16,
                "deletions": 1,
                "committedDate": "2023-07-27T15:57:42Z",
                "author": {
                  "name": "Mohanad Ahmed",
                  "email": "m.a.m.elhassan@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "90d4ad7f605a57a976b2aacc115755ddbcfe945f",
                "additions": 8,
                "deletions": 4,
                "committedDate": "2023-07-27T17:27:35Z",
                "author": {
                  "name": "Mohanad Ahmed",
                  "email": "m.a.m.elhassan@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "23a12a50eaa399a61a80d15943f0054d70a1d9f3",
                "additions": 21,
                "deletions": 23,
                "committedDate": "2023-07-28T11:00:30Z",
                "author": {
                  "name": "Mohanad Ahmed",
                  "email": "m.a.m.elhassan@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "5fd81b46af0ca139f228272681872c35ac5a445c",
                "additions": 12,
                "deletions": 19,
                "committedDate": "2023-07-28T11:03:05Z",
                "author": {
                  "name": "Mohanad Ahmed",
                  "email": "m.a.m.elhassan@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "dce8aeea1d2a7ad65c347e533fa71a4cb9631a4e",
                "additions": 0,
                "deletions": 1,
                "committedDate": "2023-07-28T11:11:37Z",
                "author": {
                  "name": "Mohanad Ahmed",
                  "email": "m.a.m.elhassan@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "f1f3488e91297a956eacc1a46a3888f7adc68c57",
                "additions": 18,
                "deletions": 1,
                "committedDate": "2023-07-28T14:02:03Z",
                "author": {
                  "name": "Mohanad Ahmed",
                  "email": "m.a.m.elhassan@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "aede694df70c0788cdfed21d7d68e92b040c33d7",
                "additions": 0,
                "deletions": 29,
                "committedDate": "2023-07-28T14:05:06Z",
                "author": {
                  "name": "Mohanad Ahmed",
                  "email": "m.a.m.elhassan@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "6cc129135fa20321620d911552c02f0468e2b3cf",
                "additions": 6,
                "deletions": 10,
                "committedDate": "2023-07-28T15:06:17Z",
                "author": {
                  "name": "Mohanad Ahmed",
                  "email": "m.a.m.elhassan@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "536dc78377c2e6a934efccb8476a9390623dc171",
                "additions": 1,
                "deletions": 1,
                "committedDate": "2023-07-28T15:09:32Z",
                "author": {
                  "name": "MohanadAhmed",
                  "email": "m.a.m.elhassan@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "f50eb4b1237038583baf5412dd3ea440c16f05a4",
                "additions": 0,
                "deletions": 19,
                "committedDate": "2023-07-28T15:14:45Z",
                "author": {
                  "name": "Mohanad Ahmed",
                  "email": "m.a.m.elhassan@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "bb46899ca3008c731ed6ba936899792699de63b0",
                "additions": 2,
                "deletions": 2,
                "committedDate": "2023-07-28T17:29:03Z",
                "author": {
                  "name": "Mohanad Ahmed",
                  "email": "m.a.m.elhassan@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "33fbe9dd2992dd02bba43f32eca0bb0af87380d1",
                "additions": 1614,
                "deletions": 528,
                "committedDate": "2023-07-28T17:54:36Z",
                "author": {
                  "name": "Mohanad Ahmed",
                  "email": "m.a.m.elhassan@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "946f7840efffcb95ff774b5a8638c88a3976c6ce",
                "additions": 1,
                "deletions": 4,
                "committedDate": "2023-07-30T13:40:29Z",
                "author": {
                  "name": "Eric Wieser",
                  "email": "wieser.eric@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "82e09bd0994244fa2ad92d3e3494d036cfa94835",
                "additions": 1,
                "deletions": 2,
                "committedDate": "2023-07-30T13:44:33Z",
                "author": {
                  "name": "Eric Wieser",
                  "email": "wieser.eric@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "efbf8e09ad76306edd7741bcde379632a798e9f0",
                "additions": 16,
                "deletions": 16,
                "committedDate": "2023-07-30T14:05:31Z",
                "author": {
                  "name": "Eric Wieser",
                  "email": "wieser.eric@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "083680a9f8d9463b84fc6b9c60c6ff4a61e2550d",
                "additions": 4,
                "deletions": 4,
                "committedDate": "2023-07-30T14:10:28Z",
                "author": {
                  "name": "Eric Wieser",
                  "email": "wieser.eric@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "a6e6907b3656847fa106c9f50eddd8a44c10ffd4",
                "additions": 1,
                "deletions": 0,
                "committedDate": "2023-07-30T14:48:21Z",
                "author": {
                  "name": "Eric Wieser",
                  "email": "wieser.eric@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "31ffe5f8ce4d851e23249cdaaed1b297786b17bb",
                "additions": 0,
                "deletions": 1,
                "committedDate": "2023-07-31T10:15:22Z",
                "author": {
                  "name": "Eric Wieser",
                  "email": "wieser.eric@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "9638ceba2829d6fd746bc83110dbc8a78669be63",
                "additions": 2,
                "deletions": 0,
                "committedDate": "2023-07-31T10:16:49Z",
                "author": {
                  "name": "Eric Wieser",
                  "email": "wieser.eric@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "2cb37d7ceddd4e7c7b79d1effc4177b5d58bd335",
                "additions": 25,
                "deletions": 24,
                "committedDate": "2023-08-02T10:03:45Z",
                "author": {
                  "name": "Mohanad Ahmed",
                  "email": "m.a.m.elhassan@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAErF8muw",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=6210&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            }
          ]
        },
        "createdAt": "2023-07-28T11:10:59Z",
        "deletions": 24,
        "files": {
          "nodes": [
            {
              "path": "Mathlib/Analysis/Complex/Basic.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/Analysis/SpecialFunctions/Pow/Deriv.lean",
              "additions": 1,
              "deletions": 0
            },
            {
              "path": "Mathlib/Data/Complex/Basic.lean",
              "additions": 0,
              "deletions": 23
            },
            {
              "path": "Mathlib/Data/IsROrC/Basic.lean",
              "additions": 22,
              "deletions": 1
            }
          ]
        },
        "headRefName": "IsROrCStarOrderedRing",
        "headRefOid": "2cb37d7ceddd4e7c7b79d1effc4177b5d58bd335",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c5WpRrj",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "MDU6TGFiZWwzMjcxMjQ0NzU5",
              "color": "e899cd",
              "name": "WIP"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
              "color": "f99094",
              "name": "merge-conflict"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABViJeVg",
              "color": "33DBEC",
              "name": "t-analysis"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABViJjTQ",
              "color": "33DBEC",
              "name": "t-algebra"
            }
          ]
        },
        "latestReviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5ciGka",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "j-loreaux"
              },
              "submittedAt": "2023-07-28T16:14:17Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5cmsyg",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-07-30T14:08:11Z"
            }
          ]
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "DIRTY",
        "mergeable": "CONFLICTING",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 6210,
        "potentialMergeCommit": null,
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": null,
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5cgEQP",
              "body": "> Prove StarOrderedRing instance for any IsROrC.\r\n\r\nI don't see this step in this PR; which is the titular one!",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-07-28T11:20:05Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5cgJjP",
              "body": "You should also probably delete these lines:\r\n\r\nhttps://github.com/leanprover-community/mathlib4/blob/e266a1ed2c7099a2b00b0b488cd25022e4c25c05/Mathlib/Data/Real/Sqrt.lean#L467-L471\r\n\r\nhttps://github.com/leanprover-community/mathlib4/blob/e266a1ed2c7099a2b00b0b488cd25022e4c25c05/Mathlib/Data/Complex/Basic.lean#L1242-L1261",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-07-28T11:30:23Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5chmwo",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-07-28T14:58:51Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5chm8W",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-07-28T14:59:18Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5chnFv",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-07-28T14:59:39Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5chnZ1",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-07-28T15:00:26Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5chsc4",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "j-loreaux"
              },
              "submittedAt": "2023-07-28T15:11:39Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5chtuI",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "j-loreaux"
              },
              "submittedAt": "2023-07-28T15:13:31Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5cht7W",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-07-28T15:13:47Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5chunP",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-07-28T15:14:43Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5chvXa",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "MohanadAhmed"
              },
              "submittedAt": "2023-07-28T15:15:44Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5chwAw",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "j-loreaux"
              },
              "submittedAt": "2023-07-28T15:17:13Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5chwhf",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "j-loreaux"
              },
              "submittedAt": "2023-07-28T15:18:40Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5chw5H",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-07-28T15:19:41Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5chyCA",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-07-28T15:22:48Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5chyqN",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-07-28T15:24:12Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5ciC4R",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "MohanadAhmed"
              },
              "submittedAt": "2023-07-28T16:04:25Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5ciGka",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "j-loreaux"
              },
              "submittedAt": "2023-07-28T16:14:17Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5cmsyg",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-07-30T14:08:11Z"
            }
          ]
        },
        "reviewThreads": {
          "nodes": [
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5MJ64h",
                    "body": "`toStarOrderedRingK` means this is now pointless and can be deleted, right?",
                    "createdAt": "2023-07-28T14:58:50Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5MJ7AF",
                    "body": "This one should also be pointless, as the instance below proves a more general case.",
                    "createdAt": "2023-07-28T14:59:18Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5MJ7F3",
                    "body": "```suggestion\r\n  le_iff_re_im : z ≤ w ↔ re z ≤ re w ∧ im z = im w\r\n```",
                    "createdAt": "2023-07-28T14:59:39Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5MJ7SA",
                    "body": "Where did these come from?",
                    "createdAt": "2023-07-28T15:00:26Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5MJ-Mh",
                    "body": "This is right before the end of the section now and can be deleted\r\n```suggestion\r\n```",
                    "createdAt": "2023-07-28T15:11:38Z",
                    "author": {
                      "login": "j-loreaux"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5MJ-zw",
                    "body": "I don't agree, without this line `open scoped ComplexOrder` in other files does not make `Complex.strictOrderedCommRing` an instance.",
                    "createdAt": "2023-07-28T15:13:47Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5MJ_Zy",
                    "body": "Together with its definition or just alone?\r\n\r\n```\r\nprotected def strictOrderedCommRing : StrictOrderedCommRing ℂ :=\r\n  { zero_le_one := ⟨zero_le_one, rfl⟩\r\n    add_le_add_left := fun w z h y => ⟨add_le_add_left h.1 _, congr_arg₂ (· + ·) rfl h.2⟩\r\n    mul_pos := fun z w hz hw => by\r\n      simp [lt_def, mul_re, mul_im, ← hz.2, ← hw.2, mul_pos hz.1 hw.1]\r\n    mul_comm := by intros; ext <;> ring_nf }\r\n#align complex.strict_ordered_comm_ring Complex.strictOrderedCommRing\r\n\r\n```",
                    "createdAt": "2023-07-28T15:15:44Z",
                    "author": {
                      "login": "MohanadAhmed"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5MJ_xV",
                    "body": "oops, my bad, I read this as a `local` attribute setting, instead of a `scoped` one. Please disregard my comment.",
                    "createdAt": "2023-07-28T15:17:12Z",
                    "author": {
                      "login": "j-loreaux"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5MJ-us",
                    "body": "```suggestion\r\ninstance IsROrC.instStarOrderedRing : StarOrderedRing K := by\r\n```",
                    "createdAt": "2023-07-28T15:13:31Z",
                    "author": {
                      "login": "j-loreaux"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5MJ_E6",
                    "body": "```suggestion\r\ninstance IsROrC.toStarOrderedRing : StarOrderedRing K := by\r\n```\r\nwould be better I think; the `inst`naming convention doesn't apply for base-class instances (as those are usually auto-generated to start with `to`.",
                    "createdAt": "2023-07-28T15:14:42Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5MKAGQ",
                    "body": "Well, at the very least I think the `K` should be deleted.",
                    "createdAt": "2023-07-28T15:18:40Z",
                    "author": {
                      "login": "j-loreaux"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5MKAUu",
                    "body": "Whoops, I agree!",
                    "createdAt": "2023-07-28T15:19:41Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5MKBCn",
                    "body": "Did you prove this from scratch? Can you instead try to adapt the old proof which was\r\n```lean\r\n  StarOrderedRing.ofNonnegIff' add_le_add_left fun r => by\r\n    refine' ⟨fun hr => ⟨Real.sqrt r.re, _⟩, fun h => _⟩\r\n    · have h₁ : 0 ≤ r.re := by\r\n        rw [le_def] at hr\r\n        exact hr.1\r\n      have h₂ : r.im = 0 := by\r\n        rw [le_def] at hr\r\n        exact hr.2.symm\r\n      ext\r\n      · simp only [ofReal_im, star_def, ofReal_re, sub_zero, conj_re, mul_re, mul_zero,\r\n          ← Real.sqrt_mul h₁ r.re, Real.sqrt_mul_self h₁]\r\n      · simp only [h₂, add_zero, ofReal_im, star_def, zero_mul, conj_im, mul_im, mul_zero,\r\n          neg_zero]\r\n    · obtain ⟨s, rfl⟩ := h\r\n      simp only [← normSq_eq_conj_mul_self, normSq_nonneg, zero_le_real, star_def]\r\n```",
                    "createdAt": "2023-07-28T15:22:48Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5MNXpW",
                    "body": "Ah nevermind, I see the proof is hard to replicate.",
                    "createdAt": "2023-07-30T14:08:11Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5MKBY9",
                    "body": "Isn't the proof of this `iff.rfl`?",
                    "createdAt": "2023-07-28T15:24:11Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5MKLUS",
                    "body": "Which one do you mean? I assume you are takling about `le_iff_re_im`. In that case no it is not if.rfl",
                    "createdAt": "2023-07-28T16:04:25Z",
                    "author": {
                      "login": "MohanadAhmed"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5MKNfW",
                    "body": "Eric had a typo, `Iff.rfl` (note the capital `I`) works to prove `le_iff_re_im`",
                    "createdAt": "2023-07-28T16:14:17Z",
                    "author": {
                      "login": "j-loreaux"
                    }
                  }
                ]
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjYwNjAxMzY=",
              "login": "MohanadAhmed"
            },
            {
              "id": "MDQ6VXNlcjQyNTI2MA==",
              "login": "eric-wieser"
            },
            {
              "id": "MDQ6VXNlcjg5MjA1OTg=",
              "login": "j-loreaux"
            },
            {
              "id": "U_kgDOB75MNQ",
              "login": "leanprover-community-mathlib4-bot"
            }
          ]
        },
        "state": "OPEN",
        "statusCheckRollup": {
          "contexts": {
            "nodes": [
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAErF8muw",
                "name": "Summary",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=6210&login=leanprover-community&repository=mathlib4"
              }
            ]
          }
        },
        "title": "feat(Data/IsROrC/Basic): add a `StarOrderedRing` instance",
        "updatedAt": "2024-07-31T08:14:03Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/6210",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5cgEQP",
              "createdAt": "2023-07-28T11:20:05Z",
              "body": "> Prove StarOrderedRing instance for any IsROrC.\r\n\r\nI don't see this step in this PR; which is the titular one!",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5cgJjP",
              "createdAt": "2023-07-28T11:30:23Z",
              "body": "You should also probably delete these lines:\r\n\r\nhttps://github.com/leanprover-community/mathlib4/blob/e266a1ed2c7099a2b00b0b488cd25022e4c25c05/Mathlib/Data/Real/Sqrt.lean#L467-L471\r\n\r\nhttps://github.com/leanprover-community/mathlib4/blob/e266a1ed2c7099a2b00b0b488cd25022e4c25c05/Mathlib/Data/Complex/Basic.lean#L1242-L1261",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5s2jH6zwAAAAJQ5DKW",
              "createdAt": "2023-07-28T11:30:47Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5s2jH6zwAAAAJQ6DsU",
              "createdAt": "2023-07-28T11:59:50Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABViJeVg",
                "name": "t-analysis"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5s2jH6zwAAAAJQ6DsY",
              "createdAt": "2023-07-28T11:59:50Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABViJjTQ",
                "name": "t-algebra"
              }
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5s2jH6zwAAAAJRASZg",
              "createdAt": "2023-07-28T14:45:35Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5s2jH6zwAAAAJRASZp",
              "createdAt": "2023-07-28T14:45:35Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5chmwo",
              "createdAt": "2023-07-28T14:58:50Z",
              "body": "",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5chm8W",
              "createdAt": "2023-07-28T14:59:17Z",
              "body": "",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5chnFv",
              "createdAt": "2023-07-28T14:59:39Z",
              "body": "",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5chnZ1",
              "createdAt": "2023-07-28T15:00:26Z",
              "body": "",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5chsc4",
              "createdAt": "2023-07-28T15:11:38Z",
              "body": "",
              "author": {
                "login": "j-loreaux"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5chtuI",
              "createdAt": "2023-07-28T15:13:31Z",
              "body": "",
              "author": {
                "login": "j-loreaux"
              }
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5chyCA",
              "createdAt": "2023-07-28T15:22:48Z",
              "body": "",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5chyqN",
              "createdAt": "2023-07-28T15:24:11Z",
              "body": "",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5s2jH6zwAAAAJRDPDj",
              "createdAt": "2023-07-28T15:56:44Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "BaseRefChangedEvent"
            },
            {
              "__typename": "BaseRefChangedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5jDw5g",
              "createdAt": "2023-08-02T10:08:42Z",
              "body": "(Sometimes github makes a mess of the history after a merge; switching the base branch to something else and back fixed it)",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5jDya2",
              "createdAt": "2023-08-02T10:13:01Z",
              "body": "> (Sometimes github makes a mess of the history after a merge; switching the base branch to something else and back fixed it)\r\n\r\nIs there a way for me to reset it and just start from the current master? @eric-wieser ",
              "author": {
                "login": "MohanadAhmed"
              }
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "RenamedTitleEvent"
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5N1quf",
              "createdAt": "2023-08-06T08:58:17Z",
              "source": {
                "id": "PR_kwDOFcwZ1c5XQoc1",
                "title": "[Merged by Bors] - feat: IsROrC.toStarOrderedRing as a scoped instance",
                "url": "https://github.com/leanprover-community/mathlib4/pull/6391"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5s2jH6zwAAAAJXGxAg",
              "createdAt": "2023-08-09T19:18:55Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5s2jH6zwAAAAJZrOKo",
              "createdAt": "2023-08-15T07:21:46Z",
              "label": {
                "id": "MDU6TGFiZWwzMjcxMjQ0NzU5",
                "name": "WIP"
              }
            },
            {
              "__typename": "BaseRefChangedEvent"
            },
            {
              "__typename": "BaseRefChangedEvent"
            }
          ]
        }
      }
    }
  }
}
