{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 176,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "smmercuri"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "- Define the `WithAbs` type synonym equipping a ring with a valuation\r\n- Make `K` arg explicit in `HeightOneSpectrum.valuation` (so that, e.g.,`WithVal (v.valuation K)` rather than `WithVal (v.valuation : Valuation K ℤₘ₀)`)\r\n- Refactor `HeightOneSpectrum.adicCompletion` to `Valuation.Completion`, making use of the `Valued` instance on `WithVal`\r\n- Fix errors generated by the above changes in mathlib\r\n\r\n---\r\nFollowing a [comment and TODO on Yaël’s recent PR](https://github.com/leanprover-community/mathlib4/pull/21301#discussion_r1956184620), I decided to resurrect and push a local branch of mine from last year where I played around with a `WithVal` type synonym and refactor of `HeightOneSpectrum.adicCompletion` in analogy to `WithAbs` and `InfinitePlace.Completion`. I never pushed it because I was concerned that it would have a big impact on downstream work, but following the above comment I think it’s worth having a discussion about this refactor in this PR. As expected, the refactor generated a number of errors across some files, which I’ve fixed, but I know there is a lot of work happening in this area outside of mathlib, so I’ve requested reviews from people that I know are currently using `adicCompletion`. Keen to hear everyone’s thoughts and concerns about this.\r\n\r\nMy two cents is that this would make it a lot easier to work with `adicCompletion` long term, but it’s not clear to me how disruptive this would be to others' work and whether it’s worth it.\r\n\r\nNote that most of the errors in downstream work will probably be generated from the explicit argument now in `HeightOneSpectrum.valuation` so they are an easy fix. And much of the rest should work by replacing any `K`’s with `WithVal (v.valuation K)` — although sometimes this is also not needed (see e.g., the `FinitePlaces` API, which involved minimal changes).\r\n\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nFor details on the \"pull request lifecycle\" in mathlib, please see:\r\nhttps://leanprover-community.github.io/contribute/index.html\r\n\r\nIn particular, note that most reviewers will only notice your PR\r\nif it passes the continuous integration checks.\r\nPlease ask for help on https://leanprover.zulipchat.com if needed.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nIf you are moving or deleting declarations, please include these lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nMoves:\r\n- Vector.* -> List.Vector.*\r\n- ...\r\n\r\nDeletions:\r\n- Nat.bit1_add_bit1\r\n- ...\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n\r\n-->\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 9,
        "closed": false,
        "closedAt": null,
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c6e87MX",
              "body": "### PR summary [39bc77c834](https://github.com/leanprover-community/mathlib4/pull/22055/commits/39bc77c834633116c1d992248d51019a3cd6d1ef)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n|<details><summary>46 files</summary> `Mathlib.Analysis.Fourier.ZMod` `Mathlib.Analysis.SpecialFunctions.Complex.CircleAddChar` `Mathlib.FieldTheory.Laurent` `Mathlib.FieldTheory.RatFunc.AsPolynomial` `Mathlib.FieldTheory.RatFunc.Degree` `Mathlib.NumberTheory.ClassNumber.FunctionField` `Mathlib.NumberTheory.Cyclotomic.Basic` `Mathlib.NumberTheory.Cyclotomic.Discriminant` `Mathlib.NumberTheory.Cyclotomic.Embeddings` `Mathlib.NumberTheory.Cyclotomic.Gal` `Mathlib.NumberTheory.Cyclotomic.PID` `Mathlib.NumberTheory.Cyclotomic.PrimitiveRoots` `Mathlib.NumberTheory.Cyclotomic.Rat` `Mathlib.NumberTheory.Cyclotomic.Three` `Mathlib.NumberTheory.DirichletCharacter.GaussSum` `Mathlib.NumberTheory.FLT.Three` `Mathlib.NumberTheory.Fermat` `Mathlib.NumberTheory.FunctionField` `Mathlib.NumberTheory.GaussSum` `Mathlib.NumberTheory.JacobiSum.Basic` `Mathlib.NumberTheory.LSeries.DirichletContinuation` `Mathlib.NumberTheory.LSeries.Nonvanishing` `Mathlib.NumberTheory.LSeries.PrimesInAP` `Mathlib.NumberTheory.LSeries.ZMod` `Mathlib.NumberTheory.LegendreSymbol.AddCharacter` `Mathlib.NumberTheory.LegendreSymbol.JacobiSymbol` `Mathlib.NumberTheory.LegendreSymbol.QuadraticChar.GaussSum` `Mathlib.NumberTheory.LegendreSymbol.QuadraticReciprocity` `Mathlib.NumberTheory.NumberField.AdeleRing` `Mathlib.NumberTheory.NumberField.FinitePlaces` `Mathlib.NumberTheory.NumberField.ProductFormula` `Mathlib.NumberTheory.PrimesCongruentOne` `Mathlib.RingTheory.DedekindDomain.AdicValuation` `Mathlib.RingTheory.DedekindDomain.FiniteAdeleRing` `Mathlib.RingTheory.DedekindDomain.SInteger` `Mathlib.RingTheory.DedekindDomain.SelmerGroup` `Mathlib.RingTheory.LaurentSeries` `Mathlib.RingTheory.LittleWedderburn` `Mathlib.RingTheory.Polynomial.Cyclotomic.Basic` `Mathlib.RingTheory.Polynomial.Cyclotomic.Eval` `Mathlib.RingTheory.Polynomial.Cyclotomic.Expand` `Mathlib.RingTheory.Polynomial.Cyclotomic.Roots` `Mathlib.RingTheory.Polynomial.Eisenstein.IsIntegral` `Mathlib.RingTheory.RootsOfUnity.AlgebraicallyClosed` `Mathlib.Tactic.NormNum.LegendreSymbol` `Mathlib.Tactic`</details>|1|\n| `Mathlib.Topology.Algebra.Valued.WithVal` (new file)|1358|\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ Completion`\n`+ WithVal`\n`+ embedding_coe`\n`+ equiv`\n`+ instance (v : Valuation R Γ₀) : Valued (WithVal v) Γ₀ := Valued.mk' v`\n`+ instance : @IsScalarTower K ((idealX K).adicCompletionIntegers (RatFunc K))`\n`+ instance : Coe K v.Completion`\n`+ instance : Inhabited (WithVal v) := ⟨0⟩`\n`+ instance : Ring (WithVal v) := ‹Ring R›`\n`+ instance : Valued (RatFunc K) ℤₘ₀ := Valued.mk' ((idealX K).valuation _)`\n`+ instance : Valued K⸨X⸩ ℤₘ₀ := Valued.mk' ((PowerSeries.idealX K).valuation _)`\n`+ instance [CommRing R] : CommRing (WithVal v) := ‹CommRing R›`\n`+ instance [Field R] : Field (WithVal v) := ‹Field R›`\n`+ instance [Nontrivial R] : Nontrivial (WithVal v) := ‹Nontrivial R›`\n`+ instance [Unique R] : Unique (WithVal v) := ‹Unique R›`\n`+ instance {P S : Type*} [SMul P S] [SMul S R] [SMul P R] [IsScalarTower P S R] :`\n`+ instance {S : Type*} [CommRing S] [CommRing R] [Algebra S R] [IsFractionRing S R] :`\n`+ instance {S : Type*} [CommSemiring S] [CommRing R] [Algebra S R] : Algebra S (WithVal v)`\n`+ instance {S : Type*} [SMul S R] : SMul S (WithVal v)`\n`+ toNNReal_Valued_eq_vadicAbv'`\n`- adicCompletion.instCoe`\n`- adicCompletion_completeSpace`\n`- instance : Field (v.adicCompletion K) := inferInstanceAs <|`\n`- instance : IsScalarTower K ((idealX K).adicCompletionIntegers (RatFunc K))`\n`- instance : IsScalarTower S K (v.adicCompletion K) := inferInstanceAs <|`\n`- instance : Valued (RatFunc K) ℤₘ₀ := Valued.mk' (idealX K).valuation`\n`- instance : Valued K⸨X⸩ ℤₘ₀ := Valued.mk' (PowerSeries.idealX K).valuation`\n`- valuedAdicCompletion`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>\n\n---\n\n<details><summary>No changes to technical debt.</summary>\n\nYou can run this locally as\n```\n./scripts/technical-debt-metrics.sh pr_summary\n```\n* The `relative` value is the weighted *sum* of the differences with weight given by the *inverse* of the current value of the statistic.\n* The `absolute` value is the `relative` value divided by the total sum of the inverses of the current values (i.e. the weighted *average* of the differences).\n</details>\n",
              "createdAt": "2025-02-18T19:40:04Z",
              "author": {
                "login": "github-actions"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "8e359902a690a4993e0da3863a74d5181ef7d15f",
                "additions": 143,
                "deletions": 49,
                "committedDate": "2024-11-05T19:33:03Z",
                "author": {
                  "name": "Salvatore Mercuri",
                  "email": "smercuri@ed.ac.uk"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "f460a95cfc340601a3b5e751bc63346b924fcbf2",
                "additions": 3,
                "deletions": 6,
                "committedDate": "2024-11-06T18:17:40Z",
                "author": {
                  "name": "Salvatore Mercuri",
                  "email": "smercuri@ed.ac.uk"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "7cc238c0f402713a3caa10bd1a3640893d2e328b",
                "additions": 322769,
                "deletions": 180908,
                "committedDate": "2025-02-17T21:20:39Z",
                "author": {
                  "name": "Salvatore Mercuri",
                  "email": "smercuri@ed.ac.uk"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "48c49268f1861aba27595eb8056039c17349b3fb",
                "additions": 66,
                "deletions": 119,
                "committedDate": "2025-02-17T22:03:12Z",
                "author": {
                  "name": "Salvatore Mercuri",
                  "email": "smercuri@ed.ac.uk"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "7a9533f3b5eddfb6ed9bf100b4461fd980bf2f28",
                "additions": 37,
                "deletions": 30,
                "committedDate": "2025-02-17T22:23:58Z",
                "author": {
                  "name": "Salvatore Mercuri",
                  "email": "smercuri@ed.ac.uk"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "2ad46be0f8eece904a33ad3cf13ad3dda5bd4de8",
                "additions": 0,
                "deletions": 4,
                "committedDate": "2025-02-17T22:26:25Z",
                "author": {
                  "name": "Salvatore Mercuri",
                  "email": "smercuri@ed.ac.uk"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "54e42e79a575f82c2678fa8116c965f7aea1dae1",
                "additions": 53,
                "deletions": 44,
                "committedDate": "2025-02-18T10:11:27Z",
                "author": {
                  "name": "Salvatore Mercuri",
                  "email": "smercuri@ed.ac.uk"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "42b24de4e10ae15e1056fdb2badfe35686da0a7d",
                "additions": 3,
                "deletions": 3,
                "committedDate": "2025-02-18T13:30:36Z",
                "author": {
                  "name": "Salvatore Mercuri",
                  "email": "smercuri@ed.ac.uk"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAItoL66Q",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13398019108/job/37421775593"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAItoL45Q",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13398019097/job/37421775077"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAItoL6RA",
                        "name": "Build",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13398019097/job/37421775428"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAItoL5Bg",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13398019108/job/37421775110"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAItoL8zg",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13398019108/job/37421776078"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAItowIYA",
                        "name": "Post-CI job",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13398019097/job/37422368864"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "39bc77c834633116c1d992248d51019a3cd6d1ef",
                "additions": 3,
                "deletions": 3,
                "committedDate": "2025-02-18T19:11:18Z",
                "author": {
                  "name": "Salvatore Mercuri",
                  "email": "smercuri@ed.ac.uk"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAItpBVvg",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13398277538/job/37422650814"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAItqc_jg",
                        "name": "Add topic label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13398749416/job/37424152462"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAItqc_kA",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13398749419/job/37424152464"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAItqc_ag",
                        "name": "post-or-update-summary-comment",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13398749418/job/37424152426"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAItpBXTg",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13398277550/job/37422651214"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAItqdBLQ",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13398749423/job/37424152877"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAItpBX1A",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13398277538/job/37422651348"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAItpBVwQ",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13398277550/job/37422650817"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAItqc_lA",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13398749423/job/37424152468"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAItpBZmA",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13398277538/job/37422651800"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAItpjoNQ",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13398277550/job/37423212597"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAItqdalg",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/37424159382"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAItqedeA",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=22055&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            }
          ]
        },
        "createdAt": "2025-02-18T19:39:05Z",
        "deletions": 93,
        "files": {
          "nodes": [
            {
              "path": "Mathlib.lean",
              "additions": 1,
              "deletions": 0
            },
            {
              "path": "Mathlib/FieldTheory/RatFunc/AsPolynomial.lean",
              "additions": 4,
              "deletions": 4
            },
            {
              "path": "Mathlib/NumberTheory/NumberField/FinitePlaces.lean",
              "additions": 24,
              "deletions": 16
            },
            {
              "path": "Mathlib/RingTheory/DedekindDomain/AdicValuation.lean",
              "additions": 46,
              "deletions": 52
            },
            {
              "path": "Mathlib/RingTheory/DedekindDomain/FiniteAdeleRing.lean",
              "additions": 3,
              "deletions": 3
            },
            {
              "path": "Mathlib/RingTheory/DedekindDomain/SInteger.lean",
              "additions": 9,
              "deletions": 9
            },
            {
              "path": "Mathlib/RingTheory/DedekindDomain/SelmerGroup.lean",
              "additions": 5,
              "deletions": 5
            },
            {
              "path": "Mathlib/RingTheory/LaurentSeries.lean",
              "additions": 4,
              "deletions": 4
            },
            {
              "path": "Mathlib/Topology/Algebra/Valued/WithVal.lean",
              "additions": 80,
              "deletions": 0
            }
          ]
        },
        "headRefName": "WithValuation",
        "headRefOid": "39bc77c834633116c1d992248d51019a3cd6d1ef",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c6LpynJ",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
              "color": "f99094",
              "name": "merge-conflict"
            }
          ]
        },
        "latestReviews": {
          "nodes": []
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "DIRTY",
        "mergeable": "CONFLICTING",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 22055,
        "potentialMergeCommit": null,
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": null,
        "reviewRequests": {
          "nodes": [
            {
              "requestedReviewer": {
                "id": "MDQ6VXNlcjE0MDkwNTkz",
                "login": "YaelDillies"
              }
            },
            {
              "requestedReviewer": {
                "id": "MDQ6VXNlcjMxODY3ODI3",
                "login": "kbuzzard"
              }
            },
            {
              "requestedReviewer": {
                "id": "MDQ6VXNlcjY1MDgwMTQ0",
                "login": "faenuccio"
              }
            },
            {
              "requestedReviewer": {
                "id": "MDQ6VXNlcjg4NTM2NDkz",
                "login": "mariainesdff"
              }
            }
          ]
        },
        "reviews": {
          "nodes": []
        },
        "reviewThreads": {
          "nodes": []
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjQ3NTY4NTUz",
              "login": "smmercuri"
            },
            {
              "id": "U_kgDOBcsTTQ",
              "login": "leanprover-community-bot-assistant"
            }
          ]
        },
        "state": "OPEN",
        "statusCheckRollup": {
          "contexts": {
            "nodes": [
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAItpBVvg",
                "name": "Lint style (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13398277538/job/37422650814"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAItqc_jg",
                "name": "Add topic label",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13398749416/job/37424152462"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAItqc_kA",
                "name": "label-and-report-new-contributor",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13398749419/job/37424152464"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAItqc_ag",
                "name": "post-or-update-summary-comment",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13398749418/job/37424152426"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAItpBXTg",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13398277550/job/37422651214"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAItqdBLQ",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13398749423/job/37424152877"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAItpBX1A",
                "name": "Build (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13398277538/job/37422651348"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAItpBVwQ",
                "name": "Build",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13398277550/job/37422650817"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAItqc_lA",
                "name": "Check all files imported",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13398749423/job/37424152468"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAItpBZmA",
                "name": "Post-CI job (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13398277538/job/37422651800"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAItpjoNQ",
                "name": "Post-CI job",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13398277550/job/37423212597"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAItqdalg",
                "name": "New Contributor Check",
                "conclusion": "NEUTRAL",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/37424159382"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAItqedeA",
                "name": "Summary",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=22055&login=leanprover-community&repository=mathlib4"
              }
            ]
          }
        },
        "title": "feat: `WithVal` type synonym and refactor of `HeightOneSpectrum.adicCompletion`",
        "updatedAt": "2025-02-19T05:25:43Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/22055",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "8e359902a690a4993e0da3863a74d5181ef7d15f"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "f460a95cfc340601a3b5e751bc63346b924fcbf2"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "7cc238c0f402713a3caa10bd1a3640893d2e328b"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "48c49268f1861aba27595eb8056039c17349b3fb"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "7a9533f3b5eddfb6ed9bf100b4461fd980bf2f28"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "2ad46be0f8eece904a33ad3cf13ad3dda5bd4de8"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "54e42e79a575f82c2678fa8116c965f7aea1dae1"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "42b24de4e10ae15e1056fdb2badfe35686da0a7d"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "39bc77c834633116c1d992248d51019a3cd6d1ef"
              }
            },
            {
              "__typename": "ReviewRequestedEvent",
              "id": "RRE_lADOFcwZ1c6qjp00zwAAAAPOz-Ng",
              "createdAt": "2025-02-18T19:39:06Z",
              "requestedReviewer": {
                "id": "MDQ6VXNlcjE0MDkwNTkz",
                "login": "YaelDillies"
              }
            },
            {
              "__typename": "ReviewRequestedEvent",
              "id": "RRE_lADOFcwZ1c6qjp00zwAAAAPOz-OC",
              "createdAt": "2025-02-18T19:39:06Z",
              "requestedReviewer": {
                "id": "MDQ6VXNlcjMxODY3ODI3",
                "login": "kbuzzard"
              }
            },
            {
              "__typename": "ReviewRequestedEvent",
              "id": "RRE_lADOFcwZ1c6qjp00zwAAAAPOz-Ol",
              "createdAt": "2025-02-18T19:39:06Z",
              "requestedReviewer": {
                "id": "MDQ6VXNlcjY1MDgwMTQ0",
                "login": "faenuccio"
              }
            },
            {
              "__typename": "ReviewRequestedEvent",
              "id": "RRE_lADOFcwZ1c6qjp00zwAAAAPOz-O3",
              "createdAt": "2025-02-18T19:39:06Z",
              "requestedReviewer": {
                "id": "MDQ6VXNlcjg4NTM2NDkz",
                "login": "mariainesdff"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6e87MX",
              "createdAt": "2025-02-18T19:40:04Z",
              "body": "### PR summary [39bc77c834](https://github.com/leanprover-community/mathlib4/pull/22055/commits/39bc77c834633116c1d992248d51019a3cd6d1ef)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n|<details><summary>46 files</summary> `Mathlib.Analysis.Fourier.ZMod` `Mathlib.Analysis.SpecialFunctions.Complex.CircleAddChar` `Mathlib.FieldTheory.Laurent` `Mathlib.FieldTheory.RatFunc.AsPolynomial` `Mathlib.FieldTheory.RatFunc.Degree` `Mathlib.NumberTheory.ClassNumber.FunctionField` `Mathlib.NumberTheory.Cyclotomic.Basic` `Mathlib.NumberTheory.Cyclotomic.Discriminant` `Mathlib.NumberTheory.Cyclotomic.Embeddings` `Mathlib.NumberTheory.Cyclotomic.Gal` `Mathlib.NumberTheory.Cyclotomic.PID` `Mathlib.NumberTheory.Cyclotomic.PrimitiveRoots` `Mathlib.NumberTheory.Cyclotomic.Rat` `Mathlib.NumberTheory.Cyclotomic.Three` `Mathlib.NumberTheory.DirichletCharacter.GaussSum` `Mathlib.NumberTheory.FLT.Three` `Mathlib.NumberTheory.Fermat` `Mathlib.NumberTheory.FunctionField` `Mathlib.NumberTheory.GaussSum` `Mathlib.NumberTheory.JacobiSum.Basic` `Mathlib.NumberTheory.LSeries.DirichletContinuation` `Mathlib.NumberTheory.LSeries.Nonvanishing` `Mathlib.NumberTheory.LSeries.PrimesInAP` `Mathlib.NumberTheory.LSeries.ZMod` `Mathlib.NumberTheory.LegendreSymbol.AddCharacter` `Mathlib.NumberTheory.LegendreSymbol.JacobiSymbol` `Mathlib.NumberTheory.LegendreSymbol.QuadraticChar.GaussSum` `Mathlib.NumberTheory.LegendreSymbol.QuadraticReciprocity` `Mathlib.NumberTheory.NumberField.AdeleRing` `Mathlib.NumberTheory.NumberField.FinitePlaces` `Mathlib.NumberTheory.NumberField.ProductFormula` `Mathlib.NumberTheory.PrimesCongruentOne` `Mathlib.RingTheory.DedekindDomain.AdicValuation` `Mathlib.RingTheory.DedekindDomain.FiniteAdeleRing` `Mathlib.RingTheory.DedekindDomain.SInteger` `Mathlib.RingTheory.DedekindDomain.SelmerGroup` `Mathlib.RingTheory.LaurentSeries` `Mathlib.RingTheory.LittleWedderburn` `Mathlib.RingTheory.Polynomial.Cyclotomic.Basic` `Mathlib.RingTheory.Polynomial.Cyclotomic.Eval` `Mathlib.RingTheory.Polynomial.Cyclotomic.Expand` `Mathlib.RingTheory.Polynomial.Cyclotomic.Roots` `Mathlib.RingTheory.Polynomial.Eisenstein.IsIntegral` `Mathlib.RingTheory.RootsOfUnity.AlgebraicallyClosed` `Mathlib.Tactic.NormNum.LegendreSymbol` `Mathlib.Tactic`</details>|1|\n| `Mathlib.Topology.Algebra.Valued.WithVal` (new file)|1358|\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ Completion`\n`+ WithVal`\n`+ embedding_coe`\n`+ equiv`\n`+ instance (v : Valuation R Γ₀) : Valued (WithVal v) Γ₀ := Valued.mk' v`\n`+ instance : @IsScalarTower K ((idealX K).adicCompletionIntegers (RatFunc K))`\n`+ instance : Coe K v.Completion`\n`+ instance : Inhabited (WithVal v) := ⟨0⟩`\n`+ instance : Ring (WithVal v) := ‹Ring R›`\n`+ instance : Valued (RatFunc K) ℤₘ₀ := Valued.mk' ((idealX K).valuation _)`\n`+ instance : Valued K⸨X⸩ ℤₘ₀ := Valued.mk' ((PowerSeries.idealX K).valuation _)`\n`+ instance [CommRing R] : CommRing (WithVal v) := ‹CommRing R›`\n`+ instance [Field R] : Field (WithVal v) := ‹Field R›`\n`+ instance [Nontrivial R] : Nontrivial (WithVal v) := ‹Nontrivial R›`\n`+ instance [Unique R] : Unique (WithVal v) := ‹Unique R›`\n`+ instance {P S : Type*} [SMul P S] [SMul S R] [SMul P R] [IsScalarTower P S R] :`\n`+ instance {S : Type*} [CommRing S] [CommRing R] [Algebra S R] [IsFractionRing S R] :`\n`+ instance {S : Type*} [CommSemiring S] [CommRing R] [Algebra S R] : Algebra S (WithVal v)`\n`+ instance {S : Type*} [SMul S R] : SMul S (WithVal v)`\n`+ toNNReal_Valued_eq_vadicAbv'`\n`- adicCompletion.instCoe`\n`- adicCompletion_completeSpace`\n`- instance : Field (v.adicCompletion K) := inferInstanceAs <|`\n`- instance : IsScalarTower K ((idealX K).adicCompletionIntegers (RatFunc K))`\n`- instance : IsScalarTower S K (v.adicCompletion K) := inferInstanceAs <|`\n`- instance : Valued (RatFunc K) ℤₘ₀ := Valued.mk' (idealX K).valuation`\n`- instance : Valued K⸨X⸩ ℤₘ₀ := Valued.mk' (PowerSeries.idealX K).valuation`\n`- valuedAdicCompletion`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>\n\n---\n\n<details><summary>No changes to technical debt.</summary>\n\nYou can run this locally as\n```\n./scripts/technical-debt-metrics.sh pr_summary\n```\n* The `relative` value is the weighted *sum* of the differences with weight given by the *inverse* of the current value of the statistic.\n* The `absolute` value is the `relative` value divided by the total sum of the inverses of the current values (i.e. the weighted *average* of the differences).\n</details>\n",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6qjp00zwAAAAPPFjMC",
              "createdAt": "2025-02-19T05:25:43Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            }
          ]
        }
      }
    }
  }
}
