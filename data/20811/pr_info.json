{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 765,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "Vierkantor"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "This is a step towards a concrete category redesign, as outlined in this Zulip post: https://leanprover.zulipchat.com/#narrow/channel/287929-mathlib4/topic/Concrete.20category.20class.20redesign/near/493903980\r\n\r\nThis PR adds basic support for `ConcreteCategory` to the `elementwise` attribute and elaborator: it still uses `HasForget` when a fresh instance is needed, but now will replace the `forget`-based operations with `ConcreteCategory`-based ones. So as long as there is only a `HasForget` instance, or no instance at all, in scope, `elementwise` will behave the same. But when there is a `ConcreteCategory` instance, all the `(forget C).obj X`es turn into `ToType X` and `(forget C).map f`s turn into `hom f`.\r\n\r\nIn the future, when we have replaced enough `HasForget` instances with `ConcreteCategory`, we can apply the changes from the branch `redesign-ConcreteCategory` to make `elementwise` use `ConcreteCategory` when it creates fresh instances.\r\n\r\n---\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nFor details on the \"pull request lifecycle\" in mathlib, please see:\r\nhttps://leanprover-community.github.io/contribute/index.html\r\n\r\nIn particular, note that most reviewers will only notice your PR\r\nif it passes the continuous integration checks.\r\nPlease ask for help on https://leanprover.zulipchat.com if needed.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nIf you are moving or deleting declarations, please include these lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nMoves:\r\n- Vector.* -> List.Vector.*\r\n- ...\r\n\r\nDeletions:\r\n- Nat.bit1_add_bit1\r\n- ...\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n\r\n-->\r\n\r\n- [ ] depends on: #20810 \r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)",
        "changedFiles": 139,
        "closed": false,
        "closedAt": null,
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c6a4FBm",
              "body": "### PR summary [ffea8ab004](https://github.com/leanprover-community/mathlib4/pull/20811/commits/ffea8ab00493bcb6d9ba63985a3f9a1aea7d6a97)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ ConcreteCategory.forget_map_eq_coe`\n`+ FullSubcategory.hasForget`\n`+ HasForget`\n`+ HasForget.hasCoeToSort`\n`+ HasForget.instFunLike`\n`+ HasForget.toConcreteCategory`\n`+ HasForget.toFunLike`\n`+ HasForget.types`\n`+ InducedCategory.hasForget`\n`+ ToHom`\n`+ ToType`\n`+ Types.instConcreteCategory`\n`+ Types.instFunLike`\n`+ bar'`\n`+ bar''`\n`+ bar'''`\n`+ coe_ext`\n`+ coe_toHasForget_instFunLike`\n`+ congr_arg`\n`+ congr_fun`\n`+ ex2`\n`+ ex3`\n`+ exact_iff_of_hasForget`\n`+ ext`\n`+ ext_apply`\n`+ f`\n`+ fh`\n`+ foo`\n`+ foo'`\n`+ forget_eq_ConcreteCategory_hom`\n`+ forget_obj`\n`+ g`\n`+ gh`\n`+ groupWithZeroHasForget`\n`+ h`\n`+ hasForgetFintype`\n`+ hasForgetOfDifferentialObjects`\n`+ homEquiv`\n`+ hom_bijective`\n`+ hom_comp`\n`+ hom_id`\n`+ hom_injective`\n`+ instance (x : SimplexCategory) : Fintype (HasForget.forget.obj x)`\n`+ instance : HasCoeToSort X := HasForget.hasCoeToSort X`\n`+ instance : HasForget (ContAction V G)`\n`+ instance : HasForget (DiscreteContAction V G)`\n`+ instance : HasForget (FDRep k G) := inferInstance`\n`+ instance : HasForget (FGModuleCat R) := by`\n`+ instance : HasForget (GradedObject β C) where forget := total β C ⋙ forget C`\n`+ instance : HasForget BddDistLat`\n`+ instance : HasForget BddLat`\n`+ instance : HasForget BoolAlg`\n`+ instance : HasForget BoolRing`\n`+ instance : HasForget Born`\n`+ instance : HasForget Compactum where forget := forget`\n`+ instance : HasForget CompleteLat := by`\n`+ instance : HasForget DistLat`\n`+ instance : HasForget FinTopCat`\n`+ instance : HasForget FiniteGrp := InducedCategory.hasForget FiniteGrp.toGrp`\n`+ instance : HasForget Frm := by`\n`+ instance : HasForget HeytAlg := by`\n`+ instance : HasForget Lat`\n`+ instance : HasForget LinOrd`\n`+ instance : HasForget MeasCat := by`\n`+ instance : HasForget NonemptyFinLinOrd`\n`+ instance : HasForget PartOrd`\n`+ instance : HasForget Preord`\n`+ instance : HasForget ProfiniteGrp`\n`+ instance : HasForget SemiNormedGrp := by`\n`+ instance : HasForget SemilatInfCat`\n`+ instance : HasForget SemilatSupCat`\n`+ instance : HasForget TopCommRingCat.{u}`\n`+ instance : HasForget UniformSpaceCat`\n`+ instance : HasForget ωCPO := by unfold ωCPO; infer_instance`\n`+ instance : HasForget.{0} SimplexCategory`\n`+ instance : HasForget.{u} CommRingCat`\n`+ instance : HasForget.{u} CommSemiRingCat`\n`+ instance : HasForget.{u} DeltaGenerated.{u}`\n`+ instance : HasForget.{u} RingCat`\n`+ instance : HasForget.{u} SemiNormedGrp₁`\n`+ instance : HasForget.{u} SemiRingCat`\n`+ instance : HasForget.{u} Sequential.{u}`\n`+ instance : HasForget.{v} (AlgebraCat.{v} R)`\n`+ instance : HasForget.{w} CompactlyGenerated.{u, w}`\n`+ instance [HasForget C] [PreservesColimitsOfShape (Discrete WalkingPair) (forget C)]`\n`+ instance [HasForget V] : HasForget (Action V G)`\n`+ instance {D : Type w} [Category.{w'} D] [HasForget.{max u v} D]`\n`+ instance {X Y : C} : CoeFun (X ⟶ Y) (fun _ ↦ ToType X → ToType Y)`\n`+ moduleHasForget`\n`+ toHasForget`\n`+++ instHasForget`\n`++++++++++++++++++++ hasForget`\n`+-+ ex1`\n`- ConcreteCategory.hasCoeToSort`\n`- ConcreteCategory.instFunLike`\n`- ConcreteCategory.types`\n`- FullSubcategory.concreteCategory`\n`- InducedCategory.concreteCategory`\n`- concreteCategoryFintype`\n`- concreteCategoryOfDifferentialObjects`\n`- exact_iff_of_concreteCategory`\n`- groupWithZeroConcreteCategory`\n`- instance (x : SimplexCategory) : Fintype (ConcreteCategory.forget.obj x)`\n`- instance : ConcreteCategory (ContAction V G)`\n`- instance : ConcreteCategory (DiscreteContAction V G)`\n`- instance : ConcreteCategory (FDRep k G) := inferInstance`\n`- instance : ConcreteCategory (FGModuleCat R) := by`\n`- instance : ConcreteCategory (GradedObject β C) where forget := total β C ⋙ forget C`\n`- instance : ConcreteCategory BddDistLat`\n`- instance : ConcreteCategory BddLat`\n`- instance : ConcreteCategory BoolAlg`\n`- instance : ConcreteCategory BoolRing`\n`- instance : ConcreteCategory Born`\n`- instance : ConcreteCategory Compactum where forget := forget`\n`- instance : ConcreteCategory CompleteLat := by`\n`- instance : ConcreteCategory DistLat`\n`- instance : ConcreteCategory FinTopCat`\n`- instance : ConcreteCategory FiniteGrp := InducedCategory.concreteCategory FiniteGrp.toGrp`\n`- instance : ConcreteCategory Frm := by`\n`- instance : ConcreteCategory HeytAlg := by`\n`- instance : ConcreteCategory Lat`\n`- instance : ConcreteCategory LinOrd`\n`- instance : ConcreteCategory MeasCat := by`\n`- instance : ConcreteCategory NonemptyFinLinOrd`\n`- instance : ConcreteCategory PartOrd`\n`- instance : ConcreteCategory Preord`\n`- instance : ConcreteCategory ProfiniteGrp`\n`- instance : ConcreteCategory SemiNormedGrp := by`\n`- instance : ConcreteCategory SemilatInfCat`\n`- instance : ConcreteCategory SemilatSupCat`\n`- instance : ConcreteCategory TopCommRingCat.{u}`\n`- instance : ConcreteCategory UniformSpaceCat`\n`- instance : ConcreteCategory ωCPO := by unfold ωCPO; infer_instance`\n`- instance : ConcreteCategory.{0} SimplexCategory`\n`- instance : ConcreteCategory.{u} CommRingCat`\n`- instance : ConcreteCategory.{u} CommSemiRingCat`\n`- instance : ConcreteCategory.{u} DeltaGenerated.{u}`\n`- instance : ConcreteCategory.{u} RingCat`\n`- instance : ConcreteCategory.{u} SemiNormedGrp₁`\n`- instance : ConcreteCategory.{u} SemiRingCat`\n`- instance : ConcreteCategory.{u} Sequential.{u}`\n`- instance : ConcreteCategory.{v} (AlgebraCat.{v} R)`\n`- instance : ConcreteCategory.{w} CompactlyGenerated.{u, w}`\n`- instance : HasCoeToSort X := ConcreteCategory.hasCoeToSort X`\n`- instance [ConcreteCategory C] [PreservesColimitsOfShape (Discrete WalkingPair) (forget C)]`\n`- instance [ConcreteCategory V] : ConcreteCategory (Action V G)`\n`- instance {D : Type w} [Category.{w'} D] [ConcreteCategory.{max u v} D]`\n`- moduleConcreteCategory`\n`-++ bar`\n`--- instConcreteCategory`\n`-------------------- concreteCategory`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>\n\n---\n\n<details><summary>Increase in tech debt: (relative, absolute) = (3.00, 0.00)</summary>\n\n|Current number|Change|Type|\n|-:|:-:|:-|\n|4618|3|porting notes|\n\nCurrent commit [ffea8ab004](https://github.com/leanprover-community/mathlib4/commit/ffea8ab00493bcb6d9ba63985a3f9a1aea7d6a97)\nReference commit [e5ab45ea78](https://github.com/leanprover-community/mathlib4/commit/e5ab45ea78696d399f7632d6fbc9007a1c32579f)\n\nYou can run this locally as\n```\n./scripts/technical-debt-metrics.sh pr_summary\n```\n* The `relative` value is the weighted *sum* of the differences with weight given by the *inverse* of the current value of the statistic.\n* The `absolute` value is the `relative` value divided by the total sum of the inverses of the current values (i.e. the weighted *average* of the differences).\n</details>\n",
              "createdAt": "2025-01-17T13:40:28Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6a4H6D",
              "body": "This PR/issue depends on:\n* leanprover-community/mathlib4#20810\nBy **[Dependent Issues](https://github.com/z0al/dependent-issues)** (🤖). Happy coding!\n<!-- By Dependent Issues (Action) - DO NOT REMOVE -->",
              "createdAt": "2025-01-17T13:46:43Z",
              "author": {
                "login": "mathlib4-dependent-issues-bot"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "fb21cb025c2e43c5305eb2be376d141bb513d962",
                "additions": 369,
                "deletions": 359,
                "committedDate": "2025-01-17T12:17:05Z",
                "author": {
                  "name": "Anne C.A. Baanen",
                  "email": "vierkantor@vierkantor.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIVHYxEw",
                        "name": "set_pr_emoji",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12829856880/job/35776770323"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIVEnljg",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12828890929/job/35773867406"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIVHqj_A",
                        "name": "Add ready-to-merge or delegated label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12829952042/job/35777061884"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIVHYvQQ",
                        "name": "Add topic label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12829856859/job/35776769857"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIVHYvTw",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12829856860/job/35776769871"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIVHqj3w",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12829952065/job/35777061855"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIVHYvRQ",
                        "name": "post-or-update-summary-comment",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12829856866/job/35776769861"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIVHqkBw",
                        "name": "Fix style issues from lint",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12829952047/job/35777061895"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIVEnmwg",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12828890926/job/35773867714"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIVHYvrg",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12829856863/job/35776769966"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIVEnnFg",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12828890929/job/35773867798"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIVEnlXQ",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12828890926/job/35773867357"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIVHYxAg",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12829856863/job/35776770306"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIVEno6Q",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12828890929/job/35773868265"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIVGvStw",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12828890926/job/35776090807"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIVHZKJA",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/35776776740"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIVHaSNw",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=20809&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "f2a2f8687357bc1c3832a9374a52c2563608723f",
                "additions": 213,
                "deletions": 19,
                "committedDate": "2025-01-17T12:37:39Z",
                "author": {
                  "name": "Anne C.A. Baanen",
                  "email": "vierkantor@vierkantor.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIVFt4fA",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12829280495/job/35775019132"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIVFt3Pw",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12829280498/job/35775018815"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIVFt4PA",
                        "name": "Build",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12829280498/job/35775019068"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIVFt2-w",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12829280495/job/35775018747"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIVFt5tQ",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12829280495/job/35775019445"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIVHUv_A",
                        "name": "Post-CI job",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12829280498/job/35776704508"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "ffea8ab00493bcb6d9ba63985a3f9a1aea7d6a97",
                "additions": 189,
                "deletions": 2,
                "committedDate": "2025-01-17T13:09:38Z",
                "author": {
                  "name": "Anne C.A. Baanen",
                  "email": "vierkantor@vierkantor.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIVIbJag",
                        "name": "set_pr_emoji",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12830208195/job/35777857898"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIVIvreA",
                        "name": "set_pr_emoji",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12830305980/job/35778194296"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIVHT0IQ",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12829830663/job/35776689185"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIVIaOgw",
                        "name": "Add topic label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12830203665/job/35777842819"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIVIaOoA",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12830203666/job/35777842848"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIVIaOnA",
                        "name": "post-or-update-summary-comment",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12830203676/job/35777842844"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIVHTymQ",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12829830655/job/35776688793"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIVIaOoQ",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12830203668/job/35777842849"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIVHTz6Q",
                        "name": "Build",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12829830655/job/35776689129"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIVHTyug",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12829830663/job/35776688826"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIVIaP2Q",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12830203668/job/35777843161"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIVHT1QA",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12829830663/job/35776689472"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIVHp0WQ",
                        "name": "Post-CI job",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12829830655/job/35777049689"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIVIawSA",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/35777851464"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIVIbxBg",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=20811&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            }
          ]
        },
        "createdAt": "2025-01-17T13:39:34Z",
        "deletions": 374,
        "files": {
          "nodes": [
            {
              "path": "Mathlib/Algebra/Category/AlgebraCat/Basic.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Algebra/Category/BialgebraCat/Basic.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Algebra/Category/BoolRing.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Algebra/Category/CoalgebraCat/Basic.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Algebra/Category/FGModuleCat/Basic.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Algebra/Category/Grp/Basic.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Algebra/Category/Grp/FiniteGrp.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Algebra/Category/GrpWithZero.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Algebra/Category/HopfAlgebraCat/Basic.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Algebra/Category/ModuleCat/Basic.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Algebra/Category/ModuleCat/Presheaf/Sheafify.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Algebra/Category/ModuleCat/Sheaf/ChangeOfRings.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Algebra/Category/MonCat/Basic.lean",
              "additions": 5,
              "deletions": 5
            },
            {
              "path": "Mathlib/Algebra/Category/Ring/Basic.lean",
              "additions": 6,
              "deletions": 6
            },
            {
              "path": "Mathlib/Algebra/Category/Semigrp/Basic.lean",
              "additions": 10,
              "deletions": 10
            },
            {
              "path": "Mathlib/Algebra/Homology/ConcreteCategory.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Algebra/Homology/ImageToKernel.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Algebra/Homology/ShortComplex/ConcreteCategory.lean",
              "additions": 4,
              "deletions": 4
            },
            {
              "path": "Mathlib/Algebra/Homology/ShortComplex/ModuleCat.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/AlgebraicGeometry/OpenImmersion.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/AlgebraicGeometry/ProjectiveSpectrum/StructureSheaf.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/AlgebraicGeometry/StructureSheaf.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/AlgebraicTopology/SimplexCategory.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/AlgebraicTopology/TopologicalSimplex.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Analysis/Normed/Group/SemiNormedGrp.lean",
              "additions": 4,
              "deletions": 4
            },
            {
              "path": "Mathlib/CategoryTheory/Action/Basic.lean",
              "additions": 4,
              "deletions": 4
            },
            {
              "path": "Mathlib/CategoryTheory/Action/Concrete.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/CategoryTheory/Action/Continuous.lean",
              "additions": 5,
              "deletions": 5
            },
            {
              "path": "Mathlib/CategoryTheory/Action/Limits.lean",
              "additions": 3,
              "deletions": 3
            },
            {
              "path": "Mathlib/CategoryTheory/Category/Bipointed.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/CategoryTheory/Category/Pointed.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/CategoryTheory/Category/TwoP.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/CategoryTheory/ConcreteCategory/Basic.lean",
              "additions": 255,
              "deletions": 51
            },
            {
              "path": "Mathlib/CategoryTheory/ConcreteCategory/Bundled.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/CategoryTheory/ConcreteCategory/BundledHom.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/CategoryTheory/ConcreteCategory/EpiMono.lean",
              "additions": 6,
              "deletions": 6
            },
            {
              "path": "Mathlib/CategoryTheory/ConcreteCategory/ReflectsIso.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/CategoryTheory/DifferentialObject.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/CategoryTheory/FintypeCat.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/CategoryTheory/Functor/Flat.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/CategoryTheory/GradedObject.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/CategoryTheory/Limits/ConcreteCategory/Basic.lean",
              "additions": 6,
              "deletions": 6
            },
            {
              "path": "Mathlib/CategoryTheory/Limits/ConcreteCategory/WithAlgebraicStructures.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/CategoryTheory/Limits/FilteredColimitCommutesFiniteLimit.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/CategoryTheory/Limits/MonoCoprod.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/CategoryTheory/Limits/Shapes/ConcreteCategory.lean",
              "additions": 11,
              "deletions": 11
            },
            {
              "path": "Mathlib/CategoryTheory/MorphismProperty/Concrete.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/CategoryTheory/Sites/Adjunction.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/CategoryTheory/Sites/Coherent/LocallySurjective.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/CategoryTheory/Sites/CompatibleSheafification.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/CategoryTheory/Sites/ConcreteSheafification.lean",
              "additions": 7,
              "deletions": 7
            },
            {
              "path": "Mathlib/CategoryTheory/Sites/EpiMono.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/CategoryTheory/Sites/Equivalence.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/CategoryTheory/Sites/LeftExact.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/CategoryTheory/Sites/LocallyBijective.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/CategoryTheory/Sites/LocallyInjective.lean",
              "additions": 3,
              "deletions": 3
            },
            {
              "path": "Mathlib/CategoryTheory/Sites/LocallySurjective.lean",
              "additions": 3,
              "deletions": 3
            },
            {
              "path": "Mathlib/CategoryTheory/Sites/PreservesLocallyBijective.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/CategoryTheory/Sites/PreservesSheafification.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/CategoryTheory/Sites/Pullback.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/CategoryTheory/Sites/Sheaf.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/CategoryTheory/Sites/Whiskering.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Condensed/Discrete/Characterization.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Condensed/Discrete/Colimit.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Condensed/Discrete/LocallyConstant.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Condensed/Discrete/Module.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Condensed/Epi.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Condensed/Explicit.lean",
              "additions": 3,
              "deletions": 3
            },
            {
              "path": "Mathlib/Condensed/Light/Epi.lean",
              "additions": 3,
              "deletions": 3
            },
            {
              "path": "Mathlib/Condensed/Light/Explicit.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Condensed/Light/TopCatAdjunction.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Condensed/TopCatAdjunction.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Condensed/TopComparison.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Geometry/RingedSpace/Basic.lean",
              "additions": 4,
              "deletions": 4
            },
            {
              "path": "Mathlib/Geometry/RingedSpace/OpenImmersion.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Geometry/RingedSpace/SheafedSpace.lean",
              "additions": 4,
              "deletions": 4
            },
            {
              "path": "Mathlib/LinearAlgebra/QuadraticForm/QuadraticModuleCat.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/MeasureTheory/Category/MeasCat.lean",
              "additions": 3,
              "deletions": 3
            },
            {
              "path": "Mathlib/Order/Category/BddDistLat.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Order/Category/BddLat.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Order/Category/BddOrd.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Order/Category/BoolAlg.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Order/Category/CompleteLat.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Order/Category/DistLat.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Order/Category/FinBddDistLat.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Order/Category/FinBoolAlg.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Order/Category/FinPartOrd.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Order/Category/Frm.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Order/Category/HeytAlg.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Order/Category/Lat.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Order/Category/LinOrd.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Order/Category/NonemptyFinLinOrd.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Order/Category/OmegaCompletePartialOrder.lean",
              "additions": 3,
              "deletions": 3
            },
            {
              "path": "Mathlib/Order/Category/PartOrd.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Order/Category/Preord.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Order/Category/Semilat.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/RepresentationTheory/FDRep.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/RepresentationTheory/Rep.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Tactic/CategoryTheory/Elementwise.lean",
              "additions": 31,
              "deletions": 18
            },
            {
              "path": "Mathlib/Tactic/Linter/GlobalAttributeIn.lean",
              "additions": 2,
              "deletions": 2
            }
          ]
        },
        "headRefName": "concrete-elementwise",
        "headRefOid": "ffea8ab00493bcb6d9ba63985a3f9a1aea7d6a97",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c6IKGfo",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "MDU6TGFiZWwzMjg4OTQyMDg2",
              "color": "8A6A1C",
              "name": "blocked-by-other-PR"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABViJTYQ",
              "color": "33dbec",
              "name": "t-category-theory"
            }
          ]
        },
        "latestReviews": {
          "nodes": []
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "BLOCKED",
        "mergeable": "MERGEABLE",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 20811,
        "potentialMergeCommit": {
          "oid": "a4a885197a2f2992da18ae7b886e53c214dfea07"
        },
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": null,
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": []
        },
        "reviewThreads": {
          "nodes": []
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjIxMTY1NzA=",
              "login": "Vierkantor"
            },
            {
              "id": "U_kgDOCsITAQ",
              "login": "mathlib4-dependent-issues-bot"
            }
          ]
        },
        "state": "OPEN",
        "statusCheckRollup": {
          "contexts": {
            "nodes": [
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIVIbJag",
                "name": "set_pr_emoji",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12830208195/job/35777857898"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIVIvreA",
                "name": "set_pr_emoji",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12830305980/job/35778194296"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIVHT0IQ",
                "name": "Lint style (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12829830663/job/35776689185"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIVIaOgw",
                "name": "Add topic label",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12830203665/job/35777842819"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIVIaOoA",
                "name": "label-and-report-new-contributor",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12830203666/job/35777842848"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIVIaOnA",
                "name": "post-or-update-summary-comment",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12830203676/job/35777842844"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIVHTymQ",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12829830655/job/35776688793"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIVIaOoQ",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12830203668/job/35777842849"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIVHTz6Q",
                "name": "Build",
                "conclusion": "FAILURE",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12829830655/job/35776689129"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIVHTyug",
                "name": "Build (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12829830663/job/35776688826"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIVIaP2Q",
                "name": "Check all files imported",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12830203668/job/35777843161"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIVHT1QA",
                "name": "Post-CI job (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12829830663/job/35776689472"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIVHp0WQ",
                "name": "Post-CI job",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12829830655/job/35777049689"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIVIawSA",
                "name": "New Contributor Check",
                "conclusion": "NEUTRAL",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/35777851464"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIVIbxBg",
                "name": "Summary",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=20811&login=leanprover-community&repository=mathlib4"
              }
            ]
          }
        },
        "title": "feat(Tactic): basic ConcreteCategory support for elementwise",
        "updatedAt": "2025-01-17T13:46:44Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/20811",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6moBBvzwAAAAO4WDXc",
              "createdAt": "2025-01-17T13:39:57Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABViJTYQ",
                "name": "t-category-theory"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6a4FBm",
              "createdAt": "2025-01-17T13:40:28Z",
              "body": "### PR summary [ffea8ab004](https://github.com/leanprover-community/mathlib4/pull/20811/commits/ffea8ab00493bcb6d9ba63985a3f9a1aea7d6a97)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ ConcreteCategory.forget_map_eq_coe`\n`+ FullSubcategory.hasForget`\n`+ HasForget`\n`+ HasForget.hasCoeToSort`\n`+ HasForget.instFunLike`\n`+ HasForget.toConcreteCategory`\n`+ HasForget.toFunLike`\n`+ HasForget.types`\n`+ InducedCategory.hasForget`\n`+ ToHom`\n`+ ToType`\n`+ Types.instConcreteCategory`\n`+ Types.instFunLike`\n`+ bar'`\n`+ bar''`\n`+ bar'''`\n`+ coe_ext`\n`+ coe_toHasForget_instFunLike`\n`+ congr_arg`\n`+ congr_fun`\n`+ ex2`\n`+ ex3`\n`+ exact_iff_of_hasForget`\n`+ ext`\n`+ ext_apply`\n`+ f`\n`+ fh`\n`+ foo`\n`+ foo'`\n`+ forget_eq_ConcreteCategory_hom`\n`+ forget_obj`\n`+ g`\n`+ gh`\n`+ groupWithZeroHasForget`\n`+ h`\n`+ hasForgetFintype`\n`+ hasForgetOfDifferentialObjects`\n`+ homEquiv`\n`+ hom_bijective`\n`+ hom_comp`\n`+ hom_id`\n`+ hom_injective`\n`+ instance (x : SimplexCategory) : Fintype (HasForget.forget.obj x)`\n`+ instance : HasCoeToSort X := HasForget.hasCoeToSort X`\n`+ instance : HasForget (ContAction V G)`\n`+ instance : HasForget (DiscreteContAction V G)`\n`+ instance : HasForget (FDRep k G) := inferInstance`\n`+ instance : HasForget (FGModuleCat R) := by`\n`+ instance : HasForget (GradedObject β C) where forget := total β C ⋙ forget C`\n`+ instance : HasForget BddDistLat`\n`+ instance : HasForget BddLat`\n`+ instance : HasForget BoolAlg`\n`+ instance : HasForget BoolRing`\n`+ instance : HasForget Born`\n`+ instance : HasForget Compactum where forget := forget`\n`+ instance : HasForget CompleteLat := by`\n`+ instance : HasForget DistLat`\n`+ instance : HasForget FinTopCat`\n`+ instance : HasForget FiniteGrp := InducedCategory.hasForget FiniteGrp.toGrp`\n`+ instance : HasForget Frm := by`\n`+ instance : HasForget HeytAlg := by`\n`+ instance : HasForget Lat`\n`+ instance : HasForget LinOrd`\n`+ instance : HasForget MeasCat := by`\n`+ instance : HasForget NonemptyFinLinOrd`\n`+ instance : HasForget PartOrd`\n`+ instance : HasForget Preord`\n`+ instance : HasForget ProfiniteGrp`\n`+ instance : HasForget SemiNormedGrp := by`\n`+ instance : HasForget SemilatInfCat`\n`+ instance : HasForget SemilatSupCat`\n`+ instance : HasForget TopCommRingCat.{u}`\n`+ instance : HasForget UniformSpaceCat`\n`+ instance : HasForget ωCPO := by unfold ωCPO; infer_instance`\n`+ instance : HasForget.{0} SimplexCategory`\n`+ instance : HasForget.{u} CommRingCat`\n`+ instance : HasForget.{u} CommSemiRingCat`\n`+ instance : HasForget.{u} DeltaGenerated.{u}`\n`+ instance : HasForget.{u} RingCat`\n`+ instance : HasForget.{u} SemiNormedGrp₁`\n`+ instance : HasForget.{u} SemiRingCat`\n`+ instance : HasForget.{u} Sequential.{u}`\n`+ instance : HasForget.{v} (AlgebraCat.{v} R)`\n`+ instance : HasForget.{w} CompactlyGenerated.{u, w}`\n`+ instance [HasForget C] [PreservesColimitsOfShape (Discrete WalkingPair) (forget C)]`\n`+ instance [HasForget V] : HasForget (Action V G)`\n`+ instance {D : Type w} [Category.{w'} D] [HasForget.{max u v} D]`\n`+ instance {X Y : C} : CoeFun (X ⟶ Y) (fun _ ↦ ToType X → ToType Y)`\n`+ moduleHasForget`\n`+ toHasForget`\n`+++ instHasForget`\n`++++++++++++++++++++ hasForget`\n`+-+ ex1`\n`- ConcreteCategory.hasCoeToSort`\n`- ConcreteCategory.instFunLike`\n`- ConcreteCategory.types`\n`- FullSubcategory.concreteCategory`\n`- InducedCategory.concreteCategory`\n`- concreteCategoryFintype`\n`- concreteCategoryOfDifferentialObjects`\n`- exact_iff_of_concreteCategory`\n`- groupWithZeroConcreteCategory`\n`- instance (x : SimplexCategory) : Fintype (ConcreteCategory.forget.obj x)`\n`- instance : ConcreteCategory (ContAction V G)`\n`- instance : ConcreteCategory (DiscreteContAction V G)`\n`- instance : ConcreteCategory (FDRep k G) := inferInstance`\n`- instance : ConcreteCategory (FGModuleCat R) := by`\n`- instance : ConcreteCategory (GradedObject β C) where forget := total β C ⋙ forget C`\n`- instance : ConcreteCategory BddDistLat`\n`- instance : ConcreteCategory BddLat`\n`- instance : ConcreteCategory BoolAlg`\n`- instance : ConcreteCategory BoolRing`\n`- instance : ConcreteCategory Born`\n`- instance : ConcreteCategory Compactum where forget := forget`\n`- instance : ConcreteCategory CompleteLat := by`\n`- instance : ConcreteCategory DistLat`\n`- instance : ConcreteCategory FinTopCat`\n`- instance : ConcreteCategory FiniteGrp := InducedCategory.concreteCategory FiniteGrp.toGrp`\n`- instance : ConcreteCategory Frm := by`\n`- instance : ConcreteCategory HeytAlg := by`\n`- instance : ConcreteCategory Lat`\n`- instance : ConcreteCategory LinOrd`\n`- instance : ConcreteCategory MeasCat := by`\n`- instance : ConcreteCategory NonemptyFinLinOrd`\n`- instance : ConcreteCategory PartOrd`\n`- instance : ConcreteCategory Preord`\n`- instance : ConcreteCategory ProfiniteGrp`\n`- instance : ConcreteCategory SemiNormedGrp := by`\n`- instance : ConcreteCategory SemilatInfCat`\n`- instance : ConcreteCategory SemilatSupCat`\n`- instance : ConcreteCategory TopCommRingCat.{u}`\n`- instance : ConcreteCategory UniformSpaceCat`\n`- instance : ConcreteCategory ωCPO := by unfold ωCPO; infer_instance`\n`- instance : ConcreteCategory.{0} SimplexCategory`\n`- instance : ConcreteCategory.{u} CommRingCat`\n`- instance : ConcreteCategory.{u} CommSemiRingCat`\n`- instance : ConcreteCategory.{u} DeltaGenerated.{u}`\n`- instance : ConcreteCategory.{u} RingCat`\n`- instance : ConcreteCategory.{u} SemiNormedGrp₁`\n`- instance : ConcreteCategory.{u} SemiRingCat`\n`- instance : ConcreteCategory.{u} Sequential.{u}`\n`- instance : ConcreteCategory.{v} (AlgebraCat.{v} R)`\n`- instance : ConcreteCategory.{w} CompactlyGenerated.{u, w}`\n`- instance : HasCoeToSort X := ConcreteCategory.hasCoeToSort X`\n`- instance [ConcreteCategory C] [PreservesColimitsOfShape (Discrete WalkingPair) (forget C)]`\n`- instance [ConcreteCategory V] : ConcreteCategory (Action V G)`\n`- instance {D : Type w} [Category.{w'} D] [ConcreteCategory.{max u v} D]`\n`- moduleConcreteCategory`\n`-++ bar`\n`--- instConcreteCategory`\n`-------------------- concreteCategory`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>\n\n---\n\n<details><summary>Increase in tech debt: (relative, absolute) = (3.00, 0.00)</summary>\n\n|Current number|Change|Type|\n|-:|:-:|:-|\n|4618|3|porting notes|\n\nCurrent commit [ffea8ab004](https://github.com/leanprover-community/mathlib4/commit/ffea8ab00493bcb6d9ba63985a3f9a1aea7d6a97)\nReference commit [e5ab45ea78](https://github.com/leanprover-community/mathlib4/commit/e5ab45ea78696d399f7632d6fbc9007a1c32579f)\n\nYou can run this locally as\n```\n./scripts/technical-debt-metrics.sh pr_summary\n```\n* The `relative` value is the weighted *sum* of the differences with weight given by the *inverse* of the current value of the statistic.\n* The `absolute` value is the `relative` value divided by the total sum of the inverses of the current values (i.e. the weighted *average* of the differences).\n</details>\n",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6moBBvzwAAAAO4WXEQ",
              "createdAt": "2025-01-17T13:46:42Z",
              "label": {
                "id": "MDU6TGFiZWwzMjg4OTQyMDg2",
                "name": "blocked-by-other-PR"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6a4H6D",
              "createdAt": "2025-01-17T13:46:43Z",
              "body": "This PR/issue depends on:\n* leanprover-community/mathlib4#20810\nBy **[Dependent Issues](https://github.com/z0al/dependent-issues)** (🤖). Happy coding!\n<!-- By Dependent Issues (Action) - DO NOT REMOVE -->",
              "author": {
                "login": "mathlib4-dependent-issues-bot"
              }
            }
          ]
        }
      }
    }
  }
}
