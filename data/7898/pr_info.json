{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 70,
        "assignees": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjE0MDkwNTkz",
              "login": "YaelDillies"
            }
          ]
        },
        "author": {
          "login": "BoltonBailey"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "Lemmas about the interaction of `Fintype.piFinset` with `Fin.consEquiv`, `Fin.snocEquiv`, `Fin.insertNthEquiv`.\r\n\r\n---\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n-->\r\n\r\n- [x] depends on: #9028\r\n- [x] depends on: #10545\r\n- [x] depends on: #13568\r\n- [x] depends on: #14665\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 1,
        "closed": true,
        "closedAt": "2024-10-04T21:26:34Z",
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c5ui1m4",
              "body": "> Can you make sure you have the `Fin.castSucc`/`Fin.succ`/`Fin.succAbove` version of each lemma?\r\n\r\nI got asked to add snoc-y API on #6605 as well by @eric-wieser. I have to say, I am not in favor of (me doing) this. I basically agree with Mac Malone here that [snoc is a code smell](https://leanprover.zulipchat.com/#narrow/stream/270676-lean4/topic/List.2Econcat.20and.20List.2Eappend/near/406168233). Shouldn't we be trying to remove it from mathlib, rather than adding more of it?",
              "createdAt": "2023-12-13T20:04:54Z",
              "author": {
                "login": "BoltonBailey"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5ui3KL",
              "body": "We're talking about `Fin.snoc`, which is used for proving, not `List.snoc`, which is used for programming (or maybe shouldn't be, as Mac says).",
              "createdAt": "2023-12-13T20:09:51Z",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5ui5sO",
              "body": "I don't see why the difference matters, proofs should avoid being smelly too.",
              "createdAt": "2023-12-13T20:18:10Z",
              "author": {
                "login": "BoltonBailey"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5ui8XD",
              "body": "? It's only smelly because it has unexpectedly bad complexity, but that's completely irrelevant for proving. I've personally needed both `Fin.cons` and `Fin.snoc` in the past and I will add those lemmas if you don't do it yourself.",
              "createdAt": "2023-12-13T20:26:52Z",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5ui-1S",
              "body": "The smell at play here for me is code duplication. As you have noted there is a whole parallel API for cons versions and snoc versions of things (init vs tail, succ vs castSucc). We are doing twice the work for an essentially equivalent set of theorems.\r\n\r\nI'll look into where snoc is being used. My suspicion is that if we just wrote theorems the \"right\" way to start with, almost every theorem that is proved using snoc could be rephrased to be proved using cons, and judicious use of `reverse` could be used in places where it's really necessary to be dealing with both sides of the tuple.",
              "createdAt": "2023-12-13T20:35:05Z",
              "author": {
                "login": "BoltonBailey"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5ujB0Y",
              "body": "At the very least, [as I've suggested before](https://leanprover.zulipchat.com/#narrow/stream/217875-Is-there-code-for-X.3F/topic/cons.20is.20to.20snoc.20as.20Fin.2Eeq_zero_or_eq_succ.20is.20to/near/385572699), it should be handled by something like `@[to_additive]` so that we don't have to prove theorems twice. Also, I suspect the gaps we have uncovered in this thread are just the beginning, so if we really want all this API, it would be better to make it all in one fell swoop.\r\n\r\n(I'm even finding that there are some [places](https://leanprover-community.github.io/mathlib4_docs/Mathlib/Order/JordanHolder.html#CompositionSeries.Equivalent.snoc_snoc_swap) where the snoc lemma exists, but not the cons!)",
              "createdAt": "2023-12-13T20:45:46Z",
              "author": {
                "login": "BoltonBailey"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6EmSlq",
              "body": "### PR summary [fdb84a43ab](https://github.com/leanprover-community/mathlib4/pull/7898/commits/fdb84a43abc8aa21d118623a1faea4263458b1e4)\n\n<details><summary>\n\n#### Import changes for modified files\n\n</summary>\n\nDependency changes\n\n| File | Base Count | Head Count | Change |\n| --- | --- | --- | --- |\n| Mathlib.Data.Fin.Tuple.Finset | 424 | 430 | +6 (+1.42%) |\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n| `Mathlib.Data.Fin.Tuple.Finset`|6|\n\n</details>\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ card_consEquiv_filter_piFinset`\n`+ card_insertNthEquiv_filter_piFinset`\n`+ card_snocEquiv_filter_piFinset`\n`+ insertNth_mem_piFinset_insertNth`\n`+ map_consEquiv_filter_piFinset`\n`+ map_insertNthEquiv_filter_piFinset`\n`+ map_snocEquiv_filter_piFinset`\n`+ mem_piFinset_iff_last_init`\n`+ mem_piFinset_iff_pivot_removeNth`\n`+ mem_piFinset_iff_zero_tail`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>",
              "createdAt": "2024-07-12T04:58:39Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6J4SXB",
              "body": "This PR/issue depends on:\n* ~~leanprover-community/mathlib4#9028~~\n* ~~leanprover-community/mathlib4#10545~~\n* ~~leanprover-community/mathlib4#13568~~\n* ~~leanprover-community/mathlib4#14665~~\nBy **[Dependent Issues](https://github.com/z0al/dependent-issues)** (🤖). Happy coding!\n<!-- By Dependent Issues (Action) - DO NOT REMOVE -->",
              "createdAt": "2024-08-27T18:24:13Z",
              "author": {
                "login": "leanprover-community-mathlib4-bot"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6M6tXO",
              "body": "Sorry for the long delay. Everything should be good now.\r\n\r\nmaintainer merge",
              "createdAt": "2024-09-20T17:34:58Z",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6M6teN",
              "body": "🚀 Pull request has been placed on the maintainer queue by YaelDillies.",
              "createdAt": "2024-09-20T17:35:16Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6OqbfS",
              "body": "Removing `maintainer-merge`, since it has been 2 weeks, and CI is failing.",
              "createdAt": "2024-10-04T11:27:55Z",
              "author": {
                "login": "jcommelin"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6Oqf_n",
              "body": "Should be good now.\r\n\r\nmaintainer merge",
              "createdAt": "2024-10-04T11:38:37Z",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6OqgHl",
              "body": "🚀 Pull request has been placed on the maintainer queue by YaelDillies.",
              "createdAt": "2024-10-04T11:38:55Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6Oqi-E",
              "body": ":v: YaelDillies can now approve this pull request. To approve and merge a pull request, simply reply with `bors r+`. More detailed instructions are available [here](https://bors.tech/documentation/getting-started/#reviewing-pull-requests).",
              "createdAt": "2024-10-04T11:45:34Z",
              "author": {
                "login": "mathlib-bors"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6OqkhD",
              "body": "bors merge",
              "createdAt": "2024-10-04T11:49:08Z",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6OrmbD",
              "body": "Build failed (retrying...):\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/11180128738/job/31081203520)",
              "createdAt": "2024-10-04T14:04:52Z",
              "author": {
                "login": "mathlib-bors"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6Or_4O",
              "body": "Canceled.",
              "createdAt": "2024-10-04T14:54:44Z",
              "author": {
                "login": "mathlib-bors"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6Or_7Y",
              "body": "bors merge",
              "createdAt": "2024-10-04T14:54:50Z",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6OvB72",
              "body": "Pull request successfully merged into master.\n\nBuild succeeded:\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/11186491772/job/31101624126)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/11186491772/job/31101623720)",
              "createdAt": "2024-10-04T21:26:33Z",
              "author": {
                "login": "mathlib-bors"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "64878df9748bba81f70bffde45fc07a34dfed236",
                "additions": 84,
                "deletions": 17,
                "committedDate": "2024-10-04T14:48:36Z",
                "author": {
                  "name": "Yaël Dillies",
                  "email": "yael.dillies@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "fdb84a43abc8aa21d118623a1faea4263458b1e4",
                "additions": 6,
                "deletions": 20,
                "committedDate": "2024-10-04T14:54:33Z",
                "author": {
                  "name": "Yaël Dillies",
                  "email": "yael.dillies@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHPPrXBg",
                        "name": "Add topic label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11182173342/job/31087843078"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHPPrayw",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11182173637/job/31087844043"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHPPraeQ",
                        "name": "build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11182173622/job/31087843961"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHPPrXwA",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11182173333/job/31087843264"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHPPrZxQ",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11182173325/job/31087843781"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHPPrcng",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11182173626/job/31087844510"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHPPra7A",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11182173333/job/31087844076"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHPPrW4w",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11182173325/job/31087843043"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHPPrbQA",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11182173626/job/31087844160"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHPPrZRg",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11182173333/job/31087843654"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHPPrYfg",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11182173325/job/31087843454"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHPPrcUw",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11182173333/job/31087844435"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHPUiJXQ",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11182173325/job/31092935005"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHPPsb7Q",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/31087860717"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHPPtD2w",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=7898&login=leanprover-community&repository=mathlib4"
                      },
                      {
                        "__typename": "StatusContext",
                        "id": "SC_kwDOFcwZ1c8AAAAHZx0PGg",
                        "context": "bors",
                        "state": "SUCCESS",
                        "targetUrl": "https://mathlib-bors-ca18eefec4cb.herokuapp.com/batches/6226",
                        "description": "Build succeeded"
                      }
                    ]
                  }
                }
              }
            }
          ]
        },
        "createdAt": "2023-10-24T15:39:07Z",
        "deletions": 17,
        "files": {
          "nodes": [
            {
              "path": "Mathlib/Data/Fin/Tuple/Finset.lean",
              "additions": 70,
              "deletions": 17
            }
          ]
        },
        "headRefName": "BoltonBailey/card_piFinset_filter_succ",
        "headRefOid": "fdb84a43abc8aa21d118623a1faea4263458b1e4",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c5dqAhK",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c8AAAABAt13Ow",
              "color": "bfd4f2",
              "name": "delegated"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABh1mAHA",
              "color": "6BEB7E",
              "name": "maintainer-merge"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABtNO8rw",
              "color": "33DBEC",
              "name": "t-data"
            }
          ]
        },
        "latestReviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c59Tc4_",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "github-actions"
              },
              "submittedAt": "2024-06-06T15:02:51Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6KXk93",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2024-09-23T08:12:55Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6L8YD0",
              "body": "bors d=YaelDillies",
              "state": "COMMENTED",
              "author": {
                "login": "jcommelin"
              },
              "submittedAt": "2024-10-04T11:45:32Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6KVuxH",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2024-09-23T00:09:17Z"
            }
          ]
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "UNKNOWN",
        "mergeable": "UNKNOWN",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 7898,
        "potentialMergeCommit": null,
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": null,
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5lFKti",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-10-24T20:49:26Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5lKsec",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-10-25T13:08:12Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5lKtUZ",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-10-25T13:09:46Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5leMnX",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "BoltonBailey"
              },
              "submittedAt": "2023-10-27T19:26:10Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5p59HO",
              "body": "Can you make sure you have the `Fin.castSucc`/`Fin.succ`/`Fin.succAbove` version of each lemma?",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2023-12-12T07:26:37Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5p6Aal",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2023-12-12T07:34:10Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5p6CMg",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2023-12-12T07:37:45Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5qHtoT",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "github-actions"
              },
              "submittedAt": "2023-12-13T20:09:03Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5qHug0",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "BoltonBailey"
              },
              "submittedAt": "2023-12-13T20:11:36Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5qHvaL",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2023-12-13T20:14:01Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5wF0FU",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "BoltonBailey"
              },
              "submittedAt": "2024-02-14T15:14:22Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5wF2LM",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "BoltonBailey"
              },
              "submittedAt": "2024-02-14T15:17:09Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5wF47F",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "BoltonBailey"
              },
              "submittedAt": "2024-02-14T15:22:06Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5wGAPI",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2024-02-14T15:34:52Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c51s3Za",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "BoltonBailey"
              },
              "submittedAt": "2024-04-02T18:59:41Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c51ujXR",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2024-04-02T21:56:53Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c51w-pZ",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2024-04-03T07:24:28Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c53Huta",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "BoltonBailey"
              },
              "submittedAt": "2024-04-12T22:14:56Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c53KRkC",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2024-04-13T07:56:57Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c53Ky-0",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "BoltonBailey"
              },
              "submittedAt": "2024-04-13T17:20:30Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c53Kzfk",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "BoltonBailey"
              },
              "submittedAt": "2024-04-13T17:34:21Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c53K0R4",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "BoltonBailey"
              },
              "submittedAt": "2024-04-13T17:53:18Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c53K4Hx",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2024-04-13T19:42:14Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c53LOi9",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "BoltonBailey"
              },
              "submittedAt": "2024-04-14T04:32:30Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c59Tc4_",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "github-actions"
              },
              "submittedAt": "2024-06-06T15:02:51Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c59TvUD",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2024-06-06T15:34:05Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6KVuxH",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2024-09-23T00:09:17Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6KXk93",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2024-09-23T08:12:55Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6L8YD0",
              "body": "bors d=YaelDillies",
              "state": "COMMENTED",
              "author": {
                "login": "jcommelin"
              },
              "submittedAt": "2024-10-04T11:45:32Z"
            }
          ]
        },
        "reviewThreads": {
          "nodes": [
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5RtK1Z",
                    "body": "Instead of stating this as `card LHS = card RHS`, can you instead write `LHS = RHS.map _`, from which your result is trivial?",
                    "createdAt": "2023-10-24T20:49:26Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5RwwS9",
                    "body": "Can you add a copy of this with `Equiv.symm` on the other side? There should be some lemma that lets you move the `map` across, so that you don't have to prove it again from scratch.",
                    "createdAt": "2023-10-25T13:08:12Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5R9FvE",
                    "body": "Ok I added `Finset.filter_piFinset_eq_map_piFinSuccAboveEquiv_symm`, lmk if that's not what you were looking for.",
                    "createdAt": "2023-10-27T19:26:10Z",
                    "author": {
                      "login": "BoltonBailey"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5Rwwzi",
                    "body": "Dot notation makes this more concise:\r\n```suggestion\r\n    ((Fintype.piFinset S).filter fun r ↦ p (fun x ↦ r <| Fin.succ x)).card\r\n     = (S 0).card * ((Fintype.piFinset fun x ↦ S <| Fin.succ x).filter p).card := by\r\n```\r\n\r\n(also, `$` is a Lean3 -ism)",
                    "createdAt": "2023-10-25T13:09:46Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5U2X3J",
                    "body": "```suggestion\r\n      (Equiv.piFinSuccAboveEquiv α k).toEmbedding\r\n```\r\nand below",
                    "createdAt": "2023-12-12T07:21:26Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5U2Y0o",
                    "body": "I find this quite a lot more readable. Also use lowercase `s` to match the rest of the file.\r\n```suggestion\r\n    (S : ∀ i, Finset (α i)) :\r\n```",
                    "createdAt": "2023-12-12T07:25:06Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5U_Ina",
                    "body": "Do you want me to do this everywhere a have a dependent function? Isn't it more stylish to use `∀` when and only when the return value is a Prop?",
                    "createdAt": "2023-12-13T20:11:36Z",
                    "author": {
                      "login": "BoltonBailey"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5U_JIj",
                    "body": "This new `(i : I) → ` notation is very unmathematical and verbose (I already `i` is an index, no need to spend an extra 15 characters to tell me it's a `Fin (n + 1)`).",
                    "createdAt": "2023-12-13T20:14:01Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5U2ari",
                    "body": "```suggestion\r\n    ((Fintype.piFinset S).filter fun r ↦ p (Fin.tail r)).map\r\n```\r\nNote that the version for `Fin.castSucc` is `Fin.init` and the version for `Fin.succAbove` is non-existent?!",
                    "createdAt": "2023-12-12T07:32:11Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5U2cKg",
                    "body": "Those names are really hard to parse. Can you\r\n* Refer to the unbundled function rather than the bundled `Equiv`. The fact that it's bundled is mostly an implementation detail stemming from using `Finset.map`.\r\n* Use the correct `Equiv` rather than the general `Equiv.piFinSuccAboveEquiv`. We have `Equiv.piFinSucc`, but not `Equiv.piFinCastSucc`. So you first need a PR to add `Equiv.piFinCastSucc`, and it would be great if you also renamed `Equiv.piFinSuccAboveEquiv` to `Equiv.piFinSuccAbove` to match.",
                    "createdAt": "2023-12-12T07:37:45Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5YyivH",
                    "body": "Ok the PRs renaming to remove the duplicated `Equiv` in the name and adding `Equiv.piFinCastSucc` are merged.\r\n\r\nFor the first point, I am looking at the definition of `Equiv.piFinSuccAbove` and not seeing `Finset.map`. I guess you are saying though saying that another def should be introduced for the function form of `Equiv.piFinSuccAbove` and `Equiv.piFinSuccAbove` should then be redefined in terms of that? What name should this new def have?",
                    "createdAt": "2024-02-14T15:14:22Z",
                    "author": {
                      "login": "BoltonBailey"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5Yyj0t",
                    "body": "The inverse function is \"insertNth\". \"extractNth\" perhaps?",
                    "createdAt": "2024-02-14T15:17:09Z",
                    "author": {
                      "login": "BoltonBailey"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5Yyl5F",
                    "body": "#10545",
                    "createdAt": "2024-02-14T15:22:06Z",
                    "author": {
                      "login": "BoltonBailey"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5Yyqjm",
                    "body": "That's a reasonable interpretation of my comment. `extractNth` seems like a reasonable name.",
                    "createdAt": "2024-02-14T15:34:52Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5cSxVB",
                    "body": "Ok after doing all that, it seems like it's impossible to substitute this in because map actually takes an embedding, not a function. I am not sure if you wanted something else from me here?",
                    "createdAt": "2024-04-02T18:59:41Z",
                    "author": {
                      "login": "BoltonBailey"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5U_H_q",
                    "body": "**[lint-style]** <sub>reported by [reviewdog](https://github.com/reviewdog/reviewdog) :dog:</sub><br>\n```suggestion\n  rw [← Finset.card_map ((Equiv.piFinSuccAboveEquiv α 0).toEmbedding),\n```\n",
                    "createdAt": "2023-12-13T20:09:03Z",
                    "author": {
                      "login": "github-actions"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5cTqXp",
                    "body": "```suggestion\r\nlemma Fin.mem_piFinset_succ_iff {n : ℕ} {α : Fin (n + 1) → Type*} {p : (i : Fin (n + 1)) → α i}\r\n    {S : (i : Fin (n + 1)) → Finset (α i)} :\r\n```",
                    "createdAt": "2024-04-02T21:56:21Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5cTqgY",
                    "body": "```suggestion\r\n    {x : α 0} {xs : (i : Fin n) → α i.succ}\r\n    {S₀ : Finset (α 0)} {Sᵢ : (i : Fin n) → Finset (α i.succ)} :\r\n```\r\netc",
                    "createdAt": "2024-04-02T21:56:50Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5cVPi1",
                    "body": "You're missing lemmas here, right? There are three lemmas about `S 0`, one lemma about `S k` and no lemma about `S (Fin.last n)`.",
                    "createdAt": "2024-04-03T07:24:28Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5dLbQV",
                    "body": "`Finset.map_piFinSuccAbove_filter_piFinset` is `cons`-y, but trying the analogous `snoc`-y lemma, I get an error\r\n```\r\nlemma Finset.map_piFinSuccAbove_filter_piFinset_init {n : ℕ} {α : Fin (n + 1) → Type*}\r\n    {p : ((i : Fin n) → α i.castSucc) → Prop} [DecidablePred p]\r\n    {S : (i : Fin (n + 1)) → Finset (α i)} :\r\n    ((Fintype.piFinset S).filter fun r ↦ p (Fin.init r)).map\r\n      (Equiv.piFinSuccAbove α (Fin.last n)).toEmbedding\r\n    = S (Fin.last n) ×ˢ (Fintype.piFinset (Fin.init S)).filter p -- error on this line\r\n:= by \r\n  sorry\r\n```\r\n```\r\ntype mismatch\r\n  S (Fin.last n) ×ˢ filter p (Fintype.piFinset (Fin.init S))\r\nhas type\r\n  Finset (α (Fin.last n) × ((i : Fin n) → α (Fin.castSucc i))) : outParam (Type u_2)\r\nbut is expected to have type\r\n  Finset (α (Fin.last n) × ((j : Fin n) → α (Fin.succAbove (Fin.last n) j))) : Type u_2\r\n```\r\nI am not sure why this poses a problem here while the `cons`-y one doesn't. Perhaps there is some definitional equality for that one. I suppose I could solve it with a cast but that seems like more complicated machinery. The last three lemmas all depend on this one so I can't prove the `snoc`-y version here.\r\n",
                    "createdAt": "2024-04-12T22:14:56Z",
                    "author": {
                      "login": "BoltonBailey"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5dNnF1",
                    "body": "That's because you're using `castSucc` in the finset but `succAbove (last n)` in the map. Those functions are equal but not defeq. Could you define `Equiv.piFinCastSucc` and use it here?",
                    "createdAt": "2024-04-13T07:56:57Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5dOwX1",
                    "body": "[Equiv.piFinCastSucc](https://leanprover-community.github.io/mathlib4_docs/Mathlib/Logic/Equiv/Fin.html#Equiv.piFinCastSucc) already exists. It can't be used here because it isn't dependent the way [Equiv.piFinSuccAbove](https://leanprover-community.github.io/mathlib4_docs/Mathlib/Logic/Equiv/Fin.html#Equiv.piFinSuccAbove) is.",
                    "createdAt": "2024-04-13T17:20:29Z",
                    "author": {
                      "login": "BoltonBailey"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5dOyHt",
                    "body": "In fact, I see that this very [Equiv.piFinCastSucc](https://leanprover-community.github.io/mathlib4_docs/Mathlib/Logic/Equiv/Fin.html#Equiv.piFinCastSucc) function was something [you asked me to add](https://github.com/leanprover-community/mathlib4/pull/7898#discussion_r1423557280) for this PR back in December to match [Equiv.piFinSucc](https://leanprover-community.github.io/mathlib4_docs/Mathlib/Logic/Equiv/Fin.html#Equiv.piFinSucc).",
                    "createdAt": "2024-04-13T17:34:21Z",
                    "author": {
                      "login": "BoltonBailey"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5dO0RE",
                    "body": "When I try to make it dependent, I get a similar error which again doesn't happen for the cons-y version\r\n```\r\ndef Equiv.piFinCastSucc (n : ℕ) (α : Fin (n + 1) → Type u) : \r\n   ((i : Fin (n + 1)) → α i) ≃ (α (.last _)) × ((j : Fin n) → α (.castSucc j)) :=\r\n  Equiv.piFinSuccAbove α (.last _)\r\n```\r\n```\r\ntype mismatch\r\n  piFinSuccAbove α (Fin.last n)\r\nhas type\r\n  ((j : Fin (n + 1)) → α j) ≃ α (Fin.last n) × ((j : Fin n) → α (Fin.succAbove (Fin.last n) j)) : Type u\r\nbut is expected to have type\r\n  ((i : Fin (n + 1)) → α i) ≃ α (Fin.last n) × ((j : Fin n) → α (Fin.castSucc j)) : Type u\r\n```",
                    "createdAt": "2024-04-13T17:53:18Z",
                    "author": {
                      "login": "BoltonBailey"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5dPBKO",
                    "body": "I mean yeah you can't use `piFinSuccAbove` to define it (at least without some `cast` somewhere).\n\nI agree that making `Equiv.piFinCastSucc` dependent is the correct move.",
                    "createdAt": "2024-04-13T19:42:14Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5dP52p",
                    "body": "To be clear, I am not trying to imply I do or don't think making `Equiv.piFinCastSucc` dependent is the correct move. I am just trying to point out that there are difficulties in doing so. \r\n\r\nI would like to express again that trying to develop `snoc` related API is not what I would like to be doing with my time. I think that probably this work would be better off being done by someone who has a better sense of why it's important, and therefore a better sense of the design considerations involved.",
                    "createdAt": "2024-04-14T04:32:30Z",
                    "author": {
                      "login": "BoltonBailey"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5hJDpo",
                    "body": "> I would like to express again that trying to develop `snoc` related API is not what I would like to be doing with my time. I think that probably this work would be better off being done by someone who has a better sense of why it's important, and therefore a better sense of the design considerations involved.\r\n\r\nThe problem is that, by doing so, you are making the parallel APIs diverge, thus decreasing the quality of mathlib as a whole. (in fact, you already did, by adding `extractNth`, which has no analog for `Fin.succ`/`Fin.castSucc`)\r\n\r\nI have now opened #13567 and #13568 to add the missing prerequisites. I will probably need one further PR before yours can be merged.",
                    "createdAt": "2024-06-06T15:34:05Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5hI4Qr",
                    "body": "**[lint-style]** <sub>reported by [reviewdog](https://github.com/reviewdog/reviewdog) :dog:</sub><br>\n```suggestion\nlemma mem_piFinset_iff_zero_tail :\n```\n",
                    "createdAt": "2024-06-06T15:02:50Z",
                    "author": {
                      "login": "github-actions"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5pijKd",
                    "body": "Could you add a section heading (`/-! ### title -/`) here? Perhaps \"Results about finsets of tuples\" or similar?",
                    "createdAt": "2024-09-23T00:06:12Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5pijSO",
                    "body": "@YaelDillies, you split this file from `Data.Fintype.Pi` in #9383; are you happy with it being put back? Or is this a bad merge conflict?\r\n",
                    "createdAt": "2024-09-23T00:09:11Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5pjoTI",
                    "body": "Hmm, I guess I am going back and forth on whether this file should be split or not. For now I have gone for keeping this split",
                    "createdAt": "2024-09-23T08:12:55Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  }
                ]
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjgwMzA1OTk=",
              "login": "BoltonBailey"
            },
            {
              "id": "MDQ6VXNlcjE0MDkwNTkz",
              "login": "YaelDillies"
            },
            {
              "id": "U_kgDOB75MNQ",
              "login": "leanprover-community-mathlib4-bot"
            },
            {
              "id": "MDQ6VXNlcjU2MzY3MDU=",
              "login": "jcommelin"
            },
            {
              "id": "MDQ6VXNlcjQyNTI2MA==",
              "login": "eric-wieser"
            },
            {
              "id": "MDQ6VXNlcjQ3Nzk1Ng==",
              "login": "kim-em"
            },
            {
              "id": "MDQ6VXNlcjkxNDE1NjQ=",
              "login": "joneugster"
            }
          ]
        },
        "state": "CLOSED",
        "statusCheckRollup": {
          "contexts": {
            "nodes": [
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHPPrXBg",
                "name": "Add topic label",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11182173342/job/31087843078"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHPPrayw",
                "name": "label-and-report-new-contributor",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11182173637/job/31087844043"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHPPraeQ",
                "name": "build",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11182173622/job/31087843961"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHPPrXwA",
                "name": "Cancel Previous Runs (CI)",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11182173333/job/31087843264"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHPPrZxQ",
                "name": "Cancel Previous Runs (CI)",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11182173325/job/31087843781"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHPPrcng",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11182173626/job/31087844510"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHPPra7A",
                "name": "Lint style (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11182173333/job/31087844076"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHPPrW4w",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11182173325/job/31087843043"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHPPrbQA",
                "name": "Check all files imported",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11182173626/job/31087844160"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHPPrZRg",
                "name": "Build (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11182173333/job/31087843654"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHPPrYfg",
                "name": "Build",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11182173325/job/31087843454"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHPPrcUw",
                "name": "Post-CI job (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11182173333/job/31087844435"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHPUiJXQ",
                "name": "Post-CI job",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11182173325/job/31092935005"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHPPsb7Q",
                "name": "New Contributor Check",
                "conclusion": "NEUTRAL",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/31087860717"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHPPtD2w",
                "name": "Summary",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=7898&login=leanprover-community&repository=mathlib4"
              },
              {
                "__typename": "StatusContext",
                "id": "SC_kwDOFcwZ1c8AAAAHZx0PGg",
                "context": "bors",
                "state": "SUCCESS",
                "targetUrl": "https://mathlib-bors-ca18eefec4cb.herokuapp.com/batches/6226",
                "description": "Build succeeded"
              }
            ]
          }
        },
        "title": "[Merged by Bors] - feat: Adding/removing an element from a product of finsets",
        "updatedAt": "2024-10-04T21:26:40Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/7898",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5PBht8",
              "createdAt": "2023-10-24T16:07:38Z",
              "source": {
                "id": "PR_kwDOFcwZ1c5TcmyC",
                "title": "feat(Algebra/MvPolynomial): Schwartz-Zippel lemma",
                "url": "https://github.com/leanprover-community/mathlib4/pull/5297"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c50zFi7zwAAAAKBImV6",
              "createdAt": "2023-10-24T16:22:48Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5lFKti",
              "createdAt": "2023-10-24T20:49:25Z",
              "body": "",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c50zFi7zwAAAAKBXI89",
              "createdAt": "2023-10-24T23:17:43Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c50zFi7zwAAAAKBXI9C",
              "createdAt": "2023-10-24T23:17:43Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c50zFi7zwAAAAKBsmG8",
              "createdAt": "2023-10-25T11:19:02Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c50zFi7zwAAAAKBsmHD",
              "createdAt": "2023-10-25T11:19:02Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c50zFi7zwAAAAKBsmai",
              "createdAt": "2023-10-25T11:19:11Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKteTVQ",
                "name": "awaiting-CI"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5lKsec",
              "createdAt": "2023-10-25T13:08:12Z",
              "body": "",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5lKtUZ",
              "createdAt": "2023-10-25T13:09:45Z",
              "body": "",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c50zFi7zwAAAAKBzAyt",
              "createdAt": "2023-10-25T13:30:39Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKteTVQ",
                "name": "awaiting-CI"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5p59HO",
              "createdAt": "2023-12-12T07:21:26Z",
              "body": "Can you make sure you have the `Fin.castSucc`/`Fin.succ`/`Fin.succAbove` version of each lemma?",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c50zFi7zwAAAAKcvNfU",
              "createdAt": "2023-12-12T07:26:52Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c50zFi7zwAAAAKcvNfW",
              "createdAt": "2023-12-12T07:26:52Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5p6Aal",
              "createdAt": "2023-12-12T07:32:10Z",
              "body": "",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5p6CMg",
              "createdAt": "2023-12-12T07:37:44Z",
              "body": "",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5ui1m4",
              "createdAt": "2023-12-13T20:04:54Z",
              "body": "> Can you make sure you have the `Fin.castSucc`/`Fin.succ`/`Fin.succAbove` version of each lemma?\r\n\r\nI got asked to add snoc-y API on #6605 as well by @eric-wieser. I have to say, I am not in favor of (me doing) this. I basically agree with Mac Malone here that [snoc is a code smell](https://leanprover.zulipchat.com/#narrow/stream/270676-lean4/topic/List.2Econcat.20and.20List.2Eappend/near/406168233). Shouldn't we be trying to remove it from mathlib, rather than adding more of it?",
              "author": {
                "login": "BoltonBailey"
              }
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5qHtoT",
              "createdAt": "2023-12-13T20:09:02Z",
              "body": "",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5ui3KL",
              "createdAt": "2023-12-13T20:09:51Z",
              "body": "We're talking about `Fin.snoc`, which is used for proving, not `List.snoc`, which is used for programming (or maybe shouldn't be, as Mac says).",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5ui5sO",
              "createdAt": "2023-12-13T20:18:10Z",
              "body": "I don't see why the difference matters, proofs should avoid being smelly too.",
              "author": {
                "login": "BoltonBailey"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5ui8XD",
              "createdAt": "2023-12-13T20:26:52Z",
              "body": "? It's only smelly because it has unexpectedly bad complexity, but that's completely irrelevant for proving. I've personally needed both `Fin.cons` and `Fin.snoc` in the past and I will add those lemmas if you don't do it yourself.",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c50zFi7zwAAAAKd_Ch7",
              "createdAt": "2023-12-13T20:33:02Z",
              "label": {
                "id": "MDU6TGFiZWwzMjg4OTQyMDg2",
                "name": "blocked-by-other-PR"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5ui-1S",
              "createdAt": "2023-12-13T20:35:05Z",
              "body": "The smell at play here for me is code duplication. As you have noted there is a whole parallel API for cons versions and snoc versions of things (init vs tail, succ vs castSucc). We are doing twice the work for an essentially equivalent set of theorems.\r\n\r\nI'll look into where snoc is being used. My suspicion is that if we just wrote theorems the \"right\" way to start with, almost every theorem that is proved using snoc could be rephrased to be proved using cons, and judicious use of `reverse` could be used in places where it's really necessary to be dealing with both sides of the tuple.",
              "author": {
                "login": "BoltonBailey"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5ujB0Y",
              "createdAt": "2023-12-13T20:45:46Z",
              "body": "At the very least, [as I've suggested before](https://leanprover.zulipchat.com/#narrow/stream/217875-Is-there-code-for-X.3F/topic/cons.20is.20to.20snoc.20as.20Fin.2Eeq_zero_or_eq_succ.20is.20to/near/385572699), it should be handled by something like `@[to_additive]` so that we don't have to prove theorems twice. Also, I suspect the gaps we have uncovered in this thread are just the beginning, so if we really want all this API, it would be better to make it all in one fell swoop.\r\n\r\n(I'm even finding that there are some [places](https://leanprover-community.github.io/mathlib4_docs/Mathlib/Order/JordanHolder.html#CompositionSeries.Equivalent.snoc_snoc_swap) where the snoc lemma exists, but not the cons!)",
              "author": {
                "login": "BoltonBailey"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c50zFi7zwAAAAKqAByj",
              "createdAt": "2024-01-10T11:36:11Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c50zFi7zwAAAAK_Ct41",
              "createdAt": "2024-02-13T23:19:38Z",
              "label": {
                "id": "MDU6TGFiZWwzMjg4OTQyMDg2",
                "name": "blocked-by-other-PR"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c50zFi7zwAAAAK_gdL-",
              "createdAt": "2024-02-14T14:52:57Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c50zFi7zwAAAAK_l5tm",
              "createdAt": "2024-02-14T16:33:33Z",
              "label": {
                "id": "MDU6TGFiZWwzMjg4OTQyMDg2",
                "name": "blocked-by-other-PR"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c50zFi7zwAAAALMGayv",
              "createdAt": "2024-03-05T13:46:40Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "RenamedTitleEvent"
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c50zFi7zwAAAALejel8",
              "createdAt": "2024-04-02T11:05:50Z",
              "label": {
                "id": "MDU6TGFiZWwzMjg4OTQyMDg2",
                "name": "blocked-by-other-PR"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c50zFi7zwAAAALe8_DB",
              "createdAt": "2024-04-02T18:38:00Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c50zFi7zwAAAALe9BJx",
              "createdAt": "2024-04-02T18:38:48Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c50zFi7zwAAAALe9BJ0",
              "createdAt": "2024-04-02T18:38:48Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c50zFi7zwAAAALe-H_q",
              "createdAt": "2024-04-02T18:59:48Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c50zFi7zwAAAALe-IVj",
              "createdAt": "2024-04-02T18:59:53Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c51ujXR",
              "createdAt": "2024-04-02T21:56:21Z",
              "body": "",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c51w-pZ",
              "createdAt": "2024-04-03T07:24:28Z",
              "body": "",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c59Tc4_",
              "createdAt": "2024-06-06T15:02:50Z",
              "body": "",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c50zFi7zwAAAAMK98MC",
              "createdAt": "2024-06-06T15:49:02Z",
              "label": {
                "id": "MDU6TGFiZWwzMjg4OTQyMDg2",
                "name": "blocked-by-other-PR"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c50zFi7zwAAAAMTobxE",
              "createdAt": "2024-06-19T10:39:28Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c50zFi7zwAAAAMcCu6M",
              "createdAt": "2024-07-01T18:58:09Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABFGXRbg",
                "name": "please-adopt"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c50zFi7zwAAAAMhHk4x",
              "createdAt": "2024-07-09T13:35:38Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c50zFi7zwAAAAMjYOJA",
              "createdAt": "2024-07-11T21:48:36Z",
              "label": {
                "id": "MDU6TGFiZWwzMjg4OTQyMDg2",
                "name": "blocked-by-other-PR"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6EmSlq",
              "createdAt": "2024-07-12T04:58:39Z",
              "body": "### PR summary [fdb84a43ab](https://github.com/leanprover-community/mathlib4/pull/7898/commits/fdb84a43abc8aa21d118623a1faea4263458b1e4)\n\n<details><summary>\n\n#### Import changes for modified files\n\n</summary>\n\nDependency changes\n\n| File | Base Count | Head Count | Change |\n| --- | --- | --- | --- |\n| Mathlib.Data.Fin.Tuple.Finset | 424 | 430 | +6 (+1.42%) |\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n| `Mathlib.Data.Fin.Tuple.Finset`|6|\n\n</details>\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ card_consEquiv_filter_piFinset`\n`+ card_insertNthEquiv_filter_piFinset`\n`+ card_snocEquiv_filter_piFinset`\n`+ insertNth_mem_piFinset_insertNth`\n`+ map_consEquiv_filter_piFinset`\n`+ map_insertNthEquiv_filter_piFinset`\n`+ map_snocEquiv_filter_piFinset`\n`+ mem_piFinset_iff_last_init`\n`+ mem_piFinset_iff_pivot_removeNth`\n`+ mem_piFinset_iff_zero_tail`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "AssignedEvent",
              "id": "AE_lADOFcwZ1c50zFi7zwAAAAMjlQYQ",
              "createdAt": "2024-07-12T05:04:05Z",
              "assignee": {
                "id": "MDQ6VXNlcjE0MDkwNTkz",
                "login": "YaelDillies"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c50zFi7zwAAAAMjlUHj",
              "createdAt": "2024-07-12T05:05:50Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c50zFi7zwAAAAMjnJaU",
              "createdAt": "2024-07-12T06:12:09Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABFGXRbg",
                "name": "please-adopt"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c50zFi7zwAAAAMjnJaY",
              "createdAt": "2024-07-12T06:12:09Z",
              "label": {
                "id": "MDU6TGFiZWwzMjg4OTQyMDg2",
                "name": "blocked-by-other-PR"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c50zFi7zwAAAAMnIJqj",
              "createdAt": "2024-07-17T18:51:11Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c50zFi7zwAAAAM7K1GY",
              "createdAt": "2024-08-14T10:04:09Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABYQuqiA",
                "name": "t-logic"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c50zFi7zwAAAANEcNvJ",
              "createdAt": "2024-08-27T18:24:12Z",
              "label": {
                "id": "MDU6TGFiZWwzMjg4OTQyMDg2",
                "name": "blocked-by-other-PR"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6J4SXB",
              "createdAt": "2024-08-27T18:24:13Z",
              "body": "This PR/issue depends on:\n* ~~leanprover-community/mathlib4#9028~~\n* ~~leanprover-community/mathlib4#10545~~\n* ~~leanprover-community/mathlib4#13568~~\n* ~~leanprover-community/mathlib4#14665~~\nBy **[Dependent Issues](https://github.com/z0al/dependent-issues)** (🤖). Happy coding!\n<!-- By Dependent Issues (Action) - DO NOT REMOVE -->",
              "author": {
                "login": "leanprover-community-mathlib4-bot"
              }
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c50zFi7zwAAAANE_3A5",
              "createdAt": "2024-08-28T08:23:00Z"
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c50zFi7zwAAAANE__t0",
              "createdAt": "2024-08-28T08:25:32Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c50zFi7zwAAAANE__t6",
              "createdAt": "2024-08-28T08:25:32Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABYQuqiA",
                "name": "t-logic"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c50zFi7zwAAAANE__uC",
              "createdAt": "2024-08-28T08:25:32Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABtNO8rw",
                "name": "t-data"
              }
            },
            {
              "__typename": "RenamedTitleEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6M6tXO",
              "createdAt": "2024-09-20T17:34:58Z",
              "body": "Sorry for the long delay. Everything should be good now.\r\n\r\nmaintainer merge",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6M6teN",
              "createdAt": "2024-09-20T17:35:16Z",
              "body": "🚀 Pull request has been placed on the maintainer queue by YaelDillies.",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c50zFi7zwAAAANW8BVc",
              "createdAt": "2024-09-20T17:35:16Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABh1mAHA",
                "name": "maintainer-merge"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6KVuxH",
              "createdAt": "2024-09-23T00:06:12Z",
              "body": "",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c50zFi7zwAAAANhU421",
              "createdAt": "2024-10-04T11:27:40Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABh1mAHA",
                "name": "maintainer-merge"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6OqbfS",
              "createdAt": "2024-10-04T11:27:55Z",
              "body": "Removing `maintainer-merge`, since it has been 2 weeks, and CI is failing.",
              "author": {
                "login": "jcommelin"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6Oqf_n",
              "createdAt": "2024-10-04T11:38:37Z",
              "body": "Should be good now.\r\n\r\nmaintainer merge",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6OqgHl",
              "createdAt": "2024-10-04T11:38:55Z",
              "body": "🚀 Pull request has been placed on the maintainer queue by YaelDillies.",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c50zFi7zwAAAANhVWvT",
              "createdAt": "2024-10-04T11:38:55Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABh1mAHA",
                "name": "maintainer-merge"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6L8YD0",
              "createdAt": "2024-10-04T11:45:32Z",
              "body": "bors d=YaelDillies",
              "author": {
                "login": "jcommelin"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6Oqi-E",
              "createdAt": "2024-10-04T11:45:34Z",
              "body": ":v: YaelDillies can now approve this pull request. To approve and merge a pull request, simply reply with `bors r+`. More detailed instructions are available [here](https://bors.tech/documentation/getting-started/#reviewing-pull-requests).",
              "author": {
                "login": "mathlib-bors"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c50zFi7zwAAAANhVw5m",
              "createdAt": "2024-10-04T11:45:42Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABAt13Ow",
                "name": "delegated"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6OqkhD",
              "createdAt": "2024-10-04T11:49:08Z",
              "body": "bors merge",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6OrmbD",
              "createdAt": "2024-10-04T14:04:52Z",
              "body": "Build failed (retrying...):\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/11180128738/job/31081203520)",
              "author": {
                "login": "mathlib-bors"
              }
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c50zFi7zwAAAANhfg2s",
              "createdAt": "2024-10-04T14:54:42Z"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6Or_4O",
              "createdAt": "2024-10-04T14:54:44Z",
              "body": "Canceled.",
              "author": {
                "login": "mathlib-bors"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6Or_7Y",
              "createdAt": "2024-10-04T14:54:50Z",
              "body": "bors merge",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6OvB72",
              "createdAt": "2024-10-04T21:26:33Z",
              "body": "Pull request successfully merged into master.\n\nBuild succeeded:\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/11186491772/job/31101624126)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/11186491772/job/31101623720)",
              "author": {
                "login": "mathlib-bors"
              }
            },
            {
              "__typename": "RenamedTitleEvent"
            },
            {
              "__typename": "ClosedEvent",
              "id": "CE_lADOFcwZ1c50zFi7zwAAAANhxnSz",
              "createdAt": "2024-10-04T21:26:34Z"
            },
            {
              "__typename": "HeadRefDeletedEvent",
              "id": "HRDE_lADOFcwZ1c50zFi7zwAAAANhxncV",
              "createdAt": "2024-10-04T21:26:40Z"
            }
          ]
        }
      }
    }
  }
}
