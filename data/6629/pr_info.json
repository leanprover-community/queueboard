{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 229,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "Parcly-Taxel"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "---\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n-->\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 4,
        "closed": true,
        "closedAt": "2023-09-02T18:46:07Z",
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c5kWJwv",
              "body": "Here's a nice golf using `Function.fixedPoints` that avoids `powers`: https://github.com/leanprover-community/mathlib4/compare/zagier...zagier_golf",
              "createdAt": "2023-08-18T08:05:59Z",
              "author": {
                "login": "tb65536"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5kWaa0",
              "body": "> Here's a nice golf using `Function.fixedPoints` that avoids `powers`: [zagier...zagier_golf](https://github.com/leanprover-community/mathlib4/compare/zagier...zagier_golf)\r\n\r\nWhat a fantastic golf.",
              "createdAt": "2023-08-18T09:02:25Z",
              "author": {
                "login": "Parcly-Taxel"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5kglz7",
              "body": "This is very nice but I suggest it would be be better placed in the archive folder, since we already have the result.",
              "createdAt": "2023-08-21T12:47:54Z",
              "author": {
                "login": "ocfnash"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5kkUEf",
              "body": "> This is very nice but I suggest it would be be better placed in the archive folder, since we already have the result.\r\n\r\nDone.",
              "createdAt": "2023-08-22T00:34:31Z",
              "author": {
                "login": "Parcly-Taxel"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5lj0qg",
              "body": "The naming in `Archive/ZagierTwoSquares` is not what we would use in Mathlib proper (it's semantic rather than based on type) but as this is going in the archive, I think we can leave it as it is.\r\n\r\nThanks!\r\n\r\nbors merge",
              "createdAt": "2023-09-02T17:04:45Z",
              "author": {
                "login": "ocfnash"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5lj55z",
              "body": "Pull request successfully merged into master.\n\n  Build succeeded!\n\n  The publicly hosted instance of bors-ng is deprecated and will go away soon.\n\n  If you want to self-host your own instance, [instructions are here][instructions].\n  For more help, visit [the forum].\n\n  If you want to switch to GitHub's built-in merge queue, visit [their help page][gh].\n\n  [instructions]: https://github.com/bors-ng/bors-ng#how-to-set-up-your-own-real-instance\n  [the forum]: https://forum.bors.tech\n  [gh]: https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/configuring-pull-request-merges/managing-a-merge-queue\n\n\n\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/6059734279/job/16443150335)\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/6059734279/job/16443150298)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/6059734279/job/16443150369)",
              "createdAt": "2023-09-02T18:46:06Z",
              "author": {
                "login": "bors"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "87faaea9580a66212677337bf6065424539a1c5e",
                "additions": 148,
                "deletions": 0,
                "committedDate": "2023-08-16T00:11:31Z",
                "author": {
                  "name": "Parcly Taxel",
                  "email": "reddeloostw@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "05b43721ac458d0f448ad03c89881d1f3920f0d7",
                "additions": 71,
                "deletions": 1,
                "committedDate": "2023-08-16T15:28:57Z",
                "author": {
                  "name": "Parcly Taxel",
                  "email": "reddeloostw@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "8cb20232937a174fd8deacae05354440a15a2beb",
                "additions": 96,
                "deletions": 25,
                "committedDate": "2023-08-17T08:44:35Z",
                "author": {
                  "name": "Parcly Taxel",
                  "email": "reddeloostw@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "73a0d098628d3f4fe293a4cb543059f977114797",
                "additions": 1742,
                "deletions": 1128,
                "committedDate": "2023-08-17T08:45:00Z",
                "author": {
                  "name": "Parcly Taxel",
                  "email": "reddeloostw@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "b2b0e13c4516f8d1e26845b77e00026d18512e5b",
                "additions": 19,
                "deletions": 19,
                "committedDate": "2023-08-17T09:19:19Z",
                "author": {
                  "name": "Parcly Taxel",
                  "email": "reddeloostw@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "a5864b31c440dea5f6b074d4cba74f585a715f0d",
                "additions": 2,
                "deletions": 2,
                "committedDate": "2023-08-17T09:25:16Z",
                "author": {
                  "name": "Parcly Taxel",
                  "email": "reddeloostw@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "adec26d05788fad879881f55931a52e9a22476cd",
                "additions": 1,
                "deletions": 1,
                "committedDate": "2023-08-17T09:52:03Z",
                "author": {
                  "name": "Jeremy Tan Jie Rui",
                  "email": "reddeloostw@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "a89cce68a0b21e2b70809a2afcc6192a28b930e7",
                "additions": 20,
                "deletions": 30,
                "committedDate": "2023-08-17T10:29:38Z",
                "author": {
                  "name": "Parcly Taxel",
                  "email": "reddeloostw@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "f234d7cc73cb9bc4c13be83c4fc46fb36ff2f4a4",
                "additions": 0,
                "deletions": 0,
                "committedDate": "2023-08-17T10:30:04Z",
                "author": {
                  "name": "Parcly Taxel",
                  "email": "reddeloostw@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "047291f894689820e3f589f8b52d68a2dac2e627",
                "additions": 34,
                "deletions": 47,
                "committedDate": "2023-08-18T01:25:32Z",
                "author": {
                  "name": "Parcly Taxel",
                  "email": "reddeloostw@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "599a1143ede916c997d92ad82fc06678bdd94964",
                "additions": 24,
                "deletions": 38,
                "committedDate": "2023-08-18T03:17:56Z",
                "author": {
                  "name": "Parcly Taxel",
                  "email": "reddeloostw@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "d581a553a20763f14bdaedba344a38dac466b790",
                "additions": 27,
                "deletions": 36,
                "committedDate": "2023-08-18T04:26:59Z",
                "author": {
                  "name": "Parcly Taxel",
                  "email": "reddeloostw@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "40c9bf0fa71554f030e0a7a24ed24a082ee8348a",
                "additions": 3,
                "deletions": 4,
                "committedDate": "2023-08-18T04:48:30Z",
                "author": {
                  "name": "Parcly Taxel",
                  "email": "reddeloostw@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "43be23ce63b386cc86d6ad7c527042f57131db56",
                "additions": 7,
                "deletions": 11,
                "committedDate": "2023-08-18T04:55:37Z",
                "author": {
                  "name": "Parcly Taxel",
                  "email": "reddeloostw@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "33bedf70791d96d2236ef2d36098a92663c1f8ab",
                "additions": 2,
                "deletions": 2,
                "committedDate": "2023-08-18T04:57:12Z",
                "author": {
                  "name": "Parcly Taxel",
                  "email": "reddeloostw@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "fa26683a79ab692091834aa608e4ac6bbe9b7da8",
                "additions": 24,
                "deletions": 53,
                "committedDate": "2023-08-18T08:49:56Z",
                "author": {
                  "name": "Parcly Taxel",
                  "email": "reddeloostw@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "9f0ec9d1afbb572aa93c2fcbb0e962570630ab1f",
                "additions": 2,
                "deletions": 2,
                "committedDate": "2023-08-18T09:12:58Z",
                "author": {
                  "name": "Parcly Taxel",
                  "email": "reddeloostw@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "66e83023599a3647916622f8812f2b3fdddbb57b",
                "additions": 0,
                "deletions": 14,
                "committedDate": "2023-08-18T09:15:33Z",
                "author": {
                  "name": "Parcly Taxel",
                  "email": "reddeloostw@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "f2e0bf61214b600fa29f349c2cab873af5859540",
                "additions": 1011,
                "deletions": 609,
                "committedDate": "2023-08-18T15:27:26Z",
                "author": {
                  "name": "Parcly Taxel",
                  "email": "reddeloostw@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "7db2de6444de3e96b22dcca69701be89f8a31e0e",
                "additions": 6,
                "deletions": 11,
                "committedDate": "2023-08-18T18:43:24Z",
                "author": {
                  "name": "Jeremy Tan Jie Rui",
                  "email": "reddeloostw@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "200d5cb44faf613f69fd124d286a939e77bbab12",
                "additions": 1,
                "deletions": 1,
                "committedDate": "2023-08-18T18:47:33Z",
                "author": {
                  "name": "Parcly Taxel",
                  "email": "reddeloostw@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "e367aa7feb15ac5b04b0b4d2f7bd569b54f7fb15",
                "additions": 13,
                "deletions": 23,
                "committedDate": "2023-08-18T20:00:15Z",
                "author": {
                  "name": "Parcly Taxel",
                  "email": "reddeloostw@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "589fddae6ace0f333e2b68063c883ae801864323",
                "additions": 3,
                "deletions": 4,
                "committedDate": "2023-08-19T00:56:05Z",
                "author": {
                  "name": "Parcly Taxel",
                  "email": "reddeloostw@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "36eca214e85775be3e6843b12d8c4bbf11babab2",
                "additions": 2543,
                "deletions": 1281,
                "committedDate": "2023-08-21T23:51:57Z",
                "author": {
                  "name": "Parcly Taxel",
                  "email": "reddeloostw@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "7c26154791645dd07e9ded1017c076e761cc46da",
                "additions": 21,
                "deletions": 2,
                "committedDate": "2023-08-22T00:34:08Z",
                "author": {
                  "name": "Parcly Taxel",
                  "email": "reddeloostw@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "18344211e6e1eefc1203d2a62f4fb580d54f6848",
                "additions": 2,
                "deletions": 2,
                "committedDate": "2023-08-22T00:42:28Z",
                "author": {
                  "name": "Parcly Taxel",
                  "email": "reddeloostw@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "59df958851b29906b7649a7f6574aac4270ebd82",
                "additions": 75,
                "deletions": 50,
                "committedDate": "2023-08-22T04:36:09Z",
                "author": {
                  "name": "Parcly Taxel",
                  "email": "reddeloostw@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "10997cf6a01c24c2f6020ea06177d4b338f0ae30",
                "additions": 18,
                "deletions": 13,
                "committedDate": "2023-08-22T05:11:03Z",
                "author": {
                  "name": "Parcly Taxel",
                  "email": "reddeloostw@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "9f9b3288f9e488b2613c7a501f2193988a09f6d4",
                "additions": 10,
                "deletions": 9,
                "committedDate": "2023-08-22T05:29:04Z",
                "author": {
                  "name": "Parcly Taxel",
                  "email": "reddeloostw@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "69d86e03a0251f5aa29428c6cb0c79e050514cfc",
                "additions": 2,
                "deletions": 2,
                "committedDate": "2023-08-22T05:54:47Z",
                "author": {
                  "name": "Parcly Taxel",
                  "email": "reddeloostw@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "dad0da6c283d0865e1b06c989f7d575cca4d076f",
                "additions": 483,
                "deletions": 56,
                "committedDate": "2023-08-22T06:23:17Z",
                "author": {
                  "name": "Parcly Taxel",
                  "email": "reddeloostw@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "614a6ea974be8732257abf9f64b3d0d0a21c483e",
                "additions": 20,
                "deletions": 20,
                "committedDate": "2023-08-22T07:49:19Z",
                "author": {
                  "name": "Parcly Taxel",
                  "email": "reddeloostw@gmail.com"
                },
                "statusCheckRollup": null
              }
            }
          ]
        },
        "createdAt": "2023-08-17T09:20:48Z",
        "deletions": 0,
        "files": {
          "nodes": [
            {
              "path": "Archive.lean",
              "additions": 1,
              "deletions": 0
            },
            {
              "path": "Archive/ZagierTwoSquares.lean",
              "additions": 196,
              "deletions": 0
            },
            {
              "path": "Mathlib/GroupTheory/Perm/Cycle/Type.lean",
              "additions": 18,
              "deletions": 0
            },
            {
              "path": "docs/references.bib",
              "additions": 14,
              "deletions": 0
            }
          ]
        },
        "headRefName": "zagier",
        "headRefOid": "614a6ea974be8732257abf9f64b3d0d0a21c483e",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c5YIu8T",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
              "color": "06e039",
              "name": "ready-to-merge"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABViJLNA",
              "color": "33DBEC",
              "name": "t-number-theory"
            }
          ]
        },
        "latestReviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5esusV",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-08-22T08:20:38Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5eXuTX",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "alexjbest"
              },
              "submittedAt": "2023-08-17T18:57:34Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5eTy4W",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "mo271"
              },
              "submittedAt": "2023-08-17T09:49:38Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5excvX",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "tb65536"
              },
              "submittedAt": "2023-08-22T17:55:50Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5eqaff",
              "body": "Could you please squeeze all of your nonterminal simps and add a bit more documentation in the proofs?",
              "state": "COMMENTED",
              "author": {
                "login": "mcdoll"
              },
              "submittedAt": "2023-08-22T02:39:40Z"
            }
          ]
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "UNKNOWN",
        "mergeable": "UNKNOWN",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 6629,
        "potentialMergeCommit": null,
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": null,
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5eTy4W",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "mo271"
              },
              "submittedAt": "2023-08-17T09:49:38Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5eT12P",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-08-17T10:06:28Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5eWm9p",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "tb65536"
              },
              "submittedAt": "2023-08-17T16:17:19Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5eXnSX",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "alexjbest"
              },
              "submittedAt": "2023-08-17T18:38:16Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5eXn70",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "alexjbest"
              },
              "submittedAt": "2023-08-17T18:39:55Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5eXqvk",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "alexjbest"
              },
              "submittedAt": "2023-08-17T18:47:17Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5eXsy7",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "alexjbest"
              },
              "submittedAt": "2023-08-17T18:53:04Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5eXuTX",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "alexjbest"
              },
              "submittedAt": "2023-08-17T18:57:34Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5eZl3J",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "Parcly-Taxel"
              },
              "submittedAt": "2023-08-18T03:18:19Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5eaNlH",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "Parcly-Taxel"
              },
              "submittedAt": "2023-08-18T06:30:59Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5eaOY-",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "tb65536"
              },
              "submittedAt": "2023-08-18T06:33:58Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5ebPqn",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "Parcly-Taxel"
              },
              "submittedAt": "2023-08-18T09:27:17Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5eeVe9",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "tb65536"
              },
              "submittedAt": "2023-08-18T18:15:02Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5eeXH3",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "tb65536"
              },
              "submittedAt": "2023-08-18T18:20:52Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5eek9K",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "tb65536"
              },
              "submittedAt": "2023-08-18T18:59:23Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5ee6Pg",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "Parcly-Taxel"
              },
              "submittedAt": "2023-08-18T20:03:47Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5ee8X2",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "tb65536"
              },
              "submittedAt": "2023-08-18T20:12:38Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5eqaff",
              "body": "Could you please squeeze all of your nonterminal simps and add a bit more documentation in the proofs?",
              "state": "COMMENTED",
              "author": {
                "login": "mcdoll"
              },
              "submittedAt": "2023-08-22T02:39:40Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5eq98M",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "Parcly-Taxel"
              },
              "submittedAt": "2023-08-22T05:11:43Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5erm7W",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "tb65536"
              },
              "submittedAt": "2023-08-22T06:21:17Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5erwe5",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "Parcly-Taxel"
              },
              "submittedAt": "2023-08-22T06:36:42Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5er0Lp",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "tb65536"
              },
              "submittedAt": "2023-08-22T06:41:51Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5er2aj",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "tb65536"
              },
              "submittedAt": "2023-08-22T06:45:28Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5esKza",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "Parcly-Taxel"
              },
              "submittedAt": "2023-08-22T07:22:07Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5esQ0-",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "tb65536"
              },
              "submittedAt": "2023-08-22T07:33:18Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5esRNw",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "tb65536"
              },
              "submittedAt": "2023-08-22T07:34:09Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5esZHd",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "Parcly-Taxel"
              },
              "submittedAt": "2023-08-22T07:50:48Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5ess5N",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "Parcly-Taxel"
              },
              "submittedAt": "2023-08-22T08:17:20Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5esusV",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-08-22T08:20:38Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5excvX",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "tb65536"
              },
              "submittedAt": "2023-08-22T17:55:50Z"
            }
          ]
        },
        "reviewThreads": {
          "nodes": [
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5NTmHf",
                    "body": "```suggestion\r\n\"The involution on the finite set `S = {(x, y, z) : ℕ × ℕ × ℕ | x ^ 2 + 4 * y * z = p}` defined by\r\n```\r\nwe might as well cite verbatim, see https://people.mpim-bonn.mpg.de/zagier/files/doi/10.2307/2323918/fulltext.pdf",
                    "createdAt": "2023-08-17T09:49:37Z",
                    "author": {
                      "login": "mo271"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5NToF4",
                    "body": "It's best to always put the type on `def`s\r\n```suggestion\r\ndef zagierSet : Set (ℕ × ℕ × ℕ) := {t | t.1 * t.1 + 4 * t.2.1 * t.2.2 = 4 * k + 1}\r\n```",
                    "createdAt": "2023-08-17T09:56:50Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5NToP2",
                    "body": "```suggestion\r\ndef zagierFinset : Finset (ℕ × ℕ × ℕ) :=\r\n```",
                    "createdAt": "2023-08-17T09:57:22Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5NTocz",
                    "body": "```suggestion\r\ntheorem coe_zagierFinset : ↑(zagierFinset k) = zagierSet k := by\r\n```\r\nand flip the direction of the proof below",
                    "createdAt": "2023-08-17T09:58:07Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5NToje",
                    "body": "```suggestion\r\ninstance : Fintype (zagierSet k) := by\r\n```\r\nNo need for the subtype here",
                    "createdAt": "2023-08-17T09:58:31Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5NTp3W",
                    "body": "I feel like we ought to have this somewhere as the result on arbitrary monoids, that `powers x` is a group if `orderOf x = p`.",
                    "createdAt": "2023-08-17T10:03:27Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5NXQXq",
                    "body": "I'm not entirely sure about how to effect this. I've added `groupOfPowers` in `GroupTheory.Submonoid.Membership`, but what about `isPGroup_of_powers` in the new file?",
                    "createdAt": "2023-08-18T03:18:19Z",
                    "author": {
                      "login": "Parcly-Taxel"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5NYWX2",
                    "body": "Now that the group construction is no longer needed here it's been moved to #6648.",
                    "createdAt": "2023-08-18T09:27:16Z",
                    "author": {
                      "login": "Parcly-Taxel"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5NTp_7",
                    "body": "Doesn't `#synth MulAction (powers f) α` already find this?",
                    "createdAt": "2023-08-17T10:03:56Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5NTqix",
                    "body": "You should add the lemma that says `↑(obvInvo p) = (p.1, p.2.2, p.2.1)`",
                    "createdAt": "2023-08-17T10:06:10Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5NTqmr",
                    "body": "```suggestion\r\n```",
                    "createdAt": "2023-08-17T10:06:25Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5NVYvU",
                    "body": "I wonder if you could view `f` as living in the group of units of `Function.End α`? Then you could use `zpowers` rather than `powers`.",
                    "createdAt": "2023-08-17T16:17:19Z",
                    "author": {
                      "login": "tb65536"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5NXsoM",
                    "body": "Then I would have to define `obvInvo` and `complexInvo` with type `(Function.End (zagierSet k))ˣ`, hence _immediately_ show that they are their own inverses – and I don't need inverses for the proof. Furthermore I need `f ^ p = 1` for `isPGroup_of_powers`, not that `f` is its own inverse (which is the same as `f ^ p = 1` only when `p = 2`).",
                    "createdAt": "2023-08-18T06:30:59Z",
                    "author": {
                      "login": "Parcly-Taxel"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5NXtK6",
                    "body": "Another option would be to write a definition that takes `f ^ p = id` and produces an `equiv`.",
                    "createdAt": "2023-08-18T06:33:58Z",
                    "author": {
                      "login": "tb65536"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5NV9tN",
                    "body": "there is already `Odd.pos`",
                    "createdAt": "2023-08-17T18:38:16Z",
                    "author": {
                      "login": "alexjbest"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5NV-Fv",
                    "body": "There is no namespacing, so this result will just be in the global namespace called `result`. Please give it a descriptive name and namespace it also (and maybe also make it `protected` if its name overlaps too much).\r\nSimilar with other results",
                    "createdAt": "2023-08-17T18:39:55Z",
                    "author": {
                      "login": "alexjbest"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5NV_0I",
                    "body": "```suggestion\r\ntheorem coe_zagierFinset : (zagierFinset k : Set ℕ) = zagierSet k := by\r\n```\r\ngenerally we try to avoid putting unspecified coe arrows in the code, as things can sometimes change. Putting an explicit type ascription is much clearer",
                    "createdAt": "2023-08-17T18:47:16Z",
                    "author": {
                      "login": "alexjbest"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5NWBJD",
                    "body": "If you keep this lemma it should surely move to a different file, like the one that defines the monoid structure on `Function.End`. But its also not clear to me why you can't just use `^k` throughout the file and never mention `^[k]`",
                    "createdAt": "2023-08-17T18:53:03Z",
                    "author": {
                      "login": "alexjbest"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5NWCHq",
                    "body": "\n```suggestion\n```\nthese shouldn't really be needed, linarith won't care exactly what order the terms are in",
                    "createdAt": "2023-08-17T18:57:33Z",
                    "author": {
                      "login": "alexjbest"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5NaQzn",
                    "body": "```suggestion\r\ntheorem Nat.Prime.sq_add_sq' {p : ℕ} [h : Fact p.Prime] (hp : p % 4 = 1) :\r\n    ∃ a b : ℕ, a ^ 2 + b ^ 2 = p := by\r\n  rw [←div_add_mod p 4, hp] at h ⊢\r\n  apply Zagier.exists_sq_add_sq\r\n```",
                    "createdAt": "2023-08-18T18:15:02Z",
                    "author": {
                      "login": "tb65536"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5NaR4T",
                    "body": "```suggestion\r\n  contrapose! this\r\n  rw [Set.not_nonempty_iff_eq_empty] at this\r\n  simp_rw [this, Fintype.card_of_isEmpty, fixedPoints_eq_singleton, Fintype.card_ofSubsingleton]\r\n```",
                    "createdAt": "2023-08-18T18:20:52Z",
                    "author": {
                      "login": "tb65536"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5NaaTk",
                    "body": "```suggestion\r\nlemma zagierSet_subset : zagierSet k ⊆ Ioc 0 (k + 1) ×ˢ Ioc 0 k ×ˢ Ioc 0 k := by\r\n  intro x h\r\n  have lb := zagierSet_lower_bound k h\r\n  have ub := zagierSet_upper_bound k h\r\n  exact ⟨⟨lb.1, ub.1⟩, ⟨lb.2.1, ub.2.1⟩, ⟨lb.2.2, ub.2.2⟩⟩\r\n\r\nnoncomputable instance : Fintype (zagierSet k) :=\r\n  (((finite_Ioc 0 (k + 1)).prod\r\n    ((finite_Ioc 0 k).prod (finite_Ioc 0 k))).subset (zagierSet_subset k)).fintype\r\n```",
                    "createdAt": "2023-08-18T18:59:23Z",
                    "author": {
                      "login": "tb65536"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5NaoZb",
                    "body": "Done, with a change from `open Finset` to `open Set` (otherwise `Ioc` causes errors due to `Set.Ioc` being required and not `Finset.Ioc`).",
                    "createdAt": "2023-08-18T20:03:47Z",
                    "author": {
                      "login": "Parcly-Taxel"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5NapvU",
                    "body": "Oh, yes, I forgot about that change.",
                    "createdAt": "2023-08-18T20:12:38Z",
                    "author": {
                      "login": "tb65536"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5NiTan",
                    "body": "I think the RHS should have its own definition, using `simp` and `linarith` in the statement of a theorem looks not great.",
                    "createdAt": "2023-08-22T02:32:57Z",
                    "author": {
                      "login": "mcdoll"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5NirCu",
                    "body": "All done (including squeezing nonterminal simps and documentation).",
                    "createdAt": "2023-08-22T05:11:42Z",
                    "author": {
                      "login": "Parcly-Taxel"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5NjHbC",
                    "body": "Perhaps it would make sense to add this to mathlib, generalized to arbitrary primes or prime powers?",
                    "createdAt": "2023-08-22T06:21:17Z",
                    "author": {
                      "login": "tb65536"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5NjMsl",
                    "body": "Where is an appropriate place for this theorem and `noncomputable instance : Fintype (fixedPoints f) := Fintype.ofFinite _`? In `GroupTheory.Perm.Cycle.Type`, `GroupTheory.PGroup` or what?",
                    "createdAt": "2023-08-22T06:36:41Z",
                    "author": {
                      "login": "Parcly-Taxel"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5NjPR3",
                    "body": "The theorem should go in `GroupTheory.Perm.Cycle.Type`, I think. The instance could go earlier. And you might be able to make the instance computable if you add some sort of decidability hypothesis (maybe `DecidableEq α`?).",
                    "createdAt": "2023-08-22T06:41:51Z",
                    "author": {
                      "login": "tb65536"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5NjQi9",
                    "body": "In fact, you might not need the instance at all. Try deleting it?",
                    "createdAt": "2023-08-22T06:45:28Z",
                    "author": {
                      "login": "tb65536"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5NjdP0",
                    "body": "I don't know how to prove the sorry below:\r\n```lean\r\ntheorem card_modEq_card_fixedPoints_of_pow_prime [DecidableEq α] {f : Function.End α} {p n : ℕ}\r\n    [hp : Fact p.Prime] (hf : f ^ p ^ n = 1) :\r\n    Fintype.card α ≡ Fintype.card f.fixedPoints [MOD p] := by\r\n  let σ : α ≃ α := ⟨f, f ^ (p ^ n - 1),\r\n  by\r\n    simp_rw [Function.LeftInverse, ← Function.comp_apply (g := f),\r\n      show (f ^ (p ^ n - 1)) ∘ f = f ^ (p ^ n - 1) * f by rfl, ← pow_succ',\r\n      Nat.sub_add_cancel (pow_pos hp.out.pos n)]\r\n    exact congrFun hf,\r\n  by\r\n    simp_rw [Function.RightInverse, Function.LeftInverse, ← Function.comp_apply (f := f),\r\n      show f ∘ (f ^ (p ^ n - 1)) = f * f ^ (p ^ n - 1) by rfl, ← pow_succ,\r\n      Nat.sub_add_cancel (pow_pos hp.out.pos n)]\r\n    exact congrFun hf⟩\r\n  have hσ : σ ^ p ^ n = 1 := by\r\n    sorry\r\n  suffices : Fintype.card f.fixedPoints = (support σ)ᶜ.card\r\n  · exact this ▸ (card_compl_support_modEq hσ).symm\r\n  suffices : f.fixedPoints = (support σ)ᶜ\r\n  · simp only [this]; apply Fintype.card_coe\r\n  simp [Set.ext_iff, Function.IsFixedPt]\r\n```",
                    "createdAt": "2023-08-22T07:22:07Z",
                    "author": {
                      "login": "Parcly-Taxel"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5Njgsr",
                    "body": "```\r\n  let σ : α ≃ α := ⟨f, f ^ (p ^ k - 1),\r\n    leftInverse_iff_comp.mpr ((pow_sub_mul_pow f (Nat.one_le_pow k p hp.out.pos)).trans hf),\r\n    leftInverse_iff_comp.mpr ((pow_mul_pow_sub f (Nat.one_le_pow k p hp.out.pos)).trans hf)⟩\r\n  have hσ : σ ^ p ^ k = 1\r\n  · rw [FunLike.ext'_iff, Equiv.Perm.coe_pow]\r\n    exact (hom_coe_pow (fun g : Function.End α ↦ g) rfl (fun g h ↦ rfl) f (p ^ k)).symm.trans hf\r\n  suffices : Fintype.card (fixedPoints f) = Finset.card (Equiv.Perm.support σ)ᶜ\r\n  · exact this ▸ (Equiv.Perm.card_compl_support_modEq hσ).symm\r\n  suffices : fixedPoints f = (Equiv.Perm.support σ)ᶜ\r\n  · simp only [this]\r\n    apply Fintype.card_coe\r\n  simp [Set.ext_iff, IsFixedPt]\r\n```",
                    "createdAt": "2023-08-22T07:33:18Z",
                    "author": {
                      "login": "tb65536"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5Njg8Z",
                    "body": "However, a less hacky way might be to override `npow` in https://leanprover-community.github.io/mathlib_docs/group_theory/group_action/defs.html#function.End.monoid",
                    "createdAt": "2023-08-22T07:34:09Z",
                    "author": {
                      "login": "tb65536"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5Njl7v",
                    "body": "I've added the function to mathlib as [`card_fixedPoints_modEq`](https://github.com/leanprover-community/mathlib4/pull/6629/files#diff-326d833814857d915aa64bdd810dbe11ae76a4e1526f602642b5a0075b263d18R333-R349). Feel free to make any simplifications yourself.",
                    "createdAt": "2023-08-22T07:50:48Z",
                    "author": {
                      "login": "Parcly-Taxel"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5NjzZO",
                    "body": "I don't see how adding attributes to `instMonoidEnd` as follows:\r\n```lean\r\ninstance : Monoid (Function.End α) where\r\n  one := id\r\n  mul := (· ∘ ·)\r\n  mul_assoc f g h := rfl\r\n  mul_one f := rfl\r\n  one_mul f := rfl\r\n  npow n f := f^[n]\r\n  npow_zero _ := rfl\r\n  npow_succ _ _ := by simp only [Function.iterate_succ']; rfl\r\n```\r\nhelps with simplifying the code in `card_fixedPoints_modEq` @tb65536",
                    "createdAt": "2023-08-22T08:17:19Z",
                    "author": {
                      "login": "Parcly-Taxel"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5Nj0eB",
                    "body": "@tb65536, I think it's best not to make that refactor in this PR. Yaël already has a branch that does that for lean 3",
                    "createdAt": "2023-08-22T08:20:38Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5NmvBv",
                    "body": "Sure, it can wait.",
                    "createdAt": "2023-08-22T17:55:49Z",
                    "author": {
                      "login": "tb65536"
                    }
                  }
                ]
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjU0MTc1NDYz",
              "login": "Parcly-Taxel"
            },
            {
              "id": "MDQ6VXNlcjEzMzM5MDE3",
              "login": "tb65536"
            },
            {
              "id": "MDQ6VXNlcjc3MzQzNjQ=",
              "login": "ocfnash"
            },
            {
              "id": "MDQ6VXNlcjQyNTI2MA==",
              "login": "eric-wieser"
            },
            {
              "id": "MDQ6VXNlcjE2ODg1MzM=",
              "login": "alexjbest"
            },
            {
              "id": "MDQ6VXNlcjM0OTE2Mjc=",
              "login": "mo271"
            },
            {
              "id": "MDQ6VXNlcjIxMzY2MzE5",
              "login": "mcdoll"
            }
          ]
        },
        "state": "CLOSED",
        "statusCheckRollup": null,
        "title": "[Merged by Bors] - feat: Zagier's \"one-sentence proof\" of Fermat's theorem on sums of two squares",
        "updatedAt": "2023-09-02T18:46:10Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/6629",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "87faaea9580a66212677337bf6065424539a1c5e"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "05b43721ac458d0f448ad03c89881d1f3920f0d7"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "8cb20232937a174fd8deacae05354440a15a2beb"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "73a0d098628d3f4fe293a4cb543059f977114797"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "b2b0e13c4516f8d1e26845b77e00026d18512e5b"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5uivuXzwAAAAJbBPKI",
              "createdAt": "2023-08-17T09:20:48Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5uivuXzwAAAAJbBPKO",
              "createdAt": "2023-08-17T09:20:48Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABMtntmA",
                "name": "new-feature"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5uivuXzwAAAAJbBPKQ",
              "createdAt": "2023-08-17T09:20:48Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABViJLNA",
                "name": "t-number-theory"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "a5864b31c440dea5f6b074d4cba74f585a715f0d"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5eTy4W",
              "createdAt": "2023-08-17T09:49:37Z",
              "body": "",
              "author": {
                "login": "mo271"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "adec26d05788fad879881f55931a52e9a22476cd"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5eT12P",
              "createdAt": "2023-08-17T09:56:49Z",
              "body": "",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "a89cce68a0b21e2b70809a2afcc6192a28b930e7"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "f234d7cc73cb9bc4c13be83c4fc46fb36ff2f4a4"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5eWm9p",
              "createdAt": "2023-08-17T16:17:19Z",
              "body": "",
              "author": {
                "login": "tb65536"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5eXnSX",
              "createdAt": "2023-08-17T18:38:15Z",
              "body": "",
              "author": {
                "login": "alexjbest"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5eXn70",
              "createdAt": "2023-08-17T18:39:55Z",
              "body": "",
              "author": {
                "login": "alexjbest"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5eXqvk",
              "createdAt": "2023-08-17T18:47:16Z",
              "body": "",
              "author": {
                "login": "alexjbest"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5eXsy7",
              "createdAt": "2023-08-17T18:53:03Z",
              "body": "",
              "author": {
                "login": "alexjbest"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5eXuTX",
              "createdAt": "2023-08-17T18:57:33Z",
              "body": "",
              "author": {
                "login": "alexjbest"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "047291f894689820e3f589f8b52d68a2dac2e627"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "599a1143ede916c997d92ad82fc06678bdd94964"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "d581a553a20763f14bdaedba344a38dac466b790"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "40c9bf0fa71554f030e0a7a24ed24a082ee8348a"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "43be23ce63b386cc86d6ad7c527042f57131db56"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "33bedf70791d96d2236ef2d36098a92663c1f8ab"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5kWJwv",
              "createdAt": "2023-08-18T08:05:59Z",
              "body": "Here's a nice golf using `Function.fixedPoints` that avoids `powers`: https://github.com/leanprover-community/mathlib4/compare/zagier...zagier_golf",
              "author": {
                "login": "tb65536"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "fa26683a79ab692091834aa608e4ac6bbe9b7da8"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5kWaa0",
              "createdAt": "2023-08-18T09:02:25Z",
              "body": "> Here's a nice golf using `Function.fixedPoints` that avoids `powers`: [zagier...zagier_golf](https://github.com/leanprover-community/mathlib4/compare/zagier...zagier_golf)\r\n\r\nWhat a fantastic golf.",
              "author": {
                "login": "Parcly-Taxel"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "9f0ec9d1afbb572aa93c2fcbb0e962570630ab1f"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "66e83023599a3647916622f8812f2b3fdddbb57b"
              }
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5OBMub",
              "createdAt": "2023-08-18T09:25:52Z",
              "source": {
                "id": "PR_kwDOFcwZ1c5YOyd3",
                "title": "[Merged by Bors] - feat: group generated by a finite-order submonoid element",
                "url": "https://github.com/leanprover-community/mathlib4/pull/6648"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "f2e0bf61214b600fa29f349c2cab873af5859540"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5eeVe9",
              "createdAt": "2023-08-18T18:15:01Z",
              "body": "",
              "author": {
                "login": "tb65536"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5eeXH3",
              "createdAt": "2023-08-18T18:20:52Z",
              "body": "",
              "author": {
                "login": "tb65536"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "7db2de6444de3e96b22dcca69701be89f8a31e0e"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "200d5cb44faf613f69fd124d286a939e77bbab12"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5eek9K",
              "createdAt": "2023-08-18T18:59:23Z",
              "body": "",
              "author": {
                "login": "tb65536"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "e367aa7feb15ac5b04b0b4d2f7bd569b54f7fb15"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "589fddae6ace0f333e2b68063c883ae801864323"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5kglz7",
              "createdAt": "2023-08-21T12:47:54Z",
              "body": "This is very nice but I suggest it would be be better placed in the archive folder, since we already have the result.",
              "author": {
                "login": "ocfnash"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "36eca214e85775be3e6843b12d8c4bbf11babab2"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "7c26154791645dd07e9ded1017c076e761cc46da"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5kkUEf",
              "createdAt": "2023-08-22T00:34:31Z",
              "body": "> This is very nice but I suggest it would be be better placed in the archive folder, since we already have the result.\r\n\r\nDone.",
              "author": {
                "login": "Parcly-Taxel"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "18344211e6e1eefc1203d2a62f4fb580d54f6848"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5eqaff",
              "createdAt": "2023-08-22T02:32:57Z",
              "body": "Could you please squeeze all of your nonterminal simps and add a bit more documentation in the proofs?",
              "author": {
                "login": "mcdoll"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "59df958851b29906b7649a7f6574aac4270ebd82"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "10997cf6a01c24c2f6020ea06177d4b338f0ae30"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "9f9b3288f9e488b2613c7a501f2193988a09f6d4"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "69d86e03a0251f5aa29428c6cb0c79e050514cfc"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5erm7W",
              "createdAt": "2023-08-22T06:21:17Z",
              "body": "",
              "author": {
                "login": "tb65536"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "dad0da6c283d0865e1b06c989f7d575cca4d076f"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "614a6ea974be8732257abf9f64b3d0d0a21c483e"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5lj0qg",
              "createdAt": "2023-09-02T17:04:45Z",
              "body": "The naming in `Archive/ZagierTwoSquares` is not what we would use in Mathlib proper (it's semantic rather than based on type) but as this is going in the archive, I think we can leave it as it is.\r\n\r\nThanks!\r\n\r\nbors merge",
              "author": {
                "login": "ocfnash"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5uivuXzwAAAAJjz37z",
              "createdAt": "2023-09-02T17:04:55Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
                "name": "ready-to-merge"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5uivuXzwAAAAJjz38F",
              "createdAt": "2023-09-02T17:04:56Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5lj55z",
              "createdAt": "2023-09-02T18:46:06Z",
              "body": "Pull request successfully merged into master.\n\n  Build succeeded!\n\n  The publicly hosted instance of bors-ng is deprecated and will go away soon.\n\n  If you want to self-host your own instance, [instructions are here][instructions].\n  For more help, visit [the forum].\n\n  If you want to switch to GitHub's built-in merge queue, visit [their help page][gh].\n\n  [instructions]: https://github.com/bors-ng/bors-ng#how-to-set-up-your-own-real-instance\n  [the forum]: https://forum.bors.tech\n  [gh]: https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/configuring-pull-request-merges/managing-a-merge-queue\n\n\n\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/6059734279/job/16443150335)\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/6059734279/job/16443150298)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/6059734279/job/16443150369)",
              "author": {
                "login": "bors"
              }
            },
            {
              "__typename": "RenamedTitleEvent"
            },
            {
              "__typename": "ClosedEvent",
              "id": "CE_lADOFcwZ1c5uivuXzwAAAAJj0b06",
              "createdAt": "2023-09-02T18:46:08Z"
            },
            {
              "__typename": "HeadRefDeletedEvent",
              "id": "HRDE_lADOFcwZ1c5uivuXzwAAAAJj0b17",
              "createdAt": "2023-09-02T18:46:10Z"
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "ReferencedEvent"
            }
          ]
        }
      }
    }
  }
}
