{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 309,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "YaelDillies"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "Prove Pontryagin duality in case of finite abelian groups.\r\n\r\nThis states that any finite abelian group is canonically isomorphic to its double dual (the space of complex-valued characters of its space of complex-valued characters).\r\n\r\nWe first prove it for `ZMod n` and then extend to all finite abelian groups using the Structure Theorem.\r\n\r\nFrom LeanAPAP\r\n\r\nCo-authored-by Bhavik Mehta <bhavikmehta8@gmail.com>\r\n\r\n---\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nFor details on the \"pull request lifecycle\" in mathlib, please see:\r\nhttps://leanprover-community.github.io/contribute/index.html\r\n\r\nIn particular, note that most reviewers will only notice your PR\r\nif it passes the continuous integration checks.\r\nPlease ask for help on https://leanprover.zulipchat.com if needed.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nIf you are moving or deleting declarations, please include these lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nMoves:\r\n- Vector.* -> Mathlib.Vector.*\r\n- ...\r\n\r\nDeletions:\r\n- Nat.bit1_add_bit1\r\n- ...\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n\r\n-->\r\n- [x] depends on: #15441\r\n- [x] depends on: #16447\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 6,
        "closed": true,
        "closedAt": "2024-11-11T10:06:31Z",
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c6JBLCm",
              "body": "‚ö†Ô∏è The sha of the head commit of this PR conflicts with #15441. Mergify cannot evaluate rules on this PR. ‚ö†Ô∏è",
              "createdAt": "2024-08-20T12:51:35Z",
              "author": {
                "login": "mergify"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6JBLH1",
              "body": "### PR summary [5df6f114fd](https://github.com/leanprover-community/mathlib4/pull/15999/commits/5df6f114fdb1419dcf14d417851ffbc205d446be)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n| `Mathlib.Analysis.Fourier.FiniteAbelian.Orthogonality`|1728|\n| `Mathlib.Analysis.Fourier.FiniteAbelian.PontryaginDuality`|2009|\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ card_addChar_le`\n`+ card_eq`\n`+ circleEquivComplex`\n`+ coe_complexBasis`\n`+ coe_doubleDualEquiv`\n`+ complexBasis`\n`+ complexBasis_apply`\n`+ doubleDualEmb_bijective`\n`+ doubleDualEmb_doubleDualEquiv_symm_apply`\n`+ doubleDualEmb_eq_zero`\n`+ doubleDualEmb_inj`\n`+ doubleDualEmb_injective`\n`+ doubleDualEmb_ne_zero`\n`+ doubleDualEquiv`\n`+ doubleDualEquiv_symm_doubleDualEmb_apply`\n`+ exists_apply_ne_zero`\n`+ exp_inj`\n`+ expect_apply_eq_ite`\n`+ expect_apply_eq_zero_iff_ne_zero`\n`+ expect_apply_ne_zero_iff_eq_zero`\n`+ expect_eq_ite`\n`+ expect_eq_zero_iff_ne_zero`\n`+ expect_ne_zero_iff_eq_zero`\n`+ forall_apply_eq_zero`\n`+ instFintype`\n`+ linearIndependent`\n`+ mul_modEq_mul_left`\n`+ mul_modEq_mul_right`\n`+ sum_apply_eq_ite`\n`+ sum_apply_eq_zero_iff_ne_zero`\n`+ sum_apply_ne_zero_iff_eq_zero`\n`+ wInner_cWeight_eq_boole`\n`+ wInner_cWeight_eq_one_iff_eq`\n`+ wInner_cWeight_eq_zero_iff_ne`\n`+ wInner_cWeight_self`\n`+ zmod`\n`+ zmodAddEquiv`\n`+ zmodAddEquiv_apply`\n`+ zmodHom`\n`+ zmod_add`\n`+ zmod_inj`\n`+ zmod_injective`\n`+ zmod_intCast`\n`+ zmod_zero`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>",
              "createdAt": "2024-08-20T12:51:46Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6Pf1V2",
              "body": "This PR/issue depends on:\n* ~~leanprover-community/mathlib4#15441~~\n* ~~leanprover-community/mathlib4#16447~~\nBy **[Dependent Issues](https://github.com/z0al/dependent-issues)** (ü§ñ). Happy coding!\n<!-- By Dependent Issues (Action) - DO NOT REMOVE -->",
              "createdAt": "2024-10-11T14:03:55Z",
              "author": {
                "login": "mathlib4-dependent-issues-bot"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6S957t",
              "body": "maintainer delegate\r\n",
              "createdAt": "2024-11-08T20:31:13Z",
              "author": {
                "login": "MichaelStollBayreuth"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6S96Bv",
              "body": "üöÄ Pull request has been placed on the maintainer queue by MichaelStollBayreuth.",
              "createdAt": "2024-11-08T20:31:32Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6TFOTh",
              "body": "Build failed (retrying...):\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/11775346389/job/32795619042)",
              "createdAt": "2024-11-11T09:14:25Z",
              "author": {
                "login": "mathlib-bors"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6TFUWj",
              "body": "Canceled.",
              "createdAt": "2024-11-11T09:26:30Z",
              "author": {
                "login": "mathlib-bors"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6TFcLE",
              "body": "As this PR is labelled `auto-merge-after-CI`, we are now sending it to bors:\n\nbors merge",
              "createdAt": "2024-11-11T09:42:12Z",
              "author": {
                "login": "leanprover-community-mathlib4-bot"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6TFq_T",
              "body": "Pull request successfully merged into master.\n\nBuild succeeded:\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/11776016713/job/32797576634)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/11776016713/job/32797577151)",
              "createdAt": "2024-11-11T10:06:30Z",
              "author": {
                "login": "mathlib-bors"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "fb1e17a276fb8f39f9580d612089ec268067cd19",
                "additions": 309,
                "deletions": 2,
                "committedDate": "2024-11-11T09:24:44Z",
                "author": {
                  "name": "Ya√´l Dillies",
                  "email": "yael.dillies@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "5df6f114fdb1419dcf14d417851ffbc205d446be",
                "additions": 1,
                "deletions": 1,
                "committedDate": "2024-11-11T09:26:20Z",
                "author": {
                  "name": "Ya√´l Dillies",
                  "email": "yael.dillies@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHotZjzQ",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11775731016/job/32796730317"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHotZj5A",
                        "name": "build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11775731013/job/32796730340"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHotZcvw",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11775730331/job/32796728511"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHotZfVA",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11775730333/job/32796729172"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHotZj8g",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11775731015/job/32796730354"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHotZflA",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11775730331/job/32796729236"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHotZckQ",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11775730333/job/32796728465"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHotZlCA",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11775731015/job/32796730632"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHotZeOA",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11775730331/job/32796728888"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHotZeDw",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11775730333/job/32796728847"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHotZgzg",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11775730331/job/32796729550"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHouF74A",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11775730333/job/32797457376"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHotaZ3Q",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/32796744157"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHotbM1A",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=15999&login=leanprover-community&repository=mathlib4"
                      },
                      {
                        "__typename": "StatusContext",
                        "id": "SC_kwDOFcwZ1c8AAAAHkYB7Ew",
                        "context": "bors",
                        "state": "SUCCESS",
                        "targetUrl": "https://mathlib-bors-ca18eefec4cb.herokuapp.com/batches/7289",
                        "description": "Build succeeded"
                      }
                    ]
                  }
                }
              }
            }
          ]
        },
        "createdAt": "2024-08-20T12:50:59Z",
        "deletions": 2,
        "files": {
          "nodes": [
            {
              "path": "Mathlib.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/Algebra/ModEq.lean",
              "additions": 11,
              "deletions": 0
            },
            {
              "path": "Mathlib/Analysis/Fourier/AddCircle.lean",
              "additions": 0,
              "deletions": 1
            },
            {
              "path": "Mathlib/Analysis/Fourier/FiniteAbelian/Orthogonality.lean",
              "additions": 86,
              "deletions": 0
            },
            {
              "path": "Mathlib/Analysis/Fourier/FiniteAbelian/PontryaginDuality.lean",
              "additions": 206,
              "deletions": 0
            },
            {
              "path": "Mathlib/Analysis/SpecialFunctions/Complex/Circle.lean",
              "additions": 4,
              "deletions": 1
            }
          ]
        },
        "headRefName": "pontryagin_duality_finite_abelian",
        "headRefOid": "5df6f114fdb1419dcf14d417851ffbc205d446be",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c542pEN",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
              "color": "06e039",
              "name": "ready-to-merge"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABViJeVg",
              "color": "33DBEC",
              "name": "t-analysis"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABWsHQeA",
              "color": "bfdadc",
              "name": "auto-merge-after-CI"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABh1mAHA",
              "color": "6BEB7E",
              "name": "maintainer-merge"
            }
          ]
        },
        "latestReviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c6Qk4mD",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "MichaelStollBayreuth"
              },
              "submittedAt": "2024-11-09T21:11:06Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6QiNUM",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "b-mehta"
              },
              "submittedAt": "2024-11-08T20:41:23Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6QoKx4",
              "body": "Thanks :tada:\r\n\r\nbors merge",
              "state": "COMMENTED",
              "author": {
                "login": "jcommelin"
              },
              "submittedAt": "2024-11-11T08:57:44Z"
            }
          ]
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "UNKNOWN",
        "mergeable": "UNKNOWN",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 15999,
        "potentialMergeCommit": null,
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": "APPROVED",
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c6IPjq0",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "b-mehta"
              },
              "submittedAt": "2024-09-06T10:03:29Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6IPkmh",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "b-mehta"
              },
              "submittedAt": "2024-09-06T10:04:39Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6M2ThV",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2024-10-11T15:13:24Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6QhSoD",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "MichaelStollBayreuth"
              },
              "submittedAt": "2024-11-08T18:46:56Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6QhUCO",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "MichaelStollBayreuth"
              },
              "submittedAt": "2024-11-08T18:49:33Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6QhWiC",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "MichaelStollBayreuth"
              },
              "submittedAt": "2024-11-08T18:55:17Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6QhXi_",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "MichaelStollBayreuth"
              },
              "submittedAt": "2024-11-08T18:56:45Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6Qh76N",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "MichaelStollBayreuth"
              },
              "submittedAt": "2024-11-08T19:56:25Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6Qh8XB",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "MichaelStollBayreuth"
              },
              "submittedAt": "2024-11-08T19:57:32Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6QiIJA",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "MichaelStollBayreuth"
              },
              "submittedAt": "2024-11-08T20:25:30Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6QiJXE",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "MichaelStollBayreuth"
              },
              "submittedAt": "2024-11-08T20:29:11Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6QiJtU",
              "body": "LGTM, modulo one golf and a couple minor style issues.",
              "state": "APPROVED",
              "author": {
                "login": "MichaelStollBayreuth"
              },
              "submittedAt": "2024-11-08T20:30:16Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6QiNG3",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "b-mehta"
              },
              "submittedAt": "2024-11-08T20:40:44Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6QiNUM",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "b-mehta"
              },
              "submittedAt": "2024-11-08T20:41:23Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6QiR9U",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "MichaelStollBayreuth"
              },
              "submittedAt": "2024-11-08T20:56:13Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6Qk2ZT",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2024-11-09T20:31:06Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6Qk27i",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2024-11-09T20:40:56Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6Qk2_t",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2024-11-09T20:42:54Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6Qk4mD",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "MichaelStollBayreuth"
              },
              "submittedAt": "2024-11-09T21:11:06Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6QoKx4",
              "body": "Thanks :tada:\r\n\r\nbors merge",
              "state": "COMMENTED",
              "author": {
                "login": "jcommelin"
              },
              "submittedAt": "2024-11-11T08:57:44Z"
            }
          ]
        },
        "reviewThreads": {
          "nodes": [
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5oHyee",
                    "body": "We should relate this def to the ones below, eg toCircle. I think that one is a composition of this and the (not really) canonical map from ZMod N to R given by x -> x/N",
                    "createdAt": "2024-09-06T10:03:29Z",
                    "author": {
                      "login": "b-mehta"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5oHyzO",
                    "body": "Is it any better to write this in terms of `toCircle`? It's a group hom in ZMod n composed with that; maybe this also saves some of the lemmas above",
                    "createdAt": "2024-09-06T10:04:39Z",
                    "author": {
                      "login": "b-mehta"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5rHZFc",
                    "body": "It is better!",
                    "createdAt": "2024-10-11T15:13:24Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5tXlMR",
                    "body": "```suggestion\r\n  simp only [Fintype.expect_eq_sum_div_card, AddChar.sum_eq_ite œà, h, ‚ÜìreduceIte, zero_div]\r\n```\r\nThere is already some API for `AddChar`s...",
                    "createdAt": "2024-11-08T18:46:56Z",
                    "author": {
                      "login": "MichaelStollBayreuth"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5tXmFk",
                    "body": "```suggestion\r\n  exact linearIndependent_of_ne_zero_of_wInner_cWeight_eq_zero AddChar.coe_ne_zero\r\n    fun œà‚ÇÅ œà‚ÇÇ ‚Ü¶ wInner_cWeight_eq_zero_iff_ne.2\r\n```",
                    "createdAt": "2024-11-08T18:49:33Z",
                    "author": {
                      "login": "MichaelStollBayreuth"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5tXnb8",
                    "body": "```suggestion\r\n  intro x y h\r\n```",
                    "createdAt": "2024-11-08T18:55:16Z",
                    "author": {
                      "login": "MichaelStollBayreuth"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5tZ8qp",
                    "body": "I don't really see the point of learning when to use `intro` when it is strictly weaker than `rintro`. If you ask me, I would be very happy for mathlib to make `intro` notation for `rintro`",
                    "createdAt": "2024-11-09T20:31:05Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5tZ-2p",
                    "body": "OK; I don't insist...",
                    "createdAt": "2024-11-09T21:11:06Z",
                    "author": {
                      "login": "MichaelStollBayreuth"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5tXnxS",
                    "body": "```suggestion\r\n  have hn : (n : ‚Ñù) ‚â† 0 := mod_cast NeZero.ne n\r\n```\r\n`replace` does not make sense here; there is no previous `hn` in context.",
                    "createdAt": "2024-11-08T18:56:44Z",
                    "author": {
                      "login": "MichaelStollBayreuth"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5tX9SE",
                    "body": "With the additional imports\r\n```lean\r\nimport Mathlib.GroupTheory.FiniteAbelian.Duality\r\nimport Mathlib.RingTheory.RootsOfUnity.AlgebraicallyClosed\r\nimport Mathlib.Analysis.Complex.Polynomial.Basic\r\n```\r\none can use the results on homomorphisms from finite abelian multiplicative groups into monoids with enough roots of unity, as follows.\r\n```lean\r\nvariable (Œ±) in\r\n/-- The additive isomorphism from `AddChar Œ± M` to homomorphisms from `Multiplicative Œ±` to `MÀ£`. -/\r\ndef mulEquivMultiplicativeMonoidHom (M) [CommMonoid M] :\r\n    Multiplicative (AddChar Œ± M) ‚âÉ* (Multiplicative Œ± ‚Üí* MÀ£) :=\r\n  let e : Multiplicative (AddChar Œ± M) ‚âÉ* AddChar Œ± M :=\r\n    MulEquiv.mk' Additive.ofMul fun _ _ ‚Ü¶ rfl\r\n  let e‚ÇÄ : (Multiplicative Œ± ‚Üí* M) ‚âÉ* (Multiplicative Œ± ‚Üí* MÀ£) := {\r\n    toFun := MonoidHom.toHomUnits\r\n    invFun := fun œÜ ‚Ü¶ (Units.coeHom _).comp œÜ\r\n    left_inv := fun œÜ ‚Ü¶ by ext; simp\r\n    right_inv := fun œÜ ‚Ü¶ by ext; simp\r\n    map_mul' := fun œÜ œà ‚Ü¶ by ext; simp\r\n  }\r\n  e.trans <| toMonoidHomMulEquiv.trans e‚ÇÄ\r\n\r\nvariable (Œ±) in\r\n/-- The group of complex-valued additive characters on a finite abelian group is\r\n(noncanonically) isomorphic to itself. -/\r\nlemma addEquiv_self [Finite Œ±] : Nonempty (AddChar Œ± ‚ÑÇ ‚âÉ+ Œ±) :=\r\n  let e := (CommGroup.mulEquiv_monoidHom_of_hasEnoughRootsOfUnity (Multiplicative Œ±) ‚ÑÇ).some\r\n  let e' := (mulEquivMultiplicativeMonoidHom Œ± ‚ÑÇ).trans e.symm\r\n  ‚ü®AddEquiv.toMultiplicative.symm e'‚ü©\r\n\r\n@[simp] lemma card_eq [Fintype Œ±] : card (AddChar Œ± ‚ÑÇ) = card Œ± :=\r\n  Fintype.card_congr (addEquiv_self Œ±).some.toEquiv\r\n```",
                    "createdAt": "2024-11-08T19:56:25Z",
                    "author": {
                      "login": "MichaelStollBayreuth"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5tYElo",
                    "body": "After looking through the remainder of the file, I've come to the conclusion that one would need quite a few more API lemmas for the translation between additive characters and the multiplicative homomorphisms. Probably there is an easier way than what I tried to do here, but this would require more thought. So for now, I think it is fine to leave things here as they are.\r\n\r\n(You could possibly consider replacing the complex numbers by a monoid with enough roots of unity in places where you do not need the additive structure or other properties.)",
                    "createdAt": "2024-11-08T20:29:11Z",
                    "author": {
                      "login": "MichaelStollBayreuth"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5tYHEU",
                    "body": "Do you think there should be a TODO in this file so it doesn't get forgotten? Or do you think the linkage here isn't worth it in general",
                    "createdAt": "2024-11-08T20:41:23Z",
                    "author": {
                      "login": "b-mehta"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5tYJ9b",
                    "body": "I think it would be good to have API for the linkage that is easy to use, but I won't have time for it. A TODO would make sense, I assume.",
                    "createdAt": "2024-11-08T20:56:13Z",
                    "author": {
                      "login": "MichaelStollBayreuth"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5tZ9Rb",
                    "body": "Left a TODO",
                    "createdAt": "2024-11-09T20:42:53Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5tX9ix",
                    "body": "One could then golf this to\r\n```lean\r\ndef zmodAddEquiv : ZMod n ‚âÉ+ AddChar (ZMod n) ‚ÑÇ :=\r\n  addEquiv_self (ZMod n) |>.some.symm\r\n```\r\nbut I assume you what the specific isomorphism here.",
                    "createdAt": "2024-11-08T19:57:32Z",
                    "author": {
                      "login": "MichaelStollBayreuth"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5tYG8T",
                    "body": "Yes, the actual isomorphism here was definitely used in the original application of this code about a year and a half ago; I'm pretty sure it's useful in the application in LeanAPAP too.",
                    "createdAt": "2024-11-08T20:40:44Z",
                    "author": {
                      "login": "b-mehta"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5tZ9MV",
                    "body": "I actually don't think we ever use the specific isomorphism, no",
                    "createdAt": "2024-11-09T20:40:56Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5tYD1O",
                    "body": "It should be possible to reduce this to `CommGroup.exists_apply_ne_one_of_hasEnoughRootsOfUnity (Multiplicative Œ±) ‚ÑÇ`, but it looks like this requires building some API for `mulEquivMultiplicativeMonoidHom ` from above (and possibly variants).\r\n\r\nSo, on further thought, I think it is not worth the trouble, and it is OK to leave the code basically as is.",
                    "createdAt": "2024-11-08T20:25:30Z",
                    "author": {
                      "login": "MichaelStollBayreuth"
                    }
                  }
                ]
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjE0MDkwNTkz",
              "login": "YaelDillies"
            },
            {
              "id": "U_kgDOCsITAQ",
              "login": "mathlib4-dependent-issues-bot"
            },
            {
              "id": "U_kgDOBfNrCg",
              "login": "MichaelStollBayreuth"
            },
            {
              "id": "U_kgDOB75MNQ",
              "login": "leanprover-community-mathlib4-bot"
            },
            {
              "id": "MDQ6VXNlcjU2MzY3MDU=",
              "login": "jcommelin"
            },
            {
              "id": "MDQ6VXNlcjI5OTU5MjI2",
              "login": "b-mehta"
            },
            {
              "id": "U_kgDOBcsTTQ",
              "login": "leanprover-community-bot-assistant"
            }
          ]
        },
        "state": "CLOSED",
        "statusCheckRollup": {
          "contexts": {
            "nodes": [
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHotZjzQ",
                "name": "label-and-report-new-contributor",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11775731016/job/32796730317"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHotZj5A",
                "name": "build",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11775731013/job/32796730340"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHotZcvw",
                "name": "Cancel Previous Runs (CI)",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11775730331/job/32796728511"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHotZfVA",
                "name": "Cancel Previous Runs (CI)",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11775730333/job/32796729172"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHotZj8g",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11775731015/job/32796730354"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHotZflA",
                "name": "Lint style (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11775730331/job/32796729236"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHotZckQ",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11775730333/job/32796728465"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHotZlCA",
                "name": "Check all files imported",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11775731015/job/32796730632"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHotZeOA",
                "name": "Build (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11775730331/job/32796728888"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHotZeDw",
                "name": "Build",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11775730333/job/32796728847"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHotZgzg",
                "name": "Post-CI job (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11775730331/job/32796729550"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHouF74A",
                "name": "Post-CI job",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11775730333/job/32797457376"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHotaZ3Q",
                "name": "New Contributor Check",
                "conclusion": "NEUTRAL",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/32796744157"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHotbM1A",
                "name": "Summary",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=15999&login=leanprover-community&repository=mathlib4"
              },
              {
                "__typename": "StatusContext",
                "id": "SC_kwDOFcwZ1c8AAAAHkYB7Ew",
                "context": "bors",
                "state": "SUCCESS",
                "targetUrl": "https://mathlib-bors-ca18eefec4cb.herokuapp.com/batches/7289",
                "description": "Build succeeded"
              }
            ]
          }
        },
        "title": "[Merged by Bors] - feat: Pontryagin duality for finite abelian groups",
        "updatedAt": "2024-11-11T10:06:36Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/15999",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6TjjdLzwAAAAM_Ke9y",
              "createdAt": "2024-08-20T12:50:59Z",
              "label": {
                "id": "MDU6TGFiZWwzMjg4OTQyMDg2",
                "name": "blocked-by-other-PR"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6TjjdLzwAAAAM_Ke94",
              "createdAt": "2024-08-20T12:50:59Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABViJeVg",
                "name": "t-analysis"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6JBLCm",
              "createdAt": "2024-08-20T12:51:35Z",
              "body": "‚ö†Ô∏è The sha of the head commit of this PR conflicts with #15441. Mergify cannot evaluate rules on this PR. ‚ö†Ô∏è",
              "author": {
                "login": "mergify"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6JBLH1",
              "createdAt": "2024-08-20T12:51:46Z",
              "body": "### PR summary [5df6f114fd](https://github.com/leanprover-community/mathlib4/pull/15999/commits/5df6f114fdb1419dcf14d417851ffbc205d446be)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n| `Mathlib.Analysis.Fourier.FiniteAbelian.Orthogonality`|1728|\n| `Mathlib.Analysis.Fourier.FiniteAbelian.PontryaginDuality`|2009|\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ card_addChar_le`\n`+ card_eq`\n`+ circleEquivComplex`\n`+ coe_complexBasis`\n`+ coe_doubleDualEquiv`\n`+ complexBasis`\n`+ complexBasis_apply`\n`+ doubleDualEmb_bijective`\n`+ doubleDualEmb_doubleDualEquiv_symm_apply`\n`+ doubleDualEmb_eq_zero`\n`+ doubleDualEmb_inj`\n`+ doubleDualEmb_injective`\n`+ doubleDualEmb_ne_zero`\n`+ doubleDualEquiv`\n`+ doubleDualEquiv_symm_doubleDualEmb_apply`\n`+ exists_apply_ne_zero`\n`+ exp_inj`\n`+ expect_apply_eq_ite`\n`+ expect_apply_eq_zero_iff_ne_zero`\n`+ expect_apply_ne_zero_iff_eq_zero`\n`+ expect_eq_ite`\n`+ expect_eq_zero_iff_ne_zero`\n`+ expect_ne_zero_iff_eq_zero`\n`+ forall_apply_eq_zero`\n`+ instFintype`\n`+ linearIndependent`\n`+ mul_modEq_mul_left`\n`+ mul_modEq_mul_right`\n`+ sum_apply_eq_ite`\n`+ sum_apply_eq_zero_iff_ne_zero`\n`+ sum_apply_ne_zero_iff_eq_zero`\n`+ wInner_cWeight_eq_boole`\n`+ wInner_cWeight_eq_one_iff_eq`\n`+ wInner_cWeight_eq_zero_iff_ne`\n`+ wInner_cWeight_self`\n`+ zmod`\n`+ zmodAddEquiv`\n`+ zmodAddEquiv_apply`\n`+ zmodHom`\n`+ zmod_add`\n`+ zmod_inj`\n`+ zmod_injective`\n`+ zmod_intCast`\n`+ zmod_zero`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6TjjdLzwAAAANJDfhp",
              "createdAt": "2024-09-03T07:32:18Z",
              "label": {
                "id": "MDU6TGFiZWwzMjg4OTQyMDg2",
                "name": "blocked-by-other-PR"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6TjjdLzwAAAANJEtU1",
              "createdAt": "2024-09-03T07:57:10Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6TjjdLzwAAAANJE9SV",
              "createdAt": "2024-09-03T08:01:59Z"
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6TjjdLzwAAAANJFRoA",
              "createdAt": "2024-09-03T08:08:04Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6TjjdLzwAAAANJQSfh",
              "createdAt": "2024-09-03T11:47:09Z",
              "label": {
                "id": "MDU6TGFiZWwzMjg4OTQyMDg2",
                "name": "blocked-by-other-PR"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6IPjq0",
              "createdAt": "2024-09-06T10:03:28Z",
              "body": "",
              "author": {
                "login": "b-mehta"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6IPkmh",
              "createdAt": "2024-09-06T10:04:39Z",
              "body": "",
              "author": {
                "login": "b-mehta"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6TjjdLzwAAAANmyOpq",
              "createdAt": "2024-10-11T14:03:53Z",
              "label": {
                "id": "MDU6TGFiZWwzMjg4OTQyMDg2",
                "name": "blocked-by-other-PR"
              }
            },
            {
              "__typename": "CommentDeletedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6Pf1V2",
              "createdAt": "2024-10-11T14:03:55Z",
              "body": "This PR/issue depends on:\n* ~~leanprover-community/mathlib4#15441~~\n* ~~leanprover-community/mathlib4#16447~~\nBy **[Dependent Issues](https://github.com/z0al/dependent-issues)** (ü§ñ). Happy coding!\n<!-- By Dependent Issues (Action) - DO NOT REMOVE -->",
              "author": {
                "login": "mathlib4-dependent-issues-bot"
              }
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6TjjdLzwAAAANm36Kn",
              "createdAt": "2024-10-11T15:13:21Z"
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6TjjdLzwAAAANnXYnK",
              "createdAt": "2024-10-13T09:00:21Z"
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6TjjdLzwAAAANxcxjF",
              "createdAt": "2024-10-22T15:53:11Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6TjjdLzwAAAANxeVmN",
              "createdAt": "2024-10-22T16:17:00Z"
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6TjjdLzwAAAANxfEgn",
              "createdAt": "2024-10-22T16:29:11Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5jTuaX",
              "createdAt": "2024-11-07T21:18:20Z",
              "source": {
                "id": "PR_kwDOFcwZ1c6BPLpP",
                "title": "[Merged by Bors] - feat(GroupTheory/FiniteAbelian/Duality): new file",
                "url": "https://github.com/leanprover-community/mathlib4/pull/18738"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6QhSoD",
              "createdAt": "2024-11-08T18:46:55Z",
              "body": "",
              "author": {
                "login": "MichaelStollBayreuth"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6QhUCO",
              "createdAt": "2024-11-08T18:49:33Z",
              "body": "",
              "author": {
                "login": "MichaelStollBayreuth"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6QhWiC",
              "createdAt": "2024-11-08T18:55:16Z",
              "body": "",
              "author": {
                "login": "MichaelStollBayreuth"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6QhXi_",
              "createdAt": "2024-11-08T18:56:44Z",
              "body": "",
              "author": {
                "login": "MichaelStollBayreuth"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6Qh76N",
              "createdAt": "2024-11-08T19:56:25Z",
              "body": "",
              "author": {
                "login": "MichaelStollBayreuth"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6Qh8XB",
              "createdAt": "2024-11-08T19:57:32Z",
              "body": "",
              "author": {
                "login": "MichaelStollBayreuth"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6QiIJA",
              "createdAt": "2024-11-08T20:25:30Z",
              "body": "",
              "author": {
                "login": "MichaelStollBayreuth"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6QiJtU",
              "createdAt": "2024-11-08T20:30:16Z",
              "body": "LGTM, modulo one golf and a couple minor style issues.",
              "author": {
                "login": "MichaelStollBayreuth"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6S957t",
              "createdAt": "2024-11-08T20:31:13Z",
              "body": "maintainer delegate\r\n",
              "author": {
                "login": "MichaelStollBayreuth"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6S96Bv",
              "createdAt": "2024-11-08T20:31:32Z",
              "body": "üöÄ Pull request has been placed on the maintainer queue by MichaelStollBayreuth.",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6TjjdLzwAAAAOLivtY",
              "createdAt": "2024-11-08T20:31:33Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABh1mAHA",
                "name": "maintainer-merge"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6QoKx4",
              "createdAt": "2024-11-11T08:57:44Z",
              "body": "Thanks :tada:\r\n\r\nbors merge",
              "author": {
                "login": "jcommelin"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6TjjdLzwAAAAOMwepP",
              "createdAt": "2024-11-11T08:57:55Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
                "name": "ready-to-merge"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6TFOTh",
              "createdAt": "2024-11-11T09:14:25Z",
              "body": "Build failed (retrying...):\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/11775346389/job/32795619042)",
              "author": {
                "login": "mathlib-bors"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6TjjdLzwAAAAOMx-1u",
              "createdAt": "2024-11-11T09:26:28Z"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6TFUWj",
              "createdAt": "2024-11-11T09:26:30Z",
              "body": "Canceled.",
              "author": {
                "login": "mathlib-bors"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6TjjdLzwAAAAOMx_g7",
              "createdAt": "2024-11-11T09:26:41Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABWsHQeA",
                "name": "auto-merge-after-CI"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6TFcLE",
              "createdAt": "2024-11-11T09:42:12Z",
              "body": "As this PR is labelled `auto-merge-after-CI`, we are now sending it to bors:\n\nbors merge",
              "author": {
                "login": "leanprover-community-mathlib4-bot"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6TFq_T",
              "createdAt": "2024-11-11T10:06:30Z",
              "body": "Pull request successfully merged into master.\n\nBuild succeeded:\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/11776016713/job/32797576634)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/11776016713/job/32797577151)",
              "author": {
                "login": "mathlib-bors"
              }
            },
            {
              "__typename": "RenamedTitleEvent"
            },
            {
              "__typename": "ClosedEvent",
              "id": "CE_lADOFcwZ1c6TjjdLzwAAAAOM0NTY",
              "createdAt": "2024-11-11T10:06:31Z"
            },
            {
              "__typename": "HeadRefDeletedEvent",
              "id": "HRDE_lADOFcwZ1c6TjjdLzwAAAAOM0NmN",
              "createdAt": "2024-11-11T10:06:36Z"
            },
            {
              "__typename": "ReferencedEvent"
            }
          ]
        }
      }
    }
  }
}
