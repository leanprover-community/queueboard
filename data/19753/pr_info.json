{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 5,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "Julian"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "https://leanprover.zulipchat.com/#narrow/channel/287929-mathlib4/topic/calculating.20multiplicities/near/486380567\r\n\r\n---\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nFor details on the \"pull request lifecycle\" in mathlib, please see:\r\nhttps://leanprover-community.github.io/contribute/index.html\r\n\r\nIn particular, note that most reviewers will only notice your PR\r\nif it passes the continuous integration checks.\r\nPlease ask for help on https://leanprover.zulipchat.com if needed.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nIf you are moving or deleting declarations, please include these lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nMoves:\r\n- Vector.* -> Mathlib.Vector.*\r\n- ...\r\n\r\nDeletions:\r\n- Nat.bit1_add_bit1\r\n- ...\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n\r\n-->\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 1,
        "closed": false,
        "closedAt": null,
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c6WS2Py",
              "body": "### PR summary [b0ce30989a](https://github.com/leanprover-community/mathlib4/pull/19753/commits/b0ce30989a48fd07c7e13c64152865e11a65c6b4)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n\n</details>\n\n---\n\n#### Declarations diff\n\n`+ emultiplicity_eq_ofNat`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n---\n\n<details><summary>No changes to technical debt.</summary>\n\nYou can run this locally as\n```\n./scripts/technical-debt-metrics.sh pr_summary\n```\n* The `relative` value is the weighted *sum* of the differences with weight given by the *inverse* of the current value of the statistic.\n* The `absolute` value is the `relative` value divided by the total sum of the inverses of the current values (i.e. the weighted *average* of the differences).\n</details>",
              "createdAt": "2024-12-05T21:47:49Z",
              "author": {
                "login": "github-actions"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "b0ce30989a48fd07c7e13c64152865e11a65c6b4",
                "additions": 5,
                "deletions": 0,
                "committedDate": "2024-12-06T15:43:35Z",
                "author": {
                  "name": "Julian Berman",
                  "email": "Julian@GrayVines.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH7RBYzQ",
                        "name": "Fix style issues from lint",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12202111009/job/34042042573"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIFifaFQ",
                        "name": "Fix style issues from lint",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12438826796/job/34731448853"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIFiiCMA",
                        "name": "Fix style issues from lint",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12438842385/job/34731491888"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIFi4PQQ",
                        "name": "Fix style issues from lint",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12438963065/job/34731855681"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH7RBYTA",
                        "name": "Add ready-to-merge or delegated label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12202111016/job/34042042444"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIFifZtQ",
                        "name": "Add ready-to-merge or delegated label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12438826798/job/34731448757"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIFiiCJg",
                        "name": "Add ready-to-merge or delegated label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12438842384/job/34731491878"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIFi4ONA",
                        "name": "Add ready-to-merge or delegated label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12438963048/job/34731855412"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH7P1H0A",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12201735146/job/34040793040"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH7RBYxg",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12202111013/job/34042042566"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIFifZEw",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12438826797/job/34731448595"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIFiiCJQ",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12438842390/job/34731491877"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIFi4OdA",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12438963044/job/34731855476"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH7P1HhQ",
                        "name": "post-or-update-summary-comment",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12201735143/job/34040792965"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH7P1Edw",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12201734798/job/34040792183"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH7P1GUA",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12201734805/job/34040792656"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH7P1GtA",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12201735133/job/34040792756"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH7P1ILA",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12201734798/job/34040793132"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH7P1DXQ",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12201734805/job/34040791901"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH7P1IVg",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12201735133/job/34040793174"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH7P1GVQ",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12201734798/job/34040792661"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH7P1E_Q",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12201734805/job/34040792317"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH7P1JpQ",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12201734798/job/34040793509"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH7RSPjA",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12201734805/job/34042318732"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH7P1hGA",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/34040799512"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAH7P5BxA",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=19753&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            }
          ]
        },
        "createdAt": "2024-12-05T21:46:55Z",
        "deletions": 0,
        "files": {
          "nodes": [
            {
              "path": "Mathlib/RingTheory/Multiplicity.lean",
              "additions": 5,
              "deletions": 0
            }
          ]
        },
        "headRefName": "emultiplicity-of-nat",
        "headRefOid": "b0ce30989a48fd07c7e13c64152865e11a65c6b4",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c6EPgoj",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c8AAAABViJjTQ",
              "color": "33DBEC",
              "name": "t-algebra"
            }
          ]
        },
        "latestReviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c6UAHH3",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "mattrobball"
              },
              "submittedAt": "2024-12-05T21:53:56Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6UB8oT",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "Command-Master"
              },
              "submittedAt": "2024-12-06T03:30:45Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6UIB_m",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "urkud"
              },
              "submittedAt": "2024-12-06T15:29:40Z"
            }
          ]
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "BLOCKED",
        "mergeable": "MERGEABLE",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 19753,
        "potentialMergeCommit": {
          "oid": "024f7d947749761762c62cb29ea386f453a3a38d"
        },
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": null,
        "reviewRequests": {
          "nodes": [
            {
              "requestedReviewer": {
                "id": "MDQ6VXNlcjQyNTI2MA==",
                "login": "eric-wieser"
              }
            }
          ]
        },
        "reviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c6UAHH3",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "mattrobball"
              },
              "submittedAt": "2024-12-05T21:53:56Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6UAp3Z",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "Julian"
              },
              "submittedAt": "2024-12-05T23:11:29Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6UB8oT",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "Command-Master"
              },
              "submittedAt": "2024-12-06T03:30:45Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6UH9dn",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "Julian"
              },
              "submittedAt": "2024-12-06T15:22:27Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6UIB_m",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "urkud"
              },
              "submittedAt": "2024-12-06T15:29:40Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6UIgRG",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "Julian"
              },
              "submittedAt": "2024-12-06T16:08:04Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6WG1D0",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2024-12-20T21:35:54Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6WG1Xn",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2024-12-20T21:37:16Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6WG4RN",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "Julian"
              },
              "submittedAt": "2024-12-20T21:49:27Z"
            }
          ]
        },
        "reviewThreads": {
          "nodes": [
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5vl57i",
                    "body": "Do we need `no_index` here if we are not adding this as a `simp` theorem? ",
                    "createdAt": "2024-12-05T21:53:56Z",
                    "author": {
                      "login": "mattrobball"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5vmNWe",
                    "body": "Aha, interesting, seems like not, removed. Thanks!",
                    "createdAt": "2024-12-05T23:11:29Z",
                    "author": {
                      "login": "Julian"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5vnGuy",
                    "body": "It could still be used with `simp [enultiplicity_eq_ofNat]`, so maybe it should be kept ",
                    "createdAt": "2024-12-06T03:30:45Z",
                    "author": {
                      "login": "Command-Master"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5vq2au",
                    "body": "Now that I looked, I found a decent number of similar non-simp lemmas with it now (e.g. `floor_add_ofNat`, `ceil_add_ofNat`, `PosSemidef.ofNat`, ...) so I've put it back, presumably for the reason you mention, though I'm obviously happy to follow whatever you tell me to do if preferred.",
                    "createdAt": "2024-12-06T15:22:27Z",
                    "author": {
                      "login": "Julian"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5vq5Lc",
                    "body": "Note that you don't use `ofNat` in the RHS. What do you get (full term, not pretty-printed), if you (a) `rw`; (b) `simp` using this lemma?",
                    "createdAt": "2024-12-06T15:29:40Z",
                    "author": {
                      "login": "urkud"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5vrNqi",
                    "body": "Thanks Yury.\r\n\r\n<details>\r\n\r\n<summary>I get (before and after the rewrite)</summary>\r\n\r\n```\r\n⊢ And (@Dvd.dvd.{0} Nat Nat.instDvd (@OfNat.ofNat.{0} Nat 9 (instOfNatNat 9)) (@OfNat.ofNat.{0} Nat 18 (instOfNatNat 18)))\r\n  (Not\r\n    (@Dvd.dvd.{0} Nat Nat.instDvd (@OfNat.ofNat.{0} Nat 27 (instOfNatNat 27))\r\n      (@OfNat.ofNat.{0} Nat 18 (instOfNatNat 18))))\r\n\r\n▶ expected type (10:9-10:31)\r\n⊢ ∀ {a b n : Nat} [inst : Nat.AtLeastTwo n],\r\n  Iff\r\n    (@Eq.{1} ENat (@emultiplicity.{0} Nat Nat.instMonoid a b)\r\n      (@OfNat.ofNat.{0} ENat n (@instOfNatAtLeastTwo.{0} ENat n ENat.instNatCast inst)))\r\n    (And\r\n      (@Dvd.dvd.{0} Nat Nat.instDvd\r\n        (@HPow.hPow.{0, 0, 0} Nat Nat Nat (@instHPow.{0, 0} Nat Nat (@Monoid.toNatPow.{0} Nat Nat.instMonoid)) a n) b)\r\n      (Not\r\n        (@Dvd.dvd.{0} Nat Nat.instDvd\r\n          (@HPow.hPow.{0, 0, 0} Nat Nat Nat (@instHPow.{0, 0} Nat Nat (@Monoid.toNatPow.{0} Nat Nat.instMonoid)) a\r\n            (@HAdd.hAdd.{0, 0, 0} Nat Nat Nat (@instHAdd.{0} Nat instAddNat) n\r\n              (@OfNat.ofNat.{0} Nat 1 (instOfNatNat 1))))\r\n          b)))\r\n\r\n-- /Users/julian/Development/mathlib4/foo.lean at 5:3\r\n⊢ @Eq.{1} ENat\r\n  (@emultiplicity.{0} Nat Nat.instMonoid (@OfNat.ofNat.{0} Nat 3 (instOfNatNat 3))\r\n    (@OfNat.ofNat.{0} Nat 18 (instOfNatNat 18)))\r\n  (@OfNat.ofNat.{0} ENat 2\r\n    (@instOfNatAtLeastTwo.{0} ENat 2 ENat.instNatCast (@instNatAtLeastTwo (@OfNat.ofNat.{0} Nat 0 (instOfNatNat 0)))))\r\n\r\n-- /Users/julian/Development/mathlib4/foo.lean at 5:29\r\n⊢ And\r\n  (@Dvd.dvd.{0} Nat Nat.instDvd\r\n    (@HPow.hPow.{0, 0, 0} Nat Nat Nat (@instHPow.{0, 0} Nat Nat (@Monoid.toNatPow.{0} Nat Nat.instMonoid))\r\n      (@OfNat.ofNat.{0} Nat 3 (instOfNatNat 3)) 2)\r\n    (@OfNat.ofNat.{0} Nat 18 (instOfNatNat 18)))\r\n  (Not\r\n    (@Dvd.dvd.{0} Nat Nat.instDvd\r\n      (@HPow.hPow.{0, 0, 0} Nat Nat Nat (@instHPow.{0, 0} Nat Nat (@Monoid.toNatPow.{0} Nat Nat.instMonoid))\r\n        (@OfNat.ofNat.{0} Nat 3 (instOfNatNat 3))\r\n        (@HAdd.hAdd.{0, 0, 0} Nat Nat Nat (@instHAdd.{0} Nat instAddNat) 2 (@OfNat.ofNat.{0} Nat 1 (instOfNatNat 1))))\r\n      (@OfNat.ofNat.{0} Nat 18 (instOfNatNat 18))))\r\n\r\n▶ expected type (5:7-5:29)\r\n⊢ ∀ {a b n : Nat} [inst : Nat.AtLeastTwo n],\r\n  Iff\r\n    (@Eq.{1} ENat (@emultiplicity.{0} Nat Nat.instMonoid a b)\r\n      (@OfNat.ofNat.{0} ENat n (@instOfNatAtLeastTwo.{0} ENat n ENat.instNatCast inst)))\r\n    (And\r\n      (@Dvd.dvd.{0} Nat Nat.instDvd\r\n        (@HPow.hPow.{0, 0, 0} Nat Nat Nat (@instHPow.{0, 0} Nat Nat (@Monoid.toNatPow.{0} Nat Nat.instMonoid)) a n) b)\r\n      (Not\r\n        (@Dvd.dvd.{0} Nat Nat.instDvd\r\n          (@HPow.hPow.{0, 0, 0} Nat Nat Nat (@instHPow.{0, 0} Nat Nat (@Monoid.toNatPow.{0} Nat Nat.instMonoid)) a\r\n            (@HAdd.hAdd.{0, 0, 0} Nat Nat Nat (@instHAdd.{0} Nat instAddNat) n\r\n              (@OfNat.ofNat.{0} Nat 1 (instOfNatNat 1))))\r\n          b)))\r\n\r\n-- /Users/julian/Development/mathlib4/foo.lean at 10:3\r\n⊢ @Eq.{1} ENat\r\n  (@emultiplicity.{0} Nat Nat.instMonoid (@OfNat.ofNat.{0} Nat 3 (instOfNatNat 3))\r\n    (@OfNat.ofNat.{0} Nat 18 (instOfNatNat 18)))\r\n  (@OfNat.ofNat.{0} ENat 2\r\n    (@instOfNatAtLeastTwo.{0} ENat 2 ENat.instNatCast (@instNatAtLeastTwo (@OfNat.ofNat.{0} Nat 0 (instOfNatNat 0)))))\r\n\r\n-- /Users/julian/Development/mathlib4/foo.lean at 10:31\r\n⊢ And (@Dvd.dvd.{0} Nat Nat.instDvd (@OfNat.ofNat.{0} Nat 9 (instOfNatNat 9)) (@OfNat.ofNat.{0} Nat 18 (instOfNatNat 18)))\r\n  (Not\r\n    (@Dvd.dvd.{0} Nat Nat.instDvd (@OfNat.ofNat.{0} Nat 27 (instOfNatNat 27))\r\n      (@OfNat.ofNat.{0} Nat 18 (instOfNatNat 18))))\r\n\r\n▶ expected type (10:9-10:31)\r\n⊢ ∀ {a b n : Nat} [inst : Nat.AtLeastTwo n],\r\n  Iff\r\n    (@Eq.{1} ENat (@emultiplicity.{0} Nat Nat.instMonoid a b)\r\n      (@OfNat.ofNat.{0} ENat n (@instOfNatAtLeastTwo.{0} ENat n ENat.instNatCast inst)))\r\n    (And\r\n      (@Dvd.dvd.{0} Nat Nat.instDvd\r\n        (@HPow.hPow.{0, 0, 0} Nat Nat Nat (@instHPow.{0, 0} Nat Nat (@Monoid.toNatPow.{0} Nat Nat.instMonoid)) a n) b)\r\n      (Not\r\n        (@Dvd.dvd.{0} Nat Nat.instDvd\r\n          (@HPow.hPow.{0, 0, 0} Nat Nat Nat (@instHPow.{0, 0} Nat Nat (@Monoid.toNatPow.{0} Nat Nat.instMonoid)) a\r\n            (@HAdd.hAdd.{0, 0, 0} Nat Nat Nat (@instHAdd.{0} Nat instAddNat) n\r\n              (@OfNat.ofNat.{0} Nat 1 (instOfNatNat 1))))\r\n          b)))\r\n```\r\n\r\n</details>\r\n\r\nIf I change the RHS to be:\r\n\r\n```lean\r\n    emultiplicity a b = (no_index (OfNat.ofNat n) : ℕ∞) ↔\r\n      a ^ (no_index (OfNat.ofNat n) : ℕ) ∣ b ∧ ¬a ^ ((no_index (OfNat.ofNat n) : ℕ) + 1) ∣ b :=\r\n```\r\n\r\n<details>\r\n\r\n<summary>I instead get</summary>\r\n\r\n```\r\n\r\n-- /Users/julian/Development/mathlib4/foo.lean at 5:3\r\n⊢ @Eq.{1} ENat\r\n  (@emultiplicity.{0} Nat Nat.instMonoid (@OfNat.ofNat.{0} Nat 3 (instOfNatNat 3))\r\n    (@OfNat.ofNat.{0} Nat 18 (instOfNatNat 18)))\r\n  (@OfNat.ofNat.{0} ENat 2\r\n    (@instOfNatAtLeastTwo.{0} ENat 2 ENat.instNatCast (@instNatAtLeastTwo (@OfNat.ofNat.{0} Nat 0 (instOfNatNat 0)))))\r\n\r\n-- /Users/julian/Development/mathlib4/foo.lean at 5:29\r\n⊢ And\r\n  (@Dvd.dvd.{0} Nat Nat.instDvd\r\n    (@HPow.hPow.{0, 0, 0} Nat Nat Nat (@instHPow.{0, 0} Nat Nat (@Monoid.toNatPow.{0} Nat Nat.instMonoid))\r\n      (@OfNat.ofNat.{0} Nat 3 (instOfNatNat 3)) (@OfNat.ofNat.{0} Nat 2 (instOfNatNat 2)))\r\n    (@OfNat.ofNat.{0} Nat 18 (instOfNatNat 18)))\r\n  (Not\r\n    (@Dvd.dvd.{0} Nat Nat.instDvd\r\n      (@HPow.hPow.{0, 0, 0} Nat Nat Nat (@instHPow.{0, 0} Nat Nat (@Monoid.toNatPow.{0} Nat Nat.instMonoid))\r\n        (@OfNat.ofNat.{0} Nat 3 (instOfNatNat 3))\r\n        (@HAdd.hAdd.{0, 0, 0} Nat Nat Nat (@instHAdd.{0} Nat instAddNat) (@OfNat.ofNat.{0} Nat 2 (instOfNatNat 2))\r\n          (@OfNat.ofNat.{0} Nat 1 (instOfNatNat 1))))\r\n      (@OfNat.ofNat.{0} Nat 18 (instOfNatNat 18))))\r\n\r\n▶ expected type (5:7-5:29)\r\n⊢ ∀ {a b n : Nat} [inst : Nat.AtLeastTwo n],\r\n  Iff\r\n    (@Eq.{1} ENat (@emultiplicity.{0} Nat Nat.instMonoid a b)\r\n      (@OfNat.ofNat.{0} ENat n (@instOfNatAtLeastTwo.{0} ENat n ENat.instNatCast inst)))\r\n    (And\r\n      (@Dvd.dvd.{0} Nat Nat.instDvd\r\n        (@HPow.hPow.{0, 0, 0} Nat Nat Nat (@instHPow.{0, 0} Nat Nat (@Monoid.toNatPow.{0} Nat Nat.instMonoid)) a\r\n          (@OfNat.ofNat.{0} Nat n (instOfNatNat n)))\r\n        b)\r\n      (Not\r\n        (@Dvd.dvd.{0} Nat Nat.instDvd\r\n          (@HPow.hPow.{0, 0, 0} Nat Nat Nat (@instHPow.{0, 0} Nat Nat (@Monoid.toNatPow.{0} Nat Nat.instMonoid)) a\r\n            (@HAdd.hAdd.{0, 0, 0} Nat Nat Nat (@instHAdd.{0} Nat instAddNat) (@OfNat.ofNat.{0} Nat n (instOfNatNat n))\r\n              (@OfNat.ofNat.{0} Nat 1 (instOfNatNat 1))))\r\n          b)))\r\n\r\n-- /Users/julian/Development/mathlib4/foo.lean at 10:3\r\n⊢ @Eq.{1} ENat\r\n  (@emultiplicity.{0} Nat Nat.instMonoid (@OfNat.ofNat.{0} Nat 3 (instOfNatNat 3))\r\n    (@OfNat.ofNat.{0} Nat 18 (instOfNatNat 18)))\r\n  (@OfNat.ofNat.{0} ENat 2\r\n    (@instOfNatAtLeastTwo.{0} ENat 2 ENat.instNatCast (@instNatAtLeastTwo (@OfNat.ofNat.{0} Nat 0 (instOfNatNat 0)))))\r\n\r\n-- /Users/julian/Development/mathlib4/foo.lean at 10:31\r\n⊢ And (@Dvd.dvd.{0} Nat Nat.instDvd (@OfNat.ofNat.{0} Nat 9 (instOfNatNat 9)) (@OfNat.ofNat.{0} Nat 18 (instOfNatNat 18)))\r\n  (Not\r\n    (@Dvd.dvd.{0} Nat Nat.instDvd (@OfNat.ofNat.{0} Nat 27 (instOfNatNat 27))\r\n      (@OfNat.ofNat.{0} Nat 18 (instOfNatNat 18))))\r\n\r\n▶ expected type (10:9-10:31)\r\n⊢ ∀ {a b n : Nat} [inst : Nat.AtLeastTwo n],\r\n  Iff\r\n    (@Eq.{1} ENat (@emultiplicity.{0} Nat Nat.instMonoid a b)\r\n      (@OfNat.ofNat.{0} ENat n (@instOfNatAtLeastTwo.{0} ENat n ENat.instNatCast inst)))\r\n    (And\r\n      (@Dvd.dvd.{0} Nat Nat.instDvd\r\n        (@HPow.hPow.{0, 0, 0} Nat Nat Nat (@instHPow.{0, 0} Nat Nat (@Monoid.toNatPow.{0} Nat Nat.instMonoid)) a\r\n          (@OfNat.ofNat.{0} Nat n (instOfNatNat n)))\r\n        b)\r\n      (Not\r\n        (@Dvd.dvd.{0} Nat Nat.instDvd\r\n          (@HPow.hPow.{0, 0, 0} Nat Nat Nat (@instHPow.{0, 0} Nat Nat (@Monoid.toNatPow.{0} Nat Nat.instMonoid)) a\r\n            (@HAdd.hAdd.{0, 0, 0} Nat Nat Nat (@instHAdd.{0} Nat instAddNat) (@OfNat.ofNat.{0} Nat n (instOfNatNat n))\r\n              (@OfNat.ofNat.{0} Nat 1 (instOfNatNat 1))))\r\n          b)))\r\n\r\n\r\n```\r\n\r\n</details>\r\n\r\nI'm not 100% sure what I'm looking for (and I see a few examples of lemmas that also do not have `OfNat` on the RHS, e.g. [this one](https://github.com/leanprover-community/mathlib4/blob/b0ce30989a48fd07c7e13c64152865e11a65c6b4/Mathlib/Algebra/Polynomial/Eval/Defs.lean#L401). I see a small diff between the two terms obviously. Can you help me understand what I should be seeing there in terms of red flags (or lack thereof)?",
                    "createdAt": "2024-12-06T16:08:04Z",
                    "author": {
                      "login": "Julian"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5w6ltn",
                    "body": "Can you give a mwe that shows exactly how you are using it?",
                    "createdAt": "2024-12-20T21:35:54Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5w6l34",
                    "body": "> and I see a few examples of lemmas that also do not have `OfNat` on the RHS, e.g. [this one](https://github.com/leanprover-community/mathlib4/blob/b0ce30989a48fd07c7e13c64152865e11a65c6b4/Mathlib/Algebra/Polynomial/Eval/Defs.lean#L401).\r\n\r\nThis lemma is mis-stated, `ofNat` should indeed be on the RHS.\r\n\r\n`no_index` matters a little less, and I think we often skip it on the RHS out of laziness. Ideally Lean would change to make it unnecessary.",
                    "createdAt": "2024-12-20T21:37:16Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5w6nn-",
                    "body": "> Can you give a mwe that shows exactly how you are using it?\r\n\r\n\r\nThe example I was using to confirm this \"works\" (where my understanding of works is probably limited to \"does not require `erw`) was the one from the Zulip thread, i.e.:\r\n\r\n```lean\r\nimport Mathlib.RingTheory.Multiplicity\r\n\r\nexample : emultiplicity 3 18 = 2 := by\r\n  rw [emultiplicity_eq_ofNat]\r\n  decide\r\n```\r\n\r\n> This lemma is mis-stated, ofNat should indeed be on the RHS.\r\n\r\n(I believe you of course, I'll just note there are not just one of them, there were at least a handful of lemmas like that to my recollection, so sounds like there might be a few places in need of cleanup. I don't feel comfortable doing so until I understand what any of this means, maybe after your response!)",
                    "createdAt": "2024-12-20T21:49:27Z",
                    "author": {
                      "login": "Julian"
                    }
                  }
                ]
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjMyOTgyMg==",
              "login": "Julian"
            },
            {
              "id": "MDQ6VXNlcjE4ODgxMw==",
              "login": "urkud"
            },
            {
              "id": "MDQ6VXNlcjQyNTI2MA==",
              "login": "eric-wieser"
            },
            {
              "id": "MDQ6VXNlcjU1NjY0OTcz",
              "login": "Command-Master"
            },
            {
              "id": "U_kgDOBfZl7g",
              "login": "mattrobball"
            }
          ]
        },
        "state": "OPEN",
        "statusCheckRollup": {
          "contexts": {
            "nodes": [
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAH7RBYzQ",
                "name": "Fix style issues from lint",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12202111009/job/34042042573"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIFifaFQ",
                "name": "Fix style issues from lint",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12438826796/job/34731448853"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIFiiCMA",
                "name": "Fix style issues from lint",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12438842385/job/34731491888"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIFi4PQQ",
                "name": "Fix style issues from lint",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12438963065/job/34731855681"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAH7RBYTA",
                "name": "Add ready-to-merge or delegated label",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12202111016/job/34042042444"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIFifZtQ",
                "name": "Add ready-to-merge or delegated label",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12438826798/job/34731448757"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIFiiCJg",
                "name": "Add ready-to-merge or delegated label",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12438842384/job/34731491878"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIFi4ONA",
                "name": "Add ready-to-merge or delegated label",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12438963048/job/34731855412"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAH7P1H0A",
                "name": "label-and-report-new-contributor",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12201735146/job/34040793040"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAH7RBYxg",
                "name": "Ping maintainers on Zulip",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12202111013/job/34042042566"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIFifZEw",
                "name": "Ping maintainers on Zulip",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12438826797/job/34731448595"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIFiiCJQ",
                "name": "Ping maintainers on Zulip",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12438842390/job/34731491877"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIFi4OdA",
                "name": "Ping maintainers on Zulip",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12438963044/job/34731855476"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAH7P1HhQ",
                "name": "post-or-update-summary-comment",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12201735143/job/34040792965"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAH7P1Edw",
                "name": "Cancel Previous Runs (CI)",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12201734798/job/34040792183"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAH7P1GUA",
                "name": "Cancel Previous Runs (CI)",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12201734805/job/34040792656"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAH7P1GtA",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12201735133/job/34040792756"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAH7P1ILA",
                "name": "Lint style (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12201734798/job/34040793132"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAH7P1DXQ",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12201734805/job/34040791901"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAH7P1IVg",
                "name": "Check all files imported",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12201735133/job/34040793174"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAH7P1GVQ",
                "name": "Build (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12201734798/job/34040792661"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAH7P1E_Q",
                "name": "Build",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12201734805/job/34040792317"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAH7P1JpQ",
                "name": "Post-CI job (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12201734798/job/34040793509"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAH7RSPjA",
                "name": "Post-CI job",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12201734805/job/34042318732"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAH7P1hGA",
                "name": "New Contributor Check",
                "conclusion": "NEUTRAL",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/34040799512"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAH7P5BxA",
                "name": "Summary",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=19753&login=leanprover-community&repository=mathlib4"
              }
            ]
          }
        },
        "title": "feat: missing emultiplicity coercion lemma",
        "updatedAt": "2024-12-21T07:54:44Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/19753",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6WS2Py",
              "createdAt": "2024-12-05T21:47:49Z",
              "body": "### PR summary [b0ce30989a](https://github.com/leanprover-community/mathlib4/pull/19753/commits/b0ce30989a48fd07c7e13c64152865e11a65c6b4)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n\n</details>\n\n---\n\n#### Declarations diff\n\n`+ emultiplicity_eq_ofNat`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n---\n\n<details><summary>No changes to technical debt.</summary>\n\nYou can run this locally as\n```\n./scripts/technical-debt-metrics.sh pr_summary\n```\n* The `relative` value is the weighted *sum* of the differences with weight given by the *inverse* of the current value of the statistic.\n* The `absolute` value is the `relative` value divided by the total sum of the inverses of the current values (i.e. the weighted *average* of the differences).\n</details>",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6iNsO3zwAAAAOe6E4H",
              "createdAt": "2024-12-05T21:47:50Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABViJjTQ",
                "name": "t-algebra"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6UAHH3",
              "createdAt": "2024-12-05T21:53:56Z",
              "body": "",
              "author": {
                "login": "mattrobball"
              }
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6iNsO3zwAAAAOe-rvg",
              "createdAt": "2024-12-05T23:11:57Z"
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6iNsO3zwAAAAOfjgGP",
              "createdAt": "2024-12-06T15:17:29Z"
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6iNsO3zwAAAAOfjwCO",
              "createdAt": "2024-12-06T15:22:48Z"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6iNsO3zwAAAAOfkshA",
              "createdAt": "2024-12-06T15:43:40Z"
            },
            {
              "__typename": "ReviewRequestedEvent",
              "id": "RRE_lADOFcwZ1c6iNsO3zwAAAAOqHvfg",
              "createdAt": "2024-12-21T07:54:44Z",
              "requestedReviewer": {
                "id": "MDQ6VXNlcjQyNTI2MA==",
                "login": "eric-wieser"
              }
            }
          ]
        }
      }
    }
  }
}
