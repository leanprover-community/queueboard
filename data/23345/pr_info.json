{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 290,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "riccardobrasca"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "---\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nFor details on the \"pull request lifecycle\" in mathlib, please see:\r\nhttps://leanprover-community.github.io/contribute/index.html\r\n\r\nIn particular, note that most reviewers will only notice your PR\r\nif it passes the continuous integration checks.\r\nPlease ask for help on https://leanprover.zulipchat.com if needed.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nIf you are moving or deleting declarations, please include these lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nMoves:\r\n- Vector.* -> List.Vector.*\r\n- ...\r\n\r\nDeletions:\r\n- Nat.bit1_add_bit1\r\n- ...\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n\r\n-->\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 62,
        "closed": false,
        "closedAt": null,
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c6kOtbu",
              "body": "### PR summary [325b99fc88](https://github.com/leanprover-community/mathlib4/pull/23345/commits/325b99fc88bdec2c4b9b8b17e78806c101db0957)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n| `Mathlib.Topology.Algebra.UniformGroup.Basic`|-1051|\n| `Mathlib.Topology.Algebra.UniformGroup.Defs`|-1007|\n| `Mathlib.Topology.Algebra.IsUniformGroup.Defs`|1007|\n| `Mathlib.Topology.Algebra.IsUniformGroup.Basic`|1051|\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ IsUniformAddGroup`\n`+ IsUniformAddGroup.uniformContinuous_iff_open_ker`\n`+ IsUniformGroup`\n`+ IsUniformGroup.comap`\n`+ IsUniformGroup.ext`\n`+ IsUniformGroup.ext_iff`\n`+ IsUniformGroup.mk'`\n`+ IsUniformGroup.toUniformSpace_eq`\n`+ IsUniformGroup.to_uniformContinuousConstSMul`\n`+ IsUniformGroup.uniformContinuous_iff_isOpen_ker`\n`+ IsUniformGroup.uniformContinuous_iff_open_ker`\n`+ IsUniformGroup.uniformity_countably_generated`\n`+ Pi.instIsUniformGroup`\n`+ Prod.instIsUniformGroup`\n`+ instIsUniformGroup`\n`+ instance (priority := 10) IsUniformGroup.to_topologicalGroup : IsTopologicalGroup Œ±`\n`+ instance (priority := 100) : IsUniformAddGroup R`\n`+ instance (priority := 100) SeminormedCommGroup.to_uniformGroup : IsUniformGroup E`\n`+ instance : IsUniformAddGroup ‚Ñö`\n`+ instance : IsUniformAddGroup ‚Ñù`\n`+ instance : IsUniformGroup (Œ± ‚Üí·µ§ G)`\n`+ instance : IsUniformGroup (Œ± ‚Üí·µ§[ùîñ] G)`\n`+ instance : IsUniformGroup Circle := by`\n`+ instance : IsUniformGroup Œ±·µê·µí·µñ`\n`+ instance [AddCommGroup E] [UniformSpace E] [IsUniformAddGroup E] : IsUniformAddGroup (C‚ãÜ·µê·µí·µà E)`\n`+ instance [AddGroup R] [AddGroup M] [IsUniformAddGroup R] [IsUniformAddGroup M] :`\n`+ instance [Group X] : IsUniformGroup X`\n`+ instance {G : Type*} [AddGroup G] [UniformSpace G] [IsUniformAddGroup G] [NonarchimedeanAddGroup G] :`\n`+ instance {R : Type*} [Ring R] [UniformSpace R] [IsTopologicalRing R] [IsUniformAddGroup R]`\n`+++++++++ instIsUniformAddGroup`\n`++-- completeSpace`\n`++-- instUniformSpace`\n`+-+-+- uniformAddGroup`\n`- Pi.instUniformGroup`\n`- Prod.instUniformGroup`\n`- UniformAddGroup`\n`- UniformAddGroup.uniformContinuous_iff_open_ker`\n`- UniformGroup`\n`- UniformGroup.comap`\n`- UniformGroup.ext`\n`- UniformGroup.ext_iff`\n`- UniformGroup.mk'`\n`- UniformGroup.toUniformSpace_eq`\n`- UniformGroup.to_uniformContinuousConstSMul`\n`- UniformGroup.uniformContinuous_iff_isOpen_ker`\n`- UniformGroup.uniformContinuous_iff_open_ker`\n`- UniformGroup.uniformity_countably_generated`\n`- instUniformGroup`\n`- instance (priority := 10) UniformGroup.to_topologicalGroup : IsTopologicalGroup Œ±`\n`- instance (priority := 100) : UniformAddGroup R`\n`- instance (priority := 100) SeminormedCommGroup.to_uniformGroup : UniformGroup E`\n`- instance : UniformAddGroup ‚Ñö`\n`- instance : UniformAddGroup ‚Ñù`\n`- instance : UniformGroup (Œ± ‚Üí·µ§ G)`\n`- instance : UniformGroup (Œ± ‚Üí·µ§[ùîñ] G)`\n`- instance : UniformGroup Circle := by`\n`- instance : UniformGroup Œ±·µê·µí·µñ`\n`- instance [AddCommGroup E] [UniformSpace E] [UniformAddGroup E] : UniformAddGroup (C‚ãÜ·µê·µí·µà E)`\n`- instance [AddGroup R] [AddGroup M] [UniformAddGroup R] [UniformAddGroup M] :`\n`- instance [Group X] : UniformGroup X`\n`- instance {G : Type*} [AddGroup G] [UniformSpace G] [UniformAddGroup G] [NonarchimedeanAddGroup G] :`\n`- instance {R : Type*} [Ring R] [UniformSpace R] [IsTopologicalRing R] [UniformAddGroup R]`\n`--------- instUniformAddGroup`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>\n\n---\n\n<details><summary>No changes to technical debt.</summary>\n\nYou can run this locally as\n```\n./scripts/technical-debt-metrics.sh pr_summary\n```\n* The `relative` value is the weighted *sum* of the differences with weight given by the *inverse* of the current value of the statistic.\n* The `absolute` value is the `relative` value divided by the total sum of the inverses of the current values (i.e. the weighted *average* of the differences).\n</details>\n",
              "createdAt": "2025-03-26T17:53:06Z",
              "author": {
                "login": "github-actions"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "c43baffb3ac2b63e07eaead72c5a897a0c534e1e",
                "additions": 290,
                "deletions": 290,
                "committedDate": "2025-03-26T17:51:24Z",
                "author": {
                  "name": "Riccardo Brasca",
                  "email": "riccardo.brasca@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJMEQUrQ",
                        "name": "set_pr_emoji",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14090137594/job/39464473773"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJMEN3yA",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14090125215/job/39464433608"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJMEQThQ",
                        "name": "Add topic label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14090137582/job/39464473477"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJMEQTRQ",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14090137581/job/39464473413"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJMEQTKw",
                        "name": "post-or-update-summary-comment",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14090137588/job/39464473387"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJMEN1FA",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14090125171/job/39464432916"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJMEN36A",
                        "name": "Build",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14090125171/job/39464433640"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJMEN1Gg",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14090125215/job/39464432922"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJMEN6NA",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14090125215/job/39464434228"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJMETisw",
                        "name": "Post-CI job",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14090125171/job/39464526515"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJMEQ5kg",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/39464483218"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "325b99fc88bdec2c4b9b8b17e78806c101db0957",
                "additions": 0,
                "deletions": 0,
                "committedDate": "2025-03-26T17:53:21Z",
                "author": {
                  "name": "Riccardo Brasca",
                  "email": "riccardo.brasca@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJMEVN6g",
                        "name": "Lint style",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14090161460/job/39464553962"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJMEVOYg",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14090161407/job/39464554082"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJMEVTsQ",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14090162204/job/39464555441"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJMEVUBg",
                        "name": "post-or-update-summary-comment",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14090162216/job/39464555526"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJMEVPdA",
                        "name": "Build",
                        "conclusion": null,
                        "status": "IN_PROGRESS",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14090161460/job/39464554356"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJMEVQug",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14090161407/job/39464554682"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJMEVSnw",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14090161407/job/39464555167"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJMEVzUQ",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/39464563537"
                      }
                    ]
                  }
                }
              }
            }
          ]
        },
        "createdAt": "2025-03-26T17:52:08Z",
        "deletions": 290,
        "files": {
          "nodes": [
            {
              "path": "Mathlib/Analysis/CStarAlgebra/CStarMatrix.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Analysis/CStarAlgebra/Matrix.lean",
              "additions": 3,
              "deletions": 3
            },
            {
              "path": "Mathlib/Analysis/CStarAlgebra/Module/Synonym.lean",
              "additions": 3,
              "deletions": 3
            },
            {
              "path": "Mathlib/Analysis/Complex/Circle.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Analysis/Convex/TotallyBounded.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Analysis/Distribution/SchwartzSpace.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Analysis/LocallyConvex/AbsConvex.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Analysis/LocallyConvex/Barrelled.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Analysis/LocallyConvex/Bounded.lean",
              "additions": 4,
              "deletions": 4
            },
            {
              "path": "Mathlib/Analysis/LocallyConvex/ContinuousOfBounded.lean",
              "additions": 3,
              "deletions": 3
            },
            {
              "path": "Mathlib/Analysis/LocallyConvex/WeakOperatorTopology.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Analysis/LocallyConvex/WithSeminorms.lean",
              "additions": 10,
              "deletions": 10
            },
            {
              "path": "Mathlib/Analysis/Normed/Field/Instances.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Analysis/Normed/Group/Uniform.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Analysis/Normed/Operator/Compact.lean",
              "additions": 4,
              "deletions": 4
            },
            {
              "path": "Mathlib/Analysis/Seminorm.lean",
              "additions": 9,
              "deletions": 9
            },
            {
              "path": "Mathlib/Analysis/SumOverResidueClass.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/NumberTheory/LSeries/PrimesInAP.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/RingTheory/MvPowerSeries/Evaluation.lean",
              "additions": 8,
              "deletions": 8
            },
            {
              "path": "Mathlib/RingTheory/MvPowerSeries/PiTopology.lean",
              "additions": 5,
              "deletions": 5
            },
            {
              "path": "Mathlib/RingTheory/PowerSeries/Evaluation.lean",
              "additions": 5,
              "deletions": 5
            },
            {
              "path": "Mathlib/RingTheory/PowerSeries/PiTopology.lean",
              "additions": 5,
              "deletions": 5
            },
            {
              "path": "Mathlib/Topology/Algebra/Algebra.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Topology/Algebra/Algebra/Equiv.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Topology/Algebra/Equicontinuity.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Topology/Algebra/Group/Basic.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Topology/Algebra/Group/CompactOpen.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Topology/Algebra/GroupCompletion.lean",
              "additions": 9,
              "deletions": 9
            },
            {
              "path": "Mathlib/Topology/Algebra/InfiniteSum/Constructions.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Topology/Algebra/InfiniteSum/Group.lean",
              "additions": 6,
              "deletions": 6
            },
            {
              "path": "Mathlib/Topology/Algebra/InfiniteSum/GroupCompletion.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Topology/Algebra/InfiniteSum/NatInt.lean",
              "additions": 8,
              "deletions": 8
            },
            {
              "path": "Mathlib/Topology/Algebra/InfiniteSum/Nonarchimedean.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Topology/Algebra/InfiniteSum/Order.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Topology/Algebra/IsUniformGroup/Basic.lean",
              "additions": 18,
              "deletions": 18
            },
            {
              "path": "Mathlib/Topology/Algebra/IsUniformGroup/Defs.lean",
              "additions": 42,
              "deletions": 42
            },
            {
              "path": "Mathlib/Topology/Algebra/Module/Alternating/Topology.lean",
              "additions": 6,
              "deletions": 6
            },
            {
              "path": "Mathlib/Topology/Algebra/Module/Equiv.lean",
              "additions": 3,
              "deletions": 3
            },
            {
              "path": "Mathlib/Topology/Algebra/Module/FiniteDimension.lean",
              "additions": 7,
              "deletions": 7
            },
            {
              "path": "Mathlib/Topology/Algebra/Module/LinearMap.lean",
              "additions": 3,
              "deletions": 3
            },
            {
              "path": "Mathlib/Topology/Algebra/Module/LocallyConvex.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Topology/Algebra/Module/Multilinear/Topology.lean",
              "additions": 9,
              "deletions": 9
            },
            {
              "path": "Mathlib/Topology/Algebra/Module/StrongTopology.lean",
              "additions": 37,
              "deletions": 37
            },
            {
              "path": "Mathlib/Topology/Algebra/Module/UniformConvergence.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Topology/Algebra/Nonarchimedean/AdicTopology.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Topology/Algebra/Nonarchimedean/Completion.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Topology/Algebra/Ring/Real.lean",
              "additions": 3,
              "deletions": 3
            },
            {
              "path": "Mathlib/Topology/Algebra/SeparationQuotient/Basic.lean",
              "additions": 4,
              "deletions": 4
            },
            {
              "path": "Mathlib/Topology/Algebra/SeparationQuotient/Section.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Topology/Algebra/UniformConvergence.lean",
              "additions": 3,
              "deletions": 3
            },
            {
              "path": "Mathlib/Topology/Algebra/UniformField.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Topology/Algebra/UniformFilterBasis.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Topology/Algebra/UniformMulAction.lean",
              "additions": 8,
              "deletions": 8
            },
            {
              "path": "Mathlib/Topology/Algebra/UniformRing.lean",
              "additions": 6,
              "deletions": 6
            },
            {
              "path": "Mathlib/Topology/Algebra/Valued/ValuationTopology.lean",
              "additions": 3,
              "deletions": 3
            },
            {
              "path": "Mathlib/Topology/ContinuousMap/Algebra.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Topology/Instances/Rat.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Topology/Instances/TrivSqZeroExt.lean",
              "additions": 3,
              "deletions": 3
            },
            {
              "path": "Mathlib/Topology/Instances/ZMultiples.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Topology/MetricSpace/Algebra.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Topology/UniformSpace/DiscreteUniformity.lean",
              "additions": 4,
              "deletions": 4
            },
            {
              "path": "Mathlib/Topology/UniformSpace/Matrix.lean",
              "additions": 4,
              "deletions": 4
            }
          ]
        },
        "headRefName": "RB/isuniform",
        "headRefOid": "325b99fc88bdec2c4b9b8b17e78806c101db0957",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c6QQHa6",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "MDU6TGFiZWwzMjcxMjQ0NzU5",
              "color": "e899cd",
              "name": "WIP"
            }
          ]
        },
        "latestReviews": {
          "nodes": []
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "BLOCKED",
        "mergeable": "MERGEABLE",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 23345,
        "potentialMergeCommit": {
          "oid": "7c9ae9534b3d9d16218ab699462479daa99a0d02"
        },
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": null,
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": []
        },
        "reviewThreads": {
          "nodes": []
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjMyNDkwNTMy",
              "login": "riccardobrasca"
            }
          ]
        },
        "state": "OPEN",
        "statusCheckRollup": {
          "contexts": {
            "nodes": [
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJMEVN6g",
                "name": "Lint style",
                "conclusion": "FAILURE",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14090161460/job/39464553962"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJMEVOYg",
                "name": "Lint style (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14090161407/job/39464554082"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJMEVTsQ",
                "name": "label-and-report-new-contributor",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14090162204/job/39464555441"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJMEVUBg",
                "name": "post-or-update-summary-comment",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14090162216/job/39464555526"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJMEVPdA",
                "name": "Build",
                "conclusion": null,
                "status": "IN_PROGRESS",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14090161460/job/39464554356"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJMEVQug",
                "name": "Build (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14090161407/job/39464554682"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJMEVSnw",
                "name": "Post-CI job (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14090161407/job/39464555167"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJMEVzUQ",
                "name": "New Contributor Check",
                "conclusion": "NEUTRAL",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/39464563537"
              }
            ]
          }
        },
        "title": "UniformGroup and UniformAddGroup",
        "updatedAt": "2025-03-26T17:54:32Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/23345",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "c43baffb3ac2b63e07eaead72c5a897a0c534e1e"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6v24iAzwAAAAP1I6cZ",
              "createdAt": "2025-03-26T17:52:08Z",
              "label": {
                "id": "MDU6TGFiZWwzMjcxMjQ0NzU5",
                "name": "WIP"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6kOtbu",
              "createdAt": "2025-03-26T17:53:06Z",
              "body": "### PR summary [325b99fc88](https://github.com/leanprover-community/mathlib4/pull/23345/commits/325b99fc88bdec2c4b9b8b17e78806c101db0957)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n| `Mathlib.Topology.Algebra.UniformGroup.Basic`|-1051|\n| `Mathlib.Topology.Algebra.UniformGroup.Defs`|-1007|\n| `Mathlib.Topology.Algebra.IsUniformGroup.Defs`|1007|\n| `Mathlib.Topology.Algebra.IsUniformGroup.Basic`|1051|\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ IsUniformAddGroup`\n`+ IsUniformAddGroup.uniformContinuous_iff_open_ker`\n`+ IsUniformGroup`\n`+ IsUniformGroup.comap`\n`+ IsUniformGroup.ext`\n`+ IsUniformGroup.ext_iff`\n`+ IsUniformGroup.mk'`\n`+ IsUniformGroup.toUniformSpace_eq`\n`+ IsUniformGroup.to_uniformContinuousConstSMul`\n`+ IsUniformGroup.uniformContinuous_iff_isOpen_ker`\n`+ IsUniformGroup.uniformContinuous_iff_open_ker`\n`+ IsUniformGroup.uniformity_countably_generated`\n`+ Pi.instIsUniformGroup`\n`+ Prod.instIsUniformGroup`\n`+ instIsUniformGroup`\n`+ instance (priority := 10) IsUniformGroup.to_topologicalGroup : IsTopologicalGroup Œ±`\n`+ instance (priority := 100) : IsUniformAddGroup R`\n`+ instance (priority := 100) SeminormedCommGroup.to_uniformGroup : IsUniformGroup E`\n`+ instance : IsUniformAddGroup ‚Ñö`\n`+ instance : IsUniformAddGroup ‚Ñù`\n`+ instance : IsUniformGroup (Œ± ‚Üí·µ§ G)`\n`+ instance : IsUniformGroup (Œ± ‚Üí·µ§[ùîñ] G)`\n`+ instance : IsUniformGroup Circle := by`\n`+ instance : IsUniformGroup Œ±·µê·µí·µñ`\n`+ instance [AddCommGroup E] [UniformSpace E] [IsUniformAddGroup E] : IsUniformAddGroup (C‚ãÜ·µê·µí·µà E)`\n`+ instance [AddGroup R] [AddGroup M] [IsUniformAddGroup R] [IsUniformAddGroup M] :`\n`+ instance [Group X] : IsUniformGroup X`\n`+ instance {G : Type*} [AddGroup G] [UniformSpace G] [IsUniformAddGroup G] [NonarchimedeanAddGroup G] :`\n`+ instance {R : Type*} [Ring R] [UniformSpace R] [IsTopologicalRing R] [IsUniformAddGroup R]`\n`+++++++++ instIsUniformAddGroup`\n`++-- completeSpace`\n`++-- instUniformSpace`\n`+-+-+- uniformAddGroup`\n`- Pi.instUniformGroup`\n`- Prod.instUniformGroup`\n`- UniformAddGroup`\n`- UniformAddGroup.uniformContinuous_iff_open_ker`\n`- UniformGroup`\n`- UniformGroup.comap`\n`- UniformGroup.ext`\n`- UniformGroup.ext_iff`\n`- UniformGroup.mk'`\n`- UniformGroup.toUniformSpace_eq`\n`- UniformGroup.to_uniformContinuousConstSMul`\n`- UniformGroup.uniformContinuous_iff_isOpen_ker`\n`- UniformGroup.uniformContinuous_iff_open_ker`\n`- UniformGroup.uniformity_countably_generated`\n`- instUniformGroup`\n`- instance (priority := 10) UniformGroup.to_topologicalGroup : IsTopologicalGroup Œ±`\n`- instance (priority := 100) : UniformAddGroup R`\n`- instance (priority := 100) SeminormedCommGroup.to_uniformGroup : UniformGroup E`\n`- instance : UniformAddGroup ‚Ñö`\n`- instance : UniformAddGroup ‚Ñù`\n`- instance : UniformGroup (Œ± ‚Üí·µ§ G)`\n`- instance : UniformGroup (Œ± ‚Üí·µ§[ùîñ] G)`\n`- instance : UniformGroup Circle := by`\n`- instance : UniformGroup Œ±·µê·µí·µñ`\n`- instance [AddCommGroup E] [UniformSpace E] [UniformAddGroup E] : UniformAddGroup (C‚ãÜ·µê·µí·µà E)`\n`- instance [AddGroup R] [AddGroup M] [UniformAddGroup R] [UniformAddGroup M] :`\n`- instance [Group X] : UniformGroup X`\n`- instance {G : Type*} [AddGroup G] [UniformSpace G] [UniformAddGroup G] [NonarchimedeanAddGroup G] :`\n`- instance {R : Type*} [Ring R] [UniformSpace R] [IsTopologicalRing R] [UniformAddGroup R]`\n`--------- instUniformAddGroup`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>\n\n---\n\n<details><summary>No changes to technical debt.</summary>\n\nYou can run this locally as\n```\n./scripts/technical-debt-metrics.sh pr_summary\n```\n* The `relative` value is the weighted *sum* of the differences with weight given by the *inverse* of the current value of the statistic.\n* The `absolute` value is the `relative` value divided by the total sum of the inverses of the current values (i.e. the weighted *average* of the differences).\n</details>\n",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "325b99fc88bdec2c4b9b8b17e78806c101db0957"
              }
            }
          ]
        }
      }
    }
  }
}
