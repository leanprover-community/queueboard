{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 76,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "kmill"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "The monad instance on `Set` isn't computationally relevant, and it causes Lean's monad lifting coercion logic to activate. We introduce a coercion instance for the case that's actually used in practice: when `s : Set X` and `t : Set s` then `(t : Set X)` ought to be `Subtype.val '' t`. This way we do not see `Lean.Internal.coeM` terms.\r\n\r\nIf the monad is still wanted, it can be activated using a local attribute or by using the `SetM.run` function.\r\n\r\n\r\n---\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n-->\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 5,
        "closed": true,
        "closedAt": "2023-11-15T01:39:43Z",
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c5r-CzE",
              "body": "Arguably Lean should unfold `Lean.internal.coeM`, and maybe that function should also be defined in terms of fmap instead of bind.\r\n\r\nIn any case, the only time this coercion is used in mathlib is to map `Subtype.val`, so for now this seems like a nice way to improve the behavior of this coercion.\r\n\r\n[Zulip thread](https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/Should.20Subtype.2Eval.20''.20be.20related.20to.20Lean's.20internal.20cast.3F/near/402049520) where Terry Tao wanted to use this functorial coercion.",
              "createdAt": "2023-11-14T21:57:33Z",
              "author": {
                "login": "kmill"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5r-hvC",
              "body": "I like it!\r\n\r\nbors d+",
              "createdAt": "2023-11-14T23:26:41Z",
              "author": {
                "login": "kim-em"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5r-hvn",
              "body": ":v: kmill can now approve this pull request. To approve and merge a pull request, simply reply with `bors r+`. More detailed instructions are available [here](https://bors.tech/documentation/getting-started/#reviewing-pull-requests).",
              "createdAt": "2023-11-14T23:26:44Z",
              "author": {
                "login": "mathlib-bors"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5r-tzo",
              "body": "bors r+",
              "createdAt": "2023-11-15T00:22:14Z",
              "author": {
                "login": "kmill"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5r-8vM",
              "body": "Pull request successfully merged into master.\n\nBuild succeeded:\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/6871325893/job/18687950741)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/6871325893/job/18687951012)\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/6871325893/job/18687950375)",
              "createdAt": "2023-11-15T01:39:42Z",
              "author": {
                "login": "mathlib-bors"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "bb5b027258eca6c52ac739a68fab01199eda5085",
                "additions": 74,
                "deletions": 11,
                "committedDate": "2023-11-14T21:44:58Z",
                "author": {
                  "name": "Kyle Miller",
                  "email": "kmill31415@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "1c3b71c450947a68c69c872522b66776687063ef",
                "additions": 5,
                "deletions": 3,
                "committedDate": "2023-11-14T21:49:02Z",
                "author": {
                  "name": "Kyle Miller",
                  "email": "kmill31415@gmail.com"
                },
                "statusCheckRollup": null
              }
            }
          ]
        },
        "createdAt": "2023-11-14T21:46:36Z",
        "deletions": 11,
        "files": {
          "nodes": [
            {
              "path": "Mathlib/Data/Set/Finite.lean",
              "additions": 10,
              "deletions": 0
            },
            {
              "path": "Mathlib/Data/Set/Functor.lean",
              "additions": 58,
              "deletions": 2
            },
            {
              "path": "Mathlib/RingTheory/Polynomial/Dickson.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Topology/Constructions.lean",
              "additions": 4,
              "deletions": 6
            },
            {
              "path": "Mathlib/Topology/ExtremallyDisconnected.lean",
              "additions": 3,
              "deletions": 2
            }
          ]
        },
        "headRefName": "kmill_no_set_monad_inst",
        "headRefOid": "1c3b71c450947a68c69c872522b66776687063ef",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c5fdTs3",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c8AAAABAt13Ow",
              "color": "bfd4f2",
              "name": "delegated"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
              "color": "06e039",
              "name": "ready-to-merge"
            }
          ]
        },
        "latestReviews": {
          "nodes": []
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "UNKNOWN",
        "mergeable": "UNKNOWN",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 8413,
        "potentialMergeCommit": null,
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": null,
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": []
        },
        "reviewThreads": {
          "nodes": []
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjIzNTMwNw==",
              "login": "kmill"
            },
            {
              "id": "MDQ6VXNlcjQ3Nzk1Ng==",
              "login": "kim-em"
            }
          ]
        },
        "state": "CLOSED",
        "statusCheckRollup": null,
        "title": "[Merged by Bors] - feat: make `Set.monad` not an instance and add `(Subtype.val '' Â·)` coercion",
        "updatedAt": "2023-11-15T01:39:46Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/8413",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "bb5b027258eca6c52ac739a68fab01199eda5085"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c521E-RzwAAAAKNS1QS",
              "createdAt": "2023-11-14T21:46:36Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "1c3b71c450947a68c69c872522b66776687063ef"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5r-CzE",
              "createdAt": "2023-11-14T21:57:33Z",
              "body": "Arguably Lean should unfold `Lean.internal.coeM`, and maybe that function should also be defined in terms of fmap instead of bind.\r\n\r\nIn any case, the only time this coercion is used in mathlib is to map `Subtype.val`, so for now this seems like a nice way to improve the behavior of this coercion.\r\n\r\n[Zulip thread](https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/Should.20Subtype.2Eval.20''.20be.20related.20to.20Lean's.20internal.20cast.3F/near/402049520) where Terry Tao wanted to use this functorial coercion.",
              "author": {
                "login": "kmill"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5r-hvC",
              "createdAt": "2023-11-14T23:26:41Z",
              "body": "I like it!\r\n\r\nbors d+",
              "author": {
                "login": "kim-em"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5r-hvn",
              "createdAt": "2023-11-14T23:26:44Z",
              "body": ":v: kmill can now approve this pull request. To approve and merge a pull request, simply reply with `bors r+`. More detailed instructions are available [here](https://bors.tech/documentation/getting-started/#reviewing-pull-requests).",
              "author": {
                "login": "mathlib-bors"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c521E-RzwAAAAKNVpQX",
              "createdAt": "2023-11-14T23:26:53Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABAt13Ow",
                "name": "delegated"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c521E-RzwAAAAKNVpRO",
              "createdAt": "2023-11-14T23:26:53Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5r-tzo",
              "createdAt": "2023-11-15T00:22:14Z",
              "body": "bors r+",
              "author": {
                "login": "kmill"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c521E-RzwAAAAKNWzQ8",
              "createdAt": "2023-11-15T00:22:26Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABHuWjJg",
                "name": "ready-to-merge"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5r-8vM",
              "createdAt": "2023-11-15T01:39:42Z",
              "body": "Pull request successfully merged into master.\n\nBuild succeeded:\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/6871325893/job/18687950741)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/6871325893/job/18687951012)\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/6871325893/job/18687950375)",
              "author": {
                "login": "mathlib-bors"
              }
            },
            {
              "__typename": "RenamedTitleEvent"
            },
            {
              "__typename": "ClosedEvent",
              "id": "CE_lADOFcwZ1c521E-RzwAAAAKNYQrq",
              "createdAt": "2023-11-15T01:39:43Z"
            },
            {
              "__typename": "HeadRefDeletedEvent",
              "id": "HRDE_lADOFcwZ1c521E-RzwAAAAKNYQva",
              "createdAt": "2023-11-15T01:39:46Z"
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "ReferencedEvent"
            }
          ]
        }
      }
    }
  }
}
