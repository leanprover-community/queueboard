{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 1104,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "Timeroot"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "Defines operads (`Operad`), symmetric operads (`SymmOperad`), and clones (`Clone`). There is a proof that all clones have a natural operad structure. And there is a file, `Instances.lean`, that gives several most important examples of Clones. In particular, it has all of the clones (in an appropriately general form) that occur in [Post's Lattice](https://en.wikipedia.org/wiki/Post%27s_lattice), and later proving the completeness of Post's Lattice is why I'm making this PR.\r\n\r\n---\r\n\r\n- [x] depends on: #20133 [basics and notations]\r\n- [x] depends on: #20134 [permutations]\r\n- [x] depends on: #20138 [operad]\r\n- [x] depends on: #20141 [clone]\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 7,
        "closed": false,
        "closedAt": null,
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c6YJmdO",
              "body": "### PR summary [837048e966](https://github.com/leanprover-community/mathlib4/pull/20051/commits/837048e9660f718602f34e6eb667dfb88cc5e622)\n\n<details><summary>\n\n#### Import changes for modified files\n\n</summary>\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n| `Mathlib.Algebra.Operad.Basic` (new file)|188|\n| `Mathlib.Algebra.Operad.Perm` (new file)|459|\n| `Mathlib.Algebra.Operad.Operad` (new file)|471|\n| `Mathlib.Algebra.Operad.Clone` (new file)|530|\n| `Mathlib.Algebra.Operad.Instances` (new file)|836|\n\n</details>\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ ClonalProperty`\n`+ Clone`\n`+ Commute_with_φ_Clone`\n`+ ComposableOne_toOne`\n`+ Conjunctive_Clone`\n`+ Disjunctive_Clone`\n`+ EssentiallyUnary_Clone`\n`+ Func_Clone`\n`+ Function.CommutesWithEndo`\n`+ Function.Conjunctive`\n`+ Function.Disjunctive`\n`+ Function.EssentiallyUnary`\n`+ Function.IsAffineMap`\n`+ Function.IsMultiargAffine`\n`+ IsMultiargAffine_Clone`\n`+ IsMultiargAffine_iff_IsAffineMap`\n`+ Monotone_Clone`\n`+ MultiComposable`\n`+ OneGradedOne`\n`+ Operad`\n`+ PermFinPadAt`\n`+ PermFinPadAt_core`\n`+ PermFinPadAt_core.LeftInverse`\n`+ PermFinPadAt_eq_position`\n`+ PermFinPadAt_gt_gt_position`\n`+ PermFinPadAt_gt_lt_position`\n`+ PermFinPadAt_lt_gt_position`\n`+ PermFinPadAt_lt_lt_position`\n`+ PermFinPadAt_symm`\n`+ PermFinPadLeftRight`\n`+ PermFinPadTo`\n`+ PermFinPadTo_eq_PermFinPadLeftRight`\n`+ PermFinPadTo_eq_position`\n`+ PermFinPadTo_gt_position`\n`+ PermFinPadTo_lt_position`\n`+ ProjectableProperty`\n`+ SigmaMulAction`\n`+ Superposable`\n`+ SuperposableProperty`\n`+ SymmOperad`\n`+ SymmOperad.compose_smul`\n`+ SymmOperad.smul_compose`\n`+ and_ClonalProperty`\n`+ clonal_CommutesWithEndo`\n`+ clonal_Conjunctive`\n`+ clonal_Disjunctive`\n`+ clonal_EssentiallyUnary`\n`+ clonal_IsAffineMap`\n`+ clonal_IsMultiargAffine`\n`+ clonal_Monotone`\n`+ clonal_kWisePropPreserving`\n`+ cloneCompose`\n`+ cloneCompose_assoc`\n`+ cloneCompose_id`\n`+ cloneCompse_comm`\n`+ clonePadTo`\n`+ clonePadTo_zero`\n`+ clone_AffineMap`\n`+ clone_ClonalProperty`\n`+ clone_id_left`\n`+ clone_proj_left`\n`+ clone_proj_right`\n`+ clone_toSymmOperad`\n`+ composeAt`\n`+ composeAt_assoc`\n`+ composeAt_assoc_Fin`\n`+ composeAt_comm`\n`+ composeAt_comm_Fin`\n`+ composeAt_comm_four`\n`+ composeAt_comm_swap`\n`+ composeAt_id`\n`+ conjunctive_min`\n`+ disjunctive_max`\n`+ eq_id_sigma_id`\n`+ eq_id_sigma_one`\n`+ function_superpose`\n`+ hAdd`\n`+ id_composeAt`\n`+ instance : ∀ (i : ℕ), MulAction (Perm (Fin i)) (A i)`\n`+ kWisePropPreserving`\n`+ kWisePropPreserving_Clone`\n`+ sigmaMul_to_MulAction`\n`+ superpose`\n`+ val_hAdd`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>\n\n---\n\n<details><summary>No changes to technical debt.</summary>\n\nYou can run this locally as\n```\n./scripts/technical-debt-metrics.sh pr_summary\n```\n* The `relative` value is the weighted *sum* of the differences with weight given by the *inverse* of the current value of the statistic.\n* The `absolute` value is the `relative` value divided by the total sum of the inverses of the current values (i.e. the weighted *average* of the differences).\n</details>",
              "createdAt": "2024-12-19T02:38:00Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6Yb0Cc",
              "body": "Operad is currently defined in terms of composing just two functions (and identities in all other slots). It would be good to add the \"fill all slots\" notion of composition instead, see e.g. the definition on Wikipedia:\r\n\r\n<img width=\"469\" alt=\"image\" src=\"https://github.com/user-attachments/assets/3aa41781-c059-4700-aa1f-d6f22cd781f5\" />\r\n\r\nWith an appropriate alternate constructor for `Operad` in terms of this other definition.",
              "createdAt": "2024-12-20T17:26:43Z",
              "author": {
                "login": "Timeroot"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6Yb5xb",
              "body": "Could you please split this into 5 PRs? One for each new file?\r\nAnd have all of them refer back to this one, so that the context is clear.",
              "createdAt": "2024-12-20T17:42:49Z",
              "author": {
                "login": "jcommelin"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6Yb6Fw",
              "body": "\r\n> Marking as draft at the moment while there are some sorries, but wanting this PR up hoping for some preliminary comments\r\n\r\nAlso, it seems that it is time to remove this disclaimer from the PR commit message. :grinning: ",
              "createdAt": "2024-12-20T17:43:47Z",
              "author": {
                "login": "jcommelin"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6YdJSD",
              "body": "> Could you please split this into 5 PRs? One for each new file? And have all of them refer back to this one, so that the context is clear.\r\n\r\nAlright, I split off four PRs for other files. This leaves just `Instances.lean`, which is the unique leaf-file in this PR. That could just be this PR, if that makes sense, since it's already dependent on the other four. Or should make its own dedicated PR?",
              "createdAt": "2024-12-20T22:06:49Z",
              "author": {
                "login": "Timeroot"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6YeQ-z",
              "body": "Thanks! And yes, the final file can just stay in this PR.",
              "createdAt": "2024-12-21T10:01:09Z",
              "author": {
                "login": "jcommelin"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6aFzAm",
              "body": "For either your delectation or horror, I couldn't resist:\r\n\r\n```\r\nimport Mathlib\r\n\r\nstructure LList (α : Type _) where\r\n  ι : Type\r\n  [finEnum : FinEnum ι]\r\n  f : ι → α\r\n\r\nattribute [instance] LList.finEnum\r\n\r\nnamespace LList\r\n\r\n@[simps]\r\ndef map {α β} (L : LList α) (f : α → β) : LList β := { L with f := fun i => f (L.f i) }\r\n\r\ndef toList {α} (L : LList α) : List α := (FinEnum.toList L.ι).map L.f\r\n\r\n@[simps]\r\ndef flatten {α} (L : LList (LList α)) : LList α :=\r\n  { ι := Σ i : L.ι, (L.f i).ι\r\n    f := fun ⟨i, i'⟩ => (L.f i).f i' }\r\n\r\nstructure Hom {α} (L L' : LList α) where\r\n  toFun : L.ι → L'.ι\r\n  w : ∀ i, L'.f (toFun i) = L.f i := by aesop_cat\r\n\r\nattribute [simp] Hom.w\r\n\r\nend LList\r\n\r\ninstance : CoeSort (LList Type) Type where\r\n  coe L := (i : L.ι) → L.f i\r\n\r\nopen CategoryTheory\r\n\r\ninstance {α} : Category (LList α × α) where\r\n  Hom x y := LList.Hom x.1 y.1\r\n  id x := ⟨fun i => i, fun i => rfl⟩\r\n  comp f g := { toFun := fun i => g.toFun (f.toFun i) }\r\n\r\nstructure ColoredOperad {α} (A : LList α × α ⥤ Type) where\r\n  compose (L : LList (LList α × α)) (c : α) : \r\n    L.map A.obj → A.obj (L.map (·.2), c) → A.obj ((L.map (·.1)).flatten, c)\r\n  assoc {L : LList (LList (LList α × α) × α)} {c : α}\r\n      (xs : (L.map (·.1)).flatten.map A.obj)\r\n      (ys : L.map fun l => A.obj (l.1.map (·.2), l.2))\r\n      (z : A.obj (L.map (·.2), c)) : \r\n    compose (L.map fun l => (l.1.map (·.1) |>.flatten, l.2)) c \r\n        (fun i => compose (L.f i).1 (L.f i).2 (fun j => xs ⟨i, j⟩) (ys i)) z = \r\n      A.map { toFun := fun i => by obtain ⟨⟨i, j⟩, k⟩ := i; exact ⟨i, ⟨j, k⟩⟩ }\r\n        (compose (L.map (·.1) |>.flatten) c \r\n          xs (compose (L.map fun l => (l.1.map (·.2), l.2)) c ys z))\r\n```",
              "createdAt": "2025-01-11T11:33:03Z",
              "author": {
                "login": "kim-em"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6aGxrz",
              "body": "Oh, that's not right, I intended for the homs to all be bijections. I think it would not be say hard to patch.",
              "createdAt": "2025-01-11T22:37:27Z",
              "author": {
                "login": "kim-em"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6bJL8U",
              "body": "That's a nice definition of colored operads! And I think my main takeaway at this point is that I'm too much of a non-expert to be adding operads to Mathlib :) and it would be better left to someone else. Really I just wanted to get Clone's in, and (in my limited scope of knowledge and experience) clones extend operads, so I wanted to have those in there first (in the same way that, say, rings extend goups, so you want a definition of group first). Of course, the actual practical definition of Clone doesn't `extend Operad` because that would be very cumbersome and impractical to use.\r\n\r\nAt this point I'm thinking that I should just separate out the Clone part of this PR and just PR that, and leave someone else with more category theory background to define (colored, non-colored, symmetric...) operads.",
              "createdAt": "2025-01-20T16:45:38Z",
              "author": {
                "login": "Timeroot"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6bLsqH",
              "body": "That sounds like a good idea. I've heard several people interested in Post's theorem, so if we can get the ball rolling in  that directionw ithout get tangled up in operads that might nice.",
              "createdAt": "2025-01-21T03:12:10Z",
              "author": {
                "login": "kim-em"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6bYjMz",
              "body": "I've been slowly working my way through this series of PRs, and I think I've reached the same conclusion. I would like to see the definition of operads be quite a bit more battle tested: can we define the usual suspects, like the associative operad, the little intervals operad, and then some coloured operads. How do we make things work in an enriched setting? Etc...\r\n\r\nI don't know anything about clones. But if they admit a definition that doesn't use operads, I would go with that for now. We can always refactor later.",
              "createdAt": "2025-01-22T10:49:20Z",
              "author": {
                "login": "jcommelin"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6bYj5d",
              "body": "If you agree, then I suggest you go ahead with that refactor, and let's close the other PRs for now, with a short sentence about the conclusion we reached.\r\n\r\nI should also add that I want to thank you for taking a stab at this material! I think operads will be a challenge to get working in the right generality, and you have provided an initial datapoint about how it could be done.",
              "createdAt": "2025-01-22T10:50:42Z",
              "author": {
                "login": "jcommelin"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6c4jPC",
              "body": "This PR/issue depends on:\n* ~~leanprover-community/mathlib4#20133~~\n* ~~leanprover-community/mathlib4#20134~~\n* ~~leanprover-community/mathlib4#20138~~\n* ~~leanprover-community/mathlib4#20141~~\nBy **[Dependent Issues](https://github.com/z0al/dependent-issues)** (🤖). Happy coding!\n<!-- By Dependent Issues (Action) - DO NOT REMOVE -->",
              "createdAt": "2025-02-03T21:03:16Z",
              "author": {
                "login": "mathlib4-dependent-issues-bot"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "1a0ea40a50b2662b64c9bc1eca7588ef567668a7",
                "additions": 871,
                "deletions": 0,
                "committedDate": "2024-12-16T06:57:36Z",
                "author": {
                  "name": "Alex Meiburg",
                  "email": "timeroot.alex@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "d896066323fe7acd9b654aca9553e7c89da2e6f3",
                "additions": 188,
                "deletions": 371,
                "committedDate": "2024-12-18T04:12:25Z",
                "author": {
                  "name": "Alex Meiburg",
                  "email": "timeroot.alex@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "8aae993d9f3544602e8018227300641b69e5d634",
                "additions": 161,
                "deletions": 25,
                "committedDate": "2024-12-19T02:33:11Z",
                "author": {
                  "name": "Alex Meiburg",
                  "email": "timeroot.alex@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIEDOilA",
                        "name": "Lint style",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12405173349/job/34631557780"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIEDOh4A",
                        "name": "Add topic label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12405173235/job/34631557600"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIEDOh2w",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12405173250/job/34631557595"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIEDOiIA",
                        "name": "post-or-update-summary-comment",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12405173237/job/34631557664"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIEDJhww",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12405141932/job/34631475651"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIEDJhrA",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12405141927/job/34631475628"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIEDJimw",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12405141932/job/34631475867"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIEDOjVQ",
                        "name": "Check all files imported",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12405173349/job/34631557973"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIEDJi8A",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12405141927/job/34631475952"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIEDJiQg",
                        "name": "Build",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12405141927/job/34631475778"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIEDJjMA",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12405141932/job/34631476016"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIEDJj2g",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12405141932/job/34631476186"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIEEGyKA",
                        "name": "Post-CI job",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12405141927/job/34632479272"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIEDOsbw",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/34631560303"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIEDPk4A",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=20051&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "f32f781262d3d2099fbadfdeba30c3ef4c0c9630",
                "additions": 233,
                "deletions": 174,
                "committedDate": "2024-12-19T17:14:11Z",
                "author": {
                  "name": "Alex Meiburg",
                  "email": "timeroot.alex@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIEmlhwg",
                        "name": "Lint style",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12417511622/job/34668634562"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIEmlf8g",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12417511618/job/34668634098"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIEmlf7A",
                        "name": "post-or-update-summary-comment",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12417511623/job/34668634092"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIEmlaaw",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12417511002/job/34668632683"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIEmld8A",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12417511003/job/34668633584"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIEmldbA",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12417511002/job/34668633452"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIEmlgEg",
                        "name": "Check all files imported",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12417511622/job/34668634130"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIEmlaeQ",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12417511003/job/34668632697"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIEmlclw",
                        "name": "Build",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12417511003/job/34668633239"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIEmlb8A",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12417511002/job/34668633072"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIEmle4w",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12417511002/job/34668633827"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIEoIeSA",
                        "name": "Post-CI job",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12417511003/job/34670255688"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIEml4QQ",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/34668640321"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIEmnHFQ",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=20051&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "ff4eef1582bdb9d9df2f41803daadf4b17293a34",
                "additions": 102,
                "deletions": 38,
                "committedDate": "2024-12-19T19:37:20Z",
                "author": {
                  "name": "Alex Meiburg",
                  "email": "timeroot.alex@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "a00e66c7dfcb2736475ac69758ff83d3e548bb3d",
                "additions": 229,
                "deletions": 77,
                "committedDate": "2024-12-20T01:01:56Z",
                "author": {
                  "name": "Alex Meiburg",
                  "email": "timeroot.alex@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIE4WTDg",
                        "name": "set_pr_emoji",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12423554303/job/34687259406"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIE4aQ8Q",
                        "name": "Fix style issues from lint",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12423578050/job/34687324401"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIE4RB0Q",
                        "name": "Lint style",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12423520677/job/34687173073"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIE4aQSA",
                        "name": "Add ready-to-merge or delegated label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12423578051/job/34687324232"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIE4RB0A",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12423520684/job/34687173072"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIE4aQZA",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12423578046/job/34687324260"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIE4RB3w",
                        "name": "post-or-update-summary-comment",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12423520687/job/34687173087"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIE4Q-Yg",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12423520248/job/34687172194"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIE4Q-XA",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12423520245/job/34687172188"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIE4Q_zA",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12423520248/job/34687172556"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIE4RCqw",
                        "name": "Check all files imported",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12423520677/job/34687173291"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIE4Q-9Q",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12423520245/job/34687172341"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIE4Q_jg",
                        "name": "Build",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12423520245/job/34687172494"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIE4Q_GQ",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12423520248/job/34687172377"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIE4RAcg",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12423520248/job/34687172722"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIE4gRiw",
                        "name": "Post-CI job",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12423520245/job/34687422859"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIE4RQBA",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/34687176708"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIE4RzZg",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=20051&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "3b7b0c60705ee8830c09160833d55fc6045b6ba6",
                "additions": 41,
                "deletions": 34,
                "committedDate": "2024-12-20T01:37:09Z",
                "author": {
                  "name": "Alex Meiburg",
                  "email": "timeroot.alex@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIE5NgCw",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12423896803/job/34688163851"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIE5NgJQ",
                        "name": "post-or-update-summary-comment",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12423896800/job/34688163877"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIE5NfgQ",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12423896531/job/34688163713"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIE5NduQ",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12423896530/job/34688163257"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIE5Ng1w",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12423896804/job/34688164055"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIE5NgKQ",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12423896531/job/34688163881"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIE5Nekw",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12423896530/job/34688163475"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIE5NgMQ",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12423896804/job/34688163889"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIE5Nfkw",
                        "name": "Build",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12423896530/job/34688163731"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIE5NeSQ",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12423896531/job/34688163401"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIE5Ng4Q",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12423896531/job/34688164065"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIE5cNhA",
                        "name": "Post-CI job",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12423896530/job/34688404868"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIE5NseA",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/34688167032"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIE5Oasw",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=20051&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "837048e9660f718602f34e6eb667dfb88cc5e622",
                "additions": 2,
                "deletions": 4,
                "committedDate": "2024-12-20T01:51:17Z",
                "author": {
                  "name": "Alex Meiburg",
                  "email": "timeroot.alex@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIFiAd8A",
                        "name": "set_pr_emoji",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12438646484/job/34730941936"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIhkWg3w",
                        "name": "set_pr_emoji",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13122775809/job/36612448479"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIQfHgGQ",
                        "name": "Fix style issues from lint",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12722263620/job/35466108953"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIQfIKgA",
                        "name": "Fix style issues from lint",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12722268979/job/35466119808"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIQfLRfw",
                        "name": "Fix style issues from lint",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12722294938/job/35466170751"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIQhJ_kg",
                        "name": "Fix style issues from lint",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12723287428/job/35468246930"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIQfHgLQ",
                        "name": "Add ready-to-merge or delegated label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12722263622/job/35466108973"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIQfIKLw",
                        "name": "Add ready-to-merge or delegated label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12722268984/job/35466119727"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIQfLReQ",
                        "name": "Add ready-to-merge or delegated label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12722294930/job/35466170745"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIQhJ_jQ",
                        "name": "Add ready-to-merge or delegated label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12723287424/job/35468246925"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIE5k4Bw",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12424038746/job/34688546823"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIQfHgHg",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12722263613/job/35466108958"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIQfIKKQ",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12722268991/job/35466119721"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIQfLRag",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12722294926/job/35466170730"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIQhJ_iA",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12723287425/job/35468246920"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIE5k4OQ",
                        "name": "post-or-update-summary-comment",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12424038749/job/34688546873"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIE5k13g",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12424038505/job/34688546270"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIE5k2bQ",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12424038506/job/34688546413"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIE5k3-w",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12424038744/job/34688546811"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIE5k3Iw",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12424038505/job/34688546595"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIE5k2_w",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12424038506/job/34688546559"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIE5k4dg",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12424038744/job/34688546934"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIE5k2hw",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12424038505/job/34688546439"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIE5k1uA",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12424038506/job/34688546232"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIE5k3qA",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12424038505/job/34688546728"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIE5yAeg",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12424038506/job/34688761978"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIE5lEKg",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/34688549930"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIE5lmew",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=20051&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            }
          ]
        },
        "createdAt": "2024-12-19T02:37:09Z",
        "deletions": 0,
        "files": {
          "nodes": [
            {
              "path": "Mathlib.lean",
              "additions": 5,
              "deletions": 0
            },
            {
              "path": "Mathlib/Algebra/Operad/Basic.lean",
              "additions": 100,
              "deletions": 0
            },
            {
              "path": "Mathlib/Algebra/Operad/Clone.lean",
              "additions": 297,
              "deletions": 0
            },
            {
              "path": "Mathlib/Algebra/Operad/Instances.lean",
              "additions": 299,
              "deletions": 0
            },
            {
              "path": "Mathlib/Algebra/Operad/Operad.lean",
              "additions": 136,
              "deletions": 0
            },
            {
              "path": "Mathlib/Algebra/Operad/Perm.lean",
              "additions": 255,
              "deletions": 0
            },
            {
              "path": "Mathlib/Data/Fin/Basic.lean",
              "additions": 12,
              "deletions": 0
            }
          ]
        },
        "headRefName": "operad_clone",
        "headRefOid": "837048e9660f718602f34e6eb667dfb88cc5e622",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c6Ft88q",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c8AAAABViJjTQ",
              "color": "33DBEC",
              "name": "t-algebra"
            }
          ]
        },
        "latestReviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c6Xq_MB",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "kim-em"
              },
              "submittedAt": "2025-01-11T10:04:13Z"
            }
          ]
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "BLOCKED",
        "mergeable": "MERGEABLE",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 20051,
        "potentialMergeCommit": {
          "oid": "b9e0a82d081068f8f9bf9e708b1b5c6081f548ab"
        },
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": null,
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c6V_pcg",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "Timeroot"
              },
              "submittedAt": "2024-12-20T01:07:31Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6Xq0sL",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "kim-em"
              },
              "submittedAt": "2025-01-11T07:15:18Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6Xq0ud",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "kim-em"
              },
              "submittedAt": "2025-01-11T07:16:06Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6Xq071",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "kim-em"
              },
              "submittedAt": "2025-01-11T07:19:56Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6Xq_MB",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "kim-em"
              },
              "submittedAt": "2025-01-11T10:04:13Z"
            }
          ]
        },
        "reviewThreads": {
          "nodes": [
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5w2ap5",
                    "body": "This is a very ugly long proof and I would very much like to see it cleaned up. I will try, later, I guess.",
                    "createdAt": "2024-12-20T01:07:31Z",
                    "author": {
                      "login": "Timeroot"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5x9Zo2",
                    "body": "This file should be renamed `Defs`.",
                    "createdAt": "2025-01-11T07:15:18Z",
                    "author": {
                      "login": "kim-em"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5x9Z3O",
                    "body": "(and I guess `Basic` needs renaming too if that is even more basic that this file!)",
                    "createdAt": "2025-01-11T07:19:56Z",
                    "author": {
                      "login": "kim-em"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5x9Zra",
                    "body": "I'm a bit unconvinced these two classes even belong in the same file.",
                    "createdAt": "2025-01-11T07:16:06Z",
                    "author": {
                      "login": "kim-em"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5x9ipK",
                    "body": "I'm not sure that it would be harder: you're currently doing a lot of suffering with `PermFinPadAt` and friends.\r\n\r\nI'm also a bit worried that this approach is harder to generalize to the coloured case (where at least in my experience all the interesting examples lie?). But I guess we have to get started.\r\n\r\nI think the material in Operad/Perm could be made a lot nicer.",
                    "createdAt": "2025-01-11T10:04:12Z",
                    "author": {
                      "login": "kim-em"
                    }
                  }
                ]
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjU2ODczMw==",
              "login": "Timeroot"
            },
            {
              "id": "MDQ6VXNlcjU2MzY3MDU=",
              "login": "jcommelin"
            },
            {
              "id": "MDQ6VXNlcjQ3Nzk1Ng==",
              "login": "kim-em"
            },
            {
              "id": "U_kgDOCsITAQ",
              "login": "mathlib4-dependent-issues-bot"
            }
          ]
        },
        "state": "OPEN",
        "statusCheckRollup": {
          "contexts": {
            "nodes": [
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIFiAd8A",
                "name": "set_pr_emoji",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12438646484/job/34730941936"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIhkWg3w",
                "name": "set_pr_emoji",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13122775809/job/36612448479"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIQfHgGQ",
                "name": "Fix style issues from lint",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12722263620/job/35466108953"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIQfIKgA",
                "name": "Fix style issues from lint",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12722268979/job/35466119808"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIQfLRfw",
                "name": "Fix style issues from lint",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12722294938/job/35466170751"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIQhJ_kg",
                "name": "Fix style issues from lint",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12723287428/job/35468246930"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIQfHgLQ",
                "name": "Add ready-to-merge or delegated label",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12722263622/job/35466108973"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIQfIKLw",
                "name": "Add ready-to-merge or delegated label",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12722268984/job/35466119727"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIQfLReQ",
                "name": "Add ready-to-merge or delegated label",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12722294930/job/35466170745"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIQhJ_jQ",
                "name": "Add ready-to-merge or delegated label",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12723287424/job/35468246925"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIE5k4Bw",
                "name": "label-and-report-new-contributor",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12424038746/job/34688546823"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIQfHgHg",
                "name": "Ping maintainers on Zulip",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12722263613/job/35466108958"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIQfIKKQ",
                "name": "Ping maintainers on Zulip",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12722268991/job/35466119721"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIQfLRag",
                "name": "Ping maintainers on Zulip",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12722294926/job/35466170730"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIQhJ_iA",
                "name": "Ping maintainers on Zulip",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12723287425/job/35468246920"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIE5k4OQ",
                "name": "post-or-update-summary-comment",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12424038749/job/34688546873"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIE5k13g",
                "name": "Cancel Previous Runs (CI)",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12424038505/job/34688546270"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIE5k2bQ",
                "name": "Cancel Previous Runs (CI)",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12424038506/job/34688546413"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIE5k3-w",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12424038744/job/34688546811"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIE5k3Iw",
                "name": "Lint style (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12424038505/job/34688546595"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIE5k2_w",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12424038506/job/34688546559"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIE5k4dg",
                "name": "Check all files imported",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12424038744/job/34688546934"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIE5k2hw",
                "name": "Build (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12424038505/job/34688546439"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIE5k1uA",
                "name": "Build",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12424038506/job/34688546232"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIE5k3qA",
                "name": "Post-CI job (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12424038505/job/34688546728"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIE5yAeg",
                "name": "Post-CI job",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12424038506/job/34688761978"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIE5lEKg",
                "name": "New Contributor Check",
                "conclusion": "NEUTRAL",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/34688549930"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIE5lmew",
                "name": "Summary",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=20051&login=leanprover-community&repository=mathlib4"
              }
            ]
          }
        },
        "title": "feat: operads and clones",
        "updatedAt": "2025-02-03T21:03:18Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/20051",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "1a0ea40a50b2662b64c9bc1eca7588ef567668a7"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "d896066323fe7acd9b654aca9553e7c89da2e6f3"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "8aae993d9f3544602e8018227300641b69e5d634"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6YJmdO",
              "createdAt": "2024-12-19T02:38:00Z",
              "body": "### PR summary [837048e966](https://github.com/leanprover-community/mathlib4/pull/20051/commits/837048e9660f718602f34e6eb667dfb88cc5e622)\n\n<details><summary>\n\n#### Import changes for modified files\n\n</summary>\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n| `Mathlib.Algebra.Operad.Basic` (new file)|188|\n| `Mathlib.Algebra.Operad.Perm` (new file)|459|\n| `Mathlib.Algebra.Operad.Operad` (new file)|471|\n| `Mathlib.Algebra.Operad.Clone` (new file)|530|\n| `Mathlib.Algebra.Operad.Instances` (new file)|836|\n\n</details>\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ ClonalProperty`\n`+ Clone`\n`+ Commute_with_φ_Clone`\n`+ ComposableOne_toOne`\n`+ Conjunctive_Clone`\n`+ Disjunctive_Clone`\n`+ EssentiallyUnary_Clone`\n`+ Func_Clone`\n`+ Function.CommutesWithEndo`\n`+ Function.Conjunctive`\n`+ Function.Disjunctive`\n`+ Function.EssentiallyUnary`\n`+ Function.IsAffineMap`\n`+ Function.IsMultiargAffine`\n`+ IsMultiargAffine_Clone`\n`+ IsMultiargAffine_iff_IsAffineMap`\n`+ Monotone_Clone`\n`+ MultiComposable`\n`+ OneGradedOne`\n`+ Operad`\n`+ PermFinPadAt`\n`+ PermFinPadAt_core`\n`+ PermFinPadAt_core.LeftInverse`\n`+ PermFinPadAt_eq_position`\n`+ PermFinPadAt_gt_gt_position`\n`+ PermFinPadAt_gt_lt_position`\n`+ PermFinPadAt_lt_gt_position`\n`+ PermFinPadAt_lt_lt_position`\n`+ PermFinPadAt_symm`\n`+ PermFinPadLeftRight`\n`+ PermFinPadTo`\n`+ PermFinPadTo_eq_PermFinPadLeftRight`\n`+ PermFinPadTo_eq_position`\n`+ PermFinPadTo_gt_position`\n`+ PermFinPadTo_lt_position`\n`+ ProjectableProperty`\n`+ SigmaMulAction`\n`+ Superposable`\n`+ SuperposableProperty`\n`+ SymmOperad`\n`+ SymmOperad.compose_smul`\n`+ SymmOperad.smul_compose`\n`+ and_ClonalProperty`\n`+ clonal_CommutesWithEndo`\n`+ clonal_Conjunctive`\n`+ clonal_Disjunctive`\n`+ clonal_EssentiallyUnary`\n`+ clonal_IsAffineMap`\n`+ clonal_IsMultiargAffine`\n`+ clonal_Monotone`\n`+ clonal_kWisePropPreserving`\n`+ cloneCompose`\n`+ cloneCompose_assoc`\n`+ cloneCompose_id`\n`+ cloneCompse_comm`\n`+ clonePadTo`\n`+ clonePadTo_zero`\n`+ clone_AffineMap`\n`+ clone_ClonalProperty`\n`+ clone_id_left`\n`+ clone_proj_left`\n`+ clone_proj_right`\n`+ clone_toSymmOperad`\n`+ composeAt`\n`+ composeAt_assoc`\n`+ composeAt_assoc_Fin`\n`+ composeAt_comm`\n`+ composeAt_comm_Fin`\n`+ composeAt_comm_four`\n`+ composeAt_comm_swap`\n`+ composeAt_id`\n`+ conjunctive_min`\n`+ disjunctive_max`\n`+ eq_id_sigma_id`\n`+ eq_id_sigma_one`\n`+ function_superpose`\n`+ hAdd`\n`+ id_composeAt`\n`+ instance : ∀ (i : ℕ), MulAction (Perm (Fin i)) (A i)`\n`+ kWisePropPreserving`\n`+ kWisePropPreserving_Clone`\n`+ sigmaMul_to_MulAction`\n`+ superpose`\n`+ val_hAdd`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>\n\n---\n\n<details><summary>No changes to technical debt.</summary>\n\nYou can run this locally as\n```\n./scripts/technical-debt-metrics.sh pr_summary\n```\n* The `relative` value is the weighted *sum* of the differences with weight given by the *inverse* of the current value of the statistic.\n* The `absolute` value is the `relative` value divided by the total sum of the inverses of the current values (i.e. the weighted *average* of the differences).\n</details>",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "RenamedTitleEvent"
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "f32f781262d3d2099fbadfdeba30c3ef4c0c9630"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "ff4eef1582bdb9d9df2f41803daadf4b17293a34"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "a00e66c7dfcb2736475ac69758ff83d3e548bb3d"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6j3CV9zwAAAAOpZWix",
              "createdAt": "2024-12-20T01:05:15Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABViJjTQ",
                "name": "t-algebra"
              }
            },
            {
              "__typename": "ReadyForReviewEvent",
              "id": "RFRE_lADOFcwZ1c6j3CV9zwAAAAOpZWzn",
              "createdAt": "2024-12-20T01:05:28Z"
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6V_pcg",
              "createdAt": "2024-12-20T01:07:30Z",
              "body": "",
              "author": {
                "login": "Timeroot"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "3b7b0c60705ee8830c09160833d55fc6045b6ba6"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "837048e9660f718602f34e6eb667dfb88cc5e622"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6Yb0Cc",
              "createdAt": "2024-12-20T17:26:43Z",
              "body": "Operad is currently defined in terms of composing just two functions (and identities in all other slots). It would be good to add the \"fill all slots\" notion of composition instead, see e.g. the definition on Wikipedia:\r\n\r\n<img width=\"469\" alt=\"image\" src=\"https://github.com/user-attachments/assets/3aa41781-c059-4700-aa1f-d6f22cd781f5\" />\r\n\r\nWith an appropriate alternate constructor for `Operad` in terms of this other definition.",
              "author": {
                "login": "Timeroot"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6Yb5xb",
              "createdAt": "2024-12-20T17:42:49Z",
              "body": "Could you please split this into 5 PRs? One for each new file?\r\nAnd have all of them refer back to this one, so that the context is clear.",
              "author": {
                "login": "jcommelin"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6Yb6Fw",
              "createdAt": "2024-12-20T17:43:47Z",
              "body": "\r\n> Marking as draft at the moment while there are some sorries, but wanting this PR up hoping for some preliminary comments\r\n\r\nAlso, it seems that it is time to remove this disclaimer from the PR commit message. :grinning: ",
              "author": {
                "login": "jcommelin"
              }
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5uLM4K",
              "createdAt": "2024-12-20T21:07:13Z",
              "source": {
                "id": "PR_kwDOFcwZ1c6F9EkE",
                "title": "feat: operads and clones: basics and notations",
                "url": "https://github.com/leanprover-community/mathlib4/pull/20133"
              }
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5uLNzF",
              "createdAt": "2024-12-20T21:08:40Z",
              "source": {
                "id": "PR_kwDOFcwZ1c6F9E5R",
                "title": "feat: operads and clones: permutations",
                "url": "https://github.com/leanprover-community/mathlib4/pull/20134"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6j3CV9zwAAAAOqAVxU",
              "createdAt": "2024-12-20T21:20:43Z",
              "label": {
                "id": "MDU6TGFiZWwzMjg4OTQyMDg2",
                "name": "blocked-by-other-PR"
              }
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5uLmuS",
              "createdAt": "2024-12-20T21:53:05Z",
              "source": {
                "id": "PR_kwDOFcwZ1c6F9OqY",
                "title": "feat: operads and clones: `Operad` and `SymmOperad`",
                "url": "https://github.com/leanprover-community/mathlib4/pull/20138"
              }
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5uLsuX",
              "createdAt": "2024-12-20T22:04:46Z",
              "source": {
                "id": "PR_kwDOFcwZ1c6F9RCI",
                "title": "feat: operads and clones: Clone class",
                "url": "https://github.com/leanprover-community/mathlib4/pull/20141"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6YdJSD",
              "createdAt": "2024-12-20T22:06:49Z",
              "body": "> Could you please split this into 5 PRs? One for each new file? And have all of them refer back to this one, so that the context is clear.\r\n\r\nAlright, I split off four PRs for other files. This leaves just `Instances.lean`, which is the unique leaf-file in this PR. That could just be this PR, if that makes sense, since it's already dependent on the other four. Or should make its own dedicated PR?",
              "author": {
                "login": "Timeroot"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6YeQ-z",
              "createdAt": "2024-12-21T10:01:09Z",
              "body": "Thanks! And yes, the final file can just stay in this PR.",
              "author": {
                "login": "jcommelin"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6Xq0sL",
              "createdAt": "2025-01-11T07:15:18Z",
              "body": "",
              "author": {
                "login": "kim-em"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6Xq0ud",
              "createdAt": "2025-01-11T07:16:06Z",
              "body": "",
              "author": {
                "login": "kim-em"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6Xq_MB",
              "createdAt": "2025-01-11T10:04:11Z",
              "body": "",
              "author": {
                "login": "kim-em"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6aFzAm",
              "createdAt": "2025-01-11T11:33:03Z",
              "body": "For either your delectation or horror, I couldn't resist:\r\n\r\n```\r\nimport Mathlib\r\n\r\nstructure LList (α : Type _) where\r\n  ι : Type\r\n  [finEnum : FinEnum ι]\r\n  f : ι → α\r\n\r\nattribute [instance] LList.finEnum\r\n\r\nnamespace LList\r\n\r\n@[simps]\r\ndef map {α β} (L : LList α) (f : α → β) : LList β := { L with f := fun i => f (L.f i) }\r\n\r\ndef toList {α} (L : LList α) : List α := (FinEnum.toList L.ι).map L.f\r\n\r\n@[simps]\r\ndef flatten {α} (L : LList (LList α)) : LList α :=\r\n  { ι := Σ i : L.ι, (L.f i).ι\r\n    f := fun ⟨i, i'⟩ => (L.f i).f i' }\r\n\r\nstructure Hom {α} (L L' : LList α) where\r\n  toFun : L.ι → L'.ι\r\n  w : ∀ i, L'.f (toFun i) = L.f i := by aesop_cat\r\n\r\nattribute [simp] Hom.w\r\n\r\nend LList\r\n\r\ninstance : CoeSort (LList Type) Type where\r\n  coe L := (i : L.ι) → L.f i\r\n\r\nopen CategoryTheory\r\n\r\ninstance {α} : Category (LList α × α) where\r\n  Hom x y := LList.Hom x.1 y.1\r\n  id x := ⟨fun i => i, fun i => rfl⟩\r\n  comp f g := { toFun := fun i => g.toFun (f.toFun i) }\r\n\r\nstructure ColoredOperad {α} (A : LList α × α ⥤ Type) where\r\n  compose (L : LList (LList α × α)) (c : α) : \r\n    L.map A.obj → A.obj (L.map (·.2), c) → A.obj ((L.map (·.1)).flatten, c)\r\n  assoc {L : LList (LList (LList α × α) × α)} {c : α}\r\n      (xs : (L.map (·.1)).flatten.map A.obj)\r\n      (ys : L.map fun l => A.obj (l.1.map (·.2), l.2))\r\n      (z : A.obj (L.map (·.2), c)) : \r\n    compose (L.map fun l => (l.1.map (·.1) |>.flatten, l.2)) c \r\n        (fun i => compose (L.f i).1 (L.f i).2 (fun j => xs ⟨i, j⟩) (ys i)) z = \r\n      A.map { toFun := fun i => by obtain ⟨⟨i, j⟩, k⟩ := i; exact ⟨i, ⟨j, k⟩⟩ }\r\n        (compose (L.map (·.1) |>.flatten) c \r\n          xs (compose (L.map fun l => (l.1.map (·.2), l.2)) c ys z))\r\n```",
              "author": {
                "login": "kim-em"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6aGxrz",
              "createdAt": "2025-01-11T22:37:27Z",
              "body": "Oh, that's not right, I intended for the homs to all be bijections. I think it would not be say hard to patch.",
              "author": {
                "login": "kim-em"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6bJL8U",
              "createdAt": "2025-01-20T16:45:38Z",
              "body": "That's a nice definition of colored operads! And I think my main takeaway at this point is that I'm too much of a non-expert to be adding operads to Mathlib :) and it would be better left to someone else. Really I just wanted to get Clone's in, and (in my limited scope of knowledge and experience) clones extend operads, so I wanted to have those in there first (in the same way that, say, rings extend goups, so you want a definition of group first). Of course, the actual practical definition of Clone doesn't `extend Operad` because that would be very cumbersome and impractical to use.\r\n\r\nAt this point I'm thinking that I should just separate out the Clone part of this PR and just PR that, and leave someone else with more category theory background to define (colored, non-colored, symmetric...) operads.",
              "author": {
                "login": "Timeroot"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6bLsqH",
              "createdAt": "2025-01-21T03:12:10Z",
              "body": "That sounds like a good idea. I've heard several people interested in Post's theorem, so if we can get the ball rolling in  that directionw ithout get tangled up in operads that might nice.",
              "author": {
                "login": "kim-em"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6bYjMz",
              "createdAt": "2025-01-22T10:49:20Z",
              "body": "I've been slowly working my way through this series of PRs, and I think I've reached the same conclusion. I would like to see the definition of operads be quite a bit more battle tested: can we define the usual suspects, like the associative operad, the little intervals operad, and then some coloured operads. How do we make things work in an enriched setting? Etc...\r\n\r\nI don't know anything about clones. But if they admit a definition that doesn't use operads, I would go with that for now. We can always refactor later.",
              "author": {
                "login": "jcommelin"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6bYj5d",
              "createdAt": "2025-01-22T10:50:42Z",
              "body": "If you agree, then I suggest you go ahead with that refactor, and let's close the other PRs for now, with a short sentence about the conclusion we reached.\r\n\r\nI should also add that I want to thank you for taking a stab at this material! I think operads will be a challenge to get working in the right generality, and you have provided an initial datapoint about how it could be done.",
              "author": {
                "login": "jcommelin"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6j3CV9zwAAAAPDtuPr",
              "createdAt": "2025-02-03T21:03:15Z",
              "label": {
                "id": "MDU6TGFiZWwzMjg4OTQyMDg2",
                "name": "blocked-by-other-PR"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6c4jPC",
              "createdAt": "2025-02-03T21:03:16Z",
              "body": "This PR/issue depends on:\n* ~~leanprover-community/mathlib4#20133~~\n* ~~leanprover-community/mathlib4#20134~~\n* ~~leanprover-community/mathlib4#20138~~\n* ~~leanprover-community/mathlib4#20141~~\nBy **[Dependent Issues](https://github.com/z0al/dependent-issues)** (🤖). Happy coding!\n<!-- By Dependent Issues (Action) - DO NOT REMOVE -->",
              "author": {
                "login": "mathlib4-dependent-issues-bot"
              }
            }
          ]
        }
      }
    }
  }
}
