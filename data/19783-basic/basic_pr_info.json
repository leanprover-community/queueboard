{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 283,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "JakobStiefel"
        },
        "baseRefName": "master",
        "body": "define characteristic functions. Show that characteristic functions separate finite measures. \r\n\r\n---\r\n\r\n- [x] depends on: #19780\r\n- [x] depends on: #19781\r\n- [x] depends on: #19782\r\n- [x] depends on: #20604\r\n\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nFor details on the \"pull request lifecycle\" in mathlib, please see:\r\nhttps://leanprover-community.github.io/contribute/index.html\r\n\r\nIn particular, note that most reviewers will only notice your PR\r\nif it passes the continuous integration checks.\r\nPlease ask for help on https://leanprover.zulipchat.com if needed.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nIf you are moving or deleting declarations, please include these lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nMoves:\r\n- Vector.* -> Mathlib.Vector.*\r\n- ...\r\n\r\nDeletions:\r\n- Nat.bit1_add_bit1\r\n- ...\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n\r\n-->\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 5,
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c6WghZI",
              "body": "### PR summary [138eeaa969](https://github.com/leanprover-community/mathlib4/pull/19783/commits/138eeaa96992284580e405f6bdfc60c075f15c5e)\n\nImport changes exceeding 2%\n\n| %      | File |\n| -      | -    |\n| +2.87% | `Mathlib.Probability.Moments.ComplexMGF` |\n\n<details><summary>\n\n#### Import changes for modified files\n\n</summary>\n\nDependency changes\n\n| File | Base Count | Head Count | Change |\n| --- | --- | --- | --- |\n| Mathlib.Probability.Moments.ComplexMGF | 2261 | 2326 | +65 (+2.87%) |\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n| `Mathlib.Probability.Moments.SubGaussian`|57|\n| `Mathlib.Probability.Moments.MGFAnalytic` `Mathlib.Probability.Moments.Tilted`|61|\n| `Mathlib.Probability.Moments.ComplexMGF`|65|\n| `Mathlib.MeasureTheory.Measure.CharacteristicFunction` (new file)|2233|\n\n</details>\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ _root_.MeasureTheory.Measure.ext_of_complexMGF_eq`\n`+ _root_.MeasureTheory.Measure.ext_of_complexMGF_id_eq`\n`+ expAddChar`\n`+ expAddChar_ne_one`\n`+ ext_of_charFun_eq`\n`+ mem_probCharPoly`\n`+ probChar`\n`+ probCharAlgHom`\n`+ probCharAlgHom_apply`\n`+ probCharMonoidHom`\n`+ probCharMonoidHom_apply`\n`+ probCharPoly`\n`+ probChar_SeparatesPoints`\n`+ probChar_apply`\n`+ probChar_inv`\n`+ probChar_mem_probCharPoly`\n`+ probChar_mul`\n`+ probChar_one`\n`+ separatesPoints_probCharPoly`\n`+ starRingEnd_addChar`\n`+ star_addChar`\n`+ star_mem_range_probCharAlgHom`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>\n\n---\n\n<details><summary>No changes to technical debt.</summary>\n\nYou can run this locally as\n```\n./scripts/technical-debt-metrics.sh pr_summary\n```\n* The `relative` value is the weighted *sum* of the differences with weight given by the *inverse* of the current value of the statistic.\n* The `absolute` value is the `relative` value divided by the total sum of the inverses of the current values (i.e. the weighted *average* of the differences).\n</details>\n",
              "createdAt": "2024-12-07T13:06:55Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6eyIag",
              "body": "At some point I wrote code for the star-subalgebra of exponential polynomials (which is the same as what you do for `probChar_starSubalgebra`, but I did not take a general `AddChar`). I took some time today to generalize my code to match the generality you assumed, for the sake of comparison with yours. It's here: https://github.com/RemyDegenne/CLT/blob/tight/Clt/ExpPoly.lean (in the section `PR` at the beginning of the file; disregard the bad names for the defs).\r\n\r\nThe way I did it was to first define a monoid homomorphism `Multiplicative W ‚Üí* (V ‚Üí·µá ‚ÑÇ)` from `probChar`. The monoid homomorphism can be lifted to a homomorphism of algebras from `AddMonoidAlgebra ‚Ñù W` to `V ‚Üí·µá ‚ÑÇ` using `AddMonoidAlgebra.lift`. The subalgebra we want is the range of this homomorphism. The ‚Äústar‚Äù part can finally be checked easily. The proofs of separation are copied (and minimally adapted) from your code.\r\nIt looks like that approach leads to simpler proofs compared to what you did, and it avoids the big proof of boundedness you have in `probChar_starSubalgebra_bounded`. What do you think?",
              "createdAt": "2025-02-17T19:31:44Z",
              "author": {
                "login": "RemyDegenne"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6ispeo",
              "body": "> At some point I wrote code for the star-subalgebra of exponential polynomials (which is the same as what you do for `probChar_starSubalgebra`, but I did not take a general `AddChar`). I took some time today to generalize my code to match the generality you assumed, for the sake of comparison with yours. It's here: https://github.com/RemyDegenne/CLT/blob/tight/Clt/ExpPoly.lean (in the section `PR` at the beginning of the file; disregard the bad names for the defs).\r\n> \r\n> The way I did it was to first define a monoid homomorphism `Multiplicative W ‚Üí* (V ‚Üí·µá ‚ÑÇ)` from `probChar`. The monoid homomorphism can be lifted to a homomorphism of algebras from `AddMonoidAlgebra ‚Ñù W` to `V ‚Üí·µá ‚ÑÇ` using `AddMonoidAlgebra.lift`. The subalgebra we want is the range of this homomorphism. The ‚Äústar‚Äù part can finally be checked easily. The proofs of separation are copied (and minimally adapted) from your code. It looks like that approach leads to simpler proofs compared to what you did, and it avoids the big proof of boundedness you have in `probChar_starSubalgebra_bounded`. What do you think?\r\n\r\nNice! Compared to your code, I now defined `expPoly` as subalgebra over `‚ÑÇ` instead of `‚Ñù`, which makes it easier to apply `ext_of_forall_mem_subalgbra_integral_eq_of_pseudoEMetric_complete_countable`. \r\n\r\nAs an example, this can be used to show that moment generating functions are separating. I added some code on this, what do you think?",
              "createdAt": "2025-03-17T13:56:36Z",
              "author": {
                "login": "JakobStiefel"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6jGEom",
              "body": "This PR/issue depends on:\n* ~~leanprover-community/mathlib4#19780~~\n* ~~leanprover-community/mathlib4#19781~~\n* ~~leanprover-community/mathlib4#19782~~\n* ~~leanprover-community/mathlib4#20604~~\nBy **[Dependent Issues](https://github.com/z0al/dependent-issues)** (ü§ñ). Happy coding!\n<!-- By Dependent Issues (Action) - DO NOT REMOVE -->",
              "createdAt": "2025-03-19T11:22:58Z",
              "author": {
                "login": "mathlib4-dependent-issues-bot"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6jGWBD",
              "body": "Are all the results about `span` used for anything? If not, could you remove them from this PR?",
              "createdAt": "2025-03-19T11:48:52Z",
              "author": {
                "login": "RemyDegenne"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6jiZ9a",
              "body": "By the way, I wrote too much of the `probChar` code to merge this myself, so I'll find someone else to do the final review and merge.",
              "createdAt": "2025-03-21T15:21:51Z",
              "author": {
                "login": "RemyDegenne"
              }
            }
          ]
        },
        "closed": false,
        "closedAt": null,
        "createdAt": "2024-12-07T13:06:06Z",
        "deletions": 2,
        "files": {
          "nodes": [
            {
              "path": "Mathlib.lean",
              "additions": 1,
              "deletions": 0
            },
            {
              "path": "Mathlib/Analysis/Complex/Circle.lean",
              "additions": 19,
              "deletions": 0
            },
            {
              "path": "Mathlib/MeasureTheory/Measure/CharacteristicFunction.lean",
              "additions": 220,
              "deletions": 0
            },
            {
              "path": "Mathlib/MeasureTheory/Measure/FiniteMeasureExt.lean",
              "additions": 4,
              "deletions": 1
            },
            {
              "path": "Mathlib/Probability/Moments/ComplexMGF.lean",
              "additions": 39,
              "deletions": 1
            }
          ]
        },
        "headRefName": "Stiefel_CharFun",
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c6EaGnK",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c7P265b",
              "color": "f9d0c4",
              "name": "awaiting-author"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABViJqVA",
              "color": "33DBEC",
              "name": "t-measure-probability"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABb5aSCQ",
              "color": "8BBA68",
              "name": "new-contributor"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABwbfWPw",
              "color": "B60205",
              "name": "large-import"
            }
          ]
        },
        "number": 19783,
        "reviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c6g4N4s",
              "state": "COMMENTED",
              "author": {
                "login": "RemyDegenne"
              },
              "submittedAt": "2025-03-19T16:08:25Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6hIJH8",
              "state": "COMMENTED",
              "author": {
                "login": "RemyDegenne"
              },
              "submittedAt": "2025-03-20T15:47:54Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6hTXpP",
              "state": "COMMENTED",
              "author": {
                "login": "RemyDegenne"
              },
              "submittedAt": "2025-03-21T14:49:31Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6hThKX",
              "state": "COMMENTED",
              "author": {
                "login": "RemyDegenne"
              },
              "submittedAt": "2025-03-21T15:17:15Z"
            }
          ]
        },
        "state": "OPEN",
        "statusCheckRollup": {
          "contexts": {
            "nodes": [
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJJe49aQ",
                "name": "Lint style (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14035049638/job/39291075945"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJJe5Apw",
                "name": "label-and-report-new-contributor",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14035050078/job/39291076775"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJJe5A1Q",
                "name": "post-or-update-summary-comment",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14035050088/job/39291076821"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJJe49mQ",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14035049641/job/39291075993"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJJe4_Iw",
                "name": "Build (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14035049638/job/39291076387"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJJe4-9Q",
                "name": "Build",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14035049641/job/39291076341"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJJe5A4A",
                "name": "Post-CI job (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14035049638/job/39291076832"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJJfiSUQ",
                "name": "Post-CI job",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14035049641/job/39291753041"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJJe5ZAQ",
                "name": "New Contributor Check",
                "conclusion": "NEUTRAL",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/39291083009"
              }
            ]
          }
        },
        "title": "feat: definition and properties of characteristic functions",
        "updatedAt": "2025-03-24T12:19:12Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/19783"
      }
    }
  }
}
