{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 142,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "YaelDillies"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "Co-authored-by: Kyle Miller <kmill31415@gmail.com>\r\n\r\n---\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nFor details on the \"pull request lifecycle\" in mathlib, please see:\r\nhttps://leanprover-community.github.io/contribute/index.html\r\n\r\nIn particular, note that most reviewers will only notice your PR\r\nif it passes the continuous integration checks.\r\nPlease ask for help on https://leanprover.zulipchat.com if needed.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nIf you are moving or deleting declarations, please include these lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nMoves:\r\n- Vector.* -> List.Vector.*\r\n- ...\r\n\r\nDeletions:\r\n- Nat.bit1_add_bit1\r\n- ...\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n\r\n-->\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 2,
        "closed": false,
        "closedAt": null,
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c6e6HPX",
              "body": "### PR summary [e36af677cf](https://github.com/leanprover-community/mathlib4/pull/22048/commits/e36af677cfdb10b7af28226e2656e7b473b2b556)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n\n</details>\n\n---\n\n#### Declarations diff\n\nNo declarations were harmed in the making of this PR! üêô\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n---\n\n<details><summary>No changes to technical debt.</summary>\n\nYou can run this locally as\n```\n./scripts/technical-debt-metrics.sh pr_summary\n```\n* The `relative` value is the weighted *sum* of the differences with weight given by the *inverse* of the current value of the statistic.\n* The `absolute` value is the `relative` value divided by the total sum of the inverses of the current values (i.e. the weighted *average* of the differences).\n</details>\n",
              "createdAt": "2025-02-18T15:22:13Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6e_eWD",
              "body": "Lightly tested:\r\n```lean\r\nprivate inductive FinsetResult where\r\n  | finset (s : Term)\r\n  | univ\r\n  | filter (s : Term) (p : Term)\r\n\r\n/-- Delaborates a finset. In case it is a `Finset.filter`, `i` is used for the binder name. -/\r\nprivate def delabFinsetArg (i : Ident) :\r\n    DelabM FinsetResult := do\r\n  let s ‚Üê getExpr\r\n  if s.isAppOfArity ``Finset.univ 2 then\r\n    return .univ\r\n  else if s.isAppOfArity ``Finset.filter 4 then\r\n    let ss ‚Üê withNaryArg 3 delab\r\n    withNaryArg 1 do\r\n      if (‚Üê getExpr).isLambda then\r\n        withBindingBody i.getId do\r\n          let p ‚Üê delab\r\n          return .filter ss p\r\n      else\r\n        let p ‚Üê delab\r\n        return .filter ss (‚Üê `($p $i))\r\n  else\r\n    let ss ‚Üê delab\r\n    return .finset ss\r\n\r\n/-- Delaborator for `Finset.prod`. The `pp.piBinderTypes` option controls whether\r\nto show the domain type when the product is over `Finset.univ`. -/\r\n@[app_delab Finset.prod] def delabFinsetProd : Delab :=\r\n  whenPPOption getPPNotation <| withOverApp 5 <| do\r\n  let #[_, _, _, _, f] := (‚Üê getExpr).getAppArgs | failure\r\n  guard <| f.isLambda\r\n  let ppDomain ‚Üê getPPOption getPPPiBinderTypes\r\n  let (i, body) ‚Üê withAppArg <| withBindingBodyUnusedName fun i => do\r\n    return ((‚ü®i‚ü© : Ident), ‚Üê delab)\r\n  let res ‚Üê withNaryArg 3 <| delabFinsetArg i\r\n  match res with\r\n  | .finset ss => `(‚àè $i:ident ‚àà $ss, $body)\r\n  | .univ =>\r\n    let binder ‚Üê\r\n    if ppDomain then\r\n      let ty ‚Üê withNaryArg 0 delab\r\n      `(bigOpBinder| $i:ident : $ty)\r\n    else\r\n      `(bigOpBinder| $i:ident)\r\n    `(‚àè $binder:bigOpBinder, $body)\r\n  | .filter ss p =>\r\n    `(‚àè $i:ident ‚àà $ss with $p, $body)\r\n\r\n/-- Delaborator for `Finset.sum`. The `pp.piBinderTypes` option controls whether\r\nto show the domain type when the sum is over `Finset.univ`. -/\r\n@[app_delab Finset.sum] def delabFinsetSum : Delab :=\r\n  whenPPOption getPPNotation <| withOverApp 5 <| do\r\n  let #[_, _, _, _, f] := (‚Üê getExpr).getAppArgs | failure\r\n  guard <| f.isLambda\r\n  let ppDomain ‚Üê getPPOption getPPPiBinderTypes\r\n  let (i, body) ‚Üê withAppArg <| withBindingBodyUnusedName fun i => do\r\n    return ((‚ü®i‚ü© : Ident), ‚Üê delab)\r\n  let res ‚Üê withNaryArg 3 <| delabFinsetArg i\r\n  match res with\r\n  | .finset ss => `(‚àë $i:ident ‚àà $ss, $body)\r\n  | .univ =>\r\n    let binder ‚Üê\r\n    if ppDomain then\r\n      let ty ‚Üê withNaryArg 0 delab\r\n      `(bigOpBinder| $i:ident : $ty)\r\n    else\r\n      `(bigOpBinder| $i:ident)\r\n    `(‚àë $binder:bigOpBinder, $body)\r\n  | .filter ss p =>\r\n    `(‚àë $i:ident ‚àà $ss with $p, $body)\r\n```",
              "createdAt": "2025-02-19T03:45:29Z",
              "author": {
                "login": "kmill"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6fBSZJ",
              "body": "This prints `sum (filter s fun x ‚Ü¶ p x) fun x ‚Ü¶ f x` as `‚àë x ‚àà univ with p x, f x` instead of `‚àë x with p x, f x`, but thank you! I'll take it from there.",
              "createdAt": "2025-02-19T08:35:26Z",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6jNoXs",
              "body": "This looks reasonable and the tests show it behaves as it should, so I'm happy with this, but let's see if @kmill or @eric-wieser have thoughts",
              "createdAt": "2025-03-19T22:00:53Z",
              "author": {
                "login": "b-mehta"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "c0a9c3aa89f4de048dc337188cb762662e9438cb",
                "additions": 22,
                "deletions": 7,
                "committedDate": "2025-03-23T19:32:17Z",
                "author": {
                  "name": "Ya√´l Dillies",
                  "email": "yael.dillies@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "a64a472e1c4d2aae86249cd89a9314276a68deb1",
                "additions": 65,
                "deletions": 27,
                "committedDate": "2025-03-23T19:33:11Z",
                "author": {
                  "name": "Ya√´l Dillies",
                  "email": "yael.dillies@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "7a87240b1c8674566db00efa8020d0bdf804ccc9",
                "additions": 1,
                "deletions": 3,
                "committedDate": "2025-03-23T19:33:11Z",
                "author": {
                  "name": "Ya√´l Dillies",
                  "email": "yael.dillies@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "0a53f15fa517496236c02603c5bdd63e5658af63",
                "additions": 16,
                "deletions": 0,
                "committedDate": "2025-03-23T19:33:11Z",
                "author": {
                  "name": "Ya√´l Dillies",
                  "email": "yael.dillies@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "84f8f5f5738e8696e93e74dfa1ef499bd0a6830b",
                "additions": 32,
                "deletions": 8,
                "committedDate": "2025-03-23T19:33:11Z",
                "author": {
                  "name": "Ya√´l Dillies",
                  "email": "yael.dillies@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "442aab773b9609be130240f556db2a2b6ef6a668",
                "additions": 8,
                "deletions": 15,
                "committedDate": "2025-03-23T19:33:11Z",
                "author": {
                  "name": "Ya√´l Dillies",
                  "email": "yael.dillies@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "881b29eee62376ccfeaa5d5987a5d20159de9f3c",
                "additions": 49,
                "deletions": 14,
                "committedDate": "2025-03-23T19:33:11Z",
                "author": {
                  "name": "Ya√´l Dillies",
                  "email": "yael.dillies@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "e36af677cfdb10b7af28226e2656e7b473b2b556",
                "additions": 5,
                "deletions": 3,
                "committedDate": "2025-03-23T19:42:47Z",
                "author": {
                  "name": "Ya√´l Dillies",
                  "email": "yael.dillies@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJI9axSw",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14022373265/job/39255978315"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJI9aw2w",
                        "name": "Add topic label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14022373269/job/39255978203"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJI9axXw",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14022373336/job/39255978335"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJI9axfA",
                        "name": "post-or-update-summary-comment",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14022373337/job/39255978364"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJI9axQg",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14022373266/job/39255978306"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJI9aw_w",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14022373265/job/39255978239"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJI9aw_g",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14022373266/job/39255978238"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJI9axkw",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14022373265/job/39255978387"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJI-BCKw",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14022373266/job/39256605227"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJI9bGvg",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/39255983806"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJI9bQCQ",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=22048&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            }
          ]
        },
        "createdAt": "2025-02-18T15:21:13Z",
        "deletions": 21,
        "files": {
          "nodes": [
            {
              "path": "Mathlib/Algebra/BigOperators/Group/Finset/Defs.lean",
              "additions": 77,
              "deletions": 21
            },
            {
              "path": "MathlibTest/BigOps.lean",
              "additions": 65,
              "deletions": 0
            }
          ]
        },
        "headRefName": "delab_finset_sum_with",
        "headRefOid": "e36af677cfdb10b7af28226e2656e7b473b2b556",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c6LnZkB",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c8AAAABKAKYew",
              "color": "33DBEC",
              "name": "t-meta"
            }
          ]
        },
        "latestReviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c6g8_Rd",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "b-mehta"
              },
              "submittedAt": "2025-03-19T21:59:24Z"
            }
          ]
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "BLOCKED",
        "mergeable": "MERGEABLE",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 22048,
        "potentialMergeCommit": {
          "oid": "bd7f57a8731b02652ce78786c2fdc1a115da076c"
        },
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": [
                {
                  "login": "b-mehta"
                }
              ]
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": null,
        "reviewRequests": {
          "nodes": [
            {
              "requestedReviewer": {
                "id": "MDQ6VXNlcjIzNTMwNw==",
                "login": "kmill"
              }
            }
          ]
        },
        "reviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c6g7g7f",
              "body": "Can we have some tests for this? I'm guessing guard_msgs with #check is the best way",
              "state": "COMMENTED",
              "author": {
                "login": "b-mehta"
              },
              "submittedAt": "2025-03-19T19:40:56Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6g7u0C",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "b-mehta"
              },
              "submittedAt": "2025-03-19T19:58:28Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6g7xdc",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "b-mehta"
              },
              "submittedAt": "2025-03-19T20:01:19Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6g77Ue",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2025-03-19T20:13:56Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6g8Amk",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "b-mehta"
              },
              "submittedAt": "2025-03-19T20:19:30Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6g8BMx",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "b-mehta"
              },
              "submittedAt": "2025-03-19T20:20:18Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6g8BUK",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "b-mehta"
              },
              "submittedAt": "2025-03-19T20:20:28Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6g8CF_",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "b-mehta"
              },
              "submittedAt": "2025-03-19T20:21:32Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6g8RZm",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2025-03-19T20:43:15Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6g8SIQ",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2025-03-19T20:44:04Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6g8TcB",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2025-03-19T20:45:11Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6g8ejm",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "b-mehta"
              },
              "submittedAt": "2025-03-19T20:58:39Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6g8f0T",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2025-03-19T21:00:51Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6g8giA",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "b-mehta"
              },
              "submittedAt": "2025-03-19T21:02:07Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6g80vh",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "b-mehta"
              },
              "submittedAt": "2025-03-19T21:35:58Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6g8_Rd",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "b-mehta"
              },
              "submittedAt": "2025-03-19T21:59:24Z"
            }
          ]
        },
        "reviewThreads": {
          "nodes": [
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c53dXue",
                    "body": "I don't think these test delaboration: they all succeed without this PR!",
                    "createdAt": "2025-03-19T19:58:28Z",
                    "author": {
                      "login": "b-mehta"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c53dYsg",
                    "body": "I was thinking more like\r\n```\r\n/-- info: ‚àë i : Œπ, f i : M -/\r\n#guard_msgs in\r\n#check Finset.sum Finset.univ fun i ‚Ü¶ f i\r\n```\r\nwhich does succeed without it, and\r\n```\r\n/-- info: ‚àë i ‚àà s with p i, f i -/\r\n#guard_msgs in\r\n#check Finset.sum {i ‚àà s | p i} fun i ‚Ü¶ f i\r\n```\r\nwhich does not. (And of course the other 6 versions you've already identified)",
                    "createdAt": "2025-03-19T20:01:19Z",
                    "author": {
                      "login": "b-mehta"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c53dd7m",
                    "body": "Ah yes of course ü§¶ ",
                    "createdAt": "2025-03-19T20:13:56Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c53dh5I",
                    "body": "Can we also test for what happens with other binder names, since those are explicitly mentioned in the doc for `delabFinsetArg`. That is, how does\r\n```\r\nFinset.sum {j | p j} fun k ‚Ü¶ f k\r\n```\r\nget delaborated?",
                    "createdAt": "2025-03-19T20:19:29Z",
                    "author": {
                      "login": "b-mehta"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c53dqqI",
                    "body": "The function gets the priority",
                    "createdAt": "2025-03-19T20:43:15Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c53dxOQ",
                    "body": "(I'm aware and I'm saying the test should be aware too!)",
                    "createdAt": "2025-03-19T20:58:38Z",
                    "author": {
                      "login": "b-mehta"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c53dx_c",
                    "body": "Yes, so they do now? What do you mean?",
                    "createdAt": "2025-03-19T21:00:51Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c53d9gI",
                    "body": "I'm saying that you answered the question but the question wasn't to you :)",
                    "createdAt": "2025-03-19T21:35:58Z",
                    "author": {
                      "login": "b-mehta"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c53diUu",
                    "body": "It looks like we don't need this, right?",
                    "createdAt": "2025-03-19T20:20:18Z",
                    "author": {
                      "login": "b-mehta"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c53dq6G",
                    "body": "Oh indeed, not anymore",
                    "createdAt": "2025-03-19T20:44:04Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c53diaO",
                    "body": "I think this is also unused?",
                    "createdAt": "2025-03-19T20:20:28Z",
                    "author": {
                      "login": "b-mehta"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c53di4k",
                    "body": "This doesn't seem quite accurate, it's specifically interpreting an expression as one of the four specific forms, rather than doing general finset delaboration, right?",
                    "createdAt": "2025-03-19T20:21:32Z",
                    "author": {
                      "login": "b-mehta"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c53drf3",
                    "body": "What about now?",
                    "createdAt": "2025-03-19T20:45:11Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c53dyZQ",
                    "body": "Let's test for the behaviour with piBinderTypes on/off. I also think the option should control what happens in the filterUniv case, in the same way as it does here (and that should be tested too)",
                    "createdAt": "2025-03-19T21:02:07Z",
                    "author": {
                      "login": "b-mehta"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c53eBiN",
                    "body": "```suggestion\r\n/-! ### Big operators over a fintype with `piBinderTypes` on -/\r\n```",
                    "createdAt": "2025-03-19T21:47:22Z",
                    "author": {
                      "login": "b-mehta"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c53eBo6",
                    "body": "```suggestion\r\n/-! ### Big operators over a fintype with `piBinderTypes` off -/\r\n```",
                    "createdAt": "2025-03-19T21:47:34Z",
                    "author": {
                      "login": "b-mehta"
                    }
                  }
                ]
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjE0MDkwNTkz",
              "login": "YaelDillies"
            },
            {
              "id": "MDQ6VXNlcjIzNTMwNw==",
              "login": "kmill"
            },
            {
              "id": "MDQ6VXNlcjI5OTU5MjI2",
              "login": "b-mehta"
            },
            {
              "id": "U_kgDOBcsTTQ",
              "login": "leanprover-community-bot-assistant"
            }
          ]
        },
        "state": "OPEN",
        "statusCheckRollup": {
          "contexts": {
            "nodes": [
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJI9axSw",
                "name": "Lint style (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14022373265/job/39255978315"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJI9aw2w",
                "name": "Add topic label",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14022373269/job/39255978203"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJI9axXw",
                "name": "label-and-report-new-contributor",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14022373336/job/39255978335"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJI9axfA",
                "name": "post-or-update-summary-comment",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14022373337/job/39255978364"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJI9axQg",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14022373266/job/39255978306"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJI9aw_w",
                "name": "Build (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14022373265/job/39255978239"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJI9aw_g",
                "name": "Build",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14022373266/job/39255978238"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJI9axkw",
                "name": "Post-CI job (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14022373265/job/39255978387"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJI-BCKw",
                "name": "Post-CI job",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14022373266/job/39256605227"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJI9bGvg",
                "name": "New Contributor Check",
                "conclusion": "NEUTRAL",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/39255983806"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJI9bQCQ",
                "name": "Summary",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=22048&login=leanprover-community&repository=mathlib4"
              }
            ]
          }
        },
        "title": "feat: delaborator for `‚àë x ‚àà s with p x, f x` notation",
        "updatedAt": "2025-03-23T19:44:02Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/22048",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6qhAd3zwAAAAPOjVdi",
              "createdAt": "2025-02-18T15:21:47Z",
              "label": {
                "id": "MDU6TGFiZWwyOTg0NTM0NDU0",
                "name": "help-wanted"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6qhAd3zwAAAAPOjVdr",
              "createdAt": "2025-02-18T15:21:47Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKAKYew",
                "name": "t-meta"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6e6HPX",
              "createdAt": "2025-02-18T15:22:13Z",
              "body": "### PR summary [e36af677cf](https://github.com/leanprover-community/mathlib4/pull/22048/commits/e36af677cfdb10b7af28226e2656e7b473b2b556)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n\n</details>\n\n---\n\n#### Declarations diff\n\nNo declarations were harmed in the making of this PR! üêô\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n---\n\n<details><summary>No changes to technical debt.</summary>\n\nYou can run this locally as\n```\n./scripts/technical-debt-metrics.sh pr_summary\n```\n* The `relative` value is the weighted *sum* of the differences with weight given by the *inverse* of the current value of the statistic.\n* The `absolute` value is the `relative` value divided by the total sum of the inverses of the current values (i.e. the weighted *average* of the differences).\n</details>\n",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6e_eWD",
              "createdAt": "2025-02-19T03:45:29Z",
              "body": "Lightly tested:\r\n```lean\r\nprivate inductive FinsetResult where\r\n  | finset (s : Term)\r\n  | univ\r\n  | filter (s : Term) (p : Term)\r\n\r\n/-- Delaborates a finset. In case it is a `Finset.filter`, `i` is used for the binder name. -/\r\nprivate def delabFinsetArg (i : Ident) :\r\n    DelabM FinsetResult := do\r\n  let s ‚Üê getExpr\r\n  if s.isAppOfArity ``Finset.univ 2 then\r\n    return .univ\r\n  else if s.isAppOfArity ``Finset.filter 4 then\r\n    let ss ‚Üê withNaryArg 3 delab\r\n    withNaryArg 1 do\r\n      if (‚Üê getExpr).isLambda then\r\n        withBindingBody i.getId do\r\n          let p ‚Üê delab\r\n          return .filter ss p\r\n      else\r\n        let p ‚Üê delab\r\n        return .filter ss (‚Üê `($p $i))\r\n  else\r\n    let ss ‚Üê delab\r\n    return .finset ss\r\n\r\n/-- Delaborator for `Finset.prod`. The `pp.piBinderTypes` option controls whether\r\nto show the domain type when the product is over `Finset.univ`. -/\r\n@[app_delab Finset.prod] def delabFinsetProd : Delab :=\r\n  whenPPOption getPPNotation <| withOverApp 5 <| do\r\n  let #[_, _, _, _, f] := (‚Üê getExpr).getAppArgs | failure\r\n  guard <| f.isLambda\r\n  let ppDomain ‚Üê getPPOption getPPPiBinderTypes\r\n  let (i, body) ‚Üê withAppArg <| withBindingBodyUnusedName fun i => do\r\n    return ((‚ü®i‚ü© : Ident), ‚Üê delab)\r\n  let res ‚Üê withNaryArg 3 <| delabFinsetArg i\r\n  match res with\r\n  | .finset ss => `(‚àè $i:ident ‚àà $ss, $body)\r\n  | .univ =>\r\n    let binder ‚Üê\r\n    if ppDomain then\r\n      let ty ‚Üê withNaryArg 0 delab\r\n      `(bigOpBinder| $i:ident : $ty)\r\n    else\r\n      `(bigOpBinder| $i:ident)\r\n    `(‚àè $binder:bigOpBinder, $body)\r\n  | .filter ss p =>\r\n    `(‚àè $i:ident ‚àà $ss with $p, $body)\r\n\r\n/-- Delaborator for `Finset.sum`. The `pp.piBinderTypes` option controls whether\r\nto show the domain type when the sum is over `Finset.univ`. -/\r\n@[app_delab Finset.sum] def delabFinsetSum : Delab :=\r\n  whenPPOption getPPNotation <| withOverApp 5 <| do\r\n  let #[_, _, _, _, f] := (‚Üê getExpr).getAppArgs | failure\r\n  guard <| f.isLambda\r\n  let ppDomain ‚Üê getPPOption getPPPiBinderTypes\r\n  let (i, body) ‚Üê withAppArg <| withBindingBodyUnusedName fun i => do\r\n    return ((‚ü®i‚ü© : Ident), ‚Üê delab)\r\n  let res ‚Üê withNaryArg 3 <| delabFinsetArg i\r\n  match res with\r\n  | .finset ss => `(‚àë $i:ident ‚àà $ss, $body)\r\n  | .univ =>\r\n    let binder ‚Üê\r\n    if ppDomain then\r\n      let ty ‚Üê withNaryArg 0 delab\r\n      `(bigOpBinder| $i:ident : $ty)\r\n    else\r\n      `(bigOpBinder| $i:ident)\r\n    `(‚àë $binder:bigOpBinder, $body)\r\n  | .filter ss p =>\r\n    `(‚àë $i:ident ‚àà $ss with $p, $body)\r\n```",
              "author": {
                "login": "kmill"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6fBSZJ",
              "createdAt": "2025-02-19T08:35:26Z",
              "body": "This prints `sum (filter s fun x ‚Ü¶ p x) fun x ‚Ü¶ f x` as `‚àë x ‚àà univ with p x, f x` instead of `‚àë x with p x, f x`, but thank you! I'll take it from there.",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6qhAd3zwAAAAPPWMSi",
              "createdAt": "2025-02-19T10:56:10Z",
              "label": {
                "id": "MDU6TGFiZWwyOTg0NTM0NDU0",
                "name": "help-wanted"
              }
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6qhAd3zwAAAAPPbnM9",
              "createdAt": "2025-02-19T12:42:57Z"
            },
            {
              "__typename": "ReviewRequestedEvent",
              "id": "RRE_lADOFcwZ1c6qhAd3zwAAAAPPbxH0",
              "createdAt": "2025-02-19T12:45:59Z",
              "requestedReviewer": {
                "id": "MDQ6VXNlcjIzNTMwNw==",
                "login": "kmill"
              }
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6qhAd3zwAAAAPa9HTh",
              "createdAt": "2025-03-04T13:16:32Z"
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6g7g7f",
              "createdAt": "2025-03-19T19:40:56Z",
              "body": "Can we have some tests for this? I'm guessing guard_msgs with #check is the best way",
              "author": {
                "login": "b-mehta"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6g7u0C",
              "createdAt": "2025-03-19T19:58:27Z",
              "body": "",
              "author": {
                "login": "b-mehta"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6g8Amk",
              "createdAt": "2025-03-19T20:19:29Z",
              "body": "",
              "author": {
                "login": "b-mehta"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6g8BMx",
              "createdAt": "2025-03-19T20:20:17Z",
              "body": "",
              "author": {
                "login": "b-mehta"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6g8BUK",
              "createdAt": "2025-03-19T20:20:28Z",
              "body": "",
              "author": {
                "login": "b-mehta"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6g8CF_",
              "createdAt": "2025-03-19T20:21:32Z",
              "body": "",
              "author": {
                "login": "b-mehta"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6g8giA",
              "createdAt": "2025-03-19T21:02:07Z",
              "body": "",
              "author": {
                "login": "b-mehta"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6g8_Rd",
              "createdAt": "2025-03-19T21:47:22Z",
              "body": "",
              "author": {
                "login": "b-mehta"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6jNoXs",
              "createdAt": "2025-03-19T22:00:53Z",
              "body": "This looks reasonable and the tests show it behaves as it should, so I'm happy with this, but let's see if @kmill or @eric-wieser have thoughts",
              "author": {
                "login": "b-mehta"
              }
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6qhAd3zwAAAAPxgVIW",
              "createdAt": "2025-03-21T23:06:20Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "c0a9c3aa89f4de048dc337188cb762662e9438cb"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "a64a472e1c4d2aae86249cd89a9314276a68deb1"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "7a87240b1c8674566db00efa8020d0bdf804ccc9"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "0a53f15fa517496236c02603c5bdd63e5658af63"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "84f8f5f5738e8696e93e74dfa1ef499bd0a6830b"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "442aab773b9609be130240f556db2a2b6ef6a668"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "881b29eee62376ccfeaa5d5987a5d20159de9f3c"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "e36af677cfdb10b7af28226e2656e7b473b2b556"
              }
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6qhAd3zwAAAAPyCDDt",
              "createdAt": "2025-03-23T19:43:03Z"
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6qhAd3zwAAAAPyCDb7",
              "createdAt": "2025-03-23T19:43:47Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            }
          ]
        }
      }
    }
  }
}
