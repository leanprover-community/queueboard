{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 22,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "YaelDillies"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "I don't actually know how to get `s` and `p` from `{x ∈ s | p x}` in a way that's compatible with delaboration.\n\n\n---\n<!-- The text above the `---` will become the commit message when your\nPR is merged. Please leave a blank newline before the `---`, otherwise\nGitHub will format the text above it as a title.\n\nFor details on the \"pull request lifecycle\" in mathlib, please see:\nhttps://leanprover-community.github.io/contribute/index.html\n\nIn particular, note that most reviewers will only notice your PR\nif it passes the continuous integration checks.\nPlease ask for help on https://leanprover.zulipchat.com if needed.\n\nTo indicate co-authors, include lines at the bottom of the commit message\n(that is, before the `---`) using the following format:\n\nCo-authored-by: Author Name <author@email.com>\n\nIf you are moving or deleting declarations, please include these lines at the bottom of the commit message\n(that is, before the `---`) using the following format:\n\nMoves:\n- Vector.* -> List.Vector.*\n- ...\n\nDeletions:\n- Nat.bit1_add_bit1\n- ...\n\nAny other comments you want to keep out of the PR commit should go\nbelow the `---`, and placed outside this HTML comment, or else they\nwill be invisible to reviewers.\n\nIf this PR depends on other PRs, please list them below this comment,\nusing the following format:\n- [ ] depends on: #abc [optional extra text]\n- [ ] depends on: #xyz [optional extra text]\n\n-->\n\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\n",
        "changedFiles": 1,
        "closed": false,
        "closedAt": null,
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c6e6HPX",
              "body": "### PR summary [d7b8422088](https://github.com/leanprover-community/mathlib4/pull/22048/commits/d7b8422088b116febab3aa026cec1cde95332513)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n\n</details>\n\n---\n\n#### Declarations diff\n\n`+ getFinsetFilter`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n---\n\n<details><summary>No changes to technical debt.</summary>\n\nYou can run this locally as\n```\n./scripts/technical-debt-metrics.sh pr_summary\n```\n* The `relative` value is the weighted *sum* of the differences with weight given by the *inverse* of the current value of the statistic.\n* The `absolute` value is the `relative` value divided by the total sum of the inverses of the current values (i.e. the weighted *average* of the differences).\n</details>\n",
              "createdAt": "2025-02-18T15:22:13Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6e_eWD",
              "body": "Lightly tested:\r\n```lean\r\nprivate inductive FinsetResult where\r\n  | finset (s : Term)\r\n  | univ\r\n  | filter (s : Term) (p : Term)\r\n\r\n/-- Delaborates a finset. In case it is a `Finset.filter`, `i` is used for the binder name. -/\r\nprivate def delabFinsetArg (i : Ident) :\r\n    DelabM FinsetResult := do\r\n  let s ← getExpr\r\n  if s.isAppOfArity ``Finset.univ 2 then\r\n    return .univ\r\n  else if s.isAppOfArity ``Finset.filter 4 then\r\n    let ss ← withNaryArg 3 delab\r\n    withNaryArg 1 do\r\n      if (← getExpr).isLambda then\r\n        withBindingBody i.getId do\r\n          let p ← delab\r\n          return .filter ss p\r\n      else\r\n        let p ← delab\r\n        return .filter ss (← `($p $i))\r\n  else\r\n    let ss ← delab\r\n    return .finset ss\r\n\r\n/-- Delaborator for `Finset.prod`. The `pp.piBinderTypes` option controls whether\r\nto show the domain type when the product is over `Finset.univ`. -/\r\n@[app_delab Finset.prod] def delabFinsetProd : Delab :=\r\n  whenPPOption getPPNotation <| withOverApp 5 <| do\r\n  let #[_, _, _, _, f] := (← getExpr).getAppArgs | failure\r\n  guard <| f.isLambda\r\n  let ppDomain ← getPPOption getPPPiBinderTypes\r\n  let (i, body) ← withAppArg <| withBindingBodyUnusedName fun i => do\r\n    return ((⟨i⟩ : Ident), ← delab)\r\n  let res ← withNaryArg 3 <| delabFinsetArg i\r\n  match res with\r\n  | .finset ss => `(∏ $i:ident ∈ $ss, $body)\r\n  | .univ =>\r\n    let binder ←\r\n    if ppDomain then\r\n      let ty ← withNaryArg 0 delab\r\n      `(bigOpBinder| $i:ident : $ty)\r\n    else\r\n      `(bigOpBinder| $i:ident)\r\n    `(∏ $binder:bigOpBinder, $body)\r\n  | .filter ss p =>\r\n    `(∏ $i:ident ∈ $ss with $p, $body)\r\n\r\n/-- Delaborator for `Finset.sum`. The `pp.piBinderTypes` option controls whether\r\nto show the domain type when the sum is over `Finset.univ`. -/\r\n@[app_delab Finset.sum] def delabFinsetSum : Delab :=\r\n  whenPPOption getPPNotation <| withOverApp 5 <| do\r\n  let #[_, _, _, _, f] := (← getExpr).getAppArgs | failure\r\n  guard <| f.isLambda\r\n  let ppDomain ← getPPOption getPPPiBinderTypes\r\n  let (i, body) ← withAppArg <| withBindingBodyUnusedName fun i => do\r\n    return ((⟨i⟩ : Ident), ← delab)\r\n  let res ← withNaryArg 3 <| delabFinsetArg i\r\n  match res with\r\n  | .finset ss => `(∑ $i:ident ∈ $ss, $body)\r\n  | .univ =>\r\n    let binder ←\r\n    if ppDomain then\r\n      let ty ← withNaryArg 0 delab\r\n      `(bigOpBinder| $i:ident : $ty)\r\n    else\r\n      `(bigOpBinder| $i:ident)\r\n    `(∑ $binder:bigOpBinder, $body)\r\n  | .filter ss p =>\r\n    `(∑ $i:ident ∈ $ss with $p, $body)\r\n```",
              "createdAt": "2025-02-19T03:45:29Z",
              "author": {
                "login": "kmill"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6fBSZJ",
              "body": "This prints `sum (filter s fun x ↦ p x) fun x ↦ f x` as `∑ x ∈ univ with p x, f x` instead of `∑ x with p x, f x`, but thank you! I'll take it from there.",
              "createdAt": "2025-02-19T08:35:26Z",
              "author": {
                "login": "YaelDillies"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "d7b8422088b116febab3aa026cec1cde95332513",
                "additions": 22,
                "deletions": 7,
                "committedDate": "2025-02-18T15:20:16Z",
                "author": {
                  "name": "Yaël Dillies",
                  "email": "yael.dillies@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAItbYyWg",
                        "name": "set_pr_emoji",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13394015559/job/37408354906"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAItbYySg",
                        "name": "set_pr_emoji",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13394015566/job/37408354890"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAItbSaQg",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13393983793/job/37408250434"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAItbWSMw",
                        "name": "Add topic label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13394003235/job/37408313907"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAItbWTBg",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13394003237/job/37408314118"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAItbWTMg",
                        "name": "post-or-update-summary-comment",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13394003236/job/37408314162"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAItbSWsw",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13393983786/job/37408249523"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAItbWSng",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13394003233/job/37408314014"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAItbSWgQ",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13393983793/job/37408249473"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAItbSYug",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13393983786/job/37408250042"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAItbWVfA",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13394003233/job/37408314748"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAItbScdw",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13393983793/job/37408250999"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAItdpgkg",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13393983786/job/37410726034"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAItbXs2Q",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/37408337113"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAItbX1hQ",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=22048&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            }
          ]
        },
        "createdAt": "2025-02-18T15:21:13Z",
        "deletions": 7,
        "files": {
          "nodes": [
            {
              "path": "Mathlib/Algebra/BigOperators/Group/Finset/Defs.lean",
              "additions": 22,
              "deletions": 7
            }
          ]
        },
        "headRefName": "delab_finset_sum_with",
        "headRefOid": "d7b8422088b116febab3aa026cec1cde95332513",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c6LnZkB",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "MDU6TGFiZWwyOTg0NTM0NDU0",
              "color": "cc317c",
              "name": "help-wanted"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABKAKYew",
              "color": "33DBEC",
              "name": "t-meta"
            }
          ]
        },
        "latestReviews": {
          "nodes": []
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "BLOCKED",
        "mergeable": "MERGEABLE",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 22048,
        "potentialMergeCommit": {
          "oid": "dbc6d2a2c8789f6b92c84cbdcb1fbd6a47f18833"
        },
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": null,
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": []
        },
        "reviewThreads": {
          "nodes": []
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjE0MDkwNTkz",
              "login": "YaelDillies"
            },
            {
              "id": "MDQ6VXNlcjIzNTMwNw==",
              "login": "kmill"
            }
          ]
        },
        "state": "OPEN",
        "statusCheckRollup": {
          "contexts": {
            "nodes": [
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAItbYyWg",
                "name": "set_pr_emoji",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13394015559/job/37408354906"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAItbYySg",
                "name": "set_pr_emoji",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13394015566/job/37408354890"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAItbSaQg",
                "name": "Lint style (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13393983793/job/37408250434"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAItbWSMw",
                "name": "Add topic label",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13394003235/job/37408313907"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAItbWTBg",
                "name": "label-and-report-new-contributor",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13394003237/job/37408314118"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAItbWTMg",
                "name": "post-or-update-summary-comment",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13394003236/job/37408314162"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAItbSWsw",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13393983786/job/37408249523"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAItbWSng",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13394003233/job/37408314014"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAItbSWgQ",
                "name": "Build (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13393983793/job/37408249473"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAItbSYug",
                "name": "Build",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13393983786/job/37408250042"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAItbWVfA",
                "name": "Check all files imported",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13394003233/job/37408314748"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAItbScdw",
                "name": "Post-CI job (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13393983793/job/37408250999"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAItdpgkg",
                "name": "Post-CI job",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13393983786/job/37410726034"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAItbXs2Q",
                "name": "New Contributor Check",
                "conclusion": "NEUTRAL",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/37408337113"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAItbX1hQ",
                "name": "Summary",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=22048&login=leanprover-community&repository=mathlib4"
              }
            ]
          }
        },
        "title": "feat: delaborator for `∑ x ∈ s with p x, f x` notation",
        "updatedAt": "2025-02-19T08:35:28Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/22048",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "d7b8422088b116febab3aa026cec1cde95332513"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6qhAd3zwAAAAPOjVdi",
              "createdAt": "2025-02-18T15:21:47Z",
              "label": {
                "id": "MDU6TGFiZWwyOTg0NTM0NDU0",
                "name": "help-wanted"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6qhAd3zwAAAAPOjVdr",
              "createdAt": "2025-02-18T15:21:47Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKAKYew",
                "name": "t-meta"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6e6HPX",
              "createdAt": "2025-02-18T15:22:13Z",
              "body": "### PR summary [d7b8422088](https://github.com/leanprover-community/mathlib4/pull/22048/commits/d7b8422088b116febab3aa026cec1cde95332513)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n\n</details>\n\n---\n\n#### Declarations diff\n\n`+ getFinsetFilter`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n---\n\n<details><summary>No changes to technical debt.</summary>\n\nYou can run this locally as\n```\n./scripts/technical-debt-metrics.sh pr_summary\n```\n* The `relative` value is the weighted *sum* of the differences with weight given by the *inverse* of the current value of the statistic.\n* The `absolute` value is the `relative` value divided by the total sum of the inverses of the current values (i.e. the weighted *average* of the differences).\n</details>\n",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6e_eWD",
              "createdAt": "2025-02-19T03:45:29Z",
              "body": "Lightly tested:\r\n```lean\r\nprivate inductive FinsetResult where\r\n  | finset (s : Term)\r\n  | univ\r\n  | filter (s : Term) (p : Term)\r\n\r\n/-- Delaborates a finset. In case it is a `Finset.filter`, `i` is used for the binder name. -/\r\nprivate def delabFinsetArg (i : Ident) :\r\n    DelabM FinsetResult := do\r\n  let s ← getExpr\r\n  if s.isAppOfArity ``Finset.univ 2 then\r\n    return .univ\r\n  else if s.isAppOfArity ``Finset.filter 4 then\r\n    let ss ← withNaryArg 3 delab\r\n    withNaryArg 1 do\r\n      if (← getExpr).isLambda then\r\n        withBindingBody i.getId do\r\n          let p ← delab\r\n          return .filter ss p\r\n      else\r\n        let p ← delab\r\n        return .filter ss (← `($p $i))\r\n  else\r\n    let ss ← delab\r\n    return .finset ss\r\n\r\n/-- Delaborator for `Finset.prod`. The `pp.piBinderTypes` option controls whether\r\nto show the domain type when the product is over `Finset.univ`. -/\r\n@[app_delab Finset.prod] def delabFinsetProd : Delab :=\r\n  whenPPOption getPPNotation <| withOverApp 5 <| do\r\n  let #[_, _, _, _, f] := (← getExpr).getAppArgs | failure\r\n  guard <| f.isLambda\r\n  let ppDomain ← getPPOption getPPPiBinderTypes\r\n  let (i, body) ← withAppArg <| withBindingBodyUnusedName fun i => do\r\n    return ((⟨i⟩ : Ident), ← delab)\r\n  let res ← withNaryArg 3 <| delabFinsetArg i\r\n  match res with\r\n  | .finset ss => `(∏ $i:ident ∈ $ss, $body)\r\n  | .univ =>\r\n    let binder ←\r\n    if ppDomain then\r\n      let ty ← withNaryArg 0 delab\r\n      `(bigOpBinder| $i:ident : $ty)\r\n    else\r\n      `(bigOpBinder| $i:ident)\r\n    `(∏ $binder:bigOpBinder, $body)\r\n  | .filter ss p =>\r\n    `(∏ $i:ident ∈ $ss with $p, $body)\r\n\r\n/-- Delaborator for `Finset.sum`. The `pp.piBinderTypes` option controls whether\r\nto show the domain type when the sum is over `Finset.univ`. -/\r\n@[app_delab Finset.sum] def delabFinsetSum : Delab :=\r\n  whenPPOption getPPNotation <| withOverApp 5 <| do\r\n  let #[_, _, _, _, f] := (← getExpr).getAppArgs | failure\r\n  guard <| f.isLambda\r\n  let ppDomain ← getPPOption getPPPiBinderTypes\r\n  let (i, body) ← withAppArg <| withBindingBodyUnusedName fun i => do\r\n    return ((⟨i⟩ : Ident), ← delab)\r\n  let res ← withNaryArg 3 <| delabFinsetArg i\r\n  match res with\r\n  | .finset ss => `(∑ $i:ident ∈ $ss, $body)\r\n  | .univ =>\r\n    let binder ←\r\n    if ppDomain then\r\n      let ty ← withNaryArg 0 delab\r\n      `(bigOpBinder| $i:ident : $ty)\r\n    else\r\n      `(bigOpBinder| $i:ident)\r\n    `(∑ $binder:bigOpBinder, $body)\r\n  | .filter ss p =>\r\n    `(∑ $i:ident ∈ $ss with $p, $body)\r\n```",
              "author": {
                "login": "kmill"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6fBSZJ",
              "createdAt": "2025-02-19T08:35:26Z",
              "body": "This prints `sum (filter s fun x ↦ p x) fun x ↦ f x` as `∑ x ∈ univ with p x, f x` instead of `∑ x with p x, f x`, but thank you! I'll take it from there.",
              "author": {
                "login": "YaelDillies"
              }
            }
          ]
        }
      }
    }
  }
}
