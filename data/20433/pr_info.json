{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 15,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "madvorak"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "---\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nFor details on the \"pull request lifecycle\" in mathlib, please see:\r\nhttps://leanprover-community.github.io/contribute/index.html\r\n\r\nIn particular, note that most reviewers will only notice your PR\r\nif it passes the continuous integration checks.\r\nPlease ask for help on https://leanprover.zulipchat.com if needed.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nIf you are moving or deleting declarations, please include these lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nMoves:\r\n- Vector.* -> List.Vector.*\r\n- ...\r\n\r\nDeletions:\r\n- Nat.bit1_add_bit1\r\n- ...\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n\r\n-->\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 1,
        "closed": true,
        "closedAt": "2025-02-17T11:24:54Z",
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c6ZIlhh",
              "body": "### PR summary [61b2a51af5](https://github.com/leanprover-community/mathlib4/pull/20433/commits/61b2a51af51215aa17397403986e0e5d53639538)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n\n</details>\n\n---\n\n#### Declarations diff\n\n`+ of_cardinality_between_of_disjoint`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n---\n\n<details><summary>No changes to technical debt.</summary>\n\nYou can run this locally as\n```\n./scripts/technical-debt-metrics.sh pr_summary\n```\n* The `relative` value is the weighted *sum* of the differences with weight given by the *inverse* of the current value of the statistic.\n* The `absolute` value is the `relative` value divided by the total sum of the inverses of the current values (i.e. the weighted *average* of the differences).\n</details>",
              "createdAt": "2025-01-03T12:41:07Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6ZR_03",
              "body": "I don't really see the point of this lemma. Why can't you directly use `Finset.exists_subset_card_eq`? Your new lemma isn't (yet) used in #19607, so I can't really offer you a more precise replacement for it.",
              "createdAt": "2025-01-05T13:44:47Z",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6ZZgdR",
              "body": "> I don't really see the point of this lemma. Why can't you directly use `Finset.exists_subset_card_eq`? Your new lemma isn't (yet) used in #19607, so I can't really offer you a more precise replacement for it.\r\n\r\nYou are right I don't use the new lemma. The lemma I use at the moment is:\r\n```\r\nimport Mathlib.Tactic\r\n\r\nlemma finset_of_cardinality_between {α β : Type*} [Fintype α] [Fintype β] {n : ℕ}\r\n    (hα : Fintype.card α < n) (hn : n ≤ Fintype.card α + Fintype.card β) :\r\n    ∃ b : Finset β, Fintype.card (α ⊕ b) = n ∧ Nonempty b := by\r\n  have beta' : n - Fintype.card α ≤ Fintype.card β\r\n  · omega\r\n  obtain ⟨s, hs⟩ : ∃ s : Finset β, s.card = n - Fintype.card α :=\r\n    (Finset.exists_subset_card_eq beta').imp (by simp)\r\n  use s\r\n  rw [Fintype.card_sum, Fintype.card_coe, hs]\r\n  constructor\r\n  · omega\r\n  · by_contra ifempty\r\n    have : s.card = 0\r\n    · rw [Finset.card_eq_zero]\r\n      rw [nonempty_subtype, not_exists] at ifempty\r\n      exact Finset.eq_empty_of_forall_not_mem ifempty\r\n    omega\r\n```\r\n\r\nIt will probably change after the refactor suggested by Kevin Buzzard.",
              "createdAt": "2025-01-06T17:43:10Z",
              "author": {
                "login": "madvorak"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6ZZg-R",
              "body": "Can you @YaelDillies nevertheless clarify whether `Nonempty x` or `x ≠ ∅` is preferred?",
              "createdAt": "2025-01-06T17:44:25Z",
              "author": {
                "login": "madvorak"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6ZaLHw",
              "body": "> I don't use the new lemma. The lemma I use at the moment is: [...]. It will probably change after the refactor suggested by Kevin Buzzard.\r\n\r\nAh okay, then I suggest we leave that PR unmerged for the time being, until what you actually need becomes clearer\r\n\r\n\r\n> Can you @YaelDillies nevertheless clarify whether `Nonempty x` or `x ≠ ∅` is preferred?\r\n\r\n`x.Nonempty` is preferred",
              "createdAt": "2025-01-06T19:31:26Z",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6ZaOE_",
              "body": "Yes. All four PRs are labelled as WIP now.",
              "createdAt": "2025-01-06T19:39:19Z",
              "author": {
                "login": "madvorak"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6aNOxS",
              "body": "In the end, I will need exactly this lemma:\r\n```\r\nlemma finset_of_cardinality_between {α β : Type*} [Fintype α] [Fintype β] {n : ℕ}\r\n    (hα : Fintype.card α < n) (hn : n ≤ Fintype.card α + Fintype.card β) :\r\n    ∃ b : Finset β, Fintype.card (α ⊕ b) = n ∧ Nonempty b := by\r\n  have beta' : n - Fintype.card α ≤ Fintype.card β\r\n  · omega\r\n  obtain ⟨s, hs⟩ : ∃ s : Finset β, s.card = n - Fintype.card α :=\r\n    (Finset.exists_subset_card_eq beta').imp (by simp)\r\n  use s\r\n  rw [Fintype.card_sum, Fintype.card_coe, hs]\r\n  constructor\r\n  · omega\r\n  · by_contra ifempty\r\n    have : s.card = 0\r\n    · rw [Finset.card_eq_zero]\r\n      rw [nonempty_subtype, not_exists] at ifempty\r\n      exact Finset.eq_empty_of_forall_not_mem ifempty\r\n    omega\r\n```\r\n\r\nDo you @YaelDillies want to weigh in on how it should be generalized for Mathlib? `Finset` version perhaps?",
              "createdAt": "2025-01-13T13:51:02Z",
              "author": {
                "login": "madvorak"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6ba-5O",
              "body": "This lemma is overly specific, I find, so I think you should inline it where needed.\r\n\r\nHere's a golf, using new machinery that could belong in mathlib:\r\n```\r\nimport Mathlib.Data.Fintype.Sum\r\n\r\nnamespace Equiv\r\nvariable {α β : Type*}\r\n\r\n-- Analogue of `Equiv.optionIsSomeEquiv`\r\n@[simps]\r\ndef sumIsLeft : {x : α ⊕ β // x.isLeft} ≃ α where\r\n  toFun x := x.1.getLeft x.2\r\n  invFun a := ⟨.inl a, Sum.isLeft_inl⟩\r\n  left_inv | ⟨.inl _a, _⟩ => rfl\r\n  right_inv _a := rfl\r\n\r\n@[simps]\r\ndef sumIsRight : {x : α ⊕ β // x.isRight} ≃ β where\r\n  toFun x := x.1.getRight x.2\r\n  invFun b := ⟨.inr b, Sum.isRight_inr⟩\r\n  left_inv | ⟨.inr _b, _⟩ => rfl\r\n  right_inv _b := rfl\r\n\r\nend Equiv\r\n\r\nnamespace Finset\r\nvariable {α β : Type*} {s : Finset (α ⊕ β)} {a : α} {b : β}\r\n\r\ndef left (s : Finset (α ⊕ β)) : Finset α := (s.subtype _).map Equiv.sumIsLeft.toEmbedding\r\ndef right (s : Finset (α ⊕ β)) : Finset β := (s.subtype _).map Equiv.sumIsRight.toEmbedding\r\n\r\n@[simp] lemma mem_left : a ∈ s.left ↔ .inl a ∈ s := by simp [left]\r\n@[simp] lemma mem_right : b ∈ s.right ↔ .inr b ∈ s := by simp [right]\r\n\r\nlemma disjSum_left_right (s : Finset (α ⊕ β)) : s.left.disjSum s.right = s := by\r\n  ext (a | b) <;> simp\r\n\r\nlemma card_left_add_card_right (s : Finset (α ⊕ β)) : #s.left + #s.right = #s := by\r\n  simpa using congr(#$s.disjSum_left_right)\r\n\r\n@[simp] lemma left_eq_univ [Fintype α] : s.left = univ ↔ univ.disjSum ∅ ⊆ s := by\r\n  simp [eq_univ_iff_forall, subset_iff]\r\n\r\n@[simp] lemma right_eq_empty [Fintype α] : s.right = ∅ ↔ s ⊆ univ.disjSum ∅ := by\r\n  simp [eq_empty_iff_forall_not_mem, subset_iff]\r\n\r\nend Finset\r\n\r\nopen Finset\r\n\r\nlemma Finset.of_cardinality_between {α β : Type*} [Fintype α] [Fintype β] {n : ℕ}\r\n    (hα : Fintype.card α < n) (hn : n ≤ Fintype.card α + Fintype.card β) :\r\n    ∃ s : Finset β, Fintype.card α + #s = n ∧ s.Nonempty := by\r\n  obtain ⟨s, hs, -, rfl⟩ : ∃ s : Finset (α ⊕ β), _ :=\r\n    exists_subsuperset_card_eq (subset_univ <| univ.disjSum ∅) (by simpa using hα.le)\r\n      (by simpa using hn)\r\n  refine ⟨s.right, by simpa [left_eq_univ.2 hs] using s.card_left_add_card_right, ?_⟩\r\n  simp only [nonempty_iff_ne_empty, ne_eq, right_eq_empty, disjSum_empty]\r\n  exact fun h ↦ hα.not_le <| by simpa using card_le_card h\r\n```",
              "createdAt": "2025-01-22T15:23:53Z",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6bbMAq",
              "body": "Interesting.",
              "createdAt": "2025-01-22T15:44:58Z",
              "author": {
                "login": "madvorak"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "492f4cb062ec43201c8bd45d072bde1e6720c192",
                "additions": 17,
                "deletions": 0,
                "committedDate": "2025-01-03T12:39:33Z",
                "author": {
                  "name": "madvorak",
                  "email": "martin.dvorak@matfyz.cz"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAILN8BVA",
                        "name": "Fix style issues from lint",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12598188595/job/35112550740"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAILN8BfQ",
                        "name": "Add ready-to-merge or delegated label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12598188592/job/35112550781"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAILNBVNQ",
                        "name": "Add topic label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12597850603/job/35111589173"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAILNBUhA",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12597850616/job/35111588996"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAILN8BCQ",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12598188583/job/35112550665"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAILNBUww",
                        "name": "post-or-update-summary-comment",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12597850600/job/35111589059"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAILNAMHQ",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12597844005/job/35111570461"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAILNAN7A",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12597844001/job/35111570924"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAILNBVtg",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12597850609/job/35111589302"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAILNAN7g",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12597844005/job/35111570926"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAILNANEw",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12597844001/job/35111570707"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAILNBUjA",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12597850609/job/35111589004"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAILNAMQA",
                        "name": "Build",
                        "conclusion": "CANCELLED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12597844001/job/35111570496"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAILNANAg",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12597844005/job/35111570690"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAILOMwsw",
                        "name": "Post-CI job",
                        "conclusion": "CANCELLED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12597844001/job/35112825011"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAILNAOtQ",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12597844005/job/35111571125"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAILNBk3w",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/35111593183"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAILNBfgQ",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=20433&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "65994e9709face9e8a106e1f781bc2cc9d2872bf",
                "additions": 1,
                "deletions": 1,
                "committedDate": "2025-01-03T13:09:40Z",
                "author": {
                  "name": "Martin Dvořák",
                  "email": "martin.dvorak@matfyz.cz"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAILOBM_w",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12598216739/job/35112635647"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAILOBM-A",
                        "name": "post-or-update-summary-comment",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12598216740/job/35112635640"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAILOBJbQ",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12598216428/job/35112634733"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAILOBLiQ",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12598216422/job/35112635273"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAILOBMkA",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12598216737/job/35112635536"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAILOBKdw",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12598216428/job/35112634999"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAILOBKiw",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12598216422/job/35112635019"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAILOBOCA",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12598216737/job/35112635912"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAILOBJZQ",
                        "name": "Build",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12598216422/job/35112634725"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAILOBLZw",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12598216428/job/35112635239"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAILOBMwg",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12598216428/job/35112635586"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAILOPIbg",
                        "name": "Post-CI job",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12598216422/job/35112863854"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAILOBoNw",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/35112642615"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAILOCYJA",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=20433&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "1be30683fc244e714c757e982e854035bab57f9f",
                "additions": 2,
                "deletions": 3,
                "committedDate": "2025-01-03T13:17:13Z",
                "author": {
                  "name": "madvorak",
                  "email": "martin.dvorak@matfyz.cz"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAILOTk9A",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12598320153/job/35112936692"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAILOTlCA",
                        "name": "post-or-update-summary-comment",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12598320150/job/35112936712"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAILOTiWg",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12598319833/job/35112936026"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAILOTjFQ",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12598319844/job/35112936213"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAILOTk7g",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12598320151/job/35112936686"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAILOTkGA",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12598319833/job/35112936472"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAILOTj4Q",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12598319844/job/35112936417"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAILOTl6g",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12598320151/job/35112936938"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAILOTiGw",
                        "name": "Build",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12598319844/job/35112935963"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAILOTjMA",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12598319833/job/35112936240"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAILOTk-A",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12598319833/job/35112936696"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAILPh8eA",
                        "name": "Post-CI job",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12598319844/job/35114220664"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAILOT07g",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/35112940782"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAILOUrrA",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=20433&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "61b2a51af51215aa17397403986e0e5d53639538",
                "additions": 1,
                "deletions": 2,
                "committedDate": "2025-01-03T14:04:47Z",
                "author": {
                  "name": "madvorak",
                  "email": "martin.dvorak@matfyz.cz"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIMsmvLw",
                        "name": "set_pr_emoji",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12637496188/job/35211816751"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAILRE2gg",
                        "name": "Fix style issues from lint",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12599285393/job/35115841154"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAILReeCg",
                        "name": "Fix style issues from lint",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12599415441/job/35116260874"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAILRfzTg",
                        "name": "Fix style issues from lint",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12599422399/job/35116282702"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAILvt4-Q",
                        "name": "Fix style issues from lint",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12611862711/job/35147970809"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAILxxtzg",
                        "name": "Fix style issues from lint",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12612903931/job/35150130638"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAILRFHog",
                        "name": "set_pr_emoji",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12599286906/job/35115845538"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAILRq4RA",
                        "name": "set_pr_emoji",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12599478915/job/35116464196"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAILxeVAw",
                        "name": "set_pr_emoji",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12612747124/job/35149812995"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIMslI4g",
                        "name": "set_pr_emoji",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12637488330/job/35211790562"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAILRE2Tw",
                        "name": "Add ready-to-merge or delegated label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12599285408/job/35115841103"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAILRefHQ",
                        "name": "Add ready-to-merge or delegated label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12599415415/job/35116261149"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAILRf0XA",
                        "name": "Add ready-to-merge or delegated label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12599422395/job/35116282972"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAILvt5VA",
                        "name": "Add ready-to-merge or delegated label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12611862710/job/35147970900"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAILxxtyg",
                        "name": "Add ready-to-merge or delegated label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12612903935/job/35150130634"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAILP65hQ",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12598869289/job/35114629509"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAILRE2cA",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12599285407/job/35115841136"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAILReeQA",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12599415426/job/35116260928"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAILRf0ew",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12599422392/job/35116283003"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAILvt40w",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12611862708/job/35147970771"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAILxxt0g",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12612903934/job/35150130642"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAILP65VA",
                        "name": "post-or-update-summary-comment",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12598869284/job/35114629460"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAILP61gQ",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12598868997/job/35114628481"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAILP61Zw",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12598869001/job/35114628455"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAILP66Wg",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12598869283/job/35114629722"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAILP63eA",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12598868997/job/35114628984"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAILP63fA",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12598869001/job/35114628988"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAILP65fg",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12598869283/job/35114629502"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAILP62dw",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12598868997/job/35114628727"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAILP62kw",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12598869001/job/35114628755"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAILP64gQ",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12598868997/job/35114629249"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAILRZX4g",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12598869001/job/35116177378"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAILP7OUA",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/35114634832"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAILP8RPQ",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=20433&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            }
          ]
        },
        "createdAt": "2025-01-03T12:40:15Z",
        "deletions": 0,
        "files": {
          "nodes": [
            {
              "path": "Mathlib/Data/Finset/Card.lean",
              "additions": 15,
              "deletions": 0
            }
          ]
        },
        "headRefName": "finset-of-card-between",
        "headRefOid": "61b2a51af51215aa17397403986e0e5d53639538",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c6GqKB0",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "MDU6TGFiZWwzMjcxMjQ0NzU5",
              "color": "e899cd",
              "name": "WIP"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
              "color": "f99094",
              "name": "merge-conflict"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABtNO8rw",
              "color": "33DBEC",
              "name": "t-data"
            }
          ]
        },
        "latestReviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c6W2J4O",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2025-01-04T18:48:04Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6W2Ft8",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "alreadydone"
              },
              "submittedAt": "2025-01-04T16:03:43Z"
            }
          ]
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "DIRTY",
        "mergeable": "CONFLICTING",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 20433,
        "potentialMergeCommit": null,
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": null,
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c6WvlqS",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2025-01-03T13:07:35Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6WwD1u",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "alreadydone"
              },
              "submittedAt": "2025-01-03T14:35:13Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6WwJhD",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "madvorak"
              },
              "submittedAt": "2025-01-03T14:45:59Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6WwJuB",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "madvorak"
              },
              "submittedAt": "2025-01-03T14:46:32Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6W2Ft8",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "alreadydone"
              },
              "submittedAt": "2025-01-04T16:03:43Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6W2J4O",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2025-01-04T18:48:04Z"
            }
          ]
        },
        "reviewThreads": {
          "nodes": [
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5xWrUa",
                    "body": "```suggestion\r\n    ∃ (x : Finset α) (h : Disjoint x s), #(s.disjUnion x h) = n ∧ Nonempty x := by\r\n```",
                    "createdAt": "2025-01-03T13:07:35Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5xW84h",
                    "body": "I think we should be satisfied with this statement:\r\n```suggestion\r\nlemma of_cardinality_between_of_disjoint (hs : #s ≤ n) (hn : n ≤ #s + #t) (hst : Disjoint s t) :\r\n    ∃ (x : Finset α) (hxs : Disjoint x s), #(x.disjUnion s hxs) = n := by\r\n```\r\nbecause nonemptiness can be easily deduced from this:\r\n```\r\nimport Mathlib\r\nopen Finset in\r\nexample {n} {α} (s x : Finset α) (hxs : Disjoint x s) (eq : #(x.disjUnion s hxs) = n)\r\n    (lt : #s < n) : x ≠ ∅ := by\r\n  rintro rfl; rw [← eq] at lt; simp at lt\r\n```\r\n(Note I've replaced `Nonempty x` with `x ≠ ∅`.)",
                    "createdAt": "2025-01-03T14:35:10Z",
                    "author": {
                      "login": "alreadydone"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5xW_cn",
                    "body": "For the purposes of #19607 I prefer the stronger version.",
                    "createdAt": "2025-01-03T14:45:59Z",
                    "author": {
                      "login": "madvorak"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5xW_ki",
                    "body": "Do you want to have both lemmas?",
                    "createdAt": "2025-01-03T14:46:32Z",
                    "author": {
                      "login": "madvorak"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5xb0xr",
                    "body": "Yes please; and please use the `x ≠ ∅` statement: from the lemmas around [Finset.nonempty_iff_ne_empty](https://leanprover-community.github.io/mathlib4_docs/Mathlib/Data/Finset/Empty.html#Finset.nonempty_iff_ne_empty) I think statements involving ∅ are considered the normal form.",
                    "createdAt": "2025-01-04T16:03:43Z",
                    "author": {
                      "login": "alreadydone"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5xb5am",
                    "body": "Pinging @YaelDillies for a second opinion on whether that or `Nonempty` is preferred.",
                    "createdAt": "2025-01-04T18:48:04Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  }
                ]
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjY2NDMxMTY=",
              "login": "madvorak"
            },
            {
              "id": "MDQ6VXNlcjE0MDkwNTkz",
              "login": "YaelDillies"
            },
            {
              "id": "MDQ6VXNlcjQyNTI2MA==",
              "login": "eric-wieser"
            },
            {
              "id": "MDQ6VXNlcjMwNjQxNDU=",
              "login": "alreadydone"
            },
            {
              "id": "U_kgDOBcsTTQ",
              "login": "leanprover-community-bot-assistant"
            }
          ]
        },
        "state": "CLOSED",
        "statusCheckRollup": {
          "contexts": {
            "nodes": [
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIMsmvLw",
                "name": "set_pr_emoji",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12637496188/job/35211816751"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAILRE2gg",
                "name": "Fix style issues from lint",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12599285393/job/35115841154"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAILReeCg",
                "name": "Fix style issues from lint",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12599415441/job/35116260874"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAILRfzTg",
                "name": "Fix style issues from lint",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12599422399/job/35116282702"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAILvt4-Q",
                "name": "Fix style issues from lint",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12611862711/job/35147970809"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAILxxtzg",
                "name": "Fix style issues from lint",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12612903931/job/35150130638"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAILRFHog",
                "name": "set_pr_emoji",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12599286906/job/35115845538"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAILRq4RA",
                "name": "set_pr_emoji",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12599478915/job/35116464196"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAILxeVAw",
                "name": "set_pr_emoji",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12612747124/job/35149812995"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIMslI4g",
                "name": "set_pr_emoji",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12637488330/job/35211790562"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAILRE2Tw",
                "name": "Add ready-to-merge or delegated label",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12599285408/job/35115841103"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAILRefHQ",
                "name": "Add ready-to-merge or delegated label",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12599415415/job/35116261149"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAILRf0XA",
                "name": "Add ready-to-merge or delegated label",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12599422395/job/35116282972"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAILvt5VA",
                "name": "Add ready-to-merge or delegated label",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12611862710/job/35147970900"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAILxxtyg",
                "name": "Add ready-to-merge or delegated label",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12612903935/job/35150130634"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAILP65hQ",
                "name": "label-and-report-new-contributor",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12598869289/job/35114629509"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAILRE2cA",
                "name": "Ping maintainers on Zulip",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12599285407/job/35115841136"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAILReeQA",
                "name": "Ping maintainers on Zulip",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12599415426/job/35116260928"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAILRf0ew",
                "name": "Ping maintainers on Zulip",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12599422392/job/35116283003"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAILvt40w",
                "name": "Ping maintainers on Zulip",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12611862708/job/35147970771"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAILxxt0g",
                "name": "Ping maintainers on Zulip",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12612903934/job/35150130642"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAILP65VA",
                "name": "post-or-update-summary-comment",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12598869284/job/35114629460"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAILP61gQ",
                "name": "Cancel Previous Runs (CI)",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12598868997/job/35114628481"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAILP61Zw",
                "name": "Cancel Previous Runs (CI)",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12598869001/job/35114628455"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAILP66Wg",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12598869283/job/35114629722"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAILP63eA",
                "name": "Lint style (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12598868997/job/35114628984"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAILP63fA",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12598869001/job/35114628988"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAILP65fg",
                "name": "Check all files imported",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12598869283/job/35114629502"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAILP62dw",
                "name": "Build (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12598868997/job/35114628727"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAILP62kw",
                "name": "Build",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12598869001/job/35114628755"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAILP64gQ",
                "name": "Post-CI job (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12598868997/job/35114629249"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAILRZX4g",
                "name": "Post-CI job",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12598869001/job/35116177378"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAILP7OUA",
                "name": "New Contributor Check",
                "conclusion": "NEUTRAL",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/35114634832"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAILP8RPQ",
                "name": "Summary",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=20433&login=leanprover-community&repository=mathlib4"
              }
            ]
          }
        },
        "title": "feat(Data/Finset/Card): of cardinality between",
        "updatedAt": "2025-02-17T11:24:54Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/20433",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "492f4cb062ec43201c8bd45d072bde1e6720c192"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6ZIlhh",
              "createdAt": "2025-01-03T12:41:07Z",
              "body": "### PR summary [61b2a51af5](https://github.com/leanprover-community/mathlib4/pull/20433/commits/61b2a51af51215aa17397403986e0e5d53639538)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n\n</details>\n\n---\n\n#### Declarations diff\n\n`+ of_cardinality_between_of_disjoint`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n---\n\n<details><summary>No changes to technical debt.</summary>\n\nYou can run this locally as\n```\n./scripts/technical-debt-metrics.sh pr_summary\n```\n* The `relative` value is the weighted *sum* of the differences with weight given by the *inverse* of the current value of the statistic.\n* The `absolute` value is the `relative` value divided by the total sum of the inverses of the current values (i.e. the weighted *average* of the differences).\n</details>",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5wCgy9",
              "createdAt": "2025-01-03T12:41:10Z",
              "source": {
                "id": "PR_kwDOFcwZ1c6DlHWo",
                "title": "Block matrix totally unimodular",
                "url": "https://github.com/leanprover-community/mathlib4/pull/19607"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6k9OUezwAAAAOuLkpU",
              "createdAt": "2025-01-03T12:41:16Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABtNO8rw",
                "name": "t-data"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6WvlqS",
              "createdAt": "2025-01-03T13:07:35Z",
              "body": "",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "65994e9709face9e8a106e1f781bc2cc9d2872bf"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "1be30683fc244e714c757e982e854035bab57f9f"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "61b2a51af51215aa17397403986e0e5d53639538"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6WwD1u",
              "createdAt": "2025-01-03T14:35:10Z",
              "body": "",
              "author": {
                "login": "alreadydone"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6k9OUezwAAAAOuPFkk",
              "createdAt": "2025-01-03T14:35:21Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6k9OUezwAAAAOuPurL",
              "createdAt": "2025-01-03T14:51:15Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6k9OUezwAAAAOutJxT",
              "createdAt": "2025-01-04T18:24:14Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6ZR_03",
              "createdAt": "2025-01-05T13:44:47Z",
              "body": "I don't really see the point of this lemma. Why can't you directly use `Finset.exists_subset_card_eq`? Your new lemma isn't (yet) used in #19607, so I can't really offer you a more precise replacement for it.",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6ZZgdR",
              "createdAt": "2025-01-06T17:43:10Z",
              "body": "> I don't really see the point of this lemma. Why can't you directly use `Finset.exists_subset_card_eq`? Your new lemma isn't (yet) used in #19607, so I can't really offer you a more precise replacement for it.\r\n\r\nYou are right I don't use the new lemma. The lemma I use at the moment is:\r\n```\r\nimport Mathlib.Tactic\r\n\r\nlemma finset_of_cardinality_between {α β : Type*} [Fintype α] [Fintype β] {n : ℕ}\r\n    (hα : Fintype.card α < n) (hn : n ≤ Fintype.card α + Fintype.card β) :\r\n    ∃ b : Finset β, Fintype.card (α ⊕ b) = n ∧ Nonempty b := by\r\n  have beta' : n - Fintype.card α ≤ Fintype.card β\r\n  · omega\r\n  obtain ⟨s, hs⟩ : ∃ s : Finset β, s.card = n - Fintype.card α :=\r\n    (Finset.exists_subset_card_eq beta').imp (by simp)\r\n  use s\r\n  rw [Fintype.card_sum, Fintype.card_coe, hs]\r\n  constructor\r\n  · omega\r\n  · by_contra ifempty\r\n    have : s.card = 0\r\n    · rw [Finset.card_eq_zero]\r\n      rw [nonempty_subtype, not_exists] at ifempty\r\n      exact Finset.eq_empty_of_forall_not_mem ifempty\r\n    omega\r\n```\r\n\r\nIt will probably change after the refactor suggested by Kevin Buzzard.",
              "author": {
                "login": "madvorak"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6ZZg-R",
              "createdAt": "2025-01-06T17:44:25Z",
              "body": "Can you @YaelDillies nevertheless clarify whether `Nonempty x` or `x ≠ ∅` is preferred?",
              "author": {
                "login": "madvorak"
              }
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6k9OUezwAAAAOvfMqS",
              "createdAt": "2025-01-06T17:44:50Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6k9OUezwAAAAOvfOXK",
              "createdAt": "2025-01-06T17:45:27Z",
              "label": {
                "id": "MDU6TGFiZWwzMjcxMjQ0NzU5",
                "name": "WIP"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6ZaLHw",
              "createdAt": "2025-01-06T19:31:26Z",
              "body": "> I don't use the new lemma. The lemma I use at the moment is: [...]. It will probably change after the refactor suggested by Kevin Buzzard.\r\n\r\nAh okay, then I suggest we leave that PR unmerged for the time being, until what you actually need becomes clearer\r\n\r\n\r\n> Can you @YaelDillies nevertheless clarify whether `Nonempty x` or `x ≠ ∅` is preferred?\r\n\r\n`x.Nonempty` is preferred",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6ZaOE_",
              "createdAt": "2025-01-06T19:39:19Z",
              "body": "Yes. All four PRs are labelled as WIP now.",
              "author": {
                "login": "madvorak"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6aNOxS",
              "createdAt": "2025-01-13T13:51:02Z",
              "body": "In the end, I will need exactly this lemma:\r\n```\r\nlemma finset_of_cardinality_between {α β : Type*} [Fintype α] [Fintype β] {n : ℕ}\r\n    (hα : Fintype.card α < n) (hn : n ≤ Fintype.card α + Fintype.card β) :\r\n    ∃ b : Finset β, Fintype.card (α ⊕ b) = n ∧ Nonempty b := by\r\n  have beta' : n - Fintype.card α ≤ Fintype.card β\r\n  · omega\r\n  obtain ⟨s, hs⟩ : ∃ s : Finset β, s.card = n - Fintype.card α :=\r\n    (Finset.exists_subset_card_eq beta').imp (by simp)\r\n  use s\r\n  rw [Fintype.card_sum, Fintype.card_coe, hs]\r\n  constructor\r\n  · omega\r\n  · by_contra ifempty\r\n    have : s.card = 0\r\n    · rw [Finset.card_eq_zero]\r\n      rw [nonempty_subtype, not_exists] at ifempty\r\n      exact Finset.eq_empty_of_forall_not_mem ifempty\r\n    omega\r\n```\r\n\r\nDo you @YaelDillies want to weigh in on how it should be generalized for Mathlib? `Finset` version perhaps?",
              "author": {
                "login": "madvorak"
              }
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6ba-5O",
              "createdAt": "2025-01-22T15:23:53Z",
              "body": "This lemma is overly specific, I find, so I think you should inline it where needed.\r\n\r\nHere's a golf, using new machinery that could belong in mathlib:\r\n```\r\nimport Mathlib.Data.Fintype.Sum\r\n\r\nnamespace Equiv\r\nvariable {α β : Type*}\r\n\r\n-- Analogue of `Equiv.optionIsSomeEquiv`\r\n@[simps]\r\ndef sumIsLeft : {x : α ⊕ β // x.isLeft} ≃ α where\r\n  toFun x := x.1.getLeft x.2\r\n  invFun a := ⟨.inl a, Sum.isLeft_inl⟩\r\n  left_inv | ⟨.inl _a, _⟩ => rfl\r\n  right_inv _a := rfl\r\n\r\n@[simps]\r\ndef sumIsRight : {x : α ⊕ β // x.isRight} ≃ β where\r\n  toFun x := x.1.getRight x.2\r\n  invFun b := ⟨.inr b, Sum.isRight_inr⟩\r\n  left_inv | ⟨.inr _b, _⟩ => rfl\r\n  right_inv _b := rfl\r\n\r\nend Equiv\r\n\r\nnamespace Finset\r\nvariable {α β : Type*} {s : Finset (α ⊕ β)} {a : α} {b : β}\r\n\r\ndef left (s : Finset (α ⊕ β)) : Finset α := (s.subtype _).map Equiv.sumIsLeft.toEmbedding\r\ndef right (s : Finset (α ⊕ β)) : Finset β := (s.subtype _).map Equiv.sumIsRight.toEmbedding\r\n\r\n@[simp] lemma mem_left : a ∈ s.left ↔ .inl a ∈ s := by simp [left]\r\n@[simp] lemma mem_right : b ∈ s.right ↔ .inr b ∈ s := by simp [right]\r\n\r\nlemma disjSum_left_right (s : Finset (α ⊕ β)) : s.left.disjSum s.right = s := by\r\n  ext (a | b) <;> simp\r\n\r\nlemma card_left_add_card_right (s : Finset (α ⊕ β)) : #s.left + #s.right = #s := by\r\n  simpa using congr(#$s.disjSum_left_right)\r\n\r\n@[simp] lemma left_eq_univ [Fintype α] : s.left = univ ↔ univ.disjSum ∅ ⊆ s := by\r\n  simp [eq_univ_iff_forall, subset_iff]\r\n\r\n@[simp] lemma right_eq_empty [Fintype α] : s.right = ∅ ↔ s ⊆ univ.disjSum ∅ := by\r\n  simp [eq_empty_iff_forall_not_mem, subset_iff]\r\n\r\nend Finset\r\n\r\nopen Finset\r\n\r\nlemma Finset.of_cardinality_between {α β : Type*} [Fintype α] [Fintype β] {n : ℕ}\r\n    (hα : Fintype.card α < n) (hn : n ≤ Fintype.card α + Fintype.card β) :\r\n    ∃ s : Finset β, Fintype.card α + #s = n ∧ s.Nonempty := by\r\n  obtain ⟨s, hs, -, rfl⟩ : ∃ s : Finset (α ⊕ β), _ :=\r\n    exists_subsuperset_card_eq (subset_univ <| univ.disjSum ∅) (by simpa using hα.le)\r\n      (by simpa using hn)\r\n  refine ⟨s.right, by simpa [left_eq_univ.2 hs] using s.card_left_add_card_right, ?_⟩\r\n  simp only [nonempty_iff_ne_empty, ne_eq, right_eq_empty, disjSum_empty]\r\n  exact fun h ↦ hα.not_le <| by simpa using card_le_card h\r\n```",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6bbMAq",
              "createdAt": "2025-01-22T15:44:58Z",
              "body": "Interesting.",
              "author": {
                "login": "madvorak"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6k9OUezwAAAAPCmMoa",
              "createdAt": "2025-02-01T09:50:52Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "ClosedEvent",
              "id": "CE_lADOFcwZ1c6k9OUezwAAAAPNdxin",
              "createdAt": "2025-02-17T11:24:54Z"
            }
          ]
        }
      }
    }
  }
}
