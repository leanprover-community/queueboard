{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 26,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "luigi-massacci"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "The inequality between the quadratic and arithmetic mean as a consequence of Jensen's inequality. Weighted version for positive real valued functions from a `Finset`. Fix notation for sums, switching to `∈` in place of `in`. \r\n\r\n---\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nFor details on the \"pull request lifecycle\" in mathlib, please see:\r\nhttps://leanprover-community.github.io/contribute/index.html\r\n\r\nIn particular, note that most reviewers will only notice your PR\r\nif it passes the continuous integration checks.\r\nPlease ask for help on https://leanprover.zulipchat.com if needed.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nIf you are moving or deleting declarations, please include these lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nMoves:\r\n- Vector.* -> Mathlib.Vector.*\r\n- ...\r\n\r\nDeletions:\r\n- Nat.bit1_add_bit1\r\n- ...\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n\r\n-->\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 1,
        "closed": false,
        "closedAt": null,
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c6E9A9y",
              "body": "### PR summary [96a243c8e4](https://github.com/leanprover-community/mathlib4/pull/14799/commits/96a243c8e41c4f19466255af54fe62d92496a4b3)\n\n<details><summary>\n\n#### Import changes for modified files\n\n</summary>\n\nDependency changes\n\n| File | Base Count | Head Count | Change |\n| --- | --- | --- | --- |\n| Mathlib.Analysis.MeanInequalities | 1348 | 1351 | +3 (+0.22%) |\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n|<details><summary>59 files</summary> `Mathlib.Analysis.InnerProductSpace.Spectrum` `Mathlib.LinearAlgebra.Matrix.PosDef` `Mathlib.Analysis.InnerProductSpace.Rayleigh` `Mathlib.MeasureTheory.Measure.Lebesgue.Complex` `Mathlib.Analysis.InnerProductSpace.ProdL2` `Mathlib.Geometry.Manifold.Instances.Real` `Mathlib.Analysis.BoxIntegral.Partition.Measure` `Mathlib.Analysis.NormedSpace.TrivSqZeroExt` `Mathlib.NumberTheory.SiegelsLemma` `Mathlib.Analysis.NormedSpace.UnitizationL1` `Mathlib.Analysis.InnerProductSpace.NormPow` `Mathlib.Geometry.Manifold.PoincareConjecture` `Mathlib.MeasureTheory.Measure.Lebesgue.EqHaar` `Mathlib.Geometry.Euclidean.Angle.Oriented.Basic` `Mathlib.Geometry.Euclidean.Sphere.Ptolemy` `Mathlib.MeasureTheory.Measure.Hausdorff` `Mathlib.Analysis.InnerProductSpace.GramSchmidtOrtho` `Mathlib.Geometry.Euclidean.Angle.Sphere` `Mathlib.Analysis.InnerProductSpace.LinearPMap` `Mathlib.Analysis.NormedSpace.MatrixExponential` `Mathlib.MeasureTheory.Measure.Haar.InnerProductSpace` `Mathlib.Geometry.Euclidean.Inversion.Calculus` `Mathlib.Analysis.InnerProductSpace.Positive` `Mathlib.MeasureTheory.Constructions.UnitInterval` `Mathlib.NumberTheory.Liouville.Measure` `Mathlib.Analysis.MeanInequalities` `Mathlib.Analysis.BoxIntegral.Basic` `Mathlib.Analysis.Quaternion` `Mathlib.Analysis.NormedSpace.Star.Matrix` `Mathlib.Analysis.InnerProductSpace.Calculus` `Mathlib.Combinatorics.Additive.AP.Three.Behrend` `Mathlib.Geometry.Euclidean.Angle.Oriented.RightAngle` `Mathlib.Analysis.InnerProductSpace.EuclideanDist` `Mathlib.Analysis.Convex.Measure` `Mathlib.Topology.MetricSpace.HausdorffDimension` `Mathlib.Analysis.InnerProductSpace.PiL2` `Mathlib.Analysis.NormedSpace.QuaternionExponential` `Mathlib.Geometry.Euclidean.Angle.Oriented.Rotation` `Mathlib.Analysis.NormedSpace.DualNumber` `Mathlib.LinearAlgebra.Matrix.Hermitian` `Mathlib.LinearAlgebra.Matrix.LDL` `Mathlib.Analysis.Matrix` `Mathlib.Analysis.NormedSpace.ProdLp` `Mathlib.LinearAlgebra.Matrix.SchurComplement` `Mathlib.Analysis.NormedSpace.PiLp` `Mathlib.Combinatorics.SimpleGraph.LapMatrix` `Mathlib.Analysis.InnerProductSpace.Adjoint` `Mathlib.MeasureTheory.Measure.Lebesgue.Basic` `Mathlib.Analysis.Convex.Cone.Proper` `Mathlib.Analysis.Calculus.BumpFunction.InnerProduct` `Mathlib.LinearAlgebra.Matrix.Spectrum` `Mathlib.Analysis.VonNeumannAlgebra.Basic` `Mathlib.Geometry.Euclidean.Triangle` `Mathlib.Analysis.InnerProductSpace.Orientation` `Mathlib.Geometry.Euclidean.Angle.Oriented.Affine` `Mathlib.Analysis.BoxIntegral.DivergenceTheorem` `Mathlib.MeasureTheory.Measure.Haar.OfBasis` `Mathlib.Analysis.InnerProductSpace.TwoDim` `Mathlib.Geometry.Manifold.Instances.Sphere`</details>|3|\n\n</details>\n\n</details>\n\n---\n\n#### Declarations diff\n\n`+ arith_mean_le_quad_mean_weighted`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>",
              "createdAt": "2024-07-16T10:45:40Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6FA588",
              "body": "What about the generalization `∑ i ∈ s, w i * z i ≤ Real.rpow (∑ i ∈ s, w i * Real.rpow (z i) p) (1 / p)` for any `1 ≤ p`? Furthermore, the right hand side increases as `p` increases.",
              "createdAt": "2024-07-16T18:51:49Z",
              "author": {
                "login": "acmepjz"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6I8KKN",
              "body": "> the right hand side increases as `p` increases.\r\n\r\nYes, this is the one statement I really want\r\n",
              "createdAt": "2024-08-19T21:16:25Z",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6MWVIE",
              "body": "> What about the generalization `∑ i ∈ s, w i * z i ≤ Real.rpow (∑ i ∈ s, w i * Real.rpow (z i) p) (1 / p)` for any `1 ≤ p`? Furthermore, the right hand side increases as `p` increases.\r\n\r\nIt would be a nice project to define the generalized weighted mean for any exponent `p : EReal`. For `p = 0` the mean is the geometric mean, for `p = ⊥` it's the minimum, and for `p = ⊤` it's the maximum. That would subsume pretty much everything in this file.",
              "createdAt": "2024-09-17T06:38:23Z",
              "author": {
                "login": "vihdzp"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6MXG-4",
              "body": "Note that this generalised mean is basically [the compact Lp norm](https://github.com/YaelDillies/LeanAPAP/blob/master/LeanAPAP/Prereqs/LpNorm/Compact.lean).",
              "createdAt": "2024-09-17T08:24:34Z",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6MXJBF",
              "body": "I think these are generalizations in different directions, since the generalized mean also allows for negative exponents, and for weights given to each variable.",
              "createdAt": "2024-09-17T08:28:32Z",
              "author": {
                "login": "vihdzp"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6MXKAu",
              "body": "The negative exponents I agree with, but the general weights version is [here](https://github.com/YaelDillies/LeanAPAP/blob/master/LeanAPAP/Prereqs/NNLpNorm.lean).",
              "createdAt": "2024-09-17T08:30:35Z",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6NTNZN",
              "body": "Hello! Sorry for not replying, I was kinda busy. I formalised it like this because I wanted the IMO compendium version, but I think it's quite reasonable to have the version @acmepjz suggested, the proof needs almost no adjustments anyway, I think it might still be worthwhile to have a named lemma for the p = 2 case (even if it's just literally specifying p = 2 in the general case).\r\n\r\nI'll get to it when I can spare the time ",
              "createdAt": "2024-09-24T08:34:05Z",
              "author": {
                "login": "luigi-massacci"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "a2273e1126283e7dff4b044654d2434935f6d7f7",
                "additions": 37,
                "deletions": 3,
                "committedDate": "2024-07-15T14:39:31Z",
                "author": {
                  "name": "Luigi Massacci",
                  "email": "luigi.massacci.it@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGZMeACQ",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9941474834/job/27460599817"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGZMeC7w",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9941474835/job/27460600559"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGZMeETQ",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9941474834/job/27460600909"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGZMeBuA",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9941474835/job/27460600248"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGZMeDIw",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9941474834/job/27460600611"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGZMd_gw",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9941474835/job/27460599683"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGZMeENQ",
                        "name": "Build",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9941474835/job/27460600885"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGZMeB0A",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9941474834/job/27460600272"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGZMeFng",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9941474834/job/27460601246"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGZNSRYA",
                        "name": "Post-CI job",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9941474835/job/27461456224"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "ee45cc8e2c32b847d4c7941a380aaf1c38d399d5",
                "additions": 0,
                "deletions": 10,
                "committedDate": "2024-07-16T10:02:27Z",
                "author": {
                  "name": "Luigi Massacci",
                  "email": "luigi.massacci.it@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGZzL3IQ",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9954790349/job/27501197089"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGZzLyuw",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9954790348/job/27501195963"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGZzL0Jg",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9954790349/job/27501196326"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGZzL2uQ",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9954790348/job/27501196985"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGZzL1pw",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9954790349/job/27501196711"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGZzL1ag",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9954790348/job/27501196650"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGZzL0KA",
                        "name": "Build",
                        "conclusion": "CANCELLED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9954790348/job/27501196328"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGZzLyZg",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9954790349/job/27501195878"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGZzicDA",
                        "name": "Post-CI job",
                        "conclusion": "CANCELLED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9954790348/job/27501566988"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGZzL4tA",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9954790349/job/27501197492"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "96a243c8e41c4f19466255af54fe62d92496a4b3",
                "additions": 2,
                "deletions": 3,
                "committedDate": "2024-07-16T10:10:15Z",
                "author": {
                  "name": "Luigi Massacci",
                  "email": "luigi.massacci.it@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGZ08axg",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9955390942/job/27503041222"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGZ08ayw",
                        "name": "build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9955390937/job/27503041227"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGZzhFmA",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9954903553/job/27501544856"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGZzhG0A",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9954903549/job/27501545168"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGZ08cIg",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9955390940/job/27503041570"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGZzhJkA",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9954903553/job/27501545872"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGZzhI9Q",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9954903549/job/27501545717"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGZ08bGQ",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9955390940/job/27503041305"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGZzhHSw",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9954903553/job/27501545291"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGZzhH5w",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9954903549/job/27501545447"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGZzhIbg",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9954903553/job/27501545582"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGZzhFpg",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9954903549/job/27501544870"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGZzhKsg",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9954903553/job/27501546162"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGZ0YmMg",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9954903549/job/27502454322"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGZ08rsw",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/27503045555"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGZ09rjg",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=14799&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            }
          ]
        },
        "createdAt": "2024-07-16T10:45:02Z",
        "deletions": 3,
        "files": {
          "nodes": [
            {
              "path": "Mathlib/Analysis/MeanInequalities.lean",
              "additions": 26,
              "deletions": 3
            }
          ]
        },
        "headRefName": "QM-AM-inequality",
        "headRefOid": "96a243c8e41c4f19466255af54fe62d92496a4b3",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c51f1m6",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c7P265b",
              "color": "f9d0c4",
              "name": "awaiting-author"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
              "color": "f99094",
              "name": "merge-conflict"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABJc1VKA",
              "color": "acff3f",
              "name": "easy"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABViJeVg",
              "color": "33DBEC",
              "name": "t-analysis"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABb5aSCQ",
              "color": "8BBA68",
              "name": "new-contributor"
            }
          ]
        },
        "latestReviews": {
          "nodes": []
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "DIRTY",
        "mergeable": "CONFLICTING",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 14799,
        "potentialMergeCommit": null,
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": null,
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": []
        },
        "reviewThreads": {
          "nodes": []
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjQ4ODY4MDc1",
              "login": "luigi-massacci"
            },
            {
              "id": "MDQ6VXNlcjMzOTc3Nzk=",
              "login": "acmepjz"
            },
            {
              "id": "MDQ6VXNlcjE0MDkwNTkz",
              "login": "YaelDillies"
            },
            {
              "id": "MDQ6VXNlcjY1NDY1Njcw",
              "login": "vihdzp"
            },
            {
              "id": "MDQ6VXNlcjg5MjA1OTg=",
              "login": "j-loreaux"
            },
            {
              "id": "U_kgDOBcsTTQ",
              "login": "leanprover-community-bot-assistant"
            }
          ]
        },
        "state": "OPEN",
        "statusCheckRollup": {
          "contexts": {
            "nodes": [
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGZ08axg",
                "name": "label-and-report-new-contributor",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9955390942/job/27503041222"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGZ08ayw",
                "name": "build",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9955390937/job/27503041227"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGZzhFmA",
                "name": "Cancel Previous Runs (CI)",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9954903553/job/27501544856"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGZzhG0A",
                "name": "Cancel Previous Runs (CI)",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9954903549/job/27501545168"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGZ08cIg",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9955390940/job/27503041570"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGZzhJkA",
                "name": "Lint style (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9954903553/job/27501545872"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGZzhI9Q",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9954903549/job/27501545717"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGZ08bGQ",
                "name": "Check all files imported",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9955390940/job/27503041305"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGZzhHSw",
                "name": "check workflows (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9954903553/job/27501545291"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGZzhH5w",
                "name": "check workflows",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9954903549/job/27501545447"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGZzhIbg",
                "name": "Build (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9954903553/job/27501545582"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGZzhFpg",
                "name": "Build",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9954903549/job/27501544870"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGZzhKsg",
                "name": "Post-CI job (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9954903553/job/27501546162"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGZ0YmMg",
                "name": "Post-CI job",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/9954903549/job/27502454322"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGZ08rsw",
                "name": "New Contributor Check",
                "conclusion": "NEUTRAL",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/27503045555"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGZ09rjg",
                "name": "Summary",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=14799&login=leanprover-community&repository=mathlib4"
              }
            ]
          }
        },
        "title": "feat(Analysis/MeanInequalities): Weighted QM-AM inequality",
        "updatedAt": "2025-01-30T20:48:58Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/14799",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "a2273e1126283e7dff4b044654d2434935f6d7f7"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "ee45cc8e2c32b847d4c7941a380aaf1c38d399d5"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "96a243c8e41c4f19466255af54fe62d92496a4b3"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6PskRKzwAAAAMlytwp",
              "createdAt": "2024-07-16T10:45:02Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABJc1VKA",
                "name": "easy"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6PskRKzwAAAAMlytww",
              "createdAt": "2024-07-16T10:45:02Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABViJeVg",
                "name": "t-analysis"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6PskRKzwAAAAMlyuOL",
              "createdAt": "2024-07-16T10:45:12Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABb5aSCQ",
                "name": "new-contributor"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6E9A9y",
              "createdAt": "2024-07-16T10:45:40Z",
              "body": "### PR summary [96a243c8e4](https://github.com/leanprover-community/mathlib4/pull/14799/commits/96a243c8e41c4f19466255af54fe62d92496a4b3)\n\n<details><summary>\n\n#### Import changes for modified files\n\n</summary>\n\nDependency changes\n\n| File | Base Count | Head Count | Change |\n| --- | --- | --- | --- |\n| Mathlib.Analysis.MeanInequalities | 1348 | 1351 | +3 (+0.22%) |\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n|<details><summary>59 files</summary> `Mathlib.Analysis.InnerProductSpace.Spectrum` `Mathlib.LinearAlgebra.Matrix.PosDef` `Mathlib.Analysis.InnerProductSpace.Rayleigh` `Mathlib.MeasureTheory.Measure.Lebesgue.Complex` `Mathlib.Analysis.InnerProductSpace.ProdL2` `Mathlib.Geometry.Manifold.Instances.Real` `Mathlib.Analysis.BoxIntegral.Partition.Measure` `Mathlib.Analysis.NormedSpace.TrivSqZeroExt` `Mathlib.NumberTheory.SiegelsLemma` `Mathlib.Analysis.NormedSpace.UnitizationL1` `Mathlib.Analysis.InnerProductSpace.NormPow` `Mathlib.Geometry.Manifold.PoincareConjecture` `Mathlib.MeasureTheory.Measure.Lebesgue.EqHaar` `Mathlib.Geometry.Euclidean.Angle.Oriented.Basic` `Mathlib.Geometry.Euclidean.Sphere.Ptolemy` `Mathlib.MeasureTheory.Measure.Hausdorff` `Mathlib.Analysis.InnerProductSpace.GramSchmidtOrtho` `Mathlib.Geometry.Euclidean.Angle.Sphere` `Mathlib.Analysis.InnerProductSpace.LinearPMap` `Mathlib.Analysis.NormedSpace.MatrixExponential` `Mathlib.MeasureTheory.Measure.Haar.InnerProductSpace` `Mathlib.Geometry.Euclidean.Inversion.Calculus` `Mathlib.Analysis.InnerProductSpace.Positive` `Mathlib.MeasureTheory.Constructions.UnitInterval` `Mathlib.NumberTheory.Liouville.Measure` `Mathlib.Analysis.MeanInequalities` `Mathlib.Analysis.BoxIntegral.Basic` `Mathlib.Analysis.Quaternion` `Mathlib.Analysis.NormedSpace.Star.Matrix` `Mathlib.Analysis.InnerProductSpace.Calculus` `Mathlib.Combinatorics.Additive.AP.Three.Behrend` `Mathlib.Geometry.Euclidean.Angle.Oriented.RightAngle` `Mathlib.Analysis.InnerProductSpace.EuclideanDist` `Mathlib.Analysis.Convex.Measure` `Mathlib.Topology.MetricSpace.HausdorffDimension` `Mathlib.Analysis.InnerProductSpace.PiL2` `Mathlib.Analysis.NormedSpace.QuaternionExponential` `Mathlib.Geometry.Euclidean.Angle.Oriented.Rotation` `Mathlib.Analysis.NormedSpace.DualNumber` `Mathlib.LinearAlgebra.Matrix.Hermitian` `Mathlib.LinearAlgebra.Matrix.LDL` `Mathlib.Analysis.Matrix` `Mathlib.Analysis.NormedSpace.ProdLp` `Mathlib.LinearAlgebra.Matrix.SchurComplement` `Mathlib.Analysis.NormedSpace.PiLp` `Mathlib.Combinatorics.SimpleGraph.LapMatrix` `Mathlib.Analysis.InnerProductSpace.Adjoint` `Mathlib.MeasureTheory.Measure.Lebesgue.Basic` `Mathlib.Analysis.Convex.Cone.Proper` `Mathlib.Analysis.Calculus.BumpFunction.InnerProduct` `Mathlib.LinearAlgebra.Matrix.Spectrum` `Mathlib.Analysis.VonNeumannAlgebra.Basic` `Mathlib.Geometry.Euclidean.Triangle` `Mathlib.Analysis.InnerProductSpace.Orientation` `Mathlib.Geometry.Euclidean.Angle.Oriented.Affine` `Mathlib.Analysis.BoxIntegral.DivergenceTheorem` `Mathlib.MeasureTheory.Measure.Haar.OfBasis` `Mathlib.Analysis.InnerProductSpace.TwoDim` `Mathlib.Geometry.Manifold.Instances.Sphere`</details>|3|\n\n</details>\n\n</details>\n\n---\n\n#### Declarations diff\n\n`+ arith_mean_le_quad_mean_weighted`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6FA588",
              "createdAt": "2024-07-16T18:51:49Z",
              "body": "What about the generalization `∑ i ∈ s, w i * z i ≤ Real.rpow (∑ i ∈ s, w i * Real.rpow (z i) p) (1 / p)` for any `1 ≤ p`? Furthermore, the right hand side increases as `p` increases.",
              "author": {
                "login": "acmepjz"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6PskRKzwAAAAMmSknD",
              "createdAt": "2024-07-16T21:32:44Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6I8KKN",
              "createdAt": "2024-08-19T21:16:25Z",
              "body": "> the right hand side increases as `p` increases.\r\n\r\nYes, this is the one statement I really want\r\n",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6MWVIE",
              "createdAt": "2024-09-17T06:38:23Z",
              "body": "> What about the generalization `∑ i ∈ s, w i * z i ≤ Real.rpow (∑ i ∈ s, w i * Real.rpow (z i) p) (1 / p)` for any `1 ≤ p`? Furthermore, the right hand side increases as `p` increases.\r\n\r\nIt would be a nice project to define the generalized weighted mean for any exponent `p : EReal`. For `p = 0` the mean is the geometric mean, for `p = ⊥` it's the minimum, and for `p = ⊤` it's the maximum. That would subsume pretty much everything in this file.",
              "author": {
                "login": "vihdzp"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6MXG-4",
              "createdAt": "2024-09-17T08:24:34Z",
              "body": "Note that this generalised mean is basically [the compact Lp norm](https://github.com/YaelDillies/LeanAPAP/blob/master/LeanAPAP/Prereqs/LpNorm/Compact.lean).",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6MXJBF",
              "createdAt": "2024-09-17T08:28:32Z",
              "body": "I think these are generalizations in different directions, since the generalized mean also allows for negative exponents, and for weights given to each variable.",
              "author": {
                "login": "vihdzp"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6MXKAu",
              "createdAt": "2024-09-17T08:30:35Z",
              "body": "The negative exponents I agree with, but the general weights version is [here](https://github.com/YaelDillies/LeanAPAP/blob/master/LeanAPAP/Prereqs/NNLpNorm.lean).",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6NTNZN",
              "createdAt": "2024-09-24T08:34:05Z",
              "body": "Hello! Sorry for not replying, I was kinda busy. I formalised it like this because I wanted the IMO compendium version, but I think it's quite reasonable to have the version @acmepjz suggested, the proof needs almost no adjustments anyway, I think it might still be worthwhile to have a named lemma for the p = 2 case (even if it's just literally specifying p = 2 in the general case).\r\n\r\nI'll get to it when I can spare the time ",
              "author": {
                "login": "luigi-massacci"
              }
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6PskRKzwAAAAPBauUQ",
              "createdAt": "2025-01-30T20:48:58Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            }
          ]
        }
      }
    }
  }
}
