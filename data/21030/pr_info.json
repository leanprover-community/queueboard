{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 9,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "mattrobball"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "`rw` was unifying too hard. `simp only` avoids this.\n\n---\n<!-- The text above the `---` will become the commit message when your\nPR is merged. Please leave a blank newline before the `---`, otherwise\nGitHub will format the text above it as a title.\n\nFor details on the \"pull request lifecycle\" in mathlib, please see:\nhttps://leanprover-community.github.io/contribute/index.html\n\nIn particular, note that most reviewers will only notice your PR\nif it passes the continuous integration checks.\nPlease ask for help on https://leanprover.zulipchat.com if needed.\n\nTo indicate co-authors, include lines at the bottom of the commit message\n(that is, before the `---`) using the following format:\n\nCo-authored-by: Author Name <author@email.com>\n\nIf you are moving or deleting declarations, please include these lines at the bottom of the commit message\n(that is, before the `---`) using the following format:\n\nMoves:\n- Vector.* -> List.Vector.*\n- ...\n\nDeletions:\n- Nat.bit1_add_bit1\n- ...\n\nAny other comments you want to keep out of the PR commit should go\nbelow the `---`, and placed outside this HTML comment, or else they\nwill be invisible to reviewers.\n\nIf this PR depends on other PRs, please list them below this comment,\nusing the following format:\n- [ ] depends on: #abc [optional extra text]\n- [ ] depends on: #xyz [optional extra text]\n\n-->\n\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\n",
        "changedFiles": 1,
        "closed": false,
        "closedAt": null,
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c6bwtHI",
              "body": "!bench",
              "createdAt": "2025-01-24T19:27:40Z",
              "author": {
                "login": "mattrobball"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6bwta2",
              "body": "### PR summary [0e50112140](https://github.com/leanprover-community/mathlib4/pull/21030/commits/0e50112140e314f83616155f67cdc2264de202d0)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n\n</details>\n\n---\n\n#### Declarations diff\n\nNo declarations were harmed in the making of this PR! üêô\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n---\n\n<details><summary>No changes to technical debt.</summary>\n\nYou can run this locally as\n```\n./scripts/technical-debt-metrics.sh pr_summary\n```\n* The `relative` value is the weighted *sum* of the differences with weight given by the *inverse* of the current value of the statistic.\n* The `absolute` value is the `relative` value divided by the total sum of the inverses of the current values (i.e. the weighted *average* of the differences).\n</details>\n",
              "createdAt": "2025-01-24T19:28:30Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6bw3qX",
              "body": "Here are the [benchmark results](https://speed.lean-lang.org/mathlib4/run-detail/03d17836-3320-44e1-84ad-127ccf11ee28) for commit 0e50112140e314f83616155f67cdc2264de202d0.\nThere were [significant changes](https://speed.lean-lang.org/mathlib4/compare/31d476bd-112f-423c-a893-c558594bf20c/to/03d17836-3320-44e1-84ad-127ccf11ee28) against commit 59eed68fe429e3b530ee79ce6109d7efbd9d8d98:\n```diff\n  Benchmark                     Metric         Change\n  ===================================================\n+ ~Mathlib.Algebra.Quaternion   instructions   -13.5%\n```",
              "createdAt": "2025-01-24T19:56:23Z",
              "author": {
                "login": "leanprover-bot"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6bw31m",
              "body": "|File|Instructions|%|\n|-|-:|:-:|\n|`build`|-30.706‚¨ù10‚Åπ|(-0.01%)|\n|`Mathlib.Algebra.Quaternion`|-35.188‚¨ù10‚Åπ|(-13.47%)|\n[CI run](https://github.com/leanprover-community/mathlib4/actions/runs/12956638852)",
              "createdAt": "2025-01-24T19:56:54Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6bz2D0",
              "body": "Please add a comment: otherwise, LGTM.\r\nmaintainer delegate?",
              "createdAt": "2025-01-25T18:34:11Z",
              "author": {
                "login": "grunweg"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6bz2FI",
              "body": "üöÄ Pull request has been placed on the maintainer queue by grunweg.",
              "createdAt": "2025-01-25T18:34:28Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6b1n_L",
              "body": "Thanks!  Adding a comment seems like a good idea.\r\n\r\nbors d+",
              "createdAt": "2025-01-26T17:52:16Z",
              "author": {
                "login": "adomani"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6b1n_a",
              "body": ":v: mattrobball can now approve this pull request. To approve and merge a pull request, simply reply with `bors r+`. More detailed instructions are available [here](https://bors.tech/documentation/getting-started/#reviewing-pull-requests).",
              "createdAt": "2025-01-26T17:52:18Z",
              "author": {
                "login": "mathlib-bors"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6cr-W2",
              "body": "@mattrobball, this declaration can be sped up even more (10x) in a different way: swapping the order of the fields `__ := Quaternion.instRing` and `__ := Quaternion.instGroupWithZero`. The reason is that the class `DivisionRing` is a direct extension of `Ring`, so by writing the `Ring` instance first, we get a much simpler definition of the instance.\r\n\r\nThis speedup also works with the original `rw` proofs.",
              "createdAt": "2025-02-01T04:55:32Z",
              "author": {
                "login": "JovanGerb"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6csTH3",
              "body": "Playing around with the order of instances feels brittle.\n\nI wonder whether this means that there is some part of core that should handle this differently, or whether it makes sense to systematically lint for similar situations everywhere.",
              "createdAt": "2025-02-01T08:42:19Z",
              "author": {
                "login": "adomani"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6csTZN",
              "body": "I wouldn't call this changing the order of instances (since that sounds like it affects type class synthesis). This is just about the definition/value of this instance.",
              "createdAt": "2025-02-01T08:45:54Z",
              "author": {
                "login": "JovanGerb"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6csTs8",
              "body": "I don't really have a good name to refer to what you suggest, but I still find it brittle!  I would prefer if such changes had virtually no effect on performance.",
              "createdAt": "2025-02-01T08:49:09Z",
              "author": {
                "login": "adomani"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6csT6J",
              "body": "What I noticed as the rule of thumb for this order is to put in the first place a substructure that is a direct substructure (so this is only counting the first structure that comes after the `extends`). I've only looked at the effect this has on the elaboration of the instance itself. But I can imagine it also gives performance benefits in unification later on.",
              "createdAt": "2025-02-01T08:51:25Z",
              "author": {
                "login": "JovanGerb"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6csUIf",
              "body": "It didn't look to me like there are too many places in Mathlib where this has a significant effect. This particular one has it very significantly though.",
              "createdAt": "2025-02-01T08:54:04Z",
              "author": {
                "login": "JovanGerb"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6csUY1",
              "body": "Let me also say that, although I find this brittle, I find it also very *interesting* that performance is affected so dramatically by this change.  I was simply suggesting that such a huge impact may be indicative of a general principle that could be an internal part of the machine, rather than applied locally.",
              "createdAt": "2025-02-01T08:56:54Z",
              "author": {
                "login": "adomani"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "0e50112140e314f83616155f67cdc2264de202d0",
                "additions": 9,
                "deletions": 6,
                "committedDate": "2025-01-24T19:22:13Z",
                "author": {
                  "name": "Matthew Ballard",
                  "email": "matt@mrb.email"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIbRY0xg",
                        "name": "set_pr_emoji",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12977000187/job/36189910214"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIajnRCA",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12956192081/job/36141912328"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIap8m5w",
                        "name": "Add ready-to-merge or delegated label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12958342832/job/36148553447"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIbvl7hg",
                        "name": "Add ready-to-merge or delegated label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12989141860/job/36221582214"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIaj1QLA",
                        "name": "Add topic label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12956263626/job/36142141484"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIaj1QJw",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12956263627/job/36142141479"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIap8nRQ",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12958342830/job/36148553541"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIbvl7hA",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12989141853/job/36221582212"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIaj1QTg",
                        "name": "post-or-update-summary-comment",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12956263629/job/36142141518"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIap8nFA",
                        "name": "Fix style issues from lint",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12958342824/job/36148553492"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIbvl8Zg",
                        "name": "Fix style issues from lint",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12989141865/job/36221582438"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIajnQhQ",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12956192090/job/36141912197"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIaj1RVg",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12956263628/job/36142141782"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIajnPoQ",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12956192081/job/36141911969"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIajnPZw",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12956192090/job/36141911911"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIaj1QTw",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12956263628/job/36142141519"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIajnR9w",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12956192081/job/36141912567"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIaj-26g",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12956192090/job/36142298858"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIaj1pKw",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/36142147883"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIaj2q1g",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=21030&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            }
          ]
        },
        "createdAt": "2025-01-24T19:27:37Z",
        "deletions": 6,
        "files": {
          "nodes": [
            {
              "path": "Mathlib/Algebra/Quaternion.lean",
              "additions": 9,
              "deletions": 6
            }
          ]
        },
        "headRefName": "mrb/speed_up_quaternion",
        "headRefOid": "0e50112140e314f83616155f67cdc2264de202d0",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c6I8Prb",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c8AAAABAt13Ow",
              "color": "bfd4f2",
              "name": "delegated"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABViJjTQ",
              "color": "33DBEC",
              "name": "t-algebra"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABh1mAHA",
              "color": "6BEB7E",
              "name": "maintainer-merge"
            }
          ]
        },
        "latestReviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c6ZgFTU",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2025-01-27T12:37:25Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6ZZvuT",
              "body": "Ew. Please add a comment for future reference",
              "state": "APPROVED",
              "author": {
                "login": "Ruben-VandeVelde"
              },
              "submittedAt": "2025-01-24T22:03:10Z"
            }
          ]
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "UNKNOWN",
        "mergeable": "UNKNOWN",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 21030,
        "potentialMergeCommit": null,
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": "APPROVED",
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c6ZZvuT",
              "body": "Ew. Please add a comment for future reference",
              "state": "APPROVED",
              "author": {
                "login": "Ruben-VandeVelde"
              },
              "submittedAt": "2025-01-24T22:03:10Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6ZgFTU",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2025-01-27T12:37:25Z"
            }
          ]
        },
        "reviewThreads": {
          "nodes": [
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5zEH-7",
                    "body": "Can you use `simp_rw` so that the proof remains inspectable? ",
                    "createdAt": "2025-01-27T12:37:25Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  }
                ]
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "U_kgDOBfZl7g",
              "login": "mattrobball"
            },
            {
              "id": "MDQ6VXNlcjg1NjY4Mzk0",
              "login": "leanprover-bot"
            },
            {
              "id": "MDQ6VXNlcjEwMTA1MDE2",
              "login": "grunweg"
            },
            {
              "id": "MDQ6VXNlcjI5NDY3NzQ1",
              "login": "adomani"
            },
            {
              "id": "MDQ6VXNlcjU2MzU1MjQ4",
              "login": "JovanGerb"
            },
            {
              "id": "MDQ6VXNlcjQyNTI2MA==",
              "login": "eric-wieser"
            },
            {
              "id": "MDQ6VXNlcjY1NTE0MTMx",
              "login": "Ruben-VandeVelde"
            },
            {
              "id": "U_kgDOB75MNQ",
              "login": "leanprover-community-mathlib4-bot"
            }
          ]
        },
        "state": "OPEN",
        "statusCheckRollup": {
          "contexts": {
            "nodes": [
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIbRY0xg",
                "name": "set_pr_emoji",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12977000187/job/36189910214"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIajnRCA",
                "name": "Lint style (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12956192081/job/36141912328"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIap8m5w",
                "name": "Add ready-to-merge or delegated label",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12958342832/job/36148553447"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIbvl7hg",
                "name": "Add ready-to-merge or delegated label",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12989141860/job/36221582214"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIaj1QLA",
                "name": "Add topic label",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12956263626/job/36142141484"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIaj1QJw",
                "name": "label-and-report-new-contributor",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12956263627/job/36142141479"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIap8nRQ",
                "name": "Ping maintainers on Zulip",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12958342830/job/36148553541"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIbvl7hA",
                "name": "Ping maintainers on Zulip",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12989141853/job/36221582212"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIaj1QTg",
                "name": "post-or-update-summary-comment",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12956263629/job/36142141518"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIap8nFA",
                "name": "Fix style issues from lint",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12958342824/job/36148553492"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIbvl8Zg",
                "name": "Fix style issues from lint",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12989141865/job/36221582438"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIajnQhQ",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12956192090/job/36141912197"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIaj1RVg",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12956263628/job/36142141782"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIajnPoQ",
                "name": "Build (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12956192081/job/36141911969"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIajnPZw",
                "name": "Build",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12956192090/job/36141911911"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIaj1QTw",
                "name": "Check all files imported",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12956263628/job/36142141519"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIajnR9w",
                "name": "Post-CI job (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12956192081/job/36141912567"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIaj-26g",
                "name": "Post-CI job",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12956192090/job/36142298858"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIaj1pKw",
                "name": "New Contributor Check",
                "conclusion": "NEUTRAL",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/36142147883"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIaj2q1g",
                "name": "Summary",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=21030&login=leanprover-community&repository=mathlib4"
              }
            ]
          }
        },
        "title": "perf(Algebra.Quaternion): replace some `rw`'s by `simp only`'s",
        "updatedAt": "2025-02-01T08:56:55Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/21030",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "0e50112140e314f83616155f67cdc2264de202d0"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6bwtHI",
              "createdAt": "2025-01-24T19:27:40Z",
              "body": "!bench",
              "author": {
                "login": "mattrobball"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6bwta2",
              "createdAt": "2025-01-24T19:28:30Z",
              "body": "### PR summary [0e50112140](https://github.com/leanprover-community/mathlib4/pull/21030/commits/0e50112140e314f83616155f67cdc2264de202d0)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n\n</details>\n\n---\n\n#### Declarations diff\n\nNo declarations were harmed in the making of this PR! üêô\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n---\n\n<details><summary>No changes to technical debt.</summary>\n\nYou can run this locally as\n```\n./scripts/technical-debt-metrics.sh pr_summary\n```\n* The `relative` value is the weighted *sum* of the differences with weight given by the *inverse* of the current value of the statistic.\n* The `absolute` value is the `relative` value divided by the total sum of the inverses of the current values (i.e. the weighted *average* of the differences).\n</details>\n",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6ngNUdzwAAAAO9ckWE",
              "createdAt": "2025-01-24T19:28:30Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABViJjTQ",
                "name": "t-algebra"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6bw3qX",
              "createdAt": "2025-01-24T19:56:23Z",
              "body": "Here are the [benchmark results](https://speed.lean-lang.org/mathlib4/run-detail/03d17836-3320-44e1-84ad-127ccf11ee28) for commit 0e50112140e314f83616155f67cdc2264de202d0.\nThere were [significant changes](https://speed.lean-lang.org/mathlib4/compare/31d476bd-112f-423c-a893-c558594bf20c/to/03d17836-3320-44e1-84ad-127ccf11ee28) against commit 59eed68fe429e3b530ee79ce6109d7efbd9d8d98:\n```diff\n  Benchmark                     Metric         Change\n  ===================================================\n+ ~Mathlib.Algebra.Quaternion   instructions   -13.5%\n```",
              "author": {
                "login": "leanprover-bot"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6bw31m",
              "createdAt": "2025-01-24T19:56:54Z",
              "body": "|File|Instructions|%|\n|-|-:|:-:|\n|`build`|-30.706‚¨ù10‚Åπ|(-0.01%)|\n|`Mathlib.Algebra.Quaternion`|-35.188‚¨ù10‚Åπ|(-13.47%)|\n[CI run](https://github.com/leanprover-community/mathlib4/actions/runs/12956638852)",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6ZZvuT",
              "createdAt": "2025-01-24T22:03:10Z",
              "body": "Ew. Please add a comment for future reference",
              "author": {
                "login": "Ruben-VandeVelde"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6bz2D0",
              "createdAt": "2025-01-25T18:34:11Z",
              "body": "Please add a comment: otherwise, LGTM.\r\nmaintainer delegate?",
              "author": {
                "login": "grunweg"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6bz2FI",
              "createdAt": "2025-01-25T18:34:28Z",
              "body": "üöÄ Pull request has been placed on the maintainer queue by grunweg.",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6ngNUdzwAAAAO9ul7t",
              "createdAt": "2025-01-25T18:34:28Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABh1mAHA",
                "name": "maintainer-merge"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6b1n_L",
              "createdAt": "2025-01-26T17:52:16Z",
              "body": "Thanks!  Adding a comment seems like a good idea.\r\n\r\nbors d+",
              "author": {
                "login": "adomani"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6b1n_a",
              "createdAt": "2025-01-26T17:52:18Z",
              "body": ":v: mattrobball can now approve this pull request. To approve and merge a pull request, simply reply with `bors r+`. More detailed instructions are available [here](https://bors.tech/documentation/getting-started/#reviewing-pull-requests).",
              "author": {
                "login": "mathlib-bors"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6ngNUdzwAAAAO940Fh",
              "createdAt": "2025-01-26T17:52:27Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABAt13Ow",
                "name": "delegated"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6ZgFTU",
              "createdAt": "2025-01-27T12:37:24Z",
              "body": "",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6cr-W2",
              "createdAt": "2025-02-01T04:55:32Z",
              "body": "@mattrobball, this declaration can be sped up even more (10x) in a different way: swapping the order of the fields `__ := Quaternion.instRing` and `__ := Quaternion.instGroupWithZero`. The reason is that the class `DivisionRing` is a direct extension of `Ring`, so by writing the `Ring` instance first, we get a much simpler definition of the instance.\r\n\r\nThis speedup also works with the original `rw` proofs.",
              "author": {
                "login": "JovanGerb"
              }
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6csTH3",
              "createdAt": "2025-02-01T08:42:19Z",
              "body": "Playing around with the order of instances feels brittle.\n\nI wonder whether this means that there is some part of core that should handle this differently, or whether it makes sense to systematically lint for similar situations everywhere.",
              "author": {
                "login": "adomani"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6csTZN",
              "createdAt": "2025-02-01T08:45:54Z",
              "body": "I wouldn't call this changing the order of instances (since that sounds like it affects type class synthesis). This is just about the definition/value of this instance.",
              "author": {
                "login": "JovanGerb"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6csTs8",
              "createdAt": "2025-02-01T08:49:09Z",
              "body": "I don't really have a good name to refer to what you suggest, but I still find it brittle!  I would prefer if such changes had virtually no effect on performance.",
              "author": {
                "login": "adomani"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6csT6J",
              "createdAt": "2025-02-01T08:51:25Z",
              "body": "What I noticed as the rule of thumb for this order is to put in the first place a substructure that is a direct substructure (so this is only counting the first structure that comes after the `extends`). I've only looked at the effect this has on the elaboration of the instance itself. But I can imagine it also gives performance benefits in unification later on.",
              "author": {
                "login": "JovanGerb"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6csUIf",
              "createdAt": "2025-02-01T08:54:04Z",
              "body": "It didn't look to me like there are too many places in Mathlib where this has a significant effect. This particular one has it very significantly though.",
              "author": {
                "login": "JovanGerb"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6csUY1",
              "createdAt": "2025-02-01T08:56:54Z",
              "body": "Let me also say that, although I find this brittle, I find it also very *interesting* that performance is affected so dramatically by this change.  I was simply suggesting that such a huge impact may be indicative of a general principle that could be an internal part of the machine, rather than applied locally.",
              "author": {
                "login": "adomani"
              }
            }
          ]
        }
      }
    }
  }
}
