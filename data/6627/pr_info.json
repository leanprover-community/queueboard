{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 121,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "adomani"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "Porting the first part of [mathlib3 #16157](https://github.com/leanprover-community/mathlib/pull/16157).\r\n\r\nThis contains the `NoZeroDivisor` instance on `AddMonoidAlgebra`s that will trickle down to `(Mv)Polynomial`s.\r\n\r\n---\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n-->\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 1,
        "closed": false,
        "closedAt": null,
        "comments": {
          "nodes": []
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "4e3902b09bf43fb4c01b16d9d744f5d9cc2305eb",
                "additions": 97,
                "deletions": 1,
                "committedDate": "2023-08-17T07:47:58Z",
                "author": {
                  "name": "adomani",
                  "email": "adomani@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "1673aa85f2be0257cc2d2a0b91df562f3de0e947",
                "additions": 30,
                "deletions": 0,
                "committedDate": "2023-08-17T07:59:10Z",
                "author": {
                  "name": "adomani",
                  "email": "adomani@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "43532b899324f785821c60fbd752011e1fa3bf67",
                "additions": 7,
                "deletions": 10,
                "committedDate": "2023-08-17T08:03:17Z",
                "author": {
                  "name": "adomani",
                  "email": "adomani@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "a87dfdc2bfd5a12777b92080ffa52f3274b1f529",
                "additions": 3,
                "deletions": 6,
                "committedDate": "2023-08-17T08:07:41Z",
                "author": {
                  "name": "adomani",
                  "email": "adomani@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "6ecdaef7755169f6f7fd1f42320baf2777f9b926",
                "additions": 4,
                "deletions": 4,
                "committedDate": "2023-08-17T08:21:26Z",
                "author": {
                  "name": "adomani",
                  "email": "adomani@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "b05da788f303615c5b5ced9aec5277bce0a05a32",
                "additions": 2,
                "deletions": 2,
                "committedDate": "2023-08-17T19:18:13Z",
                "author": {
                  "name": "adomani",
                  "email": "adomani@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAErF9W-Q",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=6627&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            }
          ]
        },
        "createdAt": "2023-08-17T08:05:51Z",
        "deletions": 1,
        "files": {
          "nodes": [
            {
              "path": "Mathlib/Algebra/MonoidAlgebra/NoZeroDivisors.lean",
              "additions": 121,
              "deletions": 1
            }
          ]
        },
        "headRefName": "adomani_amanzd",
        "headRefOid": "b05da788f303615c5b5ced9aec5277bce0a05a32",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c5YIVnZ",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c7P265b",
              "color": "f9d0c4",
              "name": "awaiting-author"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
              "color": "f99094",
              "name": "merge-conflict"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABViJjTQ",
              "color": "33DBEC",
              "name": "t-algebra"
            }
          ]
        },
        "latestReviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5eb9BK",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "Ruben-VandeVelde"
              },
              "submittedAt": "2023-08-18T11:31:53Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5eZDu2",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "alreadydone"
              },
              "submittedAt": "2023-08-17T23:22:14Z"
            }
          ]
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "DIRTY",
        "mergeable": "CONFLICTING",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 6627,
        "potentialMergeCommit": null,
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": null,
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5eWXr9",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "alreadydone"
              },
              "submittedAt": "2023-08-17T15:48:40Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5eW7vg",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "alreadydone"
              },
              "submittedAt": "2023-08-17T17:05:08Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5eX0K0",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "adomani"
              },
              "submittedAt": "2023-08-17T19:15:03Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5eX1R_",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "adomani"
              },
              "submittedAt": "2023-08-17T19:18:28Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5eZDu2",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "alreadydone"
              },
              "submittedAt": "2023-08-17T23:22:14Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5eb9BK",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "Ruben-VandeVelde"
              },
              "submittedAt": "2023-08-18T11:31:53Z"
            }
          ]
        },
        "reviewThreads": {
          "nodes": [
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5NVOL_",
                    "body": "Currently, [`Covariants.to_uniqueSums`](https://github.com/leanprover-community/mathlib4/blob/ae74c2e545c4f18cea002d8c25b12b0ed38d2fcf/Mathlib/Algebra/Group/UniqueProds.lean#L213-L214) uses the stronger set of conditions\r\n```\r\n [CovariantClass A A (· * ·) (· ≤ ·)] [CovariantClass A A (Function.swap (· * ·)) (· < ·)]\r\n [ContravariantClass A A (· * ·) (· ≤ ·)]\r\n```\r\nIn fact the last condition is equivalent to `[CovariantClass A A (· + ·) (· < ·)]` in a linear order because `a + c ≤ a + b → c ≤ b` is simply the contrapositive of `b < c → a + b < a + c`.\r\n\r\nI think the way to go is to change `Covariants.to_uniqueSums` (and `eq_and_eq_of_le_of_le_of_add_le`) to use the same conditions as here, prove `NoZeroDivisors.uniqueSums` here instead, and derive `NoZeroDivisors.biOrdered` from it. And I think we can make the proof of `NoZeroDivisors.of_left_ordered` etc. a single line.",
                    "createdAt": "2023-08-17T15:43:13Z",
                    "author": {
                      "login": "alreadydone"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5NVlgR",
                    "body": "Maybe we could make `UniqueSums` a typeclass and then `NoZeroDivisors.biOrdered` would be `inferInstance`.\r\n\r\nAlso, it should be trivial to add the `MonoidAlgebra` version, but I think `to_additive` doesn't work here.",
                    "createdAt": "2023-08-17T17:05:08Z",
                    "author": {
                      "login": "alreadydone"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5NWFvp",
                    "body": "Yes, you are right: the plan was indeed to use `UniqueSums`!  I simply got stuck a few PRs before the port started...  I'll fix it, but now is time to sleep for me!",
                    "createdAt": "2023-08-17T19:15:03Z",
                    "author": {
                      "login": "adomani"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5NW3g2",
                    "body": "Thanks and no worries! It's my bad that I already realized the PR is outdated  but still mentioned it. No rush to update PR because I find that stuff around `Covariant`/`ContravariantClass`es should benefit from some refactoring utilizing Lean 4's loopy instances: there are lots of results of the shape A ↔ B, or A → B and B ∧ C → A. It would be nice to unify the assumptions of [Left.add_eq_add_iff_eq_and_eq](https://leanprover-community.github.io/mathlib4_docs/Mathlib/Algebra/Order/Monoid/Lemmas.html#Left.add_eq_add_iff_eq_and_eq), Right.add_eq_add_iff_eq_and_eq, and your [eq_and_eq_of_le_of_le_of_add_le](https://leanprover-community.github.io/mathlib4_docs/Mathlib/Algebra/Order/Monoid/Basic.html#eq_and_eq_of_le_of_le_of_add_le), for example. I'll keep you updated!\r\n\r\n(And I just realized UniqueProds and UniqueSums are indeed already instances; I confused them with UniqueMul and UniqueMul.",
                    "createdAt": "2023-08-17T23:22:14Z",
                    "author": {
                      "login": "alreadydone"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5NVOv8",
                    "body": "```suggestion\r\nmul_apply_of_le (A := Aᵒᵈ) fa gb\r\n```\r\nand elsewhere",
                    "createdAt": "2023-08-17T15:45:11Z",
                    "author": {
                      "login": "alreadydone"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5NWGbJ",
                    "body": "Good point, thanks!",
                    "createdAt": "2023-08-17T19:18:28Z",
                    "author": {
                      "login": "adomani"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5NYw9e",
                    "body": "```suggestion\r\nassumptions actually imply that `A` is cancellative.  However, cancellativity alone is not enough.\r\n```",
                    "createdAt": "2023-08-18T11:20:55Z",
                    "author": {
                      "login": "Ruben-VandeVelde"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5NYxGL",
                    "body": "Does this belong in `Counterexamples/`?",
                    "createdAt": "2023-08-18T11:21:40Z",
                    "author": {
                      "login": "Ruben-VandeVelde"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5NYxNb",
                    "body": "```suggestion\r\n    (AddMonoidAlgebra.single a r * f) (a + t) = r * f t := by\r\n```",
                    "createdAt": "2023-08-18T11:22:12Z",
                    "author": {
                      "login": "Ruben-VandeVelde"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5NYxWF",
                    "body": "```suggestion\r\n    (AddMonoidAlgebra.single a r * f) (a + b) = r * f b :=\r\n  single_mul_apply_of_le (A := Aᵒᵈ) _ fb\r\n```",
                    "createdAt": "2023-08-18T11:22:47Z",
                    "author": {
                      "login": "Ruben-VandeVelde"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5NYxY3",
                    "body": "```suggestion\r\n    (f * g) (a + t) = f a * g t := by\r\n```",
                    "createdAt": "2023-08-18T11:23:01Z",
                    "author": {
                      "login": "Ruben-VandeVelde"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5NYxi2",
                    "body": "```suggestion\r\n    (f * g) (a + b) = f a * g b :=\r\n  mul_apply_of_le (A := Aᵒᵈ) fa gb\r\n```",
                    "createdAt": "2023-08-18T11:23:51Z",
                    "author": {
                      "login": "Ruben-VandeVelde"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5NYxn0",
                    "body": "```suggestion\r\n    (f * g) (a + b) = 0 := by\r\n```",
                    "createdAt": "2023-08-18T11:24:16Z",
                    "author": {
                      "login": "Ruben-VandeVelde"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5NYzET",
                    "body": "```suggestion\r\n  refine mul_ne_zero ?_ ?_ <;>\r\n```",
                    "createdAt": "2023-08-18T11:31:50Z",
                    "author": {
                      "login": "Ruben-VandeVelde"
                    }
                  }
                ]
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjI5NDY3NzQ1",
              "login": "adomani"
            },
            {
              "id": "MDQ6VXNlcjMwNjQxNDU=",
              "login": "alreadydone"
            },
            {
              "id": "MDQ6VXNlcjY1NTE0MTMx",
              "login": "Ruben-VandeVelde"
            },
            {
              "id": "MDQ6VXNlcjE0MDkwNTkz",
              "login": "YaelDillies"
            },
            {
              "id": "U_kgDOB75MNQ",
              "login": "leanprover-community-mathlib4-bot"
            }
          ]
        },
        "state": "OPEN",
        "statusCheckRollup": {
          "contexts": {
            "nodes": [
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAErF9W-Q",
                "name": "Summary",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=6627&login=leanprover-community&repository=mathlib4"
              }
            ]
          }
        },
        "title": "feat(Algebra/MonoidAlgebra/NoZeroDivisors): `NoZeroDivisors` instance on `AddMonoidAlgebra`s",
        "updatedAt": "2024-07-31T08:14:03Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/6627",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "RenamedTitleEvent"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5uiTLkzwAAAAJbFrgn",
              "createdAt": "2023-08-17T11:10:25Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5uiTLkzwAAAAJbFrgx",
              "createdAt": "2023-08-17T11:10:25Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABViJjTQ",
                "name": "t-algebra"
              }
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5OAQZE",
              "createdAt": "2023-08-17T13:04:42Z",
              "source": {
                "id": "PR_kwDOFcwZ1c5YJ_Qn",
                "title": "feat(..Polynomial..): `MvPolynomial`s have no zero divisors",
                "url": "https://github.com/leanprover-community/mathlib4/pull/6633"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5eWXr9",
              "createdAt": "2023-08-17T15:43:13Z",
              "body": "",
              "author": {
                "login": "alreadydone"
              }
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5eb9BK",
              "createdAt": "2023-08-18T11:20:55Z",
              "body": "",
              "author": {
                "login": "Ruben-VandeVelde"
              }
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5OEAi-",
              "createdAt": "2023-08-22T06:19:20Z",
              "source": {
                "id": "PR_kwDOFcwZ1c5YdL8j",
                "title": "feat: Lindemann-Weierstrass Theorem",
                "url": "https://github.com/leanprover-community/mathlib4/pull/6718"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5uiTLkzwAAAAJlqsx6",
              "createdAt": "2023-09-06T12:57:24Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5uiTLkzwAAAAJlqsyI",
              "createdAt": "2023-09-06T12:57:24Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5uiTLkzwAAAAJqdBC0",
              "createdAt": "2023-09-14T19:06:50Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "BaseRefChangedEvent"
            },
            {
              "__typename": "BaseRefChangedEvent"
            }
          ]
        }
      }
    }
  }
}
