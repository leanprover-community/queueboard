{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 112,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "AnthonyBordg"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "Define covering families on a category and their associated Grothendieck topology by using the API for `Coverage`.\r\nGive an explicit characterization of the covering sieves of the said topology. \r\n\r\n---\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nFor details on the \"pull request lifecycle\" in mathlib, please see:\r\nhttps://leanprover-community.github.io/contribute/index.html\r\n\r\nIn particular, note that most reviewers will only notice your PR\r\nif it passes the continuous integration checks.\r\nPlease ask for help on https://leanprover.zulipchat.com if needed.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nIf you are moving or deleting declarations, please include these lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nMoves:\r\n- Vector.* -> Mathlib.Vector.*\r\n- ...\r\n\r\nDeletions:\r\n- Nat.bit1_add_bit1\r\n- ...\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n\r\n-->\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 2,
        "closed": false,
        "closedAt": null,
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c6GYY-_",
              "body": "### PR summary [7603010dd5](https://github.com/leanprover-community/mathlib4/pull/15224/commits/7603010dd555134553df709baa1a6f7e2a6e78ef)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n| `Mathlib.CategoryTheory.Sites.CoveringFamilies`|674|\n\n</details>\n\n---\n\n#### Declarations diff\n\n`+ CoveringFamilies`\n`+ covering_of_generatedTopology_iff`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.",
              "createdAt": "2024-07-28T14:34:15Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6Gs5Nl",
              "body": "> Could you say a bit more about potential future applications of this API? Possibly as `TODO`s in the module docstring and/or in the PR description\r\n\r\nRegarding applications, according to a duality theorem of Caramello, knowing the covering families of a topology is equivalent to provability in first-order geometric theories. ",
              "createdAt": "2024-07-31T08:06:22Z",
              "author": {
                "login": "AnthonyBordg"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6HQupa",
              "body": "> > Could you say a bit more about potential future applications of this API? Possibly as `TODO`s in the module docstring and/or in the PR description\r\n> \r\n> Regarding applications, according to a duality theorem of Caramello, knowing the covering families of a topology is equivalent to provability in first-order geometric theories.\r\n\r\nAs Joel suggests above, this can almost surely already be formulated with mathlib's existing `GrothendieckTopology`'s and/or `Coverage`s.",
              "createdAt": "2024-08-05T15:10:25Z",
              "author": {
                "login": "adamtopaz"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "12e716d9f0933ae8ec94f761f619faac3b073420",
                "additions": 159,
                "deletions": 1,
                "committedDate": "2024-07-21T10:26:31Z",
                "author": {
                  "name": "Anthony Bordg",
                  "email": "bordg.anthony@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGc9pHFA",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10027608420/job/27713488660"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGc9pGPw",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10027608408/job/27713488447"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGc9pG2g",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10027608420/job/27713488602"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGc9pHAw",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10027608408/job/27713488643"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGc9pGkA",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10027608420/job/27713488528"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGc9pGwQ",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10027608408/job/27713488577"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGc9pGhg",
                        "name": "Build",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10027608408/job/27713488518"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGc9pGWQ",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10027608420/job/27713488473"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGc9pHZA",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10027608420/job/27713488740"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGc-VB1g",
                        "name": "Post-CI job",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10027608408/job/27714208214"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "e97e48167bd52da7a5effeca6951617bb2b059c9",
                "additions": 3,
                "deletions": 2,
                "committedDate": "2024-07-21T13:31:06Z",
                "author": {
                  "name": "Anthony Bordg",
                  "email": "bordg.anthony@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGdAIEWw",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10028763399/job/27716093019"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGdAIEoQ",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10028763402/job/27716093089"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGdAIF1Q",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10028763399/job/27716093397"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGdAIEVw",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10028763402/job/27716093015"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGdAIFSA",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10028763399/job/27716093256"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGdAID-w",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10028763402/job/27716092923"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGdAIFAw",
                        "name": "Build",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10028763402/job/27716093187"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGdAIE0A",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10028763399/job/27716093136"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGdAIGPg",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10028763399/job/27716093502"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGdAN0rA",
                        "name": "Post-CI job",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10028763402/job/27716187308"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "7413855d08df994c496f932ed2999eff9ea380d6",
                "additions": 1,
                "deletions": 158,
                "committedDate": "2024-07-28T13:30:42Z",
                "author": {
                  "name": "Anthony Bordg",
                  "email": "bordg.anthony@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGhd4gWQ",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10132141324/job/28015730777"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGhd4hBQ",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10132141327/job/28015730949"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGhd4gzA",
                        "name": "Lint style",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10132141327/job/28015730892"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGhd4gmg",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10132141324/job/28015730842"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGhd4g1g",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10132141324/job/28015730902"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGhd4gkg",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10132141327/job/28015730834"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGhd4gUw",
                        "name": "Build",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10132141327/job/28015730771"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGhd4hGg",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10132141324/job/28015730970"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGhd4hVw",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10132141324/job/28015731031"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGhd5CeQ",
                        "name": "Post-CI job",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10132141327/job/28015739513"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "2e3f8bca2aec15304c70e3c43e4515b499e4303c",
                "additions": 116,
                "deletions": 2,
                "committedDate": "2024-07-28T13:41:09Z",
                "author": {
                  "name": "Anthony Bordg",
                  "email": "bordg.anthony@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGheAgFQ",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10132194924/job/28015861781"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGheAgVA",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10132194926/job/28015861844"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGheAgeA",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10132194924/job/28015861880"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGheAg4g",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10132194926/job/28015861986"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGheAhAQ",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10132194924/job/28015862017"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGheAgpQ",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10132194926/job/28015861925"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGheAgCg",
                        "name": "Build",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10132194926/job/28015861770"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGheAgvg",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10132194924/job/28015861950"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGheAhTw",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10132194924/job/28015862095"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGheBTJA",
                        "name": "Post-CI job",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10132194926/job/28015874852"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "2ed6867f65ea9dde296bcf593fd3a0896fffdd5c",
                "additions": 2,
                "deletions": 1,
                "committedDate": "2024-07-28T13:48:34Z",
                "author": {
                  "name": "Anthony Bordg",
                  "email": "bordg.anthony@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGheGNiA",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10132233444/job/28015955336"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGheGNkg",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10132233446/job/28015955346"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGheGNyw",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10132233444/job/28015955403"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGheGOVw",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10132233446/job/28015955543"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGheGODg",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10132233444/job/28015955470"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGheGOGg",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10132233446/job/28015955482"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGheGOXA",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10132233444/job/28015955548"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGheGN2Q",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10132233446/job/28015955417"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGheGOmw",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10132233444/job/28015955611"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGheN_AA",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10132233446/job/28016082688"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGheZXKw",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=15224&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "39061fd74892cc9ca97e563f6f43de47608e5a63",
                "additions": 22254,
                "deletions": 153108,
                "committedDate": "2024-07-28T14:33:33Z",
                "author": {
                  "name": "Anthony Bordg",
                  "email": "bordg.anthony@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGiREdkg",
                        "name": "Add ready-to-merge label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10151016253/job/28069404050"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGiRZOGw",
                        "name": "Add ready-to-merge label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10151125364/job/28069744155"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGimhv7A",
                        "name": "Add ready-to-merge label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10158896066/job/28091903980"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGiqfR3g",
                        "name": "Add ready-to-merge label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10160199381/job/28096057822"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGiqos9w",
                        "name": "Add ready-to-merge label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10160246853/job/28096212215"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGiREbmg",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10151016283/job/28069403546"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGiRZMrA",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10151125356/job/28069743788"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGimhudA",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10158896047/job/28091903604"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGiqfQrA",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10160199373/job/28096057516"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGiqosEg",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10160246850/job/28096211986"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGher_BQ",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10132518150/job/28016574213"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGher-7Q",
                        "name": "build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10132518149/job/28016574189"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGher-XQ",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10132518028/job/28016574045"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGher98g",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10132518029/job/28016573938"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGher_Lw",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10132518154/job/28016574255"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGiREf2g",
                        "name": "Add delegated label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10151016253/job/28069404634"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGiRZMvg",
                        "name": "Add delegated label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10151125364/job/28069743806"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGimhuZQ",
                        "name": "Add delegated label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10158896066/job/28091903589"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGiqfQpw",
                        "name": "Add delegated label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10160199381/job/28096057511"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGiqorpA",
                        "name": "Add delegated label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10160246853/job/28096211876"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGher-uQ",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10132518028/job/28016574137"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGher-SQ",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10132518029/job/28016574025"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGher_kQ",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10132518154/job/28016574353"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGher_RA",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10132518028/job/28016574276"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGher-8g",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10132518029/job/28016574194"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGher9-g",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10132518028/job/28016573946"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGher-oQ",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10132518029/job/28016574113"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGher_pg",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10132518028/job/28016574374"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGhezREQ",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10132518029/job/28016693521"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGhesIMw",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/28016576563"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGhesaLA",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=15224&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "5cc0f3aa1fb18e3d19593e510d42fd472b4e4e28",
                "additions": 1,
                "deletions": 1,
                "committedDate": "2024-07-29T08:03:36Z",
                "author": {
                  "name": "Anthony Bordg",
                  "email": "bordg.anthony@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "6fa6e7973b5161128c7e15252c41145dcdb108b1",
                "additions": 32,
                "deletions": 31,
                "committedDate": "2024-07-30T15:30:50Z",
                "author": {
                  "name": "Anthony Bordg",
                  "email": "bordg.anthony@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "62563f7e638eac0c71b2bf165ec3aee32aaef16a",
                "additions": 1,
                "deletions": 5,
                "committedDate": "2024-07-30T15:35:13Z",
                "author": {
                  "name": "Anthony Bordg",
                  "email": "bordg.anthony@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "f43cfcd1cfda896ca758dc6bee484423884b60cb",
                "additions": 1,
                "deletions": 3,
                "committedDate": "2024-07-30T15:38:27Z",
                "author": {
                  "name": "Anthony Bordg",
                  "email": "bordg.anthony@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "7603010dd555134553df709baa1a6f7e2a6e78ef",
                "additions": 22253,
                "deletions": 153107,
                "committedDate": "2024-07-31T07:53:40Z",
                "author": {
                  "name": "Anthony Bordg",
                  "email": "bordg.anthony@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGjbSdGA",
                        "name": "Add ready-to-merge label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10176918407/job/28147227928"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGjbeSgw",
                        "name": "Add ready-to-merge label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10176979339/job/28147421827"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGjbgR6Q",
                        "name": "Add ready-to-merge label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10176989385/job/28147454441"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGjcYS8A",
                        "name": "Add ready-to-merge label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10177267854/job/28148372208"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGjcevYg",
                        "name": "Add ready-to-merge label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10177298635/job/28148477794"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGjymomw",
                        "name": "Add ready-to-merge label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10184410803/job/28171675803"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGmlbKKQ",
                        "name": "Add ready-to-merge label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10251347434/job/28359182889"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGjbSdcA",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10176918414/job/28147228016"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGjbeRSA",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10176979347/job/28147421512"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGjbgQxg",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10176989383/job/28147454150"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGjcYTMQ",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10177267876/job/28148372273"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGjcevYQ",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10177298647/job/28148477793"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGjymoZQ",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10184410796/job/28171675749"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGmlbH6w",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10251347432/job/28359182315"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGjZhsVg",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10176305928/job/28145380438"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGjZhrHA",
                        "name": "build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10176305931/job/28145380124"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGjZhpAw",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10176305393/job/28145379587"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGjZhmoQ",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10176305389/job/28145378977"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGjZh4xg",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10176305926/job/28145383622"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGjbSeZA",
                        "name": "Add delegated label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10176918407/job/28147228260"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGjbeRVA",
                        "name": "Add delegated label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10176979339/job/28147421524"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGjbgQ8g",
                        "name": "Add delegated label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10176989385/job/28147454194"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGjcYUag",
                        "name": "Add delegated label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10177267854/job/28148372586"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGjcexPQ",
                        "name": "Add delegated label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10177298635/job/28148478269"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGjymp7g",
                        "name": "Add delegated label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10184410803/job/28171676142"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGmlbITA",
                        "name": "Add delegated label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10251347434/job/28359182412"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGjZh31A",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10176305393/job/28145383380"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGjZhoGg",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10176305389/job/28145379354"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGjZhrUw",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10176305926/job/28145380179"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGjZhmbQ",
                        "name": "check workflows (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10176305393/job/28145378925"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGjZhppQ",
                        "name": "check workflows",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10176305389/job/28145379749"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGjZhqqA",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10176305393/job/28145380008"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGjZhWjQ",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10176305389/job/28145374861"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGjZh6NQ",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10176305393/job/28145383989"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGjZ7SJQ",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10176305389/job/28145799717"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGjZiT7w",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/28145390575"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAGjZijMQ",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=15224&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            }
          ]
        },
        "createdAt": "2024-07-28T14:11:59Z",
        "deletions": 0,
        "files": {
          "nodes": [
            {
              "path": "Mathlib.lean",
              "additions": 1,
              "deletions": 0
            },
            {
              "path": "Mathlib/CategoryTheory/Sites/CoveringFamilies.lean",
              "additions": 111,
              "deletions": 0
            }
          ]
        },
        "headRefName": "AnthonyBordg_covering_families",
        "headRefOid": "7603010dd555134553df709baa1a6f7e2a6e78ef",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c52qxcT",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c7P265b",
              "name": "awaiting-author"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABViJTYQ",
              "name": "t-category-theory"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABb5aSCQ",
              "name": "new-contributor"
            }
          ]
        },
        "latestReviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c6ERyE7",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "adamtopaz"
              },
              "submittedAt": "2024-08-05T15:08:15Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6Dj9ZW",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "dagurtomas"
              },
              "submittedAt": "2024-07-30T09:59:51Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6DxHZY",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "joelriou"
              },
              "submittedAt": "2024-07-31T16:55:51Z"
            }
          ]
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "BLOCKED",
        "mergeable": "MERGEABLE",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 15224,
        "potentialMergeCommit": {
          "oid": "c3f51fb2db200d2d6c3987dc18705f8d34736a0c"
        },
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": null,
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c6Deoia",
              "body": "Could you say a bit more about potential future applications of this API? Possibly as `TODO`s in the module docstring and/or in the PR description",
              "state": "COMMENTED",
              "author": {
                "login": "dagurtomas"
              },
              "submittedAt": "2024-07-29T20:03:18Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6De1PW",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "dagurtomas"
              },
              "submittedAt": "2024-07-29T20:10:55Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6DjG2t",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "joelriou"
              },
              "submittedAt": "2024-07-30T08:29:09Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6Dj7OE",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "AnthonyBordg"
              },
              "submittedAt": "2024-07-30T09:56:18Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6Dj9ZW",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "dagurtomas"
              },
              "submittedAt": "2024-07-30T09:59:51Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6DssG4",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "AnthonyBordg"
              },
              "submittedAt": "2024-07-31T08:37:29Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6Dsuqq",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "AnthonyBordg"
              },
              "submittedAt": "2024-07-31T08:42:10Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6DsvEO",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "AnthonyBordg"
              },
              "submittedAt": "2024-07-31T08:42:56Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6Ds71b",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "AnthonyBordg"
              },
              "submittedAt": "2024-07-31T09:03:14Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6Ds84i",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "AnthonyBordg"
              },
              "submittedAt": "2024-07-31T09:05:05Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6DxHZY",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "joelriou"
              },
              "submittedAt": "2024-07-31T16:55:51Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6ERyE7",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "adamtopaz"
              },
              "submittedAt": "2024-08-05T15:08:15Z"
            }
          ]
        },
        "reviewThreads": {
          "nodes": [
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5lE24e",
                    "body": "```suggestion\r\n    | top X => \r\n        use Presieve.singleton (𝟙 X)\r\n        constructor\r\n        · exact cf.retraction_mem (IsSplitEpi.of_iso (𝟙 X))\r\n        · rw [generate_of_singleton_isSplitEpi (𝟙 X)]\r\n```\r\nsimilarly below",
                    "createdAt": "2024-07-29T19:43:09Z",
                    "author": {
                      "login": "dagurtomas"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5lE3Rt",
                    "body": "I'm not sure this def is needed, you can just use `cf.toGrothendieck` instead.",
                    "createdAt": "2024-07-29T19:44:48Z",
                    "author": {
                      "login": "dagurtomas"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5lE5_q",
                    "body": "Just requiring the identity to be a covering would be enough to prove the theorem below. Is it necessary to require all split epimorphisms to be covers for a future application?",
                    "createdAt": "2024-07-29T19:55:26Z",
                    "author": {
                      "login": "dagurtomas"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5lN1Fs",
                    "body": "The axiom that every morphism that has a section is covering is indeed a consequence of the other axioms plus the simple axiom that identity morphisms are covering. However, the _raison d'être_  of this axiom is that it corresponds to the description of covering morphisms wrt the discrete topology. In the example of the discrete topology, one sees that the notion of covering sieve can be trivial while the notion of covering morphism (or family of covering morphisms) can be highly non-trivial. For instance, take the category of affine schemes on $\\mathbb{Q}$ equipped with the discrete topology, and consider the projection morphism on Spec($\\mathbb{Q}$) of Spec(A), where A is the commutative algebra on  $\\mathbb{Q}$ generated by the variables $X,X’,Y,Y’$ satisfying the equations $X^n + Y^n = 1$, $X.X’=1$, $Y.Y’=1$. Knowing if the projection is covering wrt the discrete topology is Fermat's problem ... ",
                    "createdAt": "2024-07-31T08:37:29Z",
                    "author": {
                      "login": "AnthonyBordg"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5lE6q_",
                    "body": "This name is not very descriptive. I can't think of a better name, maybe there is a name for this somewhere in the literature?",
                    "createdAt": "2024-07-29T19:58:09Z",
                    "author": {
                      "login": "dagurtomas"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5lE90r",
                    "body": "I mean that for example, a coverage is also a \"collection of covering families\", but this is a coverage with more properties, so it feels weird to give it that name",
                    "createdAt": "2024-07-29T20:10:54Z",
                    "author": {
                      "login": "dagurtomas"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5lN2vg",
                    "body": "> This name is not very descriptive. I can't think of a better name, maybe there is a name for this somewhere in the literature?\r\n\r\nI don't know. ",
                    "createdAt": "2024-07-31T08:42:10Z",
                    "author": {
                      "login": "AnthonyBordg"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5lE6um",
                    "body": "Is this the only reference?",
                    "createdAt": "2024-07-29T19:58:22Z",
                    "author": {
                      "login": "dagurtomas"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5lN2_X",
                    "body": "The only reference I'm aware of. ",
                    "createdAt": "2024-07-31T08:42:56Z",
                    "author": {
                      "login": "AnthonyBordg"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5lE7R5",
                    "body": "\n```suggestion\nuniverse v u\n\n```\n\nThis is the convention in the category theory library. I don't think you will ever need to explicitly specify the universes, so alternatively you may delete them and change the line below to `variable (C : Type*) [Category C]` (that way, Lean introduces arbitrary universe levels automatically).",
                    "createdAt": "2024-07-29T20:00:46Z",
                    "author": {
                      "login": "dagurtomas"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5lH0-8",
                    "body": "From this, I am able to show this:\r\n```lean\r\ntheorem covering_of_generatedTopology_iff' {X : C} (S : Sieve X) :\r\n    (GeneratedTopology C cf).sieves X S ↔ S.1 ∈ cf.covering X := by\r\n  rw [covering_of_generatedTopology_iff]\r\n  constructor\r\n  · rintro ⟨P, hP₁, hP₂⟩\r\n    refine cf.heredity S.arrows ⟨_, hP₁,\r\n      by simpa only [generate_sieve, Sieve.generate_le_iff] using hP₂⟩\r\n  · rintro h\r\n    exact ⟨_, h, by simp⟩\r\n```\r\n\r\nI am afraid the notion you are trying to define is not significantly different from what we already have in mathlib (because when restricted to sieves, the data in `cf` is already a Grothendieck topology, and the axioms are stated in very similar fashions).",
                    "createdAt": "2024-07-30T08:29:09Z",
                    "author": {
                      "login": "joelriou"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5lIV_4",
                    "body": "@joelriou From the `Coverage` alone and its associated topology J, can you prove that the J-covering sieves are **exactly** the sieves generated by the elements of `covering`?  ",
                    "createdAt": "2024-07-30T09:56:18Z",
                    "author": {
                      "login": "AnthonyBordg"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5lIXNi",
                    "body": "No, that's not true in general. What I think Joël means is that your definition is too close to the existing notion of `GrothendieckTopology`",
                    "createdAt": "2024-07-30T09:59:51Z",
                    "author": {
                      "login": "dagurtomas"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5lN-yQ",
                    "body": "Indeed, that was my point. In general, the generated topology from a coverage has a very different form. This notion is not operative for working on the generated topology, except for the notions which are linked to it by a Galois correspondence. For example, for a presheaf to be a sheaf for the generated topology, it is sufficient that it be so for the families of a \"coverage\" which generates this topology. \r\nThe notion of Grothendieck topology is formulated in an equivalent way in terms of sieves or in terms of covering families. The passage from one to the other is immediate in theory for a mathematician (but a little less immediate in a formalized system), so Joël is right, and yet these are two different points of view: one categorical and the other geometric.\r\nDepending on what one seeks to do and depending on the topologies considered, it is more convenient to think and express oneself in one or the other point of view.\r\nWhether one works with the usual topologies of algebraic geometry or with the syntactic topologies of syntactic categories, their natural expression is generally in terms of covering families.",
                    "createdAt": "2024-07-31T09:03:14Z",
                    "author": {
                      "login": "AnthonyBordg"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5lN_ni",
                    "body": "@joelriou Do you think this piece of formalisation would be more suitable as a section of `Mathlib.CategoryTheory.Sites.Coverage`? It would be completely fine with me. ",
                    "createdAt": "2024-07-31T09:05:05Z",
                    "author": {
                      "login": "AnthonyBordg"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5lQhKX",
                    "body": "I am not convinced that this fits into mathlib. \"Covering families\" (whatever that means) are already part of mathlib in the sense that we have the notion of a sieve generated by a family of morphisms (this is `Sieve.ofArrows`), and I have recently added some API in order to phrase the sheaf condition in terms of 1-hypercovers (which at the 0th level correspond to the data of a family of morphisms with fixed target such that the generated sieve is covering, see `Sites.OneHypercover`).\r\n\r\nNote also that in terms of formalization, there is a difference between (pre)sieves and families of morphisms, because in the latter, there can be duplicate maps, while no duplicated are allowed with presieves. For example, `X` is covered by itself, but it is also covered by the family of two identical identity maps. I would very much welcome more development of the API for families of maps `∀ i, Y i ⟶ X` instead of presieves only...\r\n\r\nIn my opinion, the only way this could find its way into mathlib is if you were to introduce a new constructor for Grothendieck topologies (or `Coverage`) which would not take a family of presieves as an input but a predicate on families of morphisms `∀ (i : I), Y i ⟶ X`, with `I` in a certain universe `w`, similarly as I have done for `1`-hypercovers. (The structure could be named `CoveringArrowFamilies`?)\r\n\r\nIn other words, I suggest you use `Sieve.ofArrows` rather than `Sieve.generate`.",
                    "createdAt": "2024-07-31T16:55:51Z",
                    "author": {
                      "login": "joelriou"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5llREc",
                    "body": "> For example, for a presheaf to be a sheaf for the generated topology, it is sufficient that it be so for the families of a \"coverage\" which generates this topology.\r\n\r\nI'm not sure what the larger comment suggests, but just in case you didn't know, mathlib does have [CategoryTheory.Presieve.isSheaf_coverage](https://leanprover-community.github.io/mathlib4_docs/Mathlib/CategoryTheory/Sites/Coverage.html#CategoryTheory.Presieve.isSheaf_coverage) which is exactly this theorem.\r\n\r\nIn general, I must agree with Joel and Dagur -- it's not clear to me how the formulation in this file would be useful in mathlib.",
                    "createdAt": "2024-08-05T15:08:15Z",
                    "author": {
                      "login": "adamtopaz"
                    }
                  }
                ]
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjM4MTE3NzU=",
              "login": "AnthonyBordg"
            },
            {
              "id": "MDQ6VXNlcjU1Nzc2ODc=",
              "login": "adamtopaz"
            },
            {
              "id": "MDQ6VXNlcjI1NjIzODI5",
              "login": "dagurtomas"
            },
            {
              "id": "MDQ6VXNlcjM3NzcyOTQ5",
              "login": "joelriou"
            },
            {
              "id": "U_kgDOB75MNQ",
              "login": "leanprover-community-mathlib4-bot"
            }
          ]
        },
        "state": "OPEN",
        "statusCheckRollup": {
          "contexts": {
            "nodes": [
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGjbSdGA",
                "name": "Add ready-to-merge label",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10176918407/job/28147227928"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGjbeSgw",
                "name": "Add ready-to-merge label",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10176979339/job/28147421827"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGjbgR6Q",
                "name": "Add ready-to-merge label",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10176989385/job/28147454441"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGjcYS8A",
                "name": "Add ready-to-merge label",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10177267854/job/28148372208"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGjcevYg",
                "name": "Add ready-to-merge label",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10177298635/job/28148477794"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGjymomw",
                "name": "Add ready-to-merge label",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10184410803/job/28171675803"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGmlbKKQ",
                "name": "Add ready-to-merge label",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10251347434/job/28359182889"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGjbSdcA",
                "name": "Ping maintainers on Zulip",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10176918414/job/28147228016"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGjbeRSA",
                "name": "Ping maintainers on Zulip",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10176979347/job/28147421512"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGjbgQxg",
                "name": "Ping maintainers on Zulip",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10176989383/job/28147454150"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGjcYTMQ",
                "name": "Ping maintainers on Zulip",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10177267876/job/28148372273"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGjcevYQ",
                "name": "Ping maintainers on Zulip",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10177298647/job/28148477793"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGjymoZQ",
                "name": "Ping maintainers on Zulip",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10184410796/job/28171675749"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGmlbH6w",
                "name": "Ping maintainers on Zulip",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10251347432/job/28359182315"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGjZhsVg",
                "name": "label-and-report-new-contributor",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10176305928/job/28145380438"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGjZhrHA",
                "name": "build",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10176305931/job/28145380124"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGjZhpAw",
                "name": "Cancel Previous Runs (CI)",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10176305393/job/28145379587"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGjZhmoQ",
                "name": "Cancel Previous Runs (CI)",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10176305389/job/28145378977"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGjZh4xg",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10176305926/job/28145383622"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGjbSeZA",
                "name": "Add delegated label",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10176918407/job/28147228260"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGjbeRVA",
                "name": "Add delegated label",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10176979339/job/28147421524"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGjbgQ8g",
                "name": "Add delegated label",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10176989385/job/28147454194"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGjcYUag",
                "name": "Add delegated label",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10177267854/job/28148372586"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGjcexPQ",
                "name": "Add delegated label",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10177298635/job/28148478269"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGjymp7g",
                "name": "Add delegated label",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10184410803/job/28171676142"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGmlbITA",
                "name": "Add delegated label",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10251347434/job/28359182412"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGjZh31A",
                "name": "Lint style (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10176305393/job/28145383380"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGjZhoGg",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10176305389/job/28145379354"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGjZhrUw",
                "name": "Check all files imported",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10176305926/job/28145380179"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGjZhmbQ",
                "name": "check workflows (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10176305393/job/28145378925"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGjZhppQ",
                "name": "check workflows",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10176305389/job/28145379749"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGjZhqqA",
                "name": "Build (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10176305393/job/28145380008"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGjZhWjQ",
                "name": "Build",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10176305389/job/28145374861"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGjZh6NQ",
                "name": "Post-CI job (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10176305393/job/28145383989"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGjZ7SJQ",
                "name": "Post-CI job",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/10176305389/job/28145799717"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGjZiT7w",
                "name": "New Contributor Check",
                "conclusion": "NEUTRAL",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/28145390575"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAGjZijMQ",
                "name": "Summary",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=15224&login=leanprover-community&repository=mathlib4"
              }
            ]
          }
        },
        "title": "feat(CategoryTheory/Sites): covering families and their associated Grothendieck topology",
        "updatedAt": "2024-08-05T15:10:26Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/15224",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6REylFzwAAAAMu4SAg",
              "createdAt": "2024-07-28T14:21:54Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6REylFzwAAAAMu4Xe5",
              "createdAt": "2024-07-28T14:33:47Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABb5aSCQ",
                "name": "new-contributor"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6REylFzwAAAAMu4XrJ",
              "createdAt": "2024-07-28T14:34:12Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6GYY-_",
              "createdAt": "2024-07-28T14:34:15Z",
              "body": "### PR summary [7603010dd5](https://github.com/leanprover-community/mathlib4/pull/15224/commits/7603010dd555134553df709baa1a6f7e2a6e78ef)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n| `Mathlib.CategoryTheory.Sites.CoveringFamilies`|674|\n\n</details>\n\n---\n\n#### Declarations diff\n\n`+ CoveringFamilies`\n`+ covering_of_generatedTopology_iff`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6Deoia",
              "createdAt": "2024-07-29T19:43:09Z",
              "body": "Could you say a bit more about potential future applications of this API? Possibly as `TODO`s in the module docstring and/or in the PR description",
              "author": {
                "login": "dagurtomas"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6REylFzwAAAAMvu5XP",
              "createdAt": "2024-07-29T20:03:54Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6REylFzwAAAAMvu5XY",
              "createdAt": "2024-07-29T20:03:54Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABViJTYQ",
                "name": "t-category-theory"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6DjG2t",
              "createdAt": "2024-07-30T08:29:09Z",
              "body": "",
              "author": {
                "login": "joelriou"
              }
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6Gs5Nl",
              "createdAt": "2024-07-31T08:06:22Z",
              "body": "> Could you say a bit more about potential future applications of this API? Possibly as `TODO`s in the module docstring and/or in the PR description\r\n\r\nRegarding applications, according to a duality theorem of Caramello, knowing the covering families of a topology is equivalent to provability in first-order geometric theories. ",
              "author": {
                "login": "AnthonyBordg"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6REylFzwAAAAMw_H_m",
              "createdAt": "2024-07-31T09:08:15Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6REylFzwAAAAMxWvoD",
              "createdAt": "2024-07-31T16:56:01Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6HQupa",
              "createdAt": "2024-08-05T15:10:25Z",
              "body": "> > Could you say a bit more about potential future applications of this API? Possibly as `TODO`s in the module docstring and/or in the PR description\r\n> \r\n> Regarding applications, according to a duality theorem of Caramello, knowing the covering families of a topology is equivalent to provability in first-order geometric theories.\r\n\r\nAs Joel suggests above, this can almost surely already be formulated with mathlib's existing `GrothendieckTopology`'s and/or `Coverage`s.",
              "author": {
                "login": "adamtopaz"
              }
            }
          ]
        }
      }
    }
  }
}
