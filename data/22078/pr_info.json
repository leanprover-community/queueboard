{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 377,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "Louddy"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "# Multiplication and Algebraic Instances\r\n\r\nIn this PR, we introduce the definition of the skewed convolution product on `SkewMonoidAlgebra k G`. Here, the product of two elements `f g : SkewMonoidAlgebra k G` is the finitely supported function whose value at `a` is the sum of `f x * (x • g y)` over all pairs `x, y` such that `x * y = a`.\r\n\r\nWe also introduce the associated algebraic instances.\r\n\r\n## Context\r\nThis is the third part of a planned series of PRs aiming to formalise skew monoid algebras.\r\nThe PRs are split to ease the review process. The moral sum of these planned PRs is #10541.\r\nThe first and second part were #15878 and #19084.\r\n\r\nCo-authored-by: María Inés de Frutos Fernández <[mariaines.dff@gmail.com](mailto:mariaines.dff@gmail.com)>\r\n\r\n---\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nFor details on the \"pull request lifecycle\" in mathlib, please see:\r\nhttps://leanprover-community.github.io/contribute/index.html\r\n\r\nIn particular, note that most reviewers will only notice your PR\r\nif it passes the continuous integration checks.\r\nPlease ask for help on https://leanprover.zulipchat.com if needed.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nIf you are moving or deleting declarations, please include these lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nMoves:\r\n- Vector.* -> List.Vector.*\r\n- ...\r\n\r\nDeletions:\r\n- Nat.bit1_add_bit1\r\n- ...\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n\r\n-->\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 1,
        "closed": false,
        "closedAt": null,
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c6fD4HU",
              "body": "### PR summary [1232c4f499](https://github.com/leanprover-community/mathlib4/pull/22078/commits/1232c4f499655cf8392941fdd24001d477970aa4)\n\nImport changes exceeding 2%\n\n| %      | File |\n| -      | -    |\n| +27.15% | `Mathlib.Algebra.SkewMonoidAlgebra.Basic` |\n\n<details><summary>\n\n#### Import changes for modified files\n\n</summary>\n\nDependency changes\n\n| File | Base Count | Head Count | Change |\n| --- | --- | --- | --- |\n| Mathlib.Algebra.SkewMonoidAlgebra.Basic | 755 | 960 | +205 (+27.15%) |\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n| `Mathlib.Algebra.SkewMonoidAlgebra.Basic`|205|\n\n</details>\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ basisSingleOne`\n`+ comapDistribMulActionSelf`\n`+ comapMulAction`\n`+ comapSMul`\n`+ comapSMul_def`\n`+ comapSMul_single`\n`+ instAddCommGroup`\n`+ instDistribMulAction`\n`+ instDistribSMul`\n`+ instFaithfulSMul`\n`+ instIsCentralScalar`\n`+ instIsScalarTower`\n`+ instModule`\n`+ instModule.free`\n`+ instMul`\n`+ instNeg'`\n`+ instNonAssocRing`\n`+ instNonAssocSemiring`\n`+ instNonUnitalNonAssocRing`\n`+ instNonUnitalNonAssocSemiring`\n`+ instNonUnitalRing`\n`+ instNonUnitalSemiring`\n`+ instRing`\n`+ instSemiring`\n`+ instSmulCommClass`\n`+ instSub`\n`+ instUnique`\n`+ intCast_def`\n`+ liftNC`\n`+ liftNCRingHom`\n`+ liftNC_mul`\n`+ liftNC_one`\n`+ liftNC_single`\n`+ mapDomain`\n`+ mapDomain_add`\n`+ mapDomain_comp`\n`+ mapDomain_id`\n`+ mapDomain_single`\n`+ mapDomain_smul`\n`+ mapDomain_sum`\n`+ mapDomain_zero`\n`+ mul_def`\n`+ natCast_def`\n`+ ofFinsupp_neg`\n`+ ofFinsupp_sub`\n`+ sum_mapDomain_index`\n`+ sum_smul_index`\n`+ sum_smul_index'`\n`+ toFinsuppLinearEquiv`\n`+ toFinsupp_mapDomain`\n`+ toFinsupp_neg`\n`+ toFinsupp_sub`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>\n\n---\n\n<details><summary>No changes to technical debt.</summary>\n\nYou can run this locally as\n```\n./scripts/technical-debt-metrics.sh pr_summary\n```\n* The `relative` value is the weighted *sum* of the differences with weight given by the *inverse* of the current value of the statistic.\n* The `absolute` value is the `relative` value divided by the total sum of the inverses of the current values (i.e. the weighted *average* of the differences).\n</details>\n",
              "createdAt": "2025-02-19T13:02:48Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6fD42g",
              "body": "Bit confused why it says I removed the large import label. I just added `t-algebra`.\r\nI re-added `large-import` just in case.",
              "createdAt": "2025-02-19T13:04:04Z",
              "author": {
                "login": "Louddy"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "1232c4f499655cf8392941fdd24001d477970aa4",
                "additions": 377,
                "deletions": 3,
                "committedDate": "2025-02-19T12:52:16Z",
                "author": {
                  "name": "Xavier Genereux",
                  "email": "xaviergenereux@hotmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIuUGgTg",
                        "name": "set_pr_emoji",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13413218167/job/37467824206"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIuU3Ptw",
                        "name": "set_pr_emoji",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13413474187/job/37468622775"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIuTgEQA",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13413013339/job/37467194432"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJMTuh0g",
                        "name": "Add ready-to-merge or delegated label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14095087386/job/39480697298"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIuUCbIA",
                        "name": "Add topic label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13413197354/job/37467757344"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIuUCa_w",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13413197352/job/37467757311"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAJMTusRg",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14095087382/job/39480699974"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIuUCbKw",
                        "name": "post-or-update-summary-comment",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13413197340/job/37467757355"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIuTgCXw",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13413013342/job/37467193951"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIuUCdAg",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13413197333/job/37467757826"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIuTgCMg",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13413013339/job/37467193906"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIuTgD1g",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13413013342/job/37467194326"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIuUCa8A",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13413197333/job/37467757296"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIuTgFvg",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13413013339/job/37467194814"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIuUDdTg",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13413013342/job/37467774286"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIuUDEtg",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/37467767990"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAIuUEcrA",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=22078&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            }
          ]
        },
        "createdAt": "2025-02-19T13:01:44Z",
        "deletions": 3,
        "files": {
          "nodes": [
            {
              "path": "Mathlib/Algebra/SkewMonoidAlgebra/Basic.lean",
              "additions": 377,
              "deletions": 3
            }
          ]
        },
        "headRefName": "louddy/SkewMonoidAlgebraProduct",
        "headRefOid": "1232c4f499655cf8392941fdd24001d477970aa4",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c6LvxHb",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c8AAAABViJjTQ",
              "color": "33DBEC",
              "name": "t-algebra"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABb5aSCQ",
              "color": "8BBA68",
              "name": "new-contributor"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABwbfWPw",
              "color": "B60205",
              "name": "large-import"
            }
          ]
        },
        "latestReviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c6iC4jP",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "kbuzzard"
              },
              "submittedAt": "2025-03-26T23:00:44Z"
            }
          ]
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "BLOCKED",
        "mergeable": "MERGEABLE",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 22078,
        "potentialMergeCommit": {
          "oid": "9a80311346cf5497f973d180fb3863e3e10facfc"
        },
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": null,
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c6iC4jP",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "kbuzzard"
              },
              "submittedAt": "2025-03-26T23:00:44Z"
            }
          ]
        },
        "reviewThreads": {
          "nodes": [
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c54Gt2z",
                    "body": "This is not an ideal TODO. I think the idea with these things is that someone might come along and think \"ooh, I'll do that\". If you don't have anything concrete to say and you've done the things which were listed as TODOs then you can just delete the section completely. Alternatively, feel free to give more precise descriptions of things which are ready to be done but which aren't yet done.\r\n\r\nAlso, I noticed that the module docstring starts \"Given a monoid `G` and a ring `k`, the skew...\", whereas it should surely say \"Given a monoid `G` acting on a ring `k`, the skew...\". Can you fix this?",
                    "createdAt": "2025-03-26T21:31:59Z",
                    "author": {
                      "login": "kbuzzard"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c54GyUf",
                    "body": "Why the prime in the name? And why name the instance at all? The system will name it `instNeg` if you just write `instance : Neg ...`. Similar comment for `instSub`. You can check what name the system gives an unnamed instance with `whatsnew in` before a declaration.",
                    "createdAt": "2025-03-26T21:48:15Z",
                    "author": {
                      "login": "kbuzzard"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c54Gy7h",
                    "body": "Why do you make it private?",
                    "createdAt": "2025-03-26T21:51:01Z",
                    "author": {
                      "login": "kbuzzard"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c54G1pZ",
                    "body": "The proof is `toFinsuppAddEquiv.symm.map_neg a` if you make the AddCommGroup instance.",
                    "createdAt": "2025-03-26T22:03:29Z",
                    "author": {
                      "login": "kbuzzard"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c54G1xt",
                    "body": "The proof is `toFinsuppAddEquiv.symm.map_sub a b`",
                    "createdAt": "2025-03-26T22:04:07Z",
                    "author": {
                      "login": "kbuzzard"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c54G15e",
                    "body": "`toFinsuppAddEquiv.map_neg a`\r\n",
                    "createdAt": "2025-03-26T22:04:40Z",
                    "author": {
                      "login": "kbuzzard"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c54G2BM",
                    "body": "A `rfl` like that usually indicates some missing API. But this is `toFinsuppAddEquiv.map_sub a b` anyway.",
                    "createdAt": "2025-03-26T22:05:18Z",
                    "author": {
                      "login": "kbuzzard"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c54G2YL",
                    "body": "I think it's generally encouraged that you give a docstring to any theorem with a ' in its name, to explain why there's more than one theorem wanting to be called `sum_smul_index` (perhaps highlighting the difference between the two results). ",
                    "createdAt": "2025-03-26T22:06:44Z",
                    "author": {
                      "login": "kbuzzard"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c54G3lh",
                    "body": "Why is there a Semiring section before the NonAssocSemiring section? And which results in this section are not valid for NonAssocSemirings? Shouldn't the results of this section just be merged with the next section under a NonAssocSemiring assumption? (looks like you'll have to fix `Finsupp.sum_smul_index` along the way; this is fine). ",
                    "createdAt": "2025-03-26T22:12:28Z",
                    "author": {
                      "login": "kbuzzard"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c54G30H",
                    "body": "It doesn't need a name; this is the name it will get anyway.",
                    "createdAt": "2025-03-26T22:13:42Z",
                    "author": {
                      "login": "kbuzzard"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c54G4A8",
                    "body": "```suggestion\r\n    classical\r\n```\r\n(I think this is more idiomatic)",
                    "createdAt": "2025-03-26T22:14:41Z",
                    "author": {
                      "login": "kbuzzard"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c54G4C9",
                    "body": "same here",
                    "createdAt": "2025-03-26T22:14:52Z",
                    "author": {
                      "login": "kbuzzard"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c54G9tO",
                    "body": "You're just writing an induction principle by hand here. Why not write one explicitly?\r\nIf you tag `single_zero` with `@[simp]` then you can prove\r\n```lean \r\n@[simp]\r\ntheorem single_mul_single [NonAssocSemiring k] [DistribSMul G k] (a b : G) (x y : k) :\r\n    single a x * single b y = single (a * b) (x * a • y) := by\r\n  rw [mul_def, sum_single_index, sum_single_index]\r\n  · simp [smul_zero]\r\n  · simp\r\n```\r\n\r\nThen you can prove a general induction theorem:\r\n```lean \r\ntheorem induction_on {p : SkewMonoidAlgebra k G → Prop} (f : SkewMonoidAlgebra k G)\r\n    (hM : ∀ g a, p (single g a)) (hadd : ∀ f g : SkewMonoidAlgebra k G, p f → p g → p (f + g)) :\r\n    p f := sorry\r\n```\r\nusing all this `sum_sum_index` business, and then you can do everything with this. For example\r\n```lean \r\ninstance instNonUnitalSemiring : NonUnitalSemiring (SkewMonoidAlgebra k G) where\r\n  mul_assoc f g h := by\r\n    induction f using induction_on with\r\n    | hM a x => induction g using induction_on with\r\n      | hM g a => induction h using induction_on with\r\n        | hM h a => simp [mul_assoc, mul_smul]\r\n        | hadd => simp_all [add_mul, mul_add]\r\n      | hadd => simp_all [add_mul, mul_add]\r\n    | hadd => simp_all [add_mul]\r\n```\r\nand maybe you even want to prove an `induction_on₂` and an `induction_on₃` lemma, and then the `mul_assoc` proof will be even shorter.",
                    "createdAt": "2025-03-26T22:45:10Z",
                    "author": {
                      "login": "kbuzzard"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c54G-ca",
                    "body": "```suggestion\r\n  one_mul f := by\r\n    induction f using induction_on with\r\n    | hM g a => simp [one_def]\r\n    | hadd f g _ _ => simp_all [mul_add]\r\n  mul_one f := by\r\n    induction f using induction_on with\r\n    | hM g a => simp [one_def]\r\n    | hadd f g _ _ => simp_all [add_mul]\r\n```",
                    "createdAt": "2025-03-26T22:49:09Z",
                    "author": {
                      "login": "kbuzzard"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c54G-j8",
                    "body": "This should be much earlier (where `Sub` is, and instead of `Sub`)",
                    "createdAt": "2025-03-26T22:49:46Z",
                    "author": {
                      "login": "kbuzzard"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c54HANA",
                    "body": "`simp; rfl` usually indicates missing simp lemma. Here you are missing\r\n```lean \r\ninstance [One G] [AddCommMonoidWithOne k] : AddCommMonoidWithOne (SkewMonoidAlgebra k G) where\r\n  __ := instAddCommMonoid\r\n  __ := instOne\r\n\r\n@[simp]\r\nlemma single_nat [One G] [AddCommMonoidWithOne k] (n : ℕ) :\r\n    (single 1 n : SkewMonoidAlgebra k G) = n := sorry\r\n```\r\nand then the `rfl` isn't needed.",
                    "createdAt": "2025-03-26T22:58:40Z",
                    "author": {
                      "login": "kbuzzard"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c54HAUo",
                    "body": "Same here.",
                    "createdAt": "2025-03-26T22:59:18Z",
                    "author": {
                      "login": "kbuzzard"
                    }
                  }
                ]
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjIwNDIxMTYz",
              "login": "Louddy"
            },
            {
              "id": "MDQ6VXNlcjMxODY3ODI3",
              "login": "kbuzzard"
            }
          ]
        },
        "state": "OPEN",
        "statusCheckRollup": {
          "contexts": {
            "nodes": [
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIuUGgTg",
                "name": "set_pr_emoji",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13413218167/job/37467824206"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIuU3Ptw",
                "name": "set_pr_emoji",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13413474187/job/37468622775"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIuTgEQA",
                "name": "Lint style (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13413013339/job/37467194432"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJMTuh0g",
                "name": "Add ready-to-merge or delegated label",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14095087386/job/39480697298"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIuUCbIA",
                "name": "Add topic label",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13413197354/job/37467757344"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIuUCa_w",
                "name": "label-and-report-new-contributor",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13413197352/job/37467757311"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAJMTusRg",
                "name": "Ping maintainers on Zulip",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/14095087382/job/39480699974"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIuUCbKw",
                "name": "post-or-update-summary-comment",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13413197340/job/37467757355"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIuTgCXw",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13413013342/job/37467193951"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIuUCdAg",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13413197333/job/37467757826"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIuTgCMg",
                "name": "Build (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13413013339/job/37467193906"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIuTgD1g",
                "name": "Build",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13413013342/job/37467194326"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIuUCa8A",
                "name": "Check all files imported",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13413197333/job/37467757296"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIuTgFvg",
                "name": "Post-CI job (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13413013339/job/37467194814"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIuUDdTg",
                "name": "Post-CI job",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/13413013342/job/37467774286"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIuUDEtg",
                "name": "New Contributor Check",
                "conclusion": "NEUTRAL",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/37467767990"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAIuUEcrA",
                "name": "Summary",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=22078&login=leanprover-community&repository=mathlib4"
              }
            ]
          }
        },
        "title": "feat(SkewMonoidAlgebra): multiplication and algebraic instances",
        "updatedAt": "2025-03-26T23:00:44Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/22078",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "1232c4f499655cf8392941fdd24001d477970aa4"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6qqhoKzwAAAAPPcn2A",
              "createdAt": "2025-02-19T13:01:58Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABb5aSCQ",
                "name": "new-contributor"
              }
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c57h5Gc",
              "createdAt": "2025-02-19T13:02:19Z",
              "source": {
                "id": "PR_kwDOFcwZ1c5m3HyJ",
                "title": "feat(Algebra/SkewMonoidAlgebra/Basic): add SkewMonoidAlgebra",
                "url": "https://github.com/leanprover-community/mathlib4/pull/10541"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6qqhoKzwAAAAPPcqT4",
              "createdAt": "2025-02-19T13:02:43Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABwbfWPw",
                "name": "large-import"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6qqhoKzwAAAAPPcqa5",
              "createdAt": "2025-02-19T13:02:45Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABViJjTQ",
                "name": "t-algebra"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6qqhoKzwAAAAPPcqgb",
              "createdAt": "2025-02-19T13:02:46Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABwbfWPw",
                "name": "large-import"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6fD4HU",
              "createdAt": "2025-02-19T13:02:48Z",
              "body": "### PR summary [1232c4f499](https://github.com/leanprover-community/mathlib4/pull/22078/commits/1232c4f499655cf8392941fdd24001d477970aa4)\n\nImport changes exceeding 2%\n\n| %      | File |\n| -      | -    |\n| +27.15% | `Mathlib.Algebra.SkewMonoidAlgebra.Basic` |\n\n<details><summary>\n\n#### Import changes for modified files\n\n</summary>\n\nDependency changes\n\n| File | Base Count | Head Count | Change |\n| --- | --- | --- | --- |\n| Mathlib.Algebra.SkewMonoidAlgebra.Basic | 755 | 960 | +205 (+27.15%) |\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n| `Mathlib.Algebra.SkewMonoidAlgebra.Basic`|205|\n\n</details>\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ basisSingleOne`\n`+ comapDistribMulActionSelf`\n`+ comapMulAction`\n`+ comapSMul`\n`+ comapSMul_def`\n`+ comapSMul_single`\n`+ instAddCommGroup`\n`+ instDistribMulAction`\n`+ instDistribSMul`\n`+ instFaithfulSMul`\n`+ instIsCentralScalar`\n`+ instIsScalarTower`\n`+ instModule`\n`+ instModule.free`\n`+ instMul`\n`+ instNeg'`\n`+ instNonAssocRing`\n`+ instNonAssocSemiring`\n`+ instNonUnitalNonAssocRing`\n`+ instNonUnitalNonAssocSemiring`\n`+ instNonUnitalRing`\n`+ instNonUnitalSemiring`\n`+ instRing`\n`+ instSemiring`\n`+ instSmulCommClass`\n`+ instSub`\n`+ instUnique`\n`+ intCast_def`\n`+ liftNC`\n`+ liftNCRingHom`\n`+ liftNC_mul`\n`+ liftNC_one`\n`+ liftNC_single`\n`+ mapDomain`\n`+ mapDomain_add`\n`+ mapDomain_comp`\n`+ mapDomain_id`\n`+ mapDomain_single`\n`+ mapDomain_smul`\n`+ mapDomain_sum`\n`+ mapDomain_zero`\n`+ mul_def`\n`+ natCast_def`\n`+ ofFinsupp_neg`\n`+ ofFinsupp_sub`\n`+ sum_mapDomain_index`\n`+ sum_smul_index`\n`+ sum_smul_index'`\n`+ toFinsuppLinearEquiv`\n`+ toFinsupp_mapDomain`\n`+ toFinsupp_neg`\n`+ toFinsupp_sub`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>\n\n---\n\n<details><summary>No changes to technical debt.</summary>\n\nYou can run this locally as\n```\n./scripts/technical-debt-metrics.sh pr_summary\n```\n* The `relative` value is the weighted *sum* of the differences with weight given by the *inverse* of the current value of the statistic.\n* The `absolute` value is the `relative` value divided by the total sum of the inverses of the current values (i.e. the weighted *average* of the differences).\n</details>\n",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6fD42g",
              "createdAt": "2025-02-19T13:04:04Z",
              "body": "Bit confused why it says I removed the large import label. I just added `t-algebra`.\r\nI re-added `large-import` just in case.",
              "author": {
                "login": "Louddy"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6qqhoKzwAAAAPPdYsE",
              "createdAt": "2025-02-19T13:15:34Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABwbfWPw",
                "name": "large-import"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6iC4jP",
              "createdAt": "2025-03-26T21:31:59Z",
              "body": "",
              "author": {
                "login": "kbuzzard"
              }
            }
          ]
        }
      }
    }
  }
}
