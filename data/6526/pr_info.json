{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 61,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "ericrbg"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "Useful for Wedderburn's little theorem.\n\n---\n<!-- The text above the `---` will become the commit message when your\nPR is merged. Please leave a blank newline before the `---`, otherwise\nGitHub will format the text above it as a title.\n\nTo indicate co-authors, include lines at the bottom of the commit message\n(that is, before the `---`) using the following format:\n\nCo-authored-by: Author Name <author@email.com>\n\nAny other comments you want to keep out of the PR commit should go\nbelow the `---`, and placed outside this HTML comment, or else they\nwill be invisible to reviewers.\n\nIf this PR depends on other PRs, please list them below this comment,\nusing the following format:\n- [ ] depends on: #abc [optional extra text]\n- [ ] depends on: #xyz [optional extra text]\n-->\n\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\n",
        "changedFiles": 3,
        "closed": true,
        "closedAt": "2023-08-25T21:13:32Z",
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c5k0zPZ",
              "body": "The reason I want the ring versions are to do with the proof of little wedderburn; you can see the WIP [here](https://github.com/leanprover-community/mathlib4/compare/LittleWedderburn?expand=1). I tried messing around with the proof to change things, and it should be fine but minorly annoying; some slight motive issues as we'd need to rewrite in `Fintype.card` stuff, but this can in theory be done. Or I could just construct the \"upgraded\" equivalences there, within the proof, but then that technically amounts to defeq abuse.",
              "createdAt": "2023-08-24T12:13:39Z",
              "author": {
                "login": "ericrbg"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5k14iu",
              "body": "I think treating various bundled versions of the same thing as defeq doesn't count as abuse",
              "createdAt": "2023-08-24T14:58:32Z",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5k172a",
              "body": "Alright, I'll change it to that version then",
              "createdAt": "2023-08-24T15:05:40Z",
              "author": {
                "login": "ericrbg"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5k6Iac",
              "body": ":v: ericrbg can now approve this pull request. To approve and merge a pull request, simply reply with `bors r+`. More detailed instructions are available [here](https://bors.tech/documentation/getting-started/#reviewing-pull-requests).",
              "createdAt": "2023-08-25T08:19:23Z",
              "author": {
                "login": "bors"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5k9mPH",
              "body": "bors r+",
              "createdAt": "2023-08-25T20:00:51Z",
              "author": {
                "login": "ericrbg"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5k92hD",
              "body": "Pull request successfully merged into master.\n\n  Build succeeded!\n\n  The publicly hosted instance of bors-ng is deprecated and will go away soon.\n\n  If you want to self-host your own instance, [instructions are here][instructions].\n  For more help, visit [the forum].\n\n  If you want to switch to GitHub's built-in merge queue, visit [their help page][gh].\n\n  [instructions]: https://github.com/bors-ng/bors-ng#how-to-set-up-your-own-real-instance\n  [the forum]: https://forum.bors.tech\n  [gh]: https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/configuring-pull-request-merges/managing-a-merge-queue\n\n\n\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/5979938317/job/16225069720)\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/5979938317/job/16225070145)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/5979938317/job/16225070365)",
              "createdAt": "2023-08-25T21:13:31Z",
              "author": {
                "login": "bors"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "01b1c48c48c57df2fb6fdc96913df0e45a519837",
                "additions": 72,
                "deletions": 0,
                "committedDate": "2023-08-11T14:34:33Z",
                "author": {
                  "name": "Eric Rodriguez",
                  "email": "ericrboidi@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "8f5f3af5a2389aab59f7d9d4f0488901308273ba",
                "additions": 1,
                "deletions": 0,
                "committedDate": "2023-08-11T15:04:02Z",
                "author": {
                  "name": "Eric Rodriguez",
                  "email": "ericrboidi@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "46df32547c6f12d03ae0cf86b1603b9eeaa05827",
                "additions": 8,
                "deletions": 3,
                "committedDate": "2023-08-11T15:41:20Z",
                "author": {
                  "name": "Eric Rodriguez",
                  "email": "ericrboidi@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "797a53009aed0ae899c3731d0223e22e8f8fd9e8",
                "additions": 3,
                "deletions": 8,
                "committedDate": "2023-08-11T15:44:37Z",
                "author": {
                  "name": "Eric Rodriguez",
                  "email": "ericrboidi@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "5832efa23ac7bb3a9b3f4eeecd915a4a70b093e4",
                "additions": 2,
                "deletions": 5,
                "committedDate": "2023-08-11T15:53:04Z",
                "author": {
                  "name": "Eric Rodriguez",
                  "email": "37984851+ericrbg@users.noreply.github.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "d2be94f4ee32f128f49d54833c0cbb51bcaa4dbd",
                "additions": 7,
                "deletions": 7,
                "committedDate": "2023-08-12T12:19:21Z",
                "author": {
                  "name": "Eric Rodriguez",
                  "email": "ericrboidi@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "7003de6d696b918acf3c040b3ba4a7071010a9ba",
                "additions": 16700,
                "deletions": 7193,
                "committedDate": "2023-08-24T11:26:11Z",
                "author": {
                  "name": "Eric Rodriguez",
                  "email": "ericrboidi@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "9f53f648a4adcedb541721e67ab432cba1de9385",
                "additions": 19,
                "deletions": 14,
                "committedDate": "2023-08-24T11:40:00Z",
                "author": {
                  "name": "Eric Rodriguez",
                  "email": "ericrboidi@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "d822ca944e5b23d0b4cdf9832cc9f3b6613a59b4",
                "additions": 55,
                "deletions": 74,
                "committedDate": "2023-08-24T16:14:45Z",
                "author": {
                  "name": "Eric Rodriguez",
                  "email": "ericrboidi@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "e28b67f59a13a9c494def8532c41cb153c1afefb",
                "additions": 0,
                "deletions": 1,
                "committedDate": "2023-08-24T16:15:12Z",
                "author": {
                  "name": "Eric Rodriguez",
                  "email": "37984851+ericrbg@users.noreply.github.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "cd859528f9c9e703dc466ddd65188d0b31ca0925",
                "additions": 10,
                "deletions": 4,
                "committedDate": "2023-08-25T09:28:00Z",
                "author": {
                  "name": "Eric Rodriguez",
                  "email": "ericrboidi@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "fa980f639bd6fb2b62efcd853297efeec6cd8b58",
                "additions": 6,
                "deletions": 7,
                "committedDate": "2023-08-25T09:44:02Z",
                "author": {
                  "name": "Eric Rodriguez",
                  "email": "ericrboidi@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "11645caee130be6ede0a7fe7ee1051593f1e2f62",
                "additions": 2,
                "deletions": 1,
                "committedDate": "2023-08-25T11:08:13Z",
                "author": {
                  "name": "Eric Rodriguez",
                  "email": "ericrboidi@gmail.com"
                },
                "statusCheckRollup": null
              }
            }
          ]
        },
        "createdAt": "2023-08-11T14:35:23Z",
        "deletions": 0,
        "files": {
          "nodes": [
            {
              "path": "Mathlib/GroupTheory/GroupAction/ConjAct.lean",
              "additions": 30,
              "deletions": 0
            },
            {
              "path": "Mathlib/GroupTheory/Subgroup/Basic.lean",
              "additions": 16,
              "deletions": 0
            },
            {
              "path": "Mathlib/GroupTheory/Submonoid/Center.lean",
              "additions": 15,
              "deletions": 0
            }
          ]
        },
        "headRefName": "UnitsEquivs",
        "headRefOid": "11645caee130be6ede0a7fe7ee1051593f1e2f62",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c5Xu4vB",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c8AAAABAt13Ow",
              "color": "bfd4f2",
              "name": "delegated"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABViJjTQ",
              "color": "33DBEC",
              "name": "t-algebra"
            }
          ]
        },
        "latestReviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5fFo9e",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-08-25T09:26:10Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5d1YkX",
              "body": "More style nits ... hope I get them right.",
              "state": "COMMENTED",
              "author": {
                "login": "alreadydone"
              },
              "submittedAt": "2023-08-11T19:52:21Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5evIkf",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "ocfnash"
              },
              "submittedAt": "2023-08-22T13:43:12Z"
            }
          ]
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "UNKNOWN",
        "mergeable": "UNKNOWN",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 6526,
        "potentialMergeCommit": null,
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": "APPROVED",
        "reviewRequests": {
          "nodes": [
            {
              "requestedReviewer": {
                "id": "MDQ6VXNlcjU2MzY3MDU=",
                "login": "jcommelin"
              }
            }
          ]
        },
        "reviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5d0KQO",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-08-11T15:35:16Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5d0M7b",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-08-11T15:42:42Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5d0Ogl",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-08-11T15:47:08Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5d1YkX",
              "body": "More style nits ... hope I get them right.",
              "state": "COMMENTED",
              "author": {
                "login": "alreadydone"
              },
              "submittedAt": "2023-08-11T19:52:21Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5d4k35",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-08-12T12:56:35Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5d7F0e",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "ericrbg"
              },
              "submittedAt": "2023-08-13T10:26:59Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5evIkf",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "ocfnash"
              },
              "submittedAt": "2023-08-22T13:43:12Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5ewskV",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "ericrbg"
              },
              "submittedAt": "2023-08-22T16:13:24Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5e-UwF",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "ericrbg"
              },
              "submittedAt": "2023-08-24T11:41:04Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5fFETn",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-08-25T08:02:53Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5fFJ0q",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-08-25T08:17:04Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5fFKat",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-08-25T08:18:39Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5fFKs_",
              "body": "Thanks!\r\n\r\nbors d+\r\n\r\nPlease take a look at the module docstrings for these files and decide if the new results are interesting enough to mention in them.",
              "state": "APPROVED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-08-25T08:19:22Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5fFg60",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "ericrbg"
              },
              "submittedAt": "2023-08-25T09:08:03Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5fFo5A",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "ericrbg"
              },
              "submittedAt": "2023-08-25T09:25:58Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5fFo9e",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-08-25T09:26:10Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5fFplP",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "ericrbg"
              },
              "submittedAt": "2023-08-25T09:27:47Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5fFqAd",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "ericrbg"
              },
              "submittedAt": "2023-08-25T09:28:50Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5fFqmO",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "ericrbg"
              },
              "submittedAt": "2023-08-25T09:30:16Z"
            }
          ]
        },
        "reviewThreads": {
          "nodes": [
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5M-vWc",
                    "body": "I would assume the existing proof goes through more generally as\r\n```suggestion\r\ndef unitsCentralizerEquiv [Monoid D] (x : Dˣ) :\r\n MulAction.stabilizer (ConjAct Dˣ) x ≃* (Submonoid.centralizer ({↑x} : Set D))ˣ where\r\n```",
                    "createdAt": "2023-08-11T15:35:16Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5M-xAs",
                    "body": "```suggestion\r\ndef unitsCenterToCenterUnits [Monoid D] : (Submonoid.center D)ˣ →* Submonoid.center (Dˣ) :=\r\n  (Units.map (Submonoid.center D).subtype).codRestrict _ <| fun u r ↦ Units.ext <| u.1.prop r\r\n```",
                    "createdAt": "2023-08-11T15:42:42Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5M-yBF",
                    "body": "```suggestion\r\ntheorem unitsCenterToCenterUnits_injective [Monoid D] :\r\n    Function.Injective (unitsCenterToCenterUnits D) :=\r\n  fun _a _b h => Units.ext <| Subtype.ext <| congr_arg (Units.val ∘ Subtype.val) h\r\n```",
                    "createdAt": "2023-08-11T15:47:08Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5M_gF2",
                    "body": "```suggestion\r\n    MulAction.stabilizer (ConjAct Dˣ) x ≃* (Submonoid.centralizer ({↑x} : Set D))ˣ where\r\n```",
                    "createdAt": "2023-08-11T19:37:50Z",
                    "author": {
                      "login": "alreadydone"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5M_gLL",
                    "body": "```suggestion\r\n    MulAction.stabilizer (ConjAct Dˣ) x ≃* (Subring.centralizer ({↑x} : Set D))ˣ :=\r\n  unitsCentralizerEquiv x\r\n```",
                    "createdAt": "2023-08-11T19:38:18Z",
                    "author": {
                      "login": "alreadydone"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5M_gMl",
                    "body": "```suggestion\r\n  (Units.map (Submonoid.center D).subtype).codRestrict _ <| fun u r ↦ Units.ext <| u.1.prop r\r\n```",
                    "createdAt": "2023-08-11T19:38:27Z",
                    "author": {
                      "login": "alreadydone"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5M_guD",
                    "body": "feels better if indented two spaces less (aligning with `toFun` above)",
                    "createdAt": "2023-08-11T19:41:30Z",
                    "author": {
                      "login": "alreadydone"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5NBp8o",
                    "body": "I assume there's not a more general results hiding here for `MulDistribMulAction`s?",
                    "createdAt": "2023-08-12T12:56:35Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5NDcK5",
                    "body": "I'm not even sure what it'd look like",
                    "createdAt": "2023-08-13T10:26:58Z",
                    "author": {
                      "login": "ericrbg"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5NlUdC",
                    "body": "Is this a copy-paste error?\r\n```suggestion\r\nCopyright (c) 2023 Eric Rodriguez. All rights reserved.\r\n```\r\nSame remark for `Authors` field on line 4, though maybe this is co-authored?",
                    "createdAt": "2023-08-22T13:12:47Z",
                    "author": {
                      "login": "ocfnash"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5NmSXI",
                    "body": "This was written by Johan in Lean3 for little wedderburn so I wanted to carry on his attribution",
                    "createdAt": "2023-08-22T16:13:24Z",
                    "author": {
                      "login": "ericrbg"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5Nlb4r",
                    "body": "```suggestion\r\n    ⟨⟨fun u ↦\r\n      ⟨↑(ConjAct.ofConjAct u.1 : Dˣ), by\r\n        rintro x ⟨rfl⟩\r\n        have : (u : ConjAct Dˣ) • x = x := u.2\r\n        rwa [ConjAct.smul_def, mul_inv_eq_iff_eq_mul, Units.ext_iff, eq_comm] at this⟩,\r\n      rfl⟩,\r\n```",
                    "createdAt": "2023-08-22T13:34:25Z",
                    "author": {
                      "login": "ocfnash"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5NlcLd",
                    "body": "I don't understand why we need this. Can you not just use what you have for `Monoid`s?",
                    "createdAt": "2023-08-22T13:35:20Z",
                    "author": {
                      "login": "ocfnash"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5NldcW",
                    "body": "I'd use the name `unitsCentralizerEquiv` (or even `unitsCentralizerMulEquiv`) if the equiv went in the other direction. So I think either rename:\r\n```suggestion\r\ndef stabilizerConjActUnitsMulEquiv [Monoid D] (x : Dˣ) :\r\n```\r\nor flip the sides.",
                    "createdAt": "2023-08-22T13:39:01Z",
                    "author": {
                      "login": "ocfnash"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5NvH_I",
                    "body": "I had to flip this in a weird way - using `MulEquiv.symm`; feel free to try flip it manually and see if you understand what's breaking! (Also note that `map_mul` is no longer as trivial, but that doesn't seem to be the issue...)",
                    "createdAt": "2023-08-24T11:41:04Z",
                    "author": {
                      "login": "ericrbg"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5NleEx",
                    "body": "Same question here: it's not clear to me why you need this.",
                    "createdAt": "2023-08-22T13:40:50Z",
                    "author": {
                      "login": "ocfnash"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5Nleub",
                    "body": "This import is only necessary because of `unitsCentralizerEquivSubring` and `centerUnitsEquivUnitsRingCenter` about which I have doubts.\r\n\r\nIf it turns out we don't need those lemmas then I think these results could go in the `GroupTheory.GroupAction.ConjAct` file.",
                    "createdAt": "2023-08-22T13:42:46Z",
                    "author": {
                      "login": "ocfnash"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5NzcVS",
                    "body": "```suggestion\r\n@[simps]\r\ndef unitsCenterToCenterUnits [Monoid M] : (Submonoid.center M)ˣ →* Submonoid.center (Mˣ) :=\r\n```\r\nor manual lemma(s) if the result is bad.",
                    "createdAt": "2023-08-25T08:02:53Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5NzzE8",
                    "body": "I also added `to_additive`!",
                    "createdAt": "2023-08-25T09:27:47Z",
                    "author": {
                      "login": "ericrbg"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5Nzf4p",
                    "body": "Anonymous constructors are pretty cursed (in terms of readability) for morphisms now that structures are nested:\r\n```suggestion\r\n    { toFun := fun u ↦ ⟨(u : G₀ˣ), fun r ↦ by\r\n        rcases eq_or_ne r 0 with (rfl | hr)\r\n        · rw [mul_zero, zero_mul]\r\n        exact congrArg Units.val <| u.2 <| Units.mk0 r hr⟩\r\n      map_one' := rfl\r\n      map_mul' := fun _ _ ↦ rfl }\r\n```\r\n\r\n",
                    "createdAt": "2023-08-25T08:17:03Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5NzgRv",
                    "body": "```suggestion\r\n@[simps]\r\ndef centerUnitsEquivUnitsCenter (G₀ : Type*) [GroupWithZero G₀] :\r\n```\r\nor similar, again checking the lemmas look ok.",
                    "createdAt": "2023-08-25T08:18:39Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5Nzt4q",
                    "body": "I had removed this earlier, because I didn't particularly like the options it gave me before. I tried `simps!` (which I've never seen before) and it seems to have gone a bit too far:\r\n\r\n```lean\r\n[simps.verbose] adding projection Subgroup.val_centerUnitsEquivUnitsCenter_apply_coe:\r\n      ∀ (G₀ : Type u_5) [inst : GroupWithZero G₀] (a : { x // x ∈ Subgroup.center G₀ˣ }),\r\n        ↑↑(↑(Subgroup.centerUnitsEquivUnitsCenter G₀) a) = ↑↑a \r\n\r\n[simps.verbose] adding projection Subgroup.val_inv_centerUnitsEquivUnitsCenter_apply_coe:\r\n      ∀ (G₀ : Type u_5) [inst : GroupWithZero G₀] (a : { x // x ∈ Subgroup.center G₀ˣ }),\r\n        ↑↑(↑(Subgroup.centerUnitsEquivUnitsCenter G₀) a)⁻¹ = (↑↑a)⁻¹ \r\n\r\n[simps.verbose] adding projection Subgroup.val_centerUnitsEquivUnitsCenter_symm_apply_coe:\r\n      ∀ (G₀ : Type u_5) [inst : GroupWithZero G₀] (u : { x // x ∈ Submonoid.center G₀ }ˣ),\r\n        ↑↑(↑(MulEquiv.symm (Subgroup.centerUnitsEquivUnitsCenter G₀)) u) = ↑↑u \r\n\r\n[simps.verbose] adding projection Subgroup.val_inv_centerUnitsEquivUnitsCenter_symm_apply_coe:\r\n      ∀ (G₀ : Type u_5) [inst : GroupWithZero G₀] (u : { x // x ∈ Submonoid.center G₀ }ˣ),\r\n        ↑(↑(↑(MulEquiv.symm (Subgroup.centerUnitsEquivUnitsCenter G₀)) u))⁻¹ = ↑↑u⁻¹ \r\n```\r\n\r\nSo I will add the first and the third manually",
                    "createdAt": "2023-08-25T09:08:02Z",
                    "author": {
                      "login": "ericrbg"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5NzynR",
                    "body": "actually, screw it, I'll just use `simps!` as long as Lean doesn't complain",
                    "createdAt": "2023-08-25T09:25:58Z",
                    "author": {
                      "login": "ericrbg"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5Nzyq6",
                    "body": "You can use `@[simps val_apply_coe val_symm_apply_coe]` to request it only generate those ones (or some similar syntax)",
                    "createdAt": "2023-08-25T09:26:09Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5NzzXe",
                    "body": "I guess that doesn't work so well with the `to_additive (attr := simps!)`?",
                    "createdAt": "2023-08-25T09:28:50Z",
                    "author": {
                      "login": "ericrbg"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5Nzzwn",
                    "body": "ah, it does, ends up being `apply_coe_val`",
                    "createdAt": "2023-08-25T09:30:16Z",
                    "author": {
                      "login": "ericrbg"
                    }
                  }
                ]
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjM3OTg0ODUx",
              "login": "ericrbg"
            },
            {
              "id": "MDQ6VXNlcjQyNTI2MA==",
              "login": "eric-wieser"
            },
            {
              "id": "MDQ6VXNlcjMwNjQxNDU=",
              "login": "alreadydone"
            },
            {
              "id": "MDQ6VXNlcjc3MzQzNjQ=",
              "login": "ocfnash"
            },
            {
              "id": "U_kgDOB75MNQ",
              "login": "leanprover-community-mathlib4-bot"
            }
          ]
        },
        "state": "CLOSED",
        "statusCheckRollup": null,
        "title": "[Merged by Bors] - feat: unit equivalences",
        "updatedAt": "2023-08-25T21:13:36Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/6526",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "01b1c48c48c57df2fb6fdc96913df0e45a519837"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5uFgYhzwAAAAJYP25E",
              "createdAt": "2023-08-11T14:35:24Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5uFgYhzwAAAAJYP25O",
              "createdAt": "2023-08-11T14:35:24Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKteTVQ",
                "name": "awaiting-CI"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5uFgYhzwAAAAJYP25V",
              "createdAt": "2023-08-11T14:35:24Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABViJjTQ",
                "name": "t-algebra"
              }
            },
            {
              "__typename": "ReviewRequestedEvent",
              "id": "RRE_lADOFcwZ1c5uFgYhzwAAAAJYP280",
              "createdAt": "2023-08-11T14:35:26Z",
              "requestedReviewer": {
                "id": "MDQ6VXNlcjU2MzY3MDU=",
                "login": "jcommelin"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "8f5f3af5a2389aab59f7d9d4f0488901308273ba"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5uFgYhzwAAAAJYSDzV",
              "createdAt": "2023-08-11T15:24:02Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKteTVQ",
                "name": "awaiting-CI"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5d0KQO",
              "createdAt": "2023-08-11T15:35:15Z",
              "body": "",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "46df32547c6f12d03ae0cf86b1603b9eeaa05827"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5d0M7b",
              "createdAt": "2023-08-11T15:42:41Z",
              "body": "",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "797a53009aed0ae899c3731d0223e22e8f8fd9e8"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5d0Ogl",
              "createdAt": "2023-08-11T15:47:08Z",
              "body": "",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "5832efa23ac7bb3a9b3f4eeecd915a4a70b093e4"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5d1YkX",
              "createdAt": "2023-08-11T19:37:49Z",
              "body": "More style nits ... hope I get them right.",
              "author": {
                "login": "alreadydone"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "d2be94f4ee32f128f49d54833c0cbb51bcaa4dbd"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5d4k35",
              "createdAt": "2023-08-12T12:56:35Z",
              "body": "",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5evIkf",
              "createdAt": "2023-08-22T13:12:47Z",
              "body": "",
              "author": {
                "login": "ocfnash"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5uFgYhzwAAAAJdg0ip",
              "createdAt": "2023-08-22T13:43:47Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5uFgYhzwAAAAJdg0i0",
              "createdAt": "2023-08-22T13:43:47Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "7003de6d696b918acf3c040b3ba4a7071010a9ba"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "9f53f648a4adcedb541721e67ab432cba1de9385"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5uFgYhzwAAAAJey9Gz",
              "createdAt": "2023-08-24T11:41:14Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5uFgYhzwAAAAJey9G6",
              "createdAt": "2023-08-24T11:41:14Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5k0zPZ",
              "createdAt": "2023-08-24T12:13:39Z",
              "body": "The reason I want the ring versions are to do with the proof of little wedderburn; you can see the WIP [here](https://github.com/leanprover-community/mathlib4/compare/LittleWedderburn?expand=1). I tried messing around with the proof to change things, and it should be fine but minorly annoying; some slight motive issues as we'd need to rewrite in `Fintype.card` stuff, but this can in theory be done. Or I could just construct the \"upgraded\" equivalences there, within the proof, but then that technically amounts to defeq abuse.",
              "author": {
                "login": "ericrbg"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5k14iu",
              "createdAt": "2023-08-24T14:58:32Z",
              "body": "I think treating various bundled versions of the same thing as defeq doesn't count as abuse",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5k172a",
              "createdAt": "2023-08-24T15:05:40Z",
              "body": "Alright, I'll change it to that version then",
              "author": {
                "login": "ericrbg"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "d822ca944e5b23d0b4cdf9832cc9f3b6613a59b4"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "e28b67f59a13a9c494def8532c41cb153c1afefb"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5fFETn",
              "createdAt": "2023-08-25T08:02:53Z",
              "body": "",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5fFJ0q",
              "createdAt": "2023-08-25T08:17:03Z",
              "body": "",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5fFKat",
              "createdAt": "2023-08-25T08:18:39Z",
              "body": "",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5fFKs_",
              "createdAt": "2023-08-25T08:19:22Z",
              "body": "Thanks!\r\n\r\nbors d+\r\n\r\nPlease take a look at the module docstrings for these files and decide if the new results are interesting enough to mention in them.",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5k6Iac",
              "createdAt": "2023-08-25T08:19:23Z",
              "body": ":v: ericrbg can now approve this pull request. To approve and merge a pull request, simply reply with `bors r+`. More detailed instructions are available [here](https://bors.tech/documentation/getting-started/#reviewing-pull-requests).",
              "author": {
                "login": "bors"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5uFgYhzwAAAAJfYx9G",
              "createdAt": "2023-08-25T08:19:36Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABAt13Ow",
                "name": "delegated"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5uFgYhzwAAAAJfYx_X",
              "createdAt": "2023-08-25T08:19:37Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "cd859528f9c9e703dc466ddd65188d0b31ca0925"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "fa980f639bd6fb2b62efcd853297efeec6cd8b58"
              }
            },
            {
              "__typename": "PullRequestCommit",
              "commit": {
                "oid": "11645caee130be6ede0a7fe7ee1051593f1e2f62"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5k9mPH",
              "createdAt": "2023-08-25T20:00:51Z",
              "body": "bors r+",
              "author": {
                "login": "ericrbg"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5k92hD",
              "createdAt": "2023-08-25T21:13:31Z",
              "body": "Pull request successfully merged into master.\n\n  Build succeeded!\n\n  The publicly hosted instance of bors-ng is deprecated and will go away soon.\n\n  If you want to self-host your own instance, [instructions are here][instructions].\n  For more help, visit [the forum].\n\n  If you want to switch to GitHub's built-in merge queue, visit [their help page][gh].\n\n  [instructions]: https://github.com/bors-ng/bors-ng#how-to-set-up-your-own-real-instance\n  [the forum]: https://forum.bors.tech\n  [gh]: https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/configuring-pull-request-merges/managing-a-merge-queue\n\n\n\n  * [Build](https://github.com/leanprover-community/mathlib4/actions/runs/5979938317/job/16225069720)\n  * [Check all files imported](https://github.com/leanprover-community/mathlib4/actions/runs/5979938317/job/16225070145)\n  * [Lint style](https://github.com/leanprover-community/mathlib4/actions/runs/5979938317/job/16225070365)",
              "author": {
                "login": "bors"
              }
            },
            {
              "__typename": "RenamedTitleEvent"
            },
            {
              "__typename": "ClosedEvent",
              "id": "CE_lADOFcwZ1c5uFgYhzwAAAAJfzQwr",
              "createdAt": "2023-08-25T21:13:32Z"
            },
            {
              "__typename": "HeadRefDeletedEvent",
              "id": "HRDE_lADOFcwZ1c5uFgYhzwAAAAJfzQ3N",
              "createdAt": "2023-08-25T21:13:36Z"
            }
          ]
        }
      }
    }
  }
}
