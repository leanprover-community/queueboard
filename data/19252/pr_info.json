{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 214,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "YaelDillies"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "... and `s ^ n = ‚àÖ ‚Üî s = ‚àÖ ‚àß n ‚â† 0`\r\n\r\nFrom GrowthInGroups\r\n\r\n\r\n---\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nFor details on the \"pull request lifecycle\" in mathlib, please see:\r\nhttps://leanprover-community.github.io/contribute/index.html\r\n\r\nIn particular, note that most reviewers will only notice your PR\r\nif it passes the continuous integration checks.\r\nPlease ask for help on https://leanprover.zulipchat.com if needed.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nIf you are moving or deleting declarations, please include these lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nMoves:\r\n- Vector.* -> Mathlib.Vector.*\r\n- ...\r\n\r\nDeletions:\r\n- Nat.bit1_add_bit1\r\n- ...\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n\r\n-->\r\n- [x] depends on: #19249\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 6,
        "closed": false,
        "closedAt": null,
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c6ULdut",
              "body": "### PR summary [2536a1932e](https://github.com/leanprover-community/mathlib4/pull/19252/commits/2536a1932e296f5c3ff5fa58fd8f52eb5ceba306)\n\n<details><summary>\n\n#### Import changes for modified files\n\n</summary>\n\nDependency changes\n\n| File | Base Count | Head Count | Change |\n| --- | --- | --- | --- |\n| Mathlib.Algebra.Group.Pointwise.Set.Basic | 379 | 384 | +5 (+1.32%) |\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n|<details><summary>16 files</summary> `Mathlib.GroupTheory.Submonoid.Inverses` `Mathlib.GroupTheory.CoprodI` `Mathlib.Algebra.Ring.Subring.Pointwise` `Mathlib.GroupTheory.DoubleCoset` `Mathlib.Algebra.Order.Group.Pointwise.Bounds` `Mathlib.Combinatorics.SimpleGraph.Circulant` `Mathlib.GroupTheory.GroupAction.FixedPoints` `Mathlib.GroupTheory.QuotientGroup.Basic` `Mathlib.Algebra.Group.Submonoid.Units` `Mathlib.Algebra.Group.Submonoid.Pointwise` `Mathlib.Algebra.Order.UpperLower` `Mathlib.GroupTheory.Perm.ClosureSwap` `Mathlib.Algebra.Order.Group.Pointwise.CompleteLattice` `Mathlib.Algebra.Ring.Subsemiring.Pointwise` `Mathlib.Algebra.Group.Subgroup.Pointwise` `Mathlib.GroupTheory.GroupAction.FixingSubgroup`</details>|1|\n|<details><summary>6 files</summary> `Mathlib.Topology.Algebra.ProperAction.Basic` `Mathlib.Topology.Algebra.MulAction` `Mathlib.Topology.Algebra.ProperConstSMul` `Mathlib.Topology.Algebra.ConstMulAction` `Mathlib.Dynamics.Minimal` `Mathlib.RepresentationTheory.Action.Continuous`</details>|2|\n|<details><summary>59 files</summary> `Mathlib.Algebra.Module.Submodule.Bilinear` `Mathlib.LinearAlgebra.BilinearMap` `Mathlib.MeasureTheory.MeasurableSpace.Embedding` `Mathlib.LinearAlgebra.Span.Basic` `Mathlib.Algebra.Category.Grp.EpiMono` `Mathlib.Algebra.Module.Submodule.Invariant` `Mathlib.Algebra.Star.Pointwise` `Mathlib.Algebra.Module.Submodule.Basic` `Mathlib.RingTheory.TwoSidedIdeal.BigOperators` `Mathlib.Algebra.Order.Field.Pointwise` `Mathlib.RingTheory.TwoSidedIdeal.Operations` `Mathlib.Algebra.Module.Submodule.Map` `Mathlib.GroupTheory.GroupAction.ConjAct` `Mathlib.Data.Finset.SMulAntidiagonal` `Mathlib.GroupTheory.GroupExtension.Defs` `Mathlib.Algebra.Category.Grp.Kernels` `Mathlib.Algebra.Module.Submodule.Range` `Mathlib.Algebra.Group.Pointwise.Set.BigOperators` `Mathlib.Algebra.Group.Translate` `Mathlib.Topology.Bornology.Absorbs` `Mathlib.Order.Filter.Pointwise` `Mathlib.Algebra.Lie.Basic` `Mathlib.Combinatorics.Additive.Dissociation` `Mathlib.Algebra.CharP.Basic` `Mathlib.CategoryTheory.Limits.Shapes.SingleObj` `Mathlib.GroupTheory.Coset.Basic` `Mathlib.Data.Set.Semiring` `Mathlib.Algebra.Module.Submodule.RestrictScalars` `Mathlib.Algebra.Category.ModuleCat.Tannaka` `Mathlib.Algebra.Star.NonUnitalSubsemiring` `Mathlib.Algebra.Category.ModuleCat.Colimits` `Mathlib.Algebra.Star.Conjneg` `Mathlib.Algebra.Module.Submodule.IterateMapComap` `Mathlib.Algebra.Star.Center` `Mathlib.MeasureTheory.MeasurableSpace.Basic` `Mathlib.Algebra.Module.Submodule.Lattice` `Mathlib.Algebra.Module.Submodule.Equiv` `Mathlib.Algebra.Group.Pointwise.Set.Finite` `Mathlib.LinearAlgebra.Span.Defs` `Mathlib.GroupTheory.GroupAction.Basic` `Mathlib.GroupTheory.PresentedGroup` `Mathlib.MeasureTheory.Constructions.Cylinders` `Mathlib.Algebra.Module.Submodule.EqLocus` `Mathlib.Algebra.CharZero.Quotient` `Mathlib.Algebra.Star.Subsemiring` `Mathlib.Algebra.Category.Grp.Colimits` `Mathlib.RingTheory.SimpleRing.Field` `Mathlib.Algebra.Module.Submodule.Order` `Mathlib.MeasureTheory.Constructions.SubmoduleQuotient` `Mathlib.MeasureTheory.MeasurableSpace.Prod` `Mathlib.Algebra.Star.CentroidHom` `Mathlib.LinearAlgebra.TensorProduct.Basic` `Mathlib.Data.Finset.MulAntidiagonal` `Mathlib.Algebra.Module.Submodule.LinearMap` `Mathlib.MeasureTheory.MeasurableSpace.CountablyGenerated` `Mathlib.RingTheory.Ideal.BigOperators` `Mathlib.Algebra.Module.Submodule.Ker` `Mathlib.Algebra.ModEq` `Mathlib.MeasureTheory.MeasurableSpace.PreorderRestrict`</details>|3|\n|<details><summary>27 files</summary> `Mathlib.RingTheory.Ideal.Defs` `Mathlib.RingTheory.TwoSidedIdeal.Kernel` `Mathlib.Algebra.Group.Pointwise.Set.ListOfFn` `Mathlib.Data.Set.Pointwise.Iterate` `Mathlib.RingTheory.Ideal.Quotient.Defs` `Mathlib.RingTheory.TwoSidedIdeal.Lattice` `Mathlib.Data.Set.Pointwise.Support` `Mathlib.RingTheory.SimpleRing.Defs` `Mathlib.RingTheory.SimpleRing.Basic` `Mathlib.Algebra.Module.Submodule.Defs` `Mathlib.Algebra.Group.Pointwise.Set.Basic` `Mathlib.GroupTheory.GroupAction.Pointwise` `Mathlib.Algebra.AddTorsor` `Mathlib.LinearAlgebra.AffineSpace.Basic` `Mathlib.RingTheory.TwoSidedIdeal.Basic` `Mathlib.RingTheory.TwoSidedIdeal.Instances` `Mathlib.GroupTheory.GroupAction.Support` `Mathlib.LinearAlgebra.Quotient.Defs` `Mathlib.GroupTheory.Coset.Defs` `Mathlib.Algebra.GroupWithZero.Pointwise.Set.Basic` `Mathlib.Algebra.Ring.Pointwise.Set` `Mathlib.GroupTheory.GroupAction.SubMulAction.Pointwise` `Mathlib.GroupTheory.QuotientGroup.Defs` `Mathlib.Algebra.Module.PointwisePi` `Mathlib.Data.Set.Pointwise.SMul` `Mathlib.GroupTheory.GroupAction.Defs` `Mathlib.GroupTheory.GroupAction.SubMulAction`</details>|5|\n\n</details>\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ instance : MulLeftMono (Finset Œ±) where elim _s _t‚ÇÅ _t‚ÇÇ := mul_subset_mul_left`\n`+ instance : MulLeftMono (Set Œ±) where elim _s _t‚ÇÅ _t‚ÇÇ := mul_subset_mul_left`\n`+ instance : MulRightMono (Finset Œ±) where elim _t _s‚ÇÅ _s‚ÇÇ := mul_subset_mul_right`\n`+ instance : MulRightMono (Set Œ±) where elim _t _s‚ÇÅ _s‚ÇÇ := mul_subset_mul_right`\n`+ inv_pi`\n`+ pow_le_pow_mul_of_sq_le_mul`\n`++ Nonempty.pow`\n`++ Nonempty.zpow`\n`++ image_pow`\n`++ image_pow_of_ne_zero`\n`++ inter_pow_subset`\n`++ not_one_mem_inv_mul_iff`\n`++ nsmul_subset_nsmul_of_zero_mem`\n`++ one_mem_inv_mul_iff`\n`++ one_mem_pow`\n`++ pow_eq_empty`\n`++ pow_right_monotone`\n`++ pow_subset_pow_left`\n`++ pow_subset_pow_mul_of_sq_subset_mul`\n`++ pow_subset_pow_right`\n`++ zpow_eq_empty`\n`++-- empty_pow`\n`++-- pow_mem_pow`\n`++-- pow_subset_pow`\n`++-- pow_subset_pow_of_one_mem`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>\n\n---\n\n<details><summary>Decrease in tech debt: (relative, absolute) = (1.00, 0.00)</summary>\n\n|Current number|Change|Type|\n|-:|:-:|:-|\n|5034|-1|porting notes|\n\nCurrent commit [2536a1932e](https://github.com/leanprover-community/mathlib4/commit/2536a1932e296f5c3ff5fa58fd8f52eb5ceba306)\nReference commit [83238e24b9](https://github.com/leanprover-community/mathlib4/commit/83238e24b9113e84b6e4a66801a7dc8c4e9c8320)\n\nYou can run this locally as\n```\n./scripts/technical-debt-metrics.sh pr_summary\n```\n* The `relative` value is the weighted *sum* of the differences with weight given by the *inverse* of the current value of the statistic.\n* The `absolute` value is the `relative` value divided by the total sum of the inverses of the current values (i.e. the weighted *average* of the differences).\n</details>",
              "createdAt": "2024-11-19T15:28:40Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6UNHnO",
              "body": "This PR/issue depends on:\n* ~~leanprover-community/mathlib4#19249~~\nBy **[Dependent Issues](https://github.com/z0al/dependent-issues)** (ü§ñ). Happy coding!\n<!-- By Dependent Issues (Action) - DO NOT REMOVE -->",
              "createdAt": "2024-11-19T18:37:25Z",
              "author": {
                "login": "mathlib4-dependent-issues-bot"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6U8nF5",
              "body": "What about now?",
              "createdAt": "2024-11-25T19:59:28Z",
              "author": {
                "login": "YaelDillies"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "dbcba41e7fb111b6033070dc8697aba2329bbe54",
                "additions": 192,
                "deletions": 59,
                "committedDate": "2024-11-26T10:39:11Z",
                "author": {
                  "name": "Ya√´l Dillies",
                  "email": "yael.dillies@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "2536a1932e296f5c3ff5fa58fd8f52eb5ceba306",
                "additions": 46,
                "deletions": 27,
                "committedDate": "2024-11-26T10:39:11Z",
                "author": {
                  "name": "Ya√´l Dillies",
                  "email": "yael.dillies@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHzrvCBA",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12028956605/job/33533182468"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHzrvCVw",
                        "name": "post-or-update-summary-comment",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12028956607/job/33533182551"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHzru91w",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12028956137/job/33533181399"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHzru_Pg",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12028956143/job/33533181758"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHzrvESg",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12028956609/job/33533183050"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHzrvA6A",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12028956137/job/33533182184"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHzrvAiQ",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12028956143/job/33533182089"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHzrvC5w",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12028956609/job/33533182695"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHzru9Ug",
                        "name": "Build",
                        "conclusion": null,
                        "status": "IN_PROGRESS",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12028956143/job/33533181266"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHzru_dw",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12028956137/job/33533181815"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHzrvCeg",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12028956137/job/33533182586"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHzrv_-A",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/33533198328"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHzrwdCw",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=19252&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            }
          ]
        },
        "createdAt": "2024-11-19T15:27:40Z",
        "deletions": 62,
        "files": {
          "nodes": [
            {
              "path": "Mathlib/Algebra/Algebra/Operations.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Algebra/Group/Pointwise/Finset/Basic.lean",
              "additions": 103,
              "deletions": 31
            },
            {
              "path": "Mathlib/Algebra/Group/Pointwise/Set/Basic.lean",
              "additions": 94,
              "deletions": 27
            },
            {
              "path": "Mathlib/Algebra/Order/Monoid/Unbundled/Pow.lean",
              "additions": 14,
              "deletions": 0
            },
            {
              "path": "Mathlib/Analysis/Convex/EGauge.lean",
              "additions": 1,
              "deletions": 2
            },
            {
              "path": "Mathlib/GroupTheory/OrderOfElement.lean",
              "additions": 1,
              "deletions": 1
            }
          ]
        },
        "headRefName": "pow_subset_pow",
        "headRefOid": "2536a1932e296f5c3ff5fa58fd8f52eb5ceba306",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c6CaBV6",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c8AAAABViJjTQ",
              "color": "33DBEC",
              "name": "t-algebra"
            }
          ]
        },
        "latestReviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c6SmwS7",
              "body": "Let's also add finset versions of `image_pow`",
              "state": "COMMENTED",
              "author": {
                "login": "b-mehta"
              },
              "submittedAt": "2024-11-25T21:29:04Z"
            }
          ]
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "BLOCKED",
        "mergeable": "MERGEABLE",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 19252,
        "potentialMergeCommit": {
          "oid": "ba96ae48ba674c7c2896fbeea14d5c48b7d172e7"
        },
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": null,
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c6SlJ01",
              "body": "This PR has many changes, including some name changes without deprecations, some deprecations, some implicitness changes, new lemmas, and some proof modifications. Please split this one up into smaller ones, and use the PR description to describe the changes you are making in more detail than \"other lemmas\"",
              "state": "COMMENTED",
              "author": {
                "login": "b-mehta"
              },
              "submittedAt": "2024-11-25T17:48:20Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6SmwS7",
              "body": "Let's also add finset versions of `image_pow`",
              "state": "COMMENTED",
              "author": {
                "login": "b-mehta"
              },
              "submittedAt": "2024-11-25T21:29:04Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6Sm_16",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2024-11-25T21:44:01Z"
            }
          ]
        },
        "reviewThreads": {
          "nodes": [
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5utNw3",
                    "body": "```suggestion\r\nprotected lemma pow_right_monotone (hs : 1 ‚àà s) : Monotone (s ^ ¬∑) :=\r\n```\r\n(as is explicitly mentioned in the naming convention!)",
                    "createdAt": "2024-11-25T21:07:02Z",
                    "author": {
                      "login": "b-mehta"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5utO9-",
                    "body": "This lemma also works for `n = 1`",
                    "createdAt": "2024-11-25T21:11:26Z",
                    "author": {
                      "login": "b-mehta"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5utPL0",
                    "body": "This one also works for `n = 1`",
                    "createdAt": "2024-11-25T21:12:17Z",
                    "author": {
                      "login": "b-mehta"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5utQuM",
                    "body": "```suggestion\r\ntheorem empty_pow (hn : n ‚â† 0) : (‚àÖ : Finset Œ±) ^ n = ‚àÖ :=\r\n  match n with | n + 1 => by simp [pow_succ]\r\n```\r\nimo this is quite a bit cleaner. \r\n(aside, there's also the slightly funny proof\r\n```\r\nsimpa using pow_subset_pow_mul_of_sq_subset_mul (Œ± := Œ±) (pow_two ‚àÖ).le hn\r\n```\r\n)",
                    "createdAt": "2024-11-25T21:18:47Z",
                    "author": {
                      "login": "b-mehta"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5utW0F",
                    "body": "Wow yes that's a funny proof",
                    "createdAt": "2024-11-25T21:44:01Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5utSyt",
                    "body": "Can we also have the version of this resembling\r\n`[MulHomClass F Œ± Œ≤] (f : F) (s : Set Œ±) : ‚àÄ n, n ‚â† 0 ‚Üí f '' (s ^ n) = (f '' s) ^ n`?",
                    "createdAt": "2024-11-25T21:27:09Z",
                    "author": {
                      "login": "b-mehta"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5utTJw",
                    "body": "This one doesn't need the inv to be involutive:\r\n```\r\n@[to_additive (attr := simp)]\r\nlemma inv_pi (s : Set Œπ) (t : ‚àÄ i, Set (Œ± i)) : (s.pi t)‚Åª¬π = s.pi fun i ‚Ü¶ (t i)‚Åª¬π := by ext x; simp\r\n```",
                    "createdAt": "2024-11-25T21:28:27Z",
                    "author": {
                      "login": "b-mehta"
                    }
                  }
                ]
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjE0MDkwNTkz",
              "login": "YaelDillies"
            },
            {
              "id": "U_kgDOCsITAQ",
              "login": "mathlib4-dependent-issues-bot"
            },
            {
              "id": "MDQ6VXNlcjI5OTU5MjI2",
              "login": "b-mehta"
            },
            {
              "id": "U_kgDOBcsTTQ",
              "login": "leanprover-community-bot-assistant"
            }
          ]
        },
        "state": "OPEN",
        "statusCheckRollup": {
          "contexts": {
            "nodes": [
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHzrvCBA",
                "name": "label-and-report-new-contributor",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12028956605/job/33533182468"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHzrvCVw",
                "name": "post-or-update-summary-comment",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12028956607/job/33533182551"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHzru91w",
                "name": "Cancel Previous Runs (CI)",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12028956137/job/33533181399"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHzru_Pg",
                "name": "Cancel Previous Runs (CI)",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12028956143/job/33533181758"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHzrvESg",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12028956609/job/33533183050"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHzrvA6A",
                "name": "Lint style (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12028956137/job/33533182184"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHzrvAiQ",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12028956143/job/33533182089"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHzrvC5w",
                "name": "Check all files imported",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12028956609/job/33533182695"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHzru9Ug",
                "name": "Build",
                "conclusion": null,
                "status": "IN_PROGRESS",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12028956143/job/33533181266"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHzru_dw",
                "name": "Build (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12028956137/job/33533181815"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHzrvCeg",
                "name": "Post-CI job (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/12028956137/job/33533182586"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHzrv_-A",
                "name": "New Contributor Check",
                "conclusion": "NEUTRAL",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/33533198328"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHzrwdCw",
                "name": "Summary",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=19252&login=leanprover-community&repository=mathlib4"
              }
            ]
          }
        },
        "title": "feat(Pointwise): monotonicity of `pow`",
        "updatedAt": "2024-11-26T10:47:34Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/19252",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6fTA_wzwAAAAOTAx1G",
              "createdAt": "2024-11-19T15:28:17Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABViJjTQ",
                "name": "t-algebra"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6fTA_wzwAAAAOTAx1S",
              "createdAt": "2024-11-19T15:28:18Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABtNO8rw",
                "name": "t-data"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6fTA_wzwAAAAOTAyRk",
              "createdAt": "2024-11-19T15:28:25Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABtNO8rw",
                "name": "t-data"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6ULdut",
              "createdAt": "2024-11-19T15:28:40Z",
              "body": "### PR summary [2536a1932e](https://github.com/leanprover-community/mathlib4/pull/19252/commits/2536a1932e296f5c3ff5fa58fd8f52eb5ceba306)\n\n<details><summary>\n\n#### Import changes for modified files\n\n</summary>\n\nDependency changes\n\n| File | Base Count | Head Count | Change |\n| --- | --- | --- | --- |\n| Mathlib.Algebra.Group.Pointwise.Set.Basic | 379 | 384 | +5 (+1.32%) |\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n|<details><summary>16 files</summary> `Mathlib.GroupTheory.Submonoid.Inverses` `Mathlib.GroupTheory.CoprodI` `Mathlib.Algebra.Ring.Subring.Pointwise` `Mathlib.GroupTheory.DoubleCoset` `Mathlib.Algebra.Order.Group.Pointwise.Bounds` `Mathlib.Combinatorics.SimpleGraph.Circulant` `Mathlib.GroupTheory.GroupAction.FixedPoints` `Mathlib.GroupTheory.QuotientGroup.Basic` `Mathlib.Algebra.Group.Submonoid.Units` `Mathlib.Algebra.Group.Submonoid.Pointwise` `Mathlib.Algebra.Order.UpperLower` `Mathlib.GroupTheory.Perm.ClosureSwap` `Mathlib.Algebra.Order.Group.Pointwise.CompleteLattice` `Mathlib.Algebra.Ring.Subsemiring.Pointwise` `Mathlib.Algebra.Group.Subgroup.Pointwise` `Mathlib.GroupTheory.GroupAction.FixingSubgroup`</details>|1|\n|<details><summary>6 files</summary> `Mathlib.Topology.Algebra.ProperAction.Basic` `Mathlib.Topology.Algebra.MulAction` `Mathlib.Topology.Algebra.ProperConstSMul` `Mathlib.Topology.Algebra.ConstMulAction` `Mathlib.Dynamics.Minimal` `Mathlib.RepresentationTheory.Action.Continuous`</details>|2|\n|<details><summary>59 files</summary> `Mathlib.Algebra.Module.Submodule.Bilinear` `Mathlib.LinearAlgebra.BilinearMap` `Mathlib.MeasureTheory.MeasurableSpace.Embedding` `Mathlib.LinearAlgebra.Span.Basic` `Mathlib.Algebra.Category.Grp.EpiMono` `Mathlib.Algebra.Module.Submodule.Invariant` `Mathlib.Algebra.Star.Pointwise` `Mathlib.Algebra.Module.Submodule.Basic` `Mathlib.RingTheory.TwoSidedIdeal.BigOperators` `Mathlib.Algebra.Order.Field.Pointwise` `Mathlib.RingTheory.TwoSidedIdeal.Operations` `Mathlib.Algebra.Module.Submodule.Map` `Mathlib.GroupTheory.GroupAction.ConjAct` `Mathlib.Data.Finset.SMulAntidiagonal` `Mathlib.GroupTheory.GroupExtension.Defs` `Mathlib.Algebra.Category.Grp.Kernels` `Mathlib.Algebra.Module.Submodule.Range` `Mathlib.Algebra.Group.Pointwise.Set.BigOperators` `Mathlib.Algebra.Group.Translate` `Mathlib.Topology.Bornology.Absorbs` `Mathlib.Order.Filter.Pointwise` `Mathlib.Algebra.Lie.Basic` `Mathlib.Combinatorics.Additive.Dissociation` `Mathlib.Algebra.CharP.Basic` `Mathlib.CategoryTheory.Limits.Shapes.SingleObj` `Mathlib.GroupTheory.Coset.Basic` `Mathlib.Data.Set.Semiring` `Mathlib.Algebra.Module.Submodule.RestrictScalars` `Mathlib.Algebra.Category.ModuleCat.Tannaka` `Mathlib.Algebra.Star.NonUnitalSubsemiring` `Mathlib.Algebra.Category.ModuleCat.Colimits` `Mathlib.Algebra.Star.Conjneg` `Mathlib.Algebra.Module.Submodule.IterateMapComap` `Mathlib.Algebra.Star.Center` `Mathlib.MeasureTheory.MeasurableSpace.Basic` `Mathlib.Algebra.Module.Submodule.Lattice` `Mathlib.Algebra.Module.Submodule.Equiv` `Mathlib.Algebra.Group.Pointwise.Set.Finite` `Mathlib.LinearAlgebra.Span.Defs` `Mathlib.GroupTheory.GroupAction.Basic` `Mathlib.GroupTheory.PresentedGroup` `Mathlib.MeasureTheory.Constructions.Cylinders` `Mathlib.Algebra.Module.Submodule.EqLocus` `Mathlib.Algebra.CharZero.Quotient` `Mathlib.Algebra.Star.Subsemiring` `Mathlib.Algebra.Category.Grp.Colimits` `Mathlib.RingTheory.SimpleRing.Field` `Mathlib.Algebra.Module.Submodule.Order` `Mathlib.MeasureTheory.Constructions.SubmoduleQuotient` `Mathlib.MeasureTheory.MeasurableSpace.Prod` `Mathlib.Algebra.Star.CentroidHom` `Mathlib.LinearAlgebra.TensorProduct.Basic` `Mathlib.Data.Finset.MulAntidiagonal` `Mathlib.Algebra.Module.Submodule.LinearMap` `Mathlib.MeasureTheory.MeasurableSpace.CountablyGenerated` `Mathlib.RingTheory.Ideal.BigOperators` `Mathlib.Algebra.Module.Submodule.Ker` `Mathlib.Algebra.ModEq` `Mathlib.MeasureTheory.MeasurableSpace.PreorderRestrict`</details>|3|\n|<details><summary>27 files</summary> `Mathlib.RingTheory.Ideal.Defs` `Mathlib.RingTheory.TwoSidedIdeal.Kernel` `Mathlib.Algebra.Group.Pointwise.Set.ListOfFn` `Mathlib.Data.Set.Pointwise.Iterate` `Mathlib.RingTheory.Ideal.Quotient.Defs` `Mathlib.RingTheory.TwoSidedIdeal.Lattice` `Mathlib.Data.Set.Pointwise.Support` `Mathlib.RingTheory.SimpleRing.Defs` `Mathlib.RingTheory.SimpleRing.Basic` `Mathlib.Algebra.Module.Submodule.Defs` `Mathlib.Algebra.Group.Pointwise.Set.Basic` `Mathlib.GroupTheory.GroupAction.Pointwise` `Mathlib.Algebra.AddTorsor` `Mathlib.LinearAlgebra.AffineSpace.Basic` `Mathlib.RingTheory.TwoSidedIdeal.Basic` `Mathlib.RingTheory.TwoSidedIdeal.Instances` `Mathlib.GroupTheory.GroupAction.Support` `Mathlib.LinearAlgebra.Quotient.Defs` `Mathlib.GroupTheory.Coset.Defs` `Mathlib.Algebra.GroupWithZero.Pointwise.Set.Basic` `Mathlib.Algebra.Ring.Pointwise.Set` `Mathlib.GroupTheory.GroupAction.SubMulAction.Pointwise` `Mathlib.GroupTheory.QuotientGroup.Defs` `Mathlib.Algebra.Module.PointwisePi` `Mathlib.Data.Set.Pointwise.SMul` `Mathlib.GroupTheory.GroupAction.Defs` `Mathlib.GroupTheory.GroupAction.SubMulAction`</details>|5|\n\n</details>\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ instance : MulLeftMono (Finset Œ±) where elim _s _t‚ÇÅ _t‚ÇÇ := mul_subset_mul_left`\n`+ instance : MulLeftMono (Set Œ±) where elim _s _t‚ÇÅ _t‚ÇÇ := mul_subset_mul_left`\n`+ instance : MulRightMono (Finset Œ±) where elim _t _s‚ÇÅ _s‚ÇÇ := mul_subset_mul_right`\n`+ instance : MulRightMono (Set Œ±) where elim _t _s‚ÇÅ _s‚ÇÇ := mul_subset_mul_right`\n`+ inv_pi`\n`+ pow_le_pow_mul_of_sq_le_mul`\n`++ Nonempty.pow`\n`++ Nonempty.zpow`\n`++ image_pow`\n`++ image_pow_of_ne_zero`\n`++ inter_pow_subset`\n`++ not_one_mem_inv_mul_iff`\n`++ nsmul_subset_nsmul_of_zero_mem`\n`++ one_mem_inv_mul_iff`\n`++ one_mem_pow`\n`++ pow_eq_empty`\n`++ pow_right_monotone`\n`++ pow_subset_pow_left`\n`++ pow_subset_pow_mul_of_sq_subset_mul`\n`++ pow_subset_pow_right`\n`++ zpow_eq_empty`\n`++-- empty_pow`\n`++-- pow_mem_pow`\n`++-- pow_subset_pow`\n`++-- pow_subset_pow_of_one_mem`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>\n\n---\n\n<details><summary>Decrease in tech debt: (relative, absolute) = (1.00, 0.00)</summary>\n\n|Current number|Change|Type|\n|-:|:-:|:-|\n|5034|-1|porting notes|\n\nCurrent commit [2536a1932e](https://github.com/leanprover-community/mathlib4/commit/2536a1932e296f5c3ff5fa58fd8f52eb5ceba306)\nReference commit [83238e24b9](https://github.com/leanprover-community/mathlib4/commit/83238e24b9113e84b6e4a66801a7dc8c4e9c8320)\n\nYou can run this locally as\n```\n./scripts/technical-debt-metrics.sh pr_summary\n```\n* The `relative` value is the weighted *sum* of the differences with weight given by the *inverse* of the current value of the statistic.\n* The `absolute` value is the `relative` value divided by the total sum of the inverses of the current values (i.e. the weighted *average* of the differences).\n</details>",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6fTA_wzwAAAAOTBIee",
              "createdAt": "2024-11-19T15:34:34Z",
              "label": {
                "id": "MDU6TGFiZWwzMjg4OTQyMDg2",
                "name": "blocked-by-other-PR"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6fTA_wzwAAAAOTKKWB",
              "createdAt": "2024-11-19T18:37:23Z",
              "label": {
                "id": "MDU6TGFiZWwzMjg4OTQyMDg2",
                "name": "blocked-by-other-PR"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6UNHnO",
              "createdAt": "2024-11-19T18:37:25Z",
              "body": "This PR/issue depends on:\n* ~~leanprover-community/mathlib4#19249~~\nBy **[Dependent Issues](https://github.com/z0al/dependent-issues)** (ü§ñ). Happy coding!\n<!-- By Dependent Issues (Action) - DO NOT REMOVE -->",
              "author": {
                "login": "mathlib4-dependent-issues-bot"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6fTA_wzwAAAAOWv9cV",
              "createdAt": "2024-11-25T04:52:20Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6fTA_wzwAAAAOXFGMI",
              "createdAt": "2024-11-25T12:01:22Z"
            },
            {
              "__typename": "ReviewRequestedEvent",
              "id": "RRE_lADOFcwZ1c6fTA_wzwAAAAOXGL33",
              "createdAt": "2024-11-25T12:22:38Z",
              "requestedReviewer": {
                "id": "MDQ6VXNlcjI5OTU5MjI2",
                "login": "b-mehta"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6fTA_wzwAAAAOXGkHD",
              "createdAt": "2024-11-25T12:30:29Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6SlJ01",
              "createdAt": "2024-11-25T17:48:21Z",
              "body": "This PR has many changes, including some name changes without deprecations, some deprecations, some implicitness changes, new lemmas, and some proof modifications. Please split this one up into smaller ones, and use the PR description to describe the changes you are making in more detail than \"other lemmas\"",
              "author": {
                "login": "b-mehta"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6fTA_wzwAAAAOXcAGU",
              "createdAt": "2024-11-25T19:14:06Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6fTA_wzwAAAAOXc9kc",
              "createdAt": "2024-11-25T19:38:19Z"
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6fTA_wzwAAAAOXdZDO",
              "createdAt": "2024-11-25T19:49:02Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6fTA_wzwAAAAOXdZgR",
              "createdAt": "2024-11-25T19:49:13Z"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6U8nF5",
              "createdAt": "2024-11-25T19:59:28Z",
              "body": "What about now?",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6SmwS7",
              "createdAt": "2024-11-25T21:07:02Z",
              "body": "Let's also add finset versions of `image_pow`",
              "author": {
                "login": "b-mehta"
              }
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6fTA_wzwAAAAOX8V8v",
              "createdAt": "2024-11-26T10:46:42Z"
            }
          ]
        }
      }
    }
  }
}
